#Effects used in Lifestyle Focus events


#####################################################################
# EFFECT LIST
#####################################################################
# !!! Remember to add all new effects with a short description here !!!

#LIFESTYLE FRIEND EFFECTS
#	save_potential_lifestyle_friend_effect


#SECONDARY LIFESTYLE EFFECTS
#	reveler_lifestyle_rank_up_check_effect
#	hunter_lifestyle_rank_up_check_effect
# 	hunter_progress_point_gain_effect
# 	physician_lifestyle_rank_up_effect
# 	mystic_lifestyle_rank_up_effect
# 	ai_mystic_lifestyle_rank_up_effect

######################################################################


#######################
# LIFESTYLE FRIEND EFFECTS
#######################

#Needs FOCUS and SCOPE_NAME
potential_lifestyle_friend_saving_effect = {
	hidden_effect = {
		save_temporary_scope_as = friend_checker
		save_temporary_scope_value_as = {
			name = friend_saving_focus
			value = flag:$FOCUS$
		}

		#PLAYERS
		if = {
			limit = { is_ai = no }

			#Add major characters to list
			get_characters_of_major_interest_effect = { LISTNAME = lifestyle_friend_list }

			#Step 1: Add characters of minor interest
			if = {
				limit = {
					any_in_list = {
						list = lifestyle_friend_list
						potential_lifestyle_friend_availability_trigger = { CHARACTER = scope:friend_checker FOCUS = $FOCUS$ }
						count = 0
					}
				}
			
				
				get_characters_of_minor_interest_effect = { LISTNAME = lifestyle_friend_list }
			}

			#Step 2: Randomize if we now have someone suitable
			if = {
				limit = {
					any_in_list = {
						list = lifestyle_friend_list
						potential_lifestyle_friend_availability_trigger = { CHARACTER = scope:friend_checker FOCUS = $FOCUS$ }
					}
				}
				#Randomize!
				random_in_list = {
					list = lifestyle_friend_list
					limit = { potential_lifestyle_friend_availability_trigger = { CHARACTER = scope:friend_checker FOCUS = $FOCUS$ } }
					weight = {
						base = 1
						modifier = {
							add = $FOCUS$_friend_points
						}
						modifier = {
							has_relation_potential_friend = scope:friend_checker
							add = 10
						}
						opinion_modifier = {
							opinion_target = scope:friend_checker
							multiplier = 0.2
						}
					}
					if = {
						limit = { is_ruler = yes }
						set_focus = $FOCUS$
					}
					save_scope_as = $SCOPE_NAME$
				}
			}
			#Step 3: Ok, there still was none. Try to force someone to switch focus
			else = {
				random_in_list = {
					list = lifestyle_friend_list
					limit = {
						is_ruler = yes
						opinion = {
							target = scope:friend_checker
							value >= 0
						}
						NOT = { this = root }
						trigger_if = {
							limit = {
								scope:friend_saving_focus = flag:diplomacy_foreign_affairs_focus
								scope:friend_saving_focus = flag:diplomacy_majesty_focus
								scope:friend_saving_focus = flag:diplomacy_family_focus
							}
							diplomacy >= decent_skill_rating
						}
						trigger_else_if = {
							limit = {
								scope:friend_saving_focus = flag:martial_strategy_focus
								scope:friend_saving_focus = flag:martial_authority_focus
							}
							martial >= decent_skill_rating
						}
						trigger_else_if = {
							limit = {
								scope:friend_saving_focus = flag:martial_chivalry_focus
							}
							prowess >= decent_skill_rating
						}
						trigger_else_if = {
							limit = {
								scope:friend_saving_focus = flag:stewardship_wealth_focus
								scope:friend_saving_focus = flag:stewardship_domain_focus
								scope:friend_saving_focus = flag:stewardship_duty_focus
							}
							stewardship >= decent_skill_rating
						}
						trigger_else_if = {
							limit = {
								scope:friend_saving_focus = flag:intrigue_skulduggery_focus
								scope:friend_saving_focus = flag:intrigue_temptation_focus
								scope:friend_saving_focus = flag:intrigue_intimidation_focus
							}
							intrigue >= decent_skill_rating
						}
						trigger_else_if = {
							limit = {
								scope:friend_saving_focus = flag:learning_medicine_focus
								scope:friend_saving_focus = flag:learning_scholarship_focus
								scope:friend_saving_focus = flag:learning_theology_focus
							}
							learning >= decent_skill_rating
						}
						# making the default behavior explicit if no other trigger_(else_)ifs are valid
						trigger_else = {
							always = yes
						}
					}
					weight = {
						base = 1
						modifier = {
							has_relation_potential_friend = scope:friend_checker
							add = 10
						}
						opinion_modifier = {
							opinion_target = scope:friend_checker
							multiplier = 0.2
						}
					}
					set_focus = $FOCUS$
					save_scope_as = $SCOPE_NAME$
				}
			}
		}

		#AI
		else = {
			every_vassal = {
				limit = { potential_lifestyle_friend_availability_trigger = { CHARACTER = scope:friend_checker FOCUS = $FOCUS$ } }
				add_to_temporary_list = lifestyle_friend_list
			}
			every_liege_or_above = {
				limit = { potential_lifestyle_friend_availability_trigger = { CHARACTER = scope:friend_checker FOCUS = $FOCUS$ } }
				add_to_temporary_list = lifestyle_friend_list
			}
			every_courtier = {
				limit = { potential_lifestyle_friend_availability_trigger = { CHARACTER = scope:friend_checker FOCUS = $FOCUS$ } }
				add_to_temporary_list = lifestyle_friend_list
			}
			random_in_list = {
				list = lifestyle_friend_list
				save_scope_as = $SCOPE_NAME$
			}
		}

		#FALLBACK GENERATION
		if = {
			limit = { NOT = { exists = scope:$SCOPE_NAME$ } }

			if = {
				limit = { exists = scope:friend_checker.capital_province }
				create_character = {
					location = scope:friend_checker.capital_province
					template = $FOCUS$_friend_template
					save_scope_as = $SCOPE_NAME$
				}
			}
			else = {
				create_character = {
					location = scope:friend_checker.location
					template = $FOCUS$_friend_template
					save_scope_as = $SCOPE_NAME$
				}
			}
			scope:$SCOPE_NAME$ = { visit_court_of = scope:friend_checker }
		}
	}
}


########################
# SECONDARY LIFESTYLE EFFECTS
########################
#Reveler (gained by feasts)
reveler_points_gain_effect = {
	if = {
		limit = { NOT = { has_variable = reveler_lifestyle_progress } }
		set_variable = {
			name = reveler_lifestyle_progress
			value = $CHANGE$
		}
	}
	else = {
		change_variable = {
			name = reveler_lifestyle_progress
			add = $CHANGE$
		}
	}
	#Random chance of additional increase to increase unpredictability
	random = {
		chance = 50
		change_variable = {
			name = reveler_lifestyle_progress
			add = $RANDOM_CHANGE$
		}
	}
	#Extra Random chance with the Festivities Tradition
	if = {
		limit = { 
			culture = { has_cultural_parameter = reveler_traits_more_common }
		} 
		random = {
			chance = 75
			change_variable = {
				name = reveler_lifestyle_progress
				add = 1
			}
		}
	}
}

reveler_lifestyle_rank_up_check_effect = {
	if = {
		limit = {
			NOT = { has_trait = lifestyle_reveler }
			exists = var:reveler_lifestyle_progress
			var:reveler_lifestyle_progress > reveler_rank_up_1_threshold
		}
		set_variable = {
			name = reveler_lifestyle_progress
			value = 0
		}
		add_trait = reveler_1
	}
	else_if = {
		limit = {
			has_trait = reveler_1
			exists = var:reveler_lifestyle_progress
			var:reveler_lifestyle_progress > reveler_rank_up_2_threshold
		}
		set_variable = {
			name = reveler_lifestyle_progress
			value = 0
		}
		change_trait_rank = {
			trait = lifestyle_reveler
			rank = 1
		}
	}
	else_if = {
		limit = {
			has_trait = reveler_2
			exists = var:reveler_lifestyle_progress
			var:reveler_lifestyle_progress > reveler_rank_up_3_threshold
		}
		remove_variable = reveler_lifestyle_progress
		change_trait_rank = {
			trait = lifestyle_reveler
			rank = 1
		}
	}
}

#Hunter (gained by hunts)
hunter_lifestyle_rank_up_check_effect = {
	if = {
		limit = {
			NOT = { has_trait = lifestyle_hunter }
			has_variable = hunter_lifestyle_progress
			var:hunter_lifestyle_progress > hunter_rank_up_1_threshold
		}
		add_character_flag = hunter_1
	}
	else_if = {
		limit = {
			has_trait = hunter_1
			has_variable = hunter_lifestyle_progress
			var:hunter_lifestyle_progress > hunter_rank_up_2_threshold
		}
		add_character_flag = hunter_2
	}
	else_if = {
		limit = {
			has_trait = hunter_2
			has_variable = hunter_lifestyle_progress
			var:hunter_lifestyle_progress > hunter_rank_up_3_threshold
		}
		add_character_flag = hunter_3
	}
}


#Effect for gaining Hunt progress points
hunter_progress_point_gain_effect = {
	if = {
		limit = { NOT = { has_variable = hunter_lifestyle_progress } }
		set_variable = {
			name = hunter_lifestyle_progress
			value = 1
		}
	}
	else = {
		change_variable = {
			name = hunter_lifestyle_progress
			add = 1
		}
	}
	#Random chance of additional point to increase unpredictability
	random = {
		chance = 50
		change_variable = {
			name = hunter_lifestyle_progress
			add = 1
		}
	}
	#Extra Random chance with the Hunters Tradition
	if = {
		limit = { 
			culture = { has_cultural_parameter = hunting_traits_more_common }
		} 
		random = {
			chance = 75
			change_variable = {
				name = hunter_lifestyle_progress
				add = 1
			}
		}
	}
	hunter_lifestyle_rank_up_check_effect = yes
}


#Physician (for AI, gained through treatment events)
physician_lifestyle_rank_up_effect = {
	if = {
		limit = {
			NOT = { has_trait = lifestyle_physician }
		}
		add_trait = physician_1
	}
	else = {
		change_trait_rank = {
			trait = lifestyle_physician
			rank = 1
			max = 3
		}
	}
}


#Blademaster (for AI, gained through knight events)
blademaster_lifestyle_rank_up_effect = {
	if = {
		limit = {
			NOT = { has_trait = lifestyle_blademaster }
		}
		add_trait = blademaster_1
	}
	else = {
		change_trait_rank = {
			trait = lifestyle_blademaster
			rank = 1
			max = 3
		}
	}
}

# Mystic
mystic_lifestyle_rank_up_effect = {
	if = {
		limit = {
			NOT = { has_trait = lifestyle_mystic }
		}
		add_trait = mystic_1
	}
	else = {
		change_trait_rank = {
			trait = lifestyle_mystic
			rank = 1
			max = 3
		}
	}
}

mystic_lifestyle_point_gain_effect = {
	# Expects VALUE

	# Tooltip stuff first:
	show_as_tooltip = {
		if = {
			limit = { # No further rank ups if you're already at max
				NOT = { has_trait = mystic_3 }
				exists = var:mystic_lifestyle_progress # This assumes you can never progress the lifestyle on the first point gain
			}
			# Show rank-up tooltip if relevant
			if = {
				limit = {
					has_trait = mystic_2
				}
				set_local_variable = {
					name = mystic_check_tooltip_value
					value = mystic_second_rank_up_threshold
				}
			}
			else = {
				set_local_variable = {
					name = mystic_check_tooltip_value
					value = mystic_first_rank_up_threshold
				}
			}
			change_local_variable = {
				name = mystic_check_tooltip_value
				subtract = $VALUE$
			}
			if = {
				limit = {
					trigger_if = { # If Mystic 2, use the higher threshold
						limit = {
							has_trait = mystic_2
						}
						var:mystic_lifestyle_progress >= local_var:mystic_check_tooltip_value
					}
					trigger_else = {
						var:mystic_lifestyle_progress >= mystic_first_rank_up_threshold
					}
				}
				mystic_lifestyle_rank_up_effect = yes
			}
		}
	}
	# Actually run the lifestyle experience/rank-up gain effect:
	hidden_effect = {
		if = {
			limit = { # No further rank ups if you're already at max
				NOT = { has_trait = mystic_3 }
			}
			if = {
				limit = {
					NOT = { exists = var:mystic_lifestyle_progress }
				}
				set_variable = {
					name = mystic_lifestyle_progress
					value = $VALUE$
				}
			}
			else = {
				change_variable = {
					name = mystic_lifestyle_progress
					add = $VALUE$
				}
			}

			# Rank up if relevant
			if = {
				limit = {
					trigger_if = { # If Mystic 2, use the higher threshold
						limit = {
							has_trait = mystic_2
						}
						var:mystic_lifestyle_progress >= mystic_second_rank_up_threshold
					}
					trigger_else = {
						var:mystic_lifestyle_progress >= mystic_first_rank_up_threshold
					}
				}
				mystic_lifestyle_rank_up_effect = yes
				# Remove the variable if you reach max rank
				if = {
					limit = {
						has_trait = mystic_3
					}
					remove_variable = mystic_lifestyle_progress
				}
				# Set the variable back to 0 if you've ranked up
				else = {
					set_variable = {
						name = mystic_lifestyle_progress
						value = 0
					}
				}
			}
		}
	}
}

mystical_communion_outcome_effect = {
	# Limited to 2 effect lines due to showing up in a toast
	add_learning_lifestyle_xp = major_lifestyle_xp
	add_character_modifier = {
		modifier = divine_guidance_modifier
		years = 5
	}
}

#Mystic (for AI, gained through treatment events)
ai_mystic_lifestyle_rank_up_effect = {
	if = {
		limit = {
			NOT = { has_trait = lifestyle_mystic }
		}
		add_trait = mystic_1
	}
	else = {
		change_trait_rank = {
			trait = lifestyle_mystic
			rank = 1
			max = 3
		}
	}
}

# Remove all perk-unlocked traits when resetting
remove_all_perk_lifestyle_traits_effect = {
	if = {
		limit = {
			has_trait = diplomat
		}
		remove_trait = diplomat
	}
	if = {
		limit = {
			has_trait = family_first
		}
		remove_trait = family_first
	}
	if = {
		limit = {
			has_trait = august
		}
		remove_trait = august
	}
	if = {
		limit = {
			has_trait = strategist
		}
		remove_trait = strategist
	}
	if = {
		limit = {
			has_trait = overseer
		}
		remove_trait = overseer
	}
	if = {
		limit = {
			has_trait = gallant
		}
		remove_trait = gallant
	}
	if = {
		limit = {
			has_trait = architect
		}
		remove_trait = architect
	}
	if = {
		limit = {
			has_trait = administrator
		}
		remove_trait = administrator
	}
	if = {
		limit = {
			has_trait = avaricious
		}
		remove_trait = avaricious
	}
	if = {
		limit = {
			has_trait = schemer
		}
		remove_trait = schemer
	}
	if = {
		limit = {
			has_trait = seducer
		}
		remove_trait = seducer
	}
	if = {
		limit = {
			has_trait = torturer
		}
		remove_trait = torturer
	}
	if = {
		limit = {
			has_trait = whole_of_body
		}
		remove_trait = whole_of_body
	}
	if = {
		limit = {
			has_trait = scholar
		}
		remove_trait = scholar
	}
	if = {
		limit = {
			has_trait = theologian
		}
		remove_trait = theologian
	}
	hidden_effect = {
		set_absolute_country_control = no
	}
}
