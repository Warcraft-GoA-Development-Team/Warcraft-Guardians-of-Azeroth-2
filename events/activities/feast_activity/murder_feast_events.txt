namespace = feast_default
namespace = feast

################################
# MURDER FEAST EVENTS
# by Linnéa Thimrén (reworked by Veronica Pazos for EP2)
# 8000-8999
#################################

scripted_trigger murder_feast_default_participant_trigger = {
	is_alive = yes
	NOT = { this = root }
	is_imprisoned = no
}

scripted_trigger murder_feast_victim_valid_avenging_family_trigger = {
	NOT = { this = scope:host }
	NOT = { is_close_family_or_spouse_trigger = { CHARACTER = scope:host } } #we don't care about extended family
	NOT = { is_participant_in_activity = scope:activity } #they're not here
	is_adult = yes
	is_alive = yes
	is_imprisoned = no
}

#For host - I killed my target and their entourage
feast_default.8001 = {
	type = activity_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { 
					OR = {	
						has_variable = kill_compassionate
						has_variable = kill_just
						has_variable = kill_sadistic
					}
				}
				desc = feast_default.8001.t.fire
			}
			triggered_desc = {
				desc = feast_default.8001.t.knights
			}
		}
	}
	desc = {
		random_valid = {
			triggered_desc = { #all trait descs are fire
				trigger = { #compassionate
					has_variable = kill_compassionate
				}
				desc = feast_default.8001.desc.compassionate
			}
			triggered_desc = { #just but firm
				trigger = {
					has_variable = kill_just
				}
				desc = feast_default.8001.desc.just
			}
			triggered_desc = { #sadistic
				trigger = {
					has_variable = kill_sadistic
				}
				desc = feast_default.8001.desc.sadistic
			}
			triggered_desc = { #poison
				trigger = {
					has_variable = kill_knights
				}
				desc = feast_default.8001.desc.random_1
			}
			triggered_desc = { #poison 2
				trigger = {
					has_variable = kill_guests
				}
				desc = feast_default.8001.desc.random_2
			}
		}
	}
	theme = murder_feast_activity
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { has_variable = kill_sadistic }
			animation = laugh
		}
		triggered_animation = {
			trigger = {
				OR = { 
					has_variable = kill_compassionate
					has_variable = kill_just
				}
			}
			animation = worry
		}
		animation = scheme
	}
	right_portrait = {
		character = scope:activity.special_guest:honorary_guest
		triggered_animation = {
			trigger = {
				OR = {
					scope:host = { has_variable = kill_knights }
					scope:host = { has_variable = kill_guests }
				}
			}
			animation = poison
		}
		animation = fear
	}
	lower_center_portrait = {
		trigger = { exists = scope:entourage_1 }
		character = scope:entourage_1
	}
	lower_right_portrait = {
		trigger = { exists = scope:entourage_2 }
		character = scope:entourage_2
	}
	lower_left_portrait = {
		trigger = { exists = scope:entourage_3 }
		character = scope:entourage_3
	}
	cooldown = { years = 3 } #so you don't get it again and again
	
	trigger = {
		has_variable = murder_feast_entourage_murder_var
	}
	
	immediate = {
		play_sound_effect = "event:/DLC/EP2/SFX/Events/Grand_Activities/Feasts/ep2_event_grand_murder_feast"
		scope:activity.special_guest:honorary_guest = { save_scope_as = honorary_guest }
		#We choose how we kill them
		random_list = {
			1 = {
				trigger = {
					OR = {
						has_trait = compassionate
						has_trait = craven
						has_trait = calm
						has_trait = forgiving
					}
				}
				set_variable = kill_compassionate
			}
			1 = {
				trigger = {
					OR = {
						has_trait = just
						has_trait = diligent
						has_trait = stubborn
					}
				}
				set_variable = kill_just
			}
			1 = {
				trigger = {
					OR = {
						has_trait = callous
						has_trait = sadistic
						has_trait = wrathful
						has_trait = vengeful
					}
				}
				set_variable = kill_sadistic
			}
			1 = { set_variable = kill_knights }
			1 = { set_variable = kill_guests }
		}						
		scope:activity = { #we save the murder victim (special guests won't work after they die, so we need a variable)
			set_variable = {
				name = murder_guest_var
				value = special_guest:honorary_guest
			}
		}
		if = {
			limit = {
				scope:activity.special_guest:honorary_guest = {
					current_travel_plan ?= {
						any_entourage_character = {
							NOT = { this = scope:activity.special_guest:honorary_guest }
						}
					}
				}
			}
			scope:activity.special_guest:honorary_guest = {
				current_travel_plan = {
					random_entourage_character = {
						limit = { NOT = { this = scope:activity.special_guest:honorary_guest } }
						save_scope_as = entourage_1
					}
					random_entourage_character = {
						limit = {
							NOT = { this = scope:activity.special_guest:honorary_guest }
							NOT = { this = scope:entourage_1 }
						}
						save_scope_as = entourage_2
					}
					random_entourage_character = {
						limit = {
							NOT = { this = scope:activity.special_guest:honorary_guest }
							NOT = { this = scope:entourage_1 }
							NOT = { this = scope:entourage_2 }
						}
						save_scope_as = entourage_3
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity.special_guest:honorary_guest = {
					any_close_or_extended_family_member = {
						murder_feast_victim_valid_avenging_family_trigger = yes 
					}
				}
			}
			scope:activity.special_guest:honorary_guest = {
				random_close_or_extended_family_member = {
					limit = {
						murder_feast_victim_valid_avenging_family_trigger = yes 
					}
					weight = {
						base = 1
						modifier = {
							add = 100
							is_heir_of = scope:activity.special_guest:honorary_guest
						}
						modifier = {
							add = 10
							is_close_or_extended_family_of = scope:activity.special_guest:honorary_guest
						}
					}
					save_scope_as = avenging_family
				}
			}
			scope:activity = {
				set_variable = {
					name = avenging_family_var
					value = scope:avenging_family
				}
			}
		}
	}

	option = {
		name = feast_default.8001.a
		if = {
			# Warcraft - Give lore characters a chance to escape
			limit = { 
				scope:honorary_guest = { OR = { 
					is_ai = no 
					has_character_modifier = important_lore_character
				} } 
			}
			scope:honorary_guest = { trigger_event = feast_default.8004 }
		}
		else_if = {
			limit = {
				scope:honorary_guest = {
					current_travel_plan ?= {
						# Warcraft - Give lore characters a chance to escape
						any_entourage_character = {
							OR = { 
								is_ai = no 
								has_character_modifier = important_lore_character
							}
						}
					}
				}
			}
			scope:honorary_guest = {
				current_travel_plan = {
					# Warcraft - Give lore characters a chance to escape
					every_entourage_character = {
						limit = {
							OR = { 
								is_ai = no 
								has_character_modifier = important_lore_character
							}
						}
						trigger_event = feast_default.8004
					}
				}
			}
		}
		else = {
			scope:activity = {
				add_activity_log_entry = {
					key = murder_feast_entourage_murder_log
					score = 50
					character = scope:honorary_guest
					show_in_conclusion = yes
				}
			}
			if = {
				limit = { #did they die in a fire?
					OR = {
						has_variable = kill_compassionate
						has_variable = kill_just
						has_variable = kill_sadistic
					}
				}
				scope:activity = {
					var:murder_guest_var = {
						current_travel_plan = { #we kill all of their entourage
							every_entourage_character = {
								limit = { NOT = { this = scope:activity.var:murder_guest_var } }
								override_death_effect = { death_reason = death_burned }
							}
						}				
					}
				}
				show_as_tooltip = { #we wanna show this
					scope:activity.var:murder_guest_var = {
						override_death_effect = { death_reason = death_burned }
					}
					add_secret = {
						type = secret_murder
						target = scope:activity.var:murder_guest_var
					}
				}
				hidden_effect = { #this does the effect
					unknown_murder_effect = {
						VICTIM = scope:activity.var:murder_guest_var
						MURDERER = root
						REASON = death_burned
					}
				}
			}
			else = {
				scope:activity = {
					var:murder_guest_var = { #we kill the entourage
						current_travel_plan ?= {
							every_entourage_character = {
								limit = { NOT = { this = scope:activity.var:murder_guest_var } }
								override_death_effect = { death_reason = death_murder }
							}
						}				
					}
				}
				show_as_tooltip = { #we wanna show this
					scope:activity.var:murder_guest_var = {
						override_death_effect = { death_reason = death_murder }
					}
					add_secret = {
						type = secret_murder
						target = scope:activity.var:murder_guest_var
					}
				}
				hidden_effect = { #this does the effect
					unknown_murder_effect = {
						VICTIM = scope:activity.var:murder_guest_var
						MURDERER = root
						REASON = death_murder
					}
				}
			}
			set_variable = murder_feast_killed_var
			create_character_memory = {
				type = murder_feast_massacre
				participants = {
					host = scope:host
					victim = scope:honorary_guest
				}
			}
		}
	}
	
	after = {
		remove_variable = kill_compassionate
		remove_variable = kill_just
		remove_variable = kill_sadistic
		remove_variable = kill_knights
		remove_variable = kill_guests
		hidden_effect = {
			scope:activity = { progress_activity_phase_after = { days = 1 } }
		}
	}
}

#For host - I killed my target only
feast_default.8002 = {
	type = activity_event
	title = feast_default.8002.t
	desc = {
		random_valid = {
			triggered_desc = { #all trait descs are fire
				trigger = { #compassionate
					has_variable = kill_compassionate
				}
				desc = feast_default.8001.desc.compassionate #reused
			}
			triggered_desc = { #just but firm
				trigger = {
					has_variable = kill_just_alone
				}
				desc = feast_default.8002.desc.just
			}
			triggered_desc = { #sadistic
				trigger = {
					has_variable = kill_sadistic_alone
				}
				desc = feast_default.8002.desc.sadistic
			}
			triggered_desc = { #poison
				trigger = {
					has_variable = kill_knights
				}
				desc = feast_default.8001.desc.random_1 #reused
			}
			triggered_desc = { #knight alone
				trigger = {
					has_variable = kill_knife_in_the_dark
				}
				desc = feast_default.8002.desc.random_2
			}
		}
	}
	theme = murder_feast_activity
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:activity.special_guest:honorary_guest
		triggered_animation = {
			trigger = {
				scope:host = { has_variable = kill_knights }
			}
			animation = poison
		}
		animation = fear
	}
	cooldown = { years = 3 } #so you don't get it again and again
	
	trigger = {
		has_variable = murder_feast_target_murder_var
	}
	
	immediate = {
		play_sound_effect = "event:/DLC/EP2/SFX/Events/Grand_Activities/Feasts/ep2_event_grand_murder_feast"
		scope:activity.special_guest:honorary_guest = {
			save_scope_as = honorary_guest
			assign_quirk_effect = yes
		}
		#We choose how to kill them
		random_list = {
			1 = {
				trigger = {
					OR = {
						has_trait = compassionate
						has_trait = craven
						has_trait = calm
						has_trait = forgiving
					}
				}
				set_variable = kill_compassionate
			}
			1 = {
				trigger = {
					OR = {
						has_trait = just
						has_trait = diligent
						has_trait = stubborn
					}
				}
				set_variable = kill_just_alone
			}
			1 = {
				trigger = {
					OR = {
						has_trait = callous
						has_trait = sadistic
						has_trait = wrathful
						has_trait = vengeful
					}
				}
				set_variable = kill_sadistic_alone
			}
			1 = { set_variable = kill_knights }
			1 = { set_variable = kill_knife_in_the_dark }
		}				
		scope:activity = { #we save the murder victim (special guests won't work after they die, so we need a variable)
			set_variable = {
				name = murder_guest_var
				value = special_guest:honorary_guest
			}
		}
		if = {
			limit = {
				scope:activity.special_guest:honorary_guest = {
					any_close_or_extended_family_member = {
						murder_feast_victim_valid_avenging_family_trigger = yes 
					}
				}
			}
			scope:activity.special_guest:honorary_guest = {
				random_close_or_extended_family_member = {
					limit = {
						murder_feast_victim_valid_avenging_family_trigger = yes 
					}
					weight = {
						base = 1
						modifier = {
							add = 100
							is_heir_of = scope:activity.special_guest:honorary_guest
						}
						modifier = {
							add = 10
							is_close_or_extended_family_of = scope:activity.special_guest:honorary_guest
						}
					}
					save_scope_as = avenging_family
				}
			}
			scope:activity = {
				set_variable = {
					name = avenging_family_var
					value = scope:avenging_family
				}
			}
		}
	}

	option = {
		name = feast_default.8002.a
		if = {
			limit = { scope:honorary_guest = { is_ai = no } }
			scope:honorary_guest = { trigger_event = feast_default.8004 }
		}
		else = {
			scope:activity = {
				add_activity_log_entry = {
					key = murder_feast_solo_murder_log
					score = 50
					character = scope:honorary_guest
					show_in_conclusion = yes
				}
			}
			show_as_tooltip = { #we wanna show this
				scope:honorary_guest = {
					override_death_effect = { death_reason = death_mysterious }
					add_secret = {
						type = secret_murder
						target = scope:honorary_guest
					}
				}
			}
			hidden_effect = { #this does the effect
				unknown_murder_effect = {
					VICTIM = scope:honorary_guest
					MURDERER = root
					REASON = death_mysterious
				}
			}
			set_variable = murder_feast_killed_var
			create_character_memory = {
				type = murder_feast_solo_kill
				participants = {
					host = scope:host
					victim = scope:honorary_guest
				}
			}
		}
	}
	
	after = {
		remove_variable = kill_compassionate
		remove_variable = kill_just_alone
		remove_variable = kill_sadistic_alone
		remove_variable = kill_knights
		remove_variable = kill_knife_in_the_dark
		hidden_effect = {
			scope:activity = { progress_activity_phase_after = { days = 1 } }
		}
	}
}

#For host - I try to kill my target sneakily
feast_default.8003 = {
	type = activity_event
	title = feast_default.8003.t
	desc = {
		random_valid = {
			triggered_desc = {
				trigger = { #compassionate
					has_variable = kill_compassionate_sneaky
				}
				desc = feast_default.8003.desc.compassionate
			}
			triggered_desc = { #sadistic
				trigger = {
					has_variable = kill_sadistic_sneaky
				}
				desc = feast_default.8003.desc.sadistic
			}
			triggered_desc = { #poison
				trigger = {
					has_variable = kill_poison
				}
				desc = feast_default.8003.desc.poison
			}
		}
	}
	theme = murder_feast_activity
	left_portrait = {
		character = root
		animation = toast_goblet
	}
	right_portrait = {
		character = scope:activity.special_guest:honorary_guest
		animation = admiration
	}
	cooldown = { years = 3 } #so you don't get it again and again
	
	trigger = {
		has_variable = murder_feast_target_sneak_murder_var
	}
	
	immediate = {
		play_sound_effect = "event:/DLC/EP2/SFX/Events/Grand_Activities/Feasts/ep2_event_grand_murder_feast"
		scope:activity.special_guest:honorary_guest = { save_scope_as = honorary_guest }
		#We choose how we kill them
		random_list = {
			2 = {
				trigger = {
					OR = {
						has_trait = compassionate
						has_trait = craven
						has_trait = calm
						has_trait = forgiving
					}
				}
				set_variable = kill_compassionate_sneaky
			}
			2 = {
				trigger = {
					OR = {
						has_trait = callous
						has_trait = sadistic
						has_trait = vengeful
						has_trait = deceitful
						has_trait = arbitrary
					}
				}
				set_variable = kill_sadistic_sneaky
			}
			1 = { set_variable = kill_poison }
		}				
		scope:activity = { #we save the murder victim (special guests won't work after they die, so we need a variable)
			set_variable = {
				name = murder_guest_var
				value = special_guest:honorary_guest
			}
		}
		if = {
			limit = {
				scope:activity.special_guest:honorary_guest = {
					any_close_or_extended_family_member = {
						murder_feast_victim_valid_avenging_family_trigger = yes 
					}
				}
			}
			scope:activity.special_guest:honorary_guest = {
				random_close_or_extended_family_member = {
					limit = {
						murder_feast_victim_valid_avenging_family_trigger = yes 
					}
					weight = {
						base = 1
						modifier = {
							add = 100
							is_heir_of = scope:activity.special_guest:honorary_guest
						}
						modifier = {
							add = 10
							is_close_or_extended_family_of = scope:activity.special_guest:honorary_guest
						}
					}
					save_scope_as = avenging_family
				}
			}
			scope:activity = {
				set_variable = {
					name = avenging_family_var
					value = scope:avenging_family
				}
			}
		}
	}

	option = {
		name = feast_default.8003.a
		duel = {
			skills = { intrigue diplomacy }
			target = scope:activity.special_guest:honorary_guest
			50 = {
				desc = feast_default.8003.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = 5
				}
				scope:activity = {
					add_activity_log_entry = {
						key = murder_feast_solo_murder_log
						score = 50
						character = scope:honorary_guest
						show_in_conclusion = yes
					}
				}
				send_interface_toast = {
					title = feast_default.8003.a.success
					left_icon = scope:honorary_guest
					set_variable = murder_feast_killed_var
					unknown_murder_effect = {
						VICTIM = scope:honorary_guest
						MURDERER = root
						REASON = death_mysterious
					}
				}
			}
			50 = {
				desc = feast_default.8003.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = 5
				}
				send_interface_toast = {
					title = feast_default.8003.a.failure
					left_icon = scope:honorary_guest
					set_variable = murder_feast_murder_failure_var
					scope:honorary_guest = {
						add_opinion = {
							target = root
							modifier = suspicion_opinion
							opinion = -5
						}
					}
				}
			}
		}
	}
	
	after = {
		remove_variable = kill_compassionate_sneaky
		remove_variable = kill_sadistic_sneaky
		remove_variable = kill_poison
		hidden_effect = {
			scope:activity = { progress_activity_phase_after = { days = 1 } }
		}
	}
}

### PLAYER ONLY EVENT ###

# MASSACRE - SOMEONE IS TRYING TO KILL YOU
feast_default.8004 = {
	type = activity_event
	title = feast_default.8004.t
	desc = {
		desc = feast_default.8004.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					#are you the guest of honor?
					this = scope:honorary_guest
					#are they only murdering you?
					scope:host = {
						has_variable = murder_feast_target_murder_var
					}
				}
				desc = feast_default.8004.desc.goh_solo
			}
			triggered_desc = {
				trigger = {
					#are you the guest of honor?
					this = scope:honorary_guest
				}
				desc = feast_default.8004.desc.goh_group
			}
			desc = feast_default.8004.desc.fallback
		}
	}
	theme = murder_feast_activity
	left_portrait = {
		character = scope:mercenary_1
		animation = aggressive_axe
	}
	center_portrait = {
		character = root
		animation = fear
	}
	right_portrait = {
		character = scope:mercenary_2
		animation = aggressive_sword
	}
	lower_center_portrait = {
		trigger = {
			NOT = { root = scope:honorary_guest }
			NOT = { scope:host = { has_variable = bloody_wedding_murder_solo_var } }
		}
		character = scope:spouse_2
	}
	lower_right_portrait = {
		trigger = {
			exists = scope:entourage_1
			NOT = { root = scope:entourage_1 }
			NOT = { scope:host = { has_variable = bloody_wedding_murder_solo_var } }
		}
		character = scope:entourage_1
	}
	lower_left_portrait = {
		trigger = {
			exists = scope:entourage_2
			NOT = { root = scope:entourage_2 }
			NOT = { scope:host = { has_variable = bloody_wedding_murder_solo_var } }
		}
		character = scope:entourage_2
	}
	cooldown = { years = 3 }
	
	immediate = {
		play_sound_effect = "event:/DLC/EP2/SFX/Events/Grand_Activities/Feasts/ep2_event_grand_murder_feast"
		save_scope_as = murder_victim
		hidden_effect = {
			create_character = {
				template = mercenary
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = mercenary_1
			}
			create_character = {
				template = mercenary
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = mercenary_2
			}
		}
	}

	option = { #Skill duel to get out
		name = feast_default.8004.a
		duel = {
			skill = prowess
			value = high_skill_rating
			# Die, unfortunately
			60 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				# Warcraft - Lore important characters get an additional -80% chance to die, minum decreased to 1
				modifier = {
					is_imporant_lore_character = yes
					factor = 0.2
				}
				min = 1
				desc = feast_default.8004.a.tt.success
				#no need for your own toast if you die
				scope:activity = {
					add_activity_log_entry = {
						key = murder_feast_solo_murder_log
						score = 50
						character = scope:murder_victim
						show_in_conclusion = yes
					}
				}
				scope:host = {
					send_interface_toast = {
						title = feast_default.8004.a.tt.success.host
						right_icon = scope:murder_victim
						if = {
							limit = {
								scope:murder_victim = scope:honorary_guest
							}
							scope:host = { set_variable = murder_feast_killed_var }
							unknown_murder_effect = {
								VICTIM = scope:murder_victim
								MURDERER = scope:host
								REASON = death_murder_feast
							}
						}
						else = {
							scope:murder_victim = {
								override_death_effect = { death_reason = death_murder_feast }
							}
						}
					}
				}
			}
			# Save yourself
			40 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = feast_default.8004.a.tt.failure
				send_interface_toast = {
					title = feast_default.8004.a.tt.failure
					left_icon = scope:murder_victim
				}
				scope:host = {
					send_interface_toast = {
						title = feast_default.8004.a.tt.failure.host
						right_icon = scope:murder_victim
						if = {
							limit = { root = scope:honorary_guest }
							set_variable = bloody_murder_fail
						}
						set_variable = murder_feast_murder_failure_var
					}
				}
				set_variable = murder_feast_murder_failure_me_var
				if = {
					limit = { root = scope:honorary_guest }
					create_character_memory = {
						type = murder_feast_goh_survivor
						participants = {
							host = scope:host
							victim = scope:honorary_guest
						}
					}
				}
				else = {
					create_character_memory = {
						type = murder_feast_entourage_survivor
						participants = {
							host = scope:host
							victim = scope:murder_victim
						}
					}
				}
			}
		}
		if = {
			limit = {
				scope:murder_victim = {
					current_travel_plan = {
						any_entourage_character = { 
							is_ai = yes
							NOT = { this = root }
							NOT = { this = scope:murder_victim }
						}
					}
				}
			}
			scope:murder_victim = {
				current_travel_plan = {
					every_entourage_character = {
						limit = {
							is_ai = yes
							NOT = { this = root }
							NOT = { this = scope:murder_victim }
						}
						custom = every_attending_travel_companion_goh
						override_death_effect = {
							death_reason = death_burned
						}
					}
				}
			}
		}
		if = {
			limit = {
				scope:honorary_guest ?= { is_ai = yes }
			}
			custom_tooltip = feast_default.8004.a.goh_murder.tt
			scope:host = { set_variable = murder_feast_killed_var }
			unknown_murder_effect = {
				VICTIM = scope:honorary_guest
				MURDERER = scope:host
				REASON = death_murder_feast
			}
		}
	}
}

#For guest - Someone close to me tried to kill people?!
feast_default.8061 = {
	type = activity_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { 
					scope:host = { has_variable = murder_feast_entourage_murder_var }
				}
				desc =  feast_default.8061.t.fire
			}
			triggered_desc = {
				desc = feast_default.8061.t
			}
		}
	}	
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_variable = murder_feast_murder_failure_me_var
				}
				desc = feast_default.8061.desc.fail_me
			}
			triggered_desc = {
				trigger = {
					scope:host = { has_variable = murder_feast_murder_failure_var }
				}
				desc = feast_default.8061.desc.fail
			}
			triggered_desc = {
				trigger = {
					scope:host = { has_variable = murder_feast_entourage_murder_var }
				}
				desc = feast_default.8061.desc.fire
			}
			desc = feast_default.8061.desc.death_alone
		}
	}
	theme = murder_feast_activity
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = { has_variable = murder_feast_murder_failure_me_var }
			animation = worry
		}
		triggered_animation = {
			trigger = { scope:host = { has_variable = murder_feast_murder_failure_var } }
			animation = happiness
		}
		animation = shock
	}
	right_portrait = {
		character = scope:host
		animation = personality_honorable
	}
	lower_center_portrait = {
		trigger = { scope:host = { NOT = { has_variable = murder_feast_murder_failure_var } } }
		character = scope:murder_guest
	}
	cooldown = { years = 5 }

	immediate = {
		play_sound_effect = "event:/DLC/EP2/SFX/Events/Grand_Activities/Feasts/ep2_event_grand_murder_feast"
		scope:activity.activity_host = {
			save_scope_as = host
		}
	}

	option = {
		name = {
			trigger = {
				has_any_good_relationship_with_character_trigger = { CHARACTER = scope:murder_guest }
				scope:host = { NOT = { has_variable = murder_feast_murder_failure_var } }
			}
			text = feast_default.8061.a.good
		}
		name = {
			trigger = {
				NOT = { has_any_good_relationship_with_character_trigger = { CHARACTER = scope:murder_guest } }
			}
			text = feast_default.8061.a
		}
		show_as_tooltip = {
			scope:activity = {
				every_attending_character = {
					limit = {
						murder_feast_default_participant_trigger = yes
					}
					custom = every_guest_scope_tt
					add_opinion = {
						target = scope:host
						modifier = suspicion_opinion
						opinion = -5
					}
				}
			}
		}
		add_opinion = {
			target = scope:host
			modifier = suspicion_opinion
			opinion = -5
		}
	}
}

# Murder Target died before you killed them - INVALIDATION FOR HOST

feast.2010 = {
	type = character_event
	title = feast.2010.t
	desc = feast.2010.desc
	theme = feast_activity
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_illness.dds"
	}
	left_portrait = {
		character = scope:host
	}
	
	option = {
		name = feast.2010.a
		custom_tooltip = feast.2010.a.tt
	}
	
	after = {
		remove_variable = murder_guest_host_var
	}
}

# Murder Target died before host killed them - INVALIDATION FOR GUESTS

feast.2011 = {
	type = character_event
	title = feast.2011.t
	desc = feast.2011.desc
	theme = feast_activity
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_illness.dds"
	}
	left_portrait = {
		character = root
		animation = disapproval
	}
	right_portrait = {
		character = scope:host
	}
	
	option = {
		name = feast.2011.a
		custom_tooltip = feast.2011.a.tt
	}
}

# Murder Target declined the invite - INVALIDATION FOR HOST

feast.2020 = {
	type = character_event
	title = feast.2020.t
	desc = feast.2020.desc
	theme = feast_activity
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_feast.dds"
	}
	left_portrait = {
		character = scope:host
	}
	
	option = {
		name = feast.2020.a
		custom_tooltip = feast.2020.a.tt
	}
	
	after = {
		remove_variable = murder_guest_host_var
	}
}

# Murder Target declined the invite - INVALIDATION FOR GUESTS

feast.2021 = {
	type = character_event
	title = feast.2021.t
	desc = feast.2021.desc
	theme = feast_activity
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_feast.dds"
	}
	left_portrait = {
		character = root
		animation = disapproval
	}
	right_portrait = {
		character = scope:host
	}
	
	option = {
		name = feast.2021.a
		custom_tooltip = feast.2021.a.tt
	}
}
