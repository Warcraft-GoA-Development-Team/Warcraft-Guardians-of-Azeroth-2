stasis_trap_scheme = {
	skill = intrigue
	hostile = yes

	power_per_skill_point = 5.0
	resistance_per_skill_point = 0.75
	power_per_agent_skill_point = 3
	
	minimum_progress_chance = 15
	maximum_progress_chance = 95
	minimum_success = 10
	maximum_secrecy = 95
	maximum_success = 95

	cooldown = { years = 10 }
	is_secret = yes
	base_secrecy = 20

	agent_leave_threshold = -25
	
	allow = {
		has_perk = stasis_trap # Scheme unlocked by the Stasis Trap
		
		allow_schemes_trigger = yes
	}
	
	valid = {
		valid_hostile_scheme_target_trigger = yes
		scope:target = {
			is_in_stun_trigger = no
		}
	}

	valid_agent = {
		age >= age_14_value
	}
	
	agent_join_chance = {
		base = 0
		
		# Base Reluctance, including negative AI Energy
		hostile_scheme_base_reluctance_modifier = yes

		#Is Owner sending a gift in the invite interaction?
		hostile_scheme_with_gift_modifier = yes

		#Default Hostile Scheme modifiers
		hostile_murder_agent_base_join_chance_modifier = yes
	}
	
	base_success_chance = {
		base = 0
		
		hostile_scheme_base_chance_modifier = yes

		modifier = {
			add = -35
			scope:target = {				
				has_opinion_modifier = {
					target = scope:owner
					modifier = attempted_stasis_trapion_opinion
				}
			}
			desc = HAS_ATTEMPTED_TO_STASIS_TRAP_TARGET_BEFORE
		}

		scheme_hof_success_chance_modifier = { value = -35 }
		scheme_war_success_chance_modifier = { value = -35 }

		hostile_scheme_prowess_bonus_modifier = { POWER = 1.5 }
	}
	
	agent_success_chance = {
		base = 0
		
		hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
	}
			
	on_ready = {
		scheme_owner = {
			if = {
				limit = {
					has_character_flag = is_in_event_stasis_trap_outcome_0001
				}
				trigger_event = {
					id = stasis_trap_outcome.0001
					days = 1
				}
			}
			else = {
				trigger_event = stasis_trap_outcome.0001
			}
		}
	}

	on_monthly = {
		hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}			
			scheme_owner = {
				trigger_event = {
					on_action = abduct_ongoing #Shares the events with Abduct and Murder
					days = { 1 30 }
				}
			}
		}
	}

	
	on_invalidated = {
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = stasis_trap_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		else_if = { #Stunned
			limit = {
				scope:target = {  is_in_stun_trigger = yes }

				scope:owner = { NOT = { has_character_flag = is_in_event_stasis_trap_outcome_0001 } }
			}
			scope:owner = { 
				send_interface_toast = {
					title = stasis_trap_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = stasis_trap_scheme_already_stunned_message
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner } 
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = stasis_trap_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}
	
	success_desc = "STASIS_TRAP_SUCCESS_DESC"
	discovery_desc = "STASIS_TRAP_DISCOVERY_DESC"
}
