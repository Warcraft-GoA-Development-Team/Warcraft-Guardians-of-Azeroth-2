wc_remove_all_wc_lifestyle_traits_effect = {
	
	switch = { # Light
		trigger = has_trait

		user_of_light_magic_1 = { remove_trait = user_of_light_magic_1 }
		user_of_light_magic_2 = { remove_trait = user_of_light_magic_2 }
		user_of_light_magic_3 = { remove_trait = user_of_light_magic_3 }
		user_of_light_magic_4 = { remove_trait = user_of_light_magic_4 }
		user_of_light_magic_5 = { remove_trait = user_of_light_magic_5 }
	}
	switch = { # Shadow
		trigger = has_trait

		user_of_shadow_magic_1 = { remove_trait = user_of_shadow_magic_1 }
		user_of_shadow_magic_2 = { remove_trait = user_of_shadow_magic_2 }
		user_of_shadow_magic_3 = { remove_trait = user_of_shadow_magic_3 }
		user_of_shadow_magic_4 = { remove_trait = user_of_shadow_magic_4 }
		user_of_shadow_magic_5 = { remove_trait = user_of_shadow_magic_5 }
	}
	switch = { # Disorder
		trigger = has_trait

		user_of_disorder_magic_1 = { remove_trait = user_of_disorder_magic_1 }
		user_of_disorder_magic_2 = { remove_trait = user_of_disorder_magic_2 }
		user_of_disorder_magic_3 = { remove_trait = user_of_disorder_magic_3 }
		user_of_disorder_magic_4 = { remove_trait = user_of_disorder_magic_4 }
		user_of_disorder_magic_5 = { remove_trait = user_of_disorder_magic_5 }
	}
	switch = { # Order
		trigger = has_trait

		user_of_order_magic_1 = { remove_trait = user_of_order_magic_1 }
		user_of_order_magic_2 = { remove_trait = user_of_order_magic_2 }
		user_of_order_magic_3 = { remove_trait = user_of_order_magic_3 }
		user_of_order_magic_4 = { remove_trait = user_of_order_magic_4 }
		user_of_order_magic_5 = { remove_trait = user_of_order_magic_5 }
	}
	switch = { # Life
		trigger = has_trait

		user_of_life_magic_1 = { remove_trait = user_of_life_magic_1 }
		user_of_life_magic_2 = { remove_trait = user_of_life_magic_2 }
		user_of_life_magic_3 = { remove_trait = user_of_life_magic_3 }
		user_of_life_magic_4 = { remove_trait = user_of_life_magic_4 }
		user_of_life_magic_5 = { remove_trait = user_of_life_magic_5 }
	}
	switch = { # Death
		trigger = has_trait

		user_of_death_magic_1 = { remove_trait = user_of_death_magic_1 }
		user_of_death_magic_2 = { remove_trait = user_of_death_magic_2 }
		user_of_death_magic_3 = { remove_trait = user_of_death_magic_3 }
		user_of_death_magic_4 = { remove_trait = user_of_death_magic_4 }
		user_of_death_magic_5 = { remove_trait = user_of_death_magic_5 }
	}
	switch = { # Fire
		trigger = has_trait

		user_of_elemental_fire_magic_1 = { remove_trait = user_of_elemental_fire_magic_1 }
		user_of_elemental_fire_magic_2 = { remove_trait = user_of_elemental_fire_magic_2 }
		user_of_elemental_fire_magic_3 = { remove_trait = user_of_elemental_fire_magic_3 }
		user_of_elemental_fire_magic_4 = { remove_trait = user_of_elemental_fire_magic_4 }
		user_of_elemental_fire_magic_5 = { remove_trait = user_of_elemental_fire_magic_5 }

		user_of_elemental_fire_spirit_magic_1 = { remove_trait = user_of_elemental_fire_spirit_magic_1 }
		user_of_elemental_fire_spirit_magic_2 = { remove_trait = user_of_elemental_fire_spirit_magic_2 }
		user_of_elemental_fire_spirit_magic_3 = { remove_trait = user_of_elemental_fire_spirit_magic_3 }
		user_of_elemental_fire_spirit_magic_4 = { remove_trait = user_of_elemental_fire_spirit_magic_4 }
		user_of_elemental_fire_spirit_magic_5 = { remove_trait = user_of_elemental_fire_spirit_magic_5 }

		user_of_elemental_fire_decay_magic_1 = { remove_trait = user_of_elemental_fire_decay_magic_1 }
		user_of_elemental_fire_decay_magic_2 = { remove_trait = user_of_elemental_fire_decay_magic_2 }
		user_of_elemental_fire_decay_magic_3 = { remove_trait = user_of_elemental_fire_decay_magic_3 }
		user_of_elemental_fire_decay_magic_4 = { remove_trait = user_of_elemental_fire_decay_magic_4 }
		user_of_elemental_fire_decay_magic_5 = { remove_trait = user_of_elemental_fire_decay_magic_5 }
	}
	switch = { # Water
		trigger = has_trait

		user_of_elemental_water_magic_1 = { remove_trait = user_of_elemental_water_magic_1 }
		user_of_elemental_water_magic_2 = { remove_trait = user_of_elemental_water_magic_2 }
		user_of_elemental_water_magic_3 = { remove_trait = user_of_elemental_water_magic_3 }
		user_of_elemental_water_magic_4 = { remove_trait = user_of_elemental_water_magic_4 }
		user_of_elemental_water_magic_5 = { remove_trait = user_of_elemental_water_magic_5 }

		user_of_elemental_water_spirit_magic_1 = { remove_trait = user_of_elemental_water_spirit_magic_1 }
		user_of_elemental_water_spirit_magic_2 = { remove_trait = user_of_elemental_water_spirit_magic_2 }
		user_of_elemental_water_spirit_magic_3 = { remove_trait = user_of_elemental_water_spirit_magic_3 }
		user_of_elemental_water_spirit_magic_4 = { remove_trait = user_of_elemental_water_spirit_magic_4 }
		user_of_elemental_water_spirit_magic_5 = { remove_trait = user_of_elemental_water_spirit_magic_5 }

		user_of_elemental_water_decay_magic_1 = { remove_trait = user_of_elemental_water_decay_magic_1 }
		user_of_elemental_water_decay_magic_2 = { remove_trait = user_of_elemental_water_decay_magic_2 }
		user_of_elemental_water_decay_magic_3 = { remove_trait = user_of_elemental_water_decay_magic_3 }
		user_of_elemental_water_decay_magic_4 = { remove_trait = user_of_elemental_water_decay_magic_4 }
		user_of_elemental_water_decay_magic_5 = { remove_trait = user_of_elemental_water_decay_magic_5 }
	}
	switch = { # Air
		trigger = has_trait

		user_of_elemental_air_magic_1 = { remove_trait = user_of_elemental_air_magic_1 }
		user_of_elemental_air_magic_2 = { remove_trait = user_of_elemental_air_magic_2 }
		user_of_elemental_air_magic_3 = { remove_trait = user_of_elemental_air_magic_3 }
		user_of_elemental_air_magic_4 = { remove_trait = user_of_elemental_air_magic_4 }
		user_of_elemental_air_magic_5 = { remove_trait = user_of_elemental_air_magic_5 }

		user_of_elemental_air_spirit_magic_1 = { remove_trait = user_of_elemental_air_spirit_magic_1 }
		user_of_elemental_air_spirit_magic_2 = { remove_trait = user_of_elemental_air_spirit_magic_2 }
		user_of_elemental_air_spirit_magic_3 = { remove_trait = user_of_elemental_air_spirit_magic_3 }
		user_of_elemental_air_spirit_magic_4 = { remove_trait = user_of_elemental_air_spirit_magic_4 }
		user_of_elemental_air_spirit_magic_5 = { remove_trait = user_of_elemental_air_spirit_magic_5 }

		user_of_elemental_air_decay_magic_1 = { remove_trait = user_of_elemental_air_decay_magic_1 }
		user_of_elemental_air_decay_magic_2 = { remove_trait = user_of_elemental_air_decay_magic_2 }
		user_of_elemental_air_decay_magic_3 = { remove_trait = user_of_elemental_air_decay_magic_3 }
		user_of_elemental_air_decay_magic_4 = { remove_trait = user_of_elemental_air_decay_magic_4 }
		user_of_elemental_air_decay_magic_5 = { remove_trait = user_of_elemental_air_decay_magic_5 }
	}
	switch = { # Earth
		trigger = has_trait

		user_of_elemental_earth_magic_1 = { remove_trait = user_of_elemental_earth_magic_1 }
		user_of_elemental_earth_magic_2 = { remove_trait = user_of_elemental_earth_magic_2 }
		user_of_elemental_earth_magic_3 = { remove_trait = user_of_elemental_earth_magic_3 }
		user_of_elemental_earth_magic_4 = { remove_trait = user_of_elemental_earth_magic_4 }
		user_of_elemental_earth_magic_5 = { remove_trait = user_of_elemental_earth_magic_5 }

		user_of_elemental_earth_spirit_magic_1 = { remove_trait = user_of_elemental_earth_spirit_magic_1 }
		user_of_elemental_earth_spirit_magic_2 = { remove_trait = user_of_elemental_earth_spirit_magic_2 }
		user_of_elemental_earth_spirit_magic_3 = { remove_trait = user_of_elemental_earth_spirit_magic_3 }
		user_of_elemental_earth_spirit_magic_4 = { remove_trait = user_of_elemental_earth_spirit_magic_4 }
		user_of_elemental_earth_spirit_magic_5 = { remove_trait = user_of_elemental_earth_spirit_magic_5 }

		user_of_elemental_earth_decay_magic_1 = { remove_trait = user_of_elemental_earth_decay_magic_1 }
		user_of_elemental_earth_decay_magic_2 = { remove_trait = user_of_elemental_earth_decay_magic_2 }
		user_of_elemental_earth_decay_magic_3 = { remove_trait = user_of_elemental_earth_decay_magic_3 }
		user_of_elemental_earth_decay_magic_4 = { remove_trait = user_of_elemental_earth_decay_magic_4 }
		user_of_elemental_earth_decay_magic_5 = { remove_trait = user_of_elemental_earth_decay_magic_5 }
	}
}

# check all lifestyles for trait rankup/secrecy: this needs to be done AFTER character creation from generic template
wc_check_magic_lifestyles_for_rankup_effect = { 
	wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = light }
	wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = shadow }
	wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = order }
	wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = disorder }
	wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = life }
	wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = death }
	wc_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = elemental_fire }
	wc_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = elemental_water }
	wc_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = elemental_air }
	wc_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = elemental_earth }
}

# rank up trait when perk is selected from lifestyle UI
wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { # Used for perks
	# Magic Secrecy - We get the secret if we arent openly learning it yet
	if = { 
		limit = { 
			NOT = { 
				has_trait = wc_lifestyle_$MAGIC$_magic 
				can_openly_learn_magic_type_trigger = { MAGICTYPE = $MAGIC$ }
				is_secret_nonelemental_magic_type_user = { MAGICTYPE = $MAGIC$ }
			}
		}
		add_secret = { 
			type = secret_$MAGIC$_magic_user
		}
	} 
	# Trait maintenance - We determine if traits need to rank up or be added
	else_if = {
		limit = {
			OR = { # bypass this block if this magic is illegal and we do not have this kind of trait already
				can_openly_learn_magic_type_trigger = { MAGICTYPE = $MAGIC$ }
				has_trait = wc_lifestyle_$MAGIC$_magic
			}
			NOT = { has_trait = user_of_$MAGIC$_magic_5 } # Max level
		}

		hidden_effect = {
			wc_nonelemental_magic_lifestyle_rank_up_effect = { MAGIC = $MAGIC$ }
		}
	}
	# Mana maintenance
	wc_start_mana_regeneration_loop_effect = yes # It can be character's first perk
	wc_fill_mana_on_day_one_from_perks_crutch_effect = yes
	wc_start_hp_regeneration_loop_effect = yes
	# Knowledge Overflow effect
	set_long_lived_lifestyle_xp_slowdown_delayed_event_effect = yes
}

#called in the function above and when secrets are exposed
wc_nonelemental_magic_lifestyle_rank_up_effect = { 
	if = {
		limit = { 
			NOT = { 
				has_trait = wc_lifestyle_$MAGIC$_magic
			}  
			$MAGIC$_magic_lifestyle_perks > 0
		}

		add_trait = user_of_$MAGIC$_magic_1
	}
	wc_nonelemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 2 CURRENTLEVEL = 1 }
	wc_nonelemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 3 CURRENTLEVEL = 2 }
	wc_nonelemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 4 CURRENTLEVEL = 3 }
	wc_nonelemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 5 CURRENTLEVEL = 4 }
}

# utility function for rankup dry code
wc_nonelemental_magic_rank_up_trait_effect = { # parameters: MAGIC, TARGETLEVEL, CURRENTLEVEL
	if = {
		limit = {
			$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_$TARGETLEVEL$_magic_trait_value
			has_trait = user_of_$MAGIC$_magic_$CURRENTLEVEL$
		}

		change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 }
	}
}

# rank up trait when perk is selected from lifestyle UI and at template creation
wc_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = {
	# Magic Secrecy - We get the secret if we arent openly learning it yet
	if = { 
		limit = { 
			NOT = { 
				has_trait = wc_lifestyle_$MAGIC$_magic 
				has_trait = wc_lifestyle_$MAGIC$_spirit_magic 
				has_trait = wc_lifestyle_$MAGIC$_decay_magic 
				can_openly_learn_magic_type_trigger = { MAGICTYPE = $MAGIC$ }
				is_secret_elemental_magic_type_user = { MAGICTYPE = $MAGIC$ }
			}
		}
		add_secret = { 
			type = secret_$MAGIC$_magic_user
		}
	} 
	# Trait maintenance - We determine if traits need to rank up or be added
	else_if = {
		limit = {
			OR = { # bypass this block if this magic is illegal and we do not have this kind of trait already
				can_openly_learn_magic_type_trigger = { MAGICTYPE = $MAGIC$ }
				has_trait = wc_lifestyle_$MAGIC$_magic
				has_trait = wc_lifestyle_$MAGIC$_spirit_magic 
				has_trait = wc_lifestyle_$MAGIC$_decay_magic 
			}
			NOT = { # Max level
				has_trait = user_of_$MAGIC$_magic_5
				has_trait = user_of_$MAGIC$_spirit_magic_5
				has_trait = user_of_$MAGIC$_decay_magic_5
			}
		}

		hidden_effect = {
			wc_elemental_magic_lifestyle_rank_up_effect = { MAGIC = $MAGIC$ }
		}
	}
	# Mana maintenance
	wc_start_mana_regeneration_loop_effect = yes # It can be character's first perk
	wc_fill_mana_on_day_one_from_perks_crutch_effect = yes
	# Knowledge Overflow effect
	set_long_lived_lifestyle_xp_slowdown_delayed_event_effect = yes
}

#called in the function above and when secrets are exposed and at template creation
wc_elemental_magic_lifestyle_rank_up_effect = { 
	if = {
		limit = {
			NOT = {
				has_trait = user_of_$MAGIC$_magic_1
				has_trait = user_of_$MAGIC$_spirit_magic_1
				has_trait = user_of_$MAGIC$_decay_magic_1
			}
			$MAGIC$_magic_lifestyle_perks > 0
		}

		if = { # If character doesn't have variable yet
			limit = { NOT = { has_variable = wc_$MAGIC$_favour_variable } }

			set_variable = { name = wc_$MAGIC$_favour_variable value = wc_starting_$MAGIC$_favour_value }
		}

		if = {
			limit = { wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $MAGIC$ TENSE = current } }

			add_trait = user_of_$MAGIC$_spirit_magic_1
		}
		else_if = {
			limit = { wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $MAGIC$ TENSE = current } }

			add_trait = user_of_$MAGIC$_decay_magic_1
		}
		else = {
			add_trait = user_of_$MAGIC$_magic_1
		}
	}
	wc_elemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 2 CURRENTLEVEL = 1 }
	wc_elemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 3 CURRENTLEVEL = 2 }
	wc_elemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 4 CURRENTLEVEL = 3 }
	wc_elemental_magic_rank_up_trait_effect = { MAGIC = $MAGIC$ TARGETLEVEL = 5 CURRENTLEVEL = 4 }
}

# utility function for rankup dry code
wc_elemental_magic_rank_up_trait_effect = { # params: MAGIC, CURRENTLEVEL, TARGETLEVEL
	if = { 
		limit = {
			$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_$TARGETLEVEL$_magic_trait_value
			OR = {
				has_trait = user_of_$MAGIC$_magic_$CURRENTLEVEL$
				has_trait = user_of_$MAGIC$_spirit_magic_$CURRENTLEVEL$
				has_trait = user_of_$MAGIC$_decay_magic_$CURRENTLEVEL$
			}
		} 
		switch = { 
			trigger = has_trait
			user_of_$MAGIC$_magic_$CURRENTLEVEL$ = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 } }
			user_of_$MAGIC$_spirit_magic_$CURRENTLEVEL$ = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_spirit_magic rank = 1 } }
			user_of_$MAGIC$_decay_magic_$CURRENTLEVEL$ = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_decay_magic rank = 1 } }
		}
	}
}

#does the favour thing 
wc_ELEMENT_favour_lifestyle_check_effect = {

	# TODO: add / remove secrets? 
	if = {
		limit = {
			NOT = { has_trait = wc_lifestyle_$ELEMENT$_spirit_magic }
			wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
		}

		switch = {
			trigger = has_trait

			user_of_$ELEMENT$_magic_1 = { remove_trait = user_of_$ELEMENT$_magic_1 add_trait = user_of_$ELEMENT$_spirit_magic_1 }
			user_of_$ELEMENT$_magic_2 = { remove_trait = user_of_$ELEMENT$_magic_2 add_trait = user_of_$ELEMENT$_spirit_magic_2 }
			user_of_$ELEMENT$_magic_3 = { remove_trait = user_of_$ELEMENT$_magic_3 add_trait = user_of_$ELEMENT$_spirit_magic_3 }
			user_of_$ELEMENT$_magic_4 = { remove_trait = user_of_$ELEMENT$_magic_4 add_trait = user_of_$ELEMENT$_spirit_magic_4 }
			user_of_$ELEMENT$_magic_5 = { remove_trait = user_of_$ELEMENT$_magic_5 add_trait = user_of_$ELEMENT$_spirit_magic_5 }
			user_of_$ELEMENT$_decay_magic_1 = { remove_trait = user_of_$ELEMENT$_decay_magic_1 add_trait = user_of_$ELEMENT$_spirit_magic_1 }
			user_of_$ELEMENT$_decay_magic_2 = { remove_trait = user_of_$ELEMENT$_decay_magic_2 add_trait = user_of_$ELEMENT$_spirit_magic_2 }
			user_of_$ELEMENT$_decay_magic_3 = { remove_trait = user_of_$ELEMENT$_decay_magic_3 add_trait = user_of_$ELEMENT$_spirit_magic_3 }
			user_of_$ELEMENT$_decay_magic_4 = { remove_trait = user_of_$ELEMENT$_decay_magic_4 add_trait = user_of_$ELEMENT$_spirit_magic_4 }
			user_of_$ELEMENT$_decay_magic_5 = { remove_trait = user_of_$ELEMENT$_decay_magic_5 add_trait = user_of_$ELEMENT$_spirit_magic_5 }
		}
	}
	else_if = {
		limit = {
			NOT = { has_trait = wc_lifestyle_$ELEMENT$_decay_magic }
			wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
		}

		switch = {
			trigger = has_trait

			user_of_$ELEMENT$_magic_1 = { remove_trait = user_of_$ELEMENT$_magic_1 add_trait = user_of_$ELEMENT$_decay_magic_1 }
			user_of_$ELEMENT$_magic_2 = { remove_trait = user_of_$ELEMENT$_magic_2 add_trait = user_of_$ELEMENT$_decay_magic_2 }
			user_of_$ELEMENT$_magic_3 = { remove_trait = user_of_$ELEMENT$_magic_3 add_trait = user_of_$ELEMENT$_decay_magic_3 }
			user_of_$ELEMENT$_magic_4 = { remove_trait = user_of_$ELEMENT$_magic_4 add_trait = user_of_$ELEMENT$_decay_magic_4 }
			user_of_$ELEMENT$_magic_5 = { remove_trait = user_of_$ELEMENT$_magic_5 add_trait = user_of_$ELEMENT$_decay_magic_5 }
			user_of_$ELEMENT$_spirit_magic_1 = { remove_trait = user_of_$ELEMENT$_spirit_magic_1 add_trait = user_of_$ELEMENT$_decay_magic_1 }
			user_of_$ELEMENT$_spirit_magic_2 = { remove_trait = user_of_$ELEMENT$_spirit_magic_2 add_trait = user_of_$ELEMENT$_decay_magic_2 }
			user_of_$ELEMENT$_spirit_magic_3 = { remove_trait = user_of_$ELEMENT$_spirit_magic_3 add_trait = user_of_$ELEMENT$_decay_magic_3 }
			user_of_$ELEMENT$_spirit_magic_4 = { remove_trait = user_of_$ELEMENT$_spirit_magic_4 add_trait = user_of_$ELEMENT$_decay_magic_4 }
			user_of_$ELEMENT$_spirit_magic_5 = { remove_trait = user_of_$ELEMENT$_spirit_magic_5 add_trait = user_of_$ELEMENT$_decay_magic_5 }
		}
	}
	else_if = {
		limit = {
			NOT = { has_trait = wc_lifestyle_$ELEMENT$_magic }
			wc_ELEMENT_favour_TENSE_disposition_is_neutral_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
		}

		switch = {
			trigger = has_trait

			user_of_$ELEMENT$_spirit_magic_1 = { remove_trait = user_of_$ELEMENT$_spirit_magic_1 add_trait = user_of_$ELEMENT$_magic_1 }
			user_of_$ELEMENT$_spirit_magic_2 = { remove_trait = user_of_$ELEMENT$_spirit_magic_2 add_trait = user_of_$ELEMENT$_magic_2 }
			user_of_$ELEMENT$_spirit_magic_3 = { remove_trait = user_of_$ELEMENT$_spirit_magic_3 add_trait = user_of_$ELEMENT$_magic_3 }
			user_of_$ELEMENT$_spirit_magic_4 = { remove_trait = user_of_$ELEMENT$_spirit_magic_4 add_trait = user_of_$ELEMENT$_magic_4 }
			user_of_$ELEMENT$_spirit_magic_5 = { remove_trait = user_of_$ELEMENT$_spirit_magic_5 add_trait = user_of_$ELEMENT$_magic_5 }
			user_of_$ELEMENT$_decay_magic_1 = { remove_trait = user_of_$ELEMENT$_decay_magic_1 add_trait = user_of_$ELEMENT$_magic_1 }
			user_of_$ELEMENT$_decay_magic_2 = { remove_trait = user_of_$ELEMENT$_decay_magic_2 add_trait = user_of_$ELEMENT$_magic_2 }
			user_of_$ELEMENT$_decay_magic_3 = { remove_trait = user_of_$ELEMENT$_decay_magic_3 add_trait = user_of_$ELEMENT$_magic_3 }
			user_of_$ELEMENT$_decay_magic_4 = { remove_trait = user_of_$ELEMENT$_decay_magic_4 add_trait = user_of_$ELEMENT$_magic_4 }
			user_of_$ELEMENT$_decay_magic_5 = { remove_trait = user_of_$ELEMENT$_decay_magic_5 add_trait = user_of_$ELEMENT$_magic_5 }
		}
	}
}

wc_change_amount_mp_effect = {
	custom_description = { 
		text = wc_$CHANGE$_mp_value_effect
		value = $VALUE$
	}

	if = {
		limit = {
			NOT = { has_variable = mp_add }
		}
		set_variable = {
			name = mp_add
			value = 0
		}
	}

	change_variable = {
		name = mp_add
		$CHANGE$ = $VALUE$
	}
}
wc_add_magic_resistance_effect = {
	custom_description = { 
		text = wc_$CHANGE$_$MAGIC$_magic_resistance_effect
		value = $VALUE$
	}

	if = {
		limit = {
			NOT = { has_variable = wc_$MAGIC$_magic_resistance }
		}
		set_variable = {
			name = wc_$MAGIC$_magic_resistance
			value = 0
		}
	}

	change_variable = {
		name = wc_$MAGIC$_magic_resistance
		$CHANGE$ = $VALUE$
	}
}
wc_add_magic_boost_modifier = {
	add_character_modifier = {
		modifier = wc_$MAGIC$_learning_boost_modifier
		days = $DAYS$
	}
}
wc_change_amount_element_favour_effect = {
	custom_description = { # Tooltip for changing elemental favour
		text = wc_$CHANGE$_amount_$ELEMENT$_favour_effect
		value = $VALUE$
	}

	if = {
		limit = { 
			flag:$CHANGE$ = flag:add
			faith = { has_doctrine_parameter = $ELEMENT$_spirit_magic_approved }
		}
		add_piety = {
			value = $VALUE$
			multiply = wc_piety_per_elemental_favour
		}
	}
	else_if = { 
		limit = { 
			flag:$CHANGE$ = flag:subtract
			faith = { has_doctrine_parameter = $ELEMENT$_spirit_magic_approved }
		}
		add_piety = {
			value = $VALUE$
			multiply = -1
			multiply = wc_piety_per_elemental_favour
		}
	}
	else_if = {
		limit = { 
			flag:$CHANGE$ = flag:add
			faith = { has_doctrine_parameter = $ELEMENT$_decay_magic_approved }
		}
		add_piety = {
			value = $VALUE$
			multiply = -1
			multiply = wc_piety_per_elemental_favour
		}
	}
	else_if = {
		limit = { 
			flag:$CHANGE$ = flag:subtract
			faith = { has_doctrine_parameter = $ELEMENT$_decay_magic_approved }
		}
		add_piety = {
			value = $VALUE$
			multiply = wc_piety_per_elemental_favour
		}
	}

	save_temporary_scope_value_as = {
		name = wc_elemental_favour_after_change_variable
		value = {
			value = 0
			$CHANGE$ = $VALUE$
		}
	}

	if = { # Disposition change tooltip
		limit = {
			wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
			NOT = { wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $ELEMENT$ TENSE = current } }
		}
		custom_description = { text = wc_change_$ELEMENT$_disposition_to_spirit_effect }
	}
	else_if = {
		limit = {
			wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
			NOT = { wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $ELEMENT$ TENSE = current } }
		}
		custom_description = { text = wc_change_$ELEMENT$_disposition_to_decay_effect }
	}
	else_if = {
		limit = {
			wc_ELEMENT_favour_TENSE_disposition_is_neutral_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
			NOT = {
				wc_ELEMENT_favour_TENSE_disposition_is_neutral_trigger = { ELEMENT = $ELEMENT$ TENSE = current }
			}
		}
		custom_description = { text = wc_change_$ELEMENT$_disposition_to_neutral_effect }
	}

	wc_ELEMENT_favour_lifestyle_check_effect = { ELEMENT = $ELEMENT$ } # Trait check

	if = { # Actually changes elemental favour - need to be after wc_ELEMENT_favour_lifestyle_check_effect because otherwise wc_$ELEMENT$_favour_after_change_value will count $VALUE$ twice
		limit = { has_variable = wc_$ELEMENT$_favour_variable }

		change_variable = { 
			name = wc_$ELEMENT$_favour_variable 
			$CHANGE$ = $VALUE$ 
		}
	}
	else = {
		set_variable = { name = wc_$ELEMENT$_favour_variable value = wc_starting_$ELEMENT$_favour_value }

		change_variable = { 
			name = wc_$ELEMENT$_favour_variable 
			$CHANGE$ = $VALUE$ 
		}
	}
	clamp_variable = { name = wc_$ELEMENT$_favour_variable max = wc_max_elemental_favour_value min = wc_min_elemental_favour_value }
}

# secret effects
wc_magic_lifestyle_secret_reveal_effect = { 
	if = { limit = { scope:secret = { secret_type = secret_light_magic_user } }
		wc_nonelemental_magic_lifestyle_rank_up_effect = { MAGIC = light }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_shadow_magic_user } }
		wc_nonelemental_magic_lifestyle_rank_up_effect = { MAGIC = shadow }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_life_magic_user } }
		wc_nonelemental_magic_lifestyle_rank_up_effect = { MAGIC = life }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_death_magic_user } }
		wc_nonelemental_magic_lifestyle_rank_up_effect = { MAGIC = death }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_order_magic_user } }
		wc_nonelemental_magic_lifestyle_rank_up_effect = { MAGIC = order }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_disorder_magic_user } }
		wc_nonelemental_magic_lifestyle_rank_up_effect = { MAGIC = disorder }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_elemental_earth_magic_user } }
		wc_elemental_magic_lifestyle_rank_up_effect = { MAGIC = elemental_earth }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_elemental_fire_magic_user } }
		wc_elemental_magic_lifestyle_rank_up_effect = { MAGIC = elemental_fire }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_elemental_air_magic_user } }
		wc_elemental_magic_lifestyle_rank_up_effect = { MAGIC = elemental_air }
	}
	else_if = { limit = { scope:secret = { secret_type = secret_elemental_water_magic_user } }
		wc_elemental_magic_lifestyle_rank_up_effect = { MAGIC = elemental_water }
	}
}

# Chance to expose this secret upon spellcasting, will add more in fire-lifestyle branch.
wc_expose_magic_effect = {
	every_secret = {
		limit = {
			secret_type = secret_$MAGIC$_magic_user
		}
		save_scope_as = magic_secret
		root = {
			duel = {
				value = 15
				skill = intrigue
				70 = {
					# Spell rank
					modifier = {
						OR = {
							AND = {
								has_variable = current_spell_rank
								NOT = {
									has_variable = $SPELL$_rank
								}
								var:current_spell_rank = 2
							}
							AND = {
								has_variable = $SPELL$_rank
								var:$SPELL$_rank = 2
							}
						}
						factor = 0.7
					}
					modifier = {
						OR = {
							AND = {
								has_variable = current_spell_rank
								NOT = {
									has_variable = $SPELL$_rank
								}
								var:current_spell_rank = 3
							}
							AND = {
								has_variable = $SPELL$_rank
								var:$SPELL$_rank = 3
							}
						}
						factor = 0.5
					}
					# Number of targets
					modifier = {
						AND = {
							has_variable = $SPELL$_targets_list
							variable_list_size = {
								name = $SPELL$_targets_list
								value >= 2
							}
						}
						factor = 0.7
					}
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					# nothing
				}
				30 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					scope:magic_secret = { expose_secret = root }
				}
			}
		}	
	}
}


#automated character template effects

add_random_perks_to_non_elemental_magic_lifestyle = { #MAGICTYPE: type of random magic to add, TARGETLEVEL: Average level of magic to add
	add_random_magic_perks_of_type = { MAGICTYPE = $MAGICTYPE$ TARGETLEVEL = $TARGETLEVEL$ } 
	add_perks_in_nonelemental_MAGIC_lifestyle_effect = { MAGIC = $MAGICTYPE$ }
	#wc_non_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = $MAGICTYPE$ }
}

add_random_perks_to_elemental_magic_lifestyle = { #MAGICTYPE: type of random magic to add, TARGETLEVEL: Average level of magic to add
	add_random_magic_perks_of_type = { MAGICTYPE = $MAGICTYPE$ TARGETLEVEL = $TARGETLEVEL$ } 
	add_perks_in_elemental_MAGIC_lifestyle_effect = { MAGIC = $MAGICTYPE$ }
	#wc_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = { MAGIC = $MAGICTYPE$ }
}

add_random_legal_magic = { #MAGICTYPE: type of random magic to add, TARGETLEVEL: Average level of magic to add
	set_variable = { 
		name = magic_added
		value = 0
	}
	while = { 
		limit = { var:magic_added = 0 }
		random_list = {
			10 = { set_variable = { name = random_magic_index value = 1 } }
			10 = { set_variable = { name = random_magic_index value = 2 } }
			10 = { set_variable = { name = random_magic_index value = 3 } }
			10 = { set_variable = { name = random_magic_index value = 4 } }
			10 = { set_variable = { name = random_magic_index value = 5 } }
			10 = { set_variable = { name = random_magic_index value = 6 } }
			10 = { set_variable = { name = random_magic_index value = 7 } }
			10 = { set_variable = { name = random_magic_index value = 8 } }
			10 = { set_variable = { name = random_magic_index value = 9 } }
			10 = { set_variable = { name = random_magic_index value = 10 } }
		}
		switch = { 
			trigger = var:random_magic_index
			1 = { 
				if = { limit = { faith = { has_doctrine_parameter = light_magic_openly_learnable } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light }
					change_variable = { name = magic_added add = 1 }
				}
			}
			2 = { 
				if = { limit = { faith = { has_doctrine_parameter = shadow_magic_openly_learnable } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = shadow }
					change_variable = { name = magic_added add = 1}
				}
			}
			3 = { 
				if = { limit = { faith = { has_doctrine_parameter = order_magic_openly_learnable } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = order }
					change_variable = { name = magic_added add = 1}
				}
			}
			4 = { 
				if = { limit = { faith = { has_doctrine_parameter = disorder_magic_openly_learnable } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = disorder }
					change_variable = { name = magic_added add = 1}
				}
			}
			5 = { 
				if = { limit = { faith = { has_doctrine_parameter = life_magic_openly_learnable } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = life }
					change_variable = { name = magic_added add = 1}
				}
			}
			6 = { 
				if = { limit = { faith = { has_doctrine_parameter = death_magic_openly_learnable } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = death }
					change_variable = { name = magic_added add = 1}
				}
			}
			7 = { 
				if = { limit = { faith = { has_doctrine_parameter = elemental_fire_magic_openly_learnable } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_fire }
					change_variable = { name = magic_added add = 1}
				}
			}
			8 = { 
				if = { limit = { faith = { has_doctrine_parameter = elemental_water_magic_openly_learnable } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_water } 
					change_variable = { name = magic_added add = 1}
				}
			}
			9 = { 
				if = { limit = { faith = { has_doctrine_parameter = elemental_air_magic_openly_learnable } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_air } 
					change_variable = { name = magic_added add = 1}
				}
			}
			10 = { 
				if = { limit = { faith = { has_doctrine_parameter = elemental_earth_magic_openly_learnable } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_earth }
					change_variable = { name = magic_added add = 1}
				}
			}
		}
		remove_variable = random_magic_index
	}
}

add_random_illegal_magic = { #MAGICTYPE: type of random magic to add, TARGETLEVEL: Average level of magic to add
	set_variable = { 
		name = magic_added
		value = 0
	}
	while = { 
		limit = { var:magic_added = 0 }
		random_list = {
			10 = { set_variable = { name = random_magic_index value = 1 } }
			10 = { set_variable = { name = random_magic_index value = 2 } }
			10 = { set_variable = { name = random_magic_index value = 3 } }
			10 = { set_variable = { name = random_magic_index value = 4 } }
			10 = { set_variable = { name = random_magic_index value = 5 } }
			10 = { set_variable = { name = random_magic_index value = 6 } }
			10 = { set_variable = { name = random_magic_index value = 7 } }
			10 = { set_variable = { name = random_magic_index value = 8 } }
			10 = { set_variable = { name = random_magic_index value = 9 } }
			10 = { set_variable = { name = random_magic_index value = 10 } }
		}
		switch = { 
			trigger = var:random_magic_index
			1 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = light_magic_openly_learnable } } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light }
					change_variable = { name = magic_added add = 1 }
				}
			}
			2 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = shadow_magic_openly_learnable } } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = shadow }
					change_variable = { name = magic_added add = 1}
				}
			}
			3 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = order_magic_openly_learnable } } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = order }
					change_variable = { name = magic_added add = 1}
				}
			}
			4 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = disorder_magic_openly_learnable } } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = disorder }
					change_variable = { name = magic_added add = 1}
				}
			}
			5 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = life_magic_openly_learnable } } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = life }
					change_variable = { name = magic_added add = 1}
				}
			}
			6 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = death_magic_openly_learnable } } }
					add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = death }
					change_variable = { name = magic_added add = 1}
				}
			}
			7 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = elemental_fire_magic_openly_learnable } } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_fire }
					change_variable = { name = magic_added add = 1}
				}
			}
			8 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = elemental_water_magic_openly_learnable } } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_water } 
					change_variable = { name = magic_added add = 1}
				}
			}
			9 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = elemental_air_magic_openly_learnable } } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_air } 
					change_variable = { name = magic_added add = 1}
				}
			}
			10 = { 
				if = { limit = { NOT = { faith = { has_doctrine_parameter  = elemental_earth_magic_openly_learnable } } }
					add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_earth }
					change_variable = { name = magic_added add = 1}
				}
			}
		}
		remove_variable = random_magic_index
	}
}


add_random_magic = { #MAGICTYPE: type of random magic to add, TARGETLEVEL: Average level of magic to add
	random_list = {
		10 = { set_variable = { name = random_magic_index value = 1 } }
		10 = { set_variable = { name = random_magic_index value = 2 } }
		10 = { set_variable = { name = random_magic_index value = 3 } }
		10 = { set_variable = { name = random_magic_index value = 4 } }
		10 = { set_variable = { name = random_magic_index value = 5 } }
		10 = { set_variable = { name = random_magic_index value = 6 } }
		10 = { set_variable = { name = random_magic_index value = 7 } }
		10 = { set_variable = { name = random_magic_index value = 8 } }
		10 = { set_variable = { name = random_magic_index value = 9 } }
		10 = { set_variable = { name = random_magic_index value = 10 } }
	}
	switch = { 
		trigger = var:random_magic_index
		1 = { add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light } }
		2 = { add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light } }
		3 = { add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light } }
		4 = { add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light } }
		5 = { add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light } }
		6 = { add_random_perks_to_non_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = light } }
		8 = { add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_fire } }
		8 = { add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_water } }
		9 = { add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_air } }
		10 = { add_random_perks_to_elemental_magic_lifestyle = { TARGETLEVEL = $TARGETLEVEL$ MAGICTYPE = elemental_earth } }
	}
}

add_random_magic_perks_of_type = { #MAGICTYPE: type of random magic to add, TARGETLEVEL: Average level of magic to add
	random_list = { 
		25 = { 
			modifier = { 
				add = 50
				$TARGETLEVEL$ = 1
			}
			modifier = { 
				add = -25
				$TARGETLEVEL$ = 5
			}
			set_variable = { 
				name = wc_$MAGICTYPE$_magic_lifestyle_additional_perks_variable 
				value = { wc_perks_needed_for_level_1_magic_trait_value wc_perks_needed_for_level_2_magic_trait_value }
			}
		}
		25 = { 
			modifier = { 
				add = 50
				$TARGETLEVEL$ = 2
			}
			modifier = { 
				add = 20
				OR = { 
					$TARGETLEVEL$ = 1
					$TARGETLEVEL$ = 3
				}
			}
				set_variable = { 
					name = wc_$MAGICTYPE$_magic_lifestyle_additional_perks_variable 
					value = { wc_perks_needed_for_level_2_magic_trait_value wc_perks_needed_for_level_3_magic_trait_value }
				} 
			}
		25 = { 
			modifier = { 
				add = 50
				$TARGETLEVEL$ = 3
			}
			modifier = { 
				add = 20
				OR = { 
					$TARGETLEVEL$ = 4
					$TARGETLEVEL$ = 2
				}
			}
			set_variable = { 
				name = wc_$MAGICTYPE$_magic_lifestyle_additional_perks_variable 
				value = { wc_perks_needed_for_level_3_magic_trait_value wc_perks_needed_for_level_4_magic_trait_value }
			}
			}
		25 = { 
			modifier = { 
				add = 50
				$TARGETLEVEL$ = 4
			}
			modifier = { 
				add = 20
				OR = { 
					$TARGETLEVEL$ = 3
					$TARGETLEVEL$ = 5
				}
			}
			set_variable = { 
				name = wc_$MAGICTYPE$_magic_lifestyle_additional_perks_variable 
				value = { wc_perks_needed_for_level_4_magic_trait_value wc_perks_needed_for_level_5_magic_trait_value }
			}
		}
		25 = { 
			modifier = { 
				add = 50
				$TARGETLEVEL$ = 5
			}
			modifier = { 
				add = -20
				$TARGETLEVEL$ = 1
			}
			
			set_variable = { 
				name = wc_$MAGICTYPE$_magic_lifestyle_additional_perks_variable 
				value = { wc_perks_needed_for_level_5_magic_trait_value 27 }
			}
		}
	}
}
