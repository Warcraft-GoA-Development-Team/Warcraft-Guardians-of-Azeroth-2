### LIST TEMPLATE

window = {
	name = "character_finder_window"
	# size = { 750 90% }
	parentanchor = top|right
	position = { -50 65 }
	allow_outside = yes
	layer = middle

	using = Window_Background
	using = Window_Decoration_Spike
	using = Window_Size_CharacterList

	datacontext = "[CharacterFinderWindow.GetCharacterList]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "CHARACTER_FINDER_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[CharacterFinderWindow.Close]"
			}
		}

		vbox_character_list = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_empty_visibility"
			{
				layoutpolicy_vertical = expanding
				visible = "[Not( CharacterSelectionList.HasItems )]"
				text = "CHARACTER_FINDER_NO_MATCH"
			}
			
			blockoverride "container_implementation" {
				fixedgridbox = {
					addcolumn = 630
					addrow = 92

					name = "characters_grid"
					datamodel_reuse_widgets = yes
					datamodel = "[CharacterSelectionList.GetList]"
					visible = "[Not(CharacterSelectionList.IsBuildingList)]"

					item = {
						widget_character_list_item_finder = {
							size = { 630 94 }
						}
					}
				}
			}
		}
	}

	window_character_filter = {
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilterWithDefault('relation_filter', '(int32)1')]"
			}

			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('range_filter')]"
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding

				datacontext = "[CharacterSelectionList.GetCategory('personal_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('adult_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('gender_filter')]"
					}

					divider = {
						layoutpolicy_horizontal = expanding
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('married_filter')]"
					}
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('imprisoned_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('hook_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('inspiration_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('sexuality_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('artifact_filter')]"
					}
				}
			}

			vbox_filter_group = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetCategory('membership_filter_category')]"
				blockoverride "filters" {
					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
					}

					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
					}


					filter_item = {
						layoutpolicy_horizontal = expanding
						datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
					}
				}
			}
		}
	}
}
