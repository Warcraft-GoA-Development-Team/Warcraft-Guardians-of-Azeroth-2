window = {
    name = "widget_raise_dead"
    position = { 0 10 }
    parentanchor = center
    allow_outside = yes
    layer = top
    visible = "[GetVariableSystem.HasValue( 'raise_dead_window', 'yes' )]"

    size = { 750 750 }
    using = Window_Background
    using = Window_Decoration_Spike

    state = {
        name = _show
        using = Animation_FadeIn_Standard
        using = Sound_WindowShow_Standard
        on_start = "[GetScriptedGui( 'open_raise_dead_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
        on_start = "[GetVariableSystem.Set( 'raise_dead_view', 'spells_view' )]"
    }

    state = {
        name = _hide
        using = Animation_FadeOut_Quick
        using = Sound_WindowHide_Standard
        on_start = "[GetVariableSystem.Set('character_finder_magic_selection', 'no')]"
    }

    vbox = {
        using = Window_Margins

        # Headers
        header_pattern_interaction = {
            layoutpolicy_horizontal = expanding

            blockoverride "header_text"
            {
                text = "RAISE_DEAD_HEADER_TEXT"
            }

            blockoverride "button_close"
            {
                onclick = "[GetVariableSystem.Clear( 'raise_dead_window' )]"
                onclick = "[GetVariableSystem.Clear( 'current_raise_dead_type_selected' )]"
                onclick = "[GetVariableSystem.Clear( 'supreme_raise_dead' )]"
                onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                onclick = "[GetScriptedGui( 'close_raise_dead_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
            }

            blockoverride "button_back"
            {
                visible = "[GetVariableSystem.HasValue( 'raise_dead_view', 'effects_view' )]"
                onclick = "[GetVariableSystem.Set( 'raise_dead_view', 'spells_view' )]"
                onclick = "[GetScriptedGui( 'close_raise_dead_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                onclick = "[GetVariableSystem.Clear( 'current_raise_dead_type_selected')]"
                tooltip = "RAISE_DEAD_SELECT_TYPE"
            }
        }

        # Spell Display Box
        vbox = {
            layoutpolicy_vertical = expanding
            visible = "[GetVariableSystem.HasValue( 'raise_dead_view', 'spells_view' )]"
            scrollbox = {
                size = { 660 650 }
                layoutpolicy_horizontal = expanding
                layoutpolicy_vertical = expanding

                background = {
                    texture = "[GetCultureInnovationType('death_magic_bg').GetIcon]"
                    fittype = centercrop
                    alpha = 0.2
                    framesize = { 600 700 }
                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
                        blend_mode = alphamultiply
                        alpha =1
                    }
                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                        blend_mode = alphamultiply
                        alpha = 1
                    }
                }
                blockoverride "scrollbox_background" {}
                blockoverride "scrollbox_margins" {
                    margin_top = 10
                    margin_bottom = 15
                    margin_right = 10
                }
                blockoverride "scrollbox_content" {
                    undead_traits_list = {
                        visible = "[Not(GetVariableSystem.Exists('supreme_raise_dead'))]"
                    }
                    undead_traits_list = {
                        visible = "[GetScriptedGui('can_select_supreme_raise_dead_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                        blockoverride "undead_datamodel" {
                            datamodel = "[GetGlobalList('supreme_raise_dead_types')]"
                        }
                        blockoverride "undead_tooltip" {
                            supreme_undead_type_breakdown_tooltip = {}
                        }
                        blockoverride "set_spell" {
                            onclick = "[GetScriptedGui( 'set_current_spell_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell', MakeScopeFlag('supreme_raise_dead')).End))]"
                        }
                    }
                }
            }
        }
        # Effects Area
        vbox = {
            visible = "[GetVariableSystem.HasValue( 'raise_dead_view', 'effects_view' )]"
            spacing = 15

            layoutpolicy_vertical = expanding
            hbox = {
                layoutpolicy_horizontal = expanding
                vbox = { # Target portrait view
                    name = "target_portrait_box"
                    vbox = {
                        name = "target_portrait_box_single_title"
                        visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_character_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"

                        portrait_body_large = {
                            datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Char]"
                            size = { 300 200 }
                            scale = 0.75

                            blockoverride "portrait_texture" {
                                portrait_texture = "[Character.GetAnimatedPortrait('environment_body', 'camera_lifestyles', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
                                position = { 0 200 }
                            }
                            blockoverride "mask" {
                                mask = "gfx/portraits/portrait_mask_torso.dds"
                            }
                            blockoverride "opinion_box"
                            {}
                            blockoverride "portrait_icons"
                            {}
                            blockoverride "coa"
                            {}
                        }
                    }
                }

                vbox = { # For Single Targets only
                    name = "target_info_box"
                    visible = "[Not(GetScriptedGui('has_targets_list_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                    scrollbox = {
                        size = { 250 300 }
                        visible = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet]"
                        blockoverride "scrollbox_background" {}
                        blockoverride "scrollbox_background_fade" {}
                        blockoverride "scrollbox_content"
                        {
                            vbox = {
                                layoutpolicy_vertical = expanding
                                name = "target_info_box"
                                vbox = {
                                    spacing = 15
                                    name = "target_info_box_single_char"
                                    visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_character_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                                    text_single = {
                                        raw_text = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Char.GetShortUIName]"
                                        default_format = "#T"
                                    }
                                }
                            }
                            background = {
                                using = Background_Area_Dark
                                alpha = 0.5
                            }
                        }
                    }

                }
            }

            hbox = {

                name = "effects_box"
                layoutpolicy_horizontal = expanding
                layoutpolicy_vertical = expanding
                vbox = {
                    name = "effects_on_target"
                    datacontext = "[GetPlayer.MakeScope.Char]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding

                    background = {
                        using = Background_Area_With_Header
                    }

                    text_single = {
                        text = "SPELL_EFFECTS"
                        align = center
                        layoutpolicy_horizontal = expanding
                        margin = { 15 4 }
                    }

                    hbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding

                        margin_top = 5
                        spacing = 5
                        margin_left = 6


                        scrollbox = {
                            layoutpolicy_horizontal = expanding
                            layoutpolicy_vertical = expanding
                            size = { 650 200 }
                            blockoverride "scrollbox_background" {}
                            blockoverride "scrollbox_background_fade" {}
                            blockoverride "scrollbox_content"
                            {
                                layoutpolicy_horizontal = expanding
                                text_multi = {
                                    max_width = 625
                                    name = "effects_info"
                                    autoresize = yes
                                    layoutpolicy_horizontal = expanding
                                    layoutpolicy_vertical = expanding
                                    text = "[GetScriptedGui( 'spell_tooltip_sgui' ).ExecuteTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('tooltip_target', GetPlayer.MakeScope).End)]"
                                }
                            }
                        }

                        expand = {}
                    }
                }
            }
        }

        # Cast Spell Area
        hbox = {
            margin = { 15 0 }
            layoutpolicy_horizontal = expanding
            visible = "[GetVariableSystem.HasValue( 'raise_dead_view', 'effects_view' )]"

            hbox = {

                button_normal = {
                    gfxtype = framedbuttongfx
                    effectname = "NoHighlight"
                    upframe = 1
                    downframe = 2
                    overframe = 1
                    disableframe = 1

                    size = { 300 80 }
                    texture = "gfx/interface/bookmarks/start_buttons/bm_867_adventurers.dds"

                    modify_texture = {
                        texture = "gfx/interface/bookmarks/start_buttons/bm_867_carolingians.dds"
                        alpha = 0.5
                        blend_mode = overlay
                    }

                    modify_texture = {
                        texture = "gfx/interface/colors/red.dds"
                        alpha = 0.2
                        blend_mode = overlay
                    }
                    modify_texture = {
                        texture = "gfx/interface/buttons/button_fancy_overlay.dds"
                        blend_mode = overlay
                    }

                    modify_texture = {
                        name = "glow"
                        texture = "gfx/interface/buttons/button_fancy_glow.dds"
                        blend_mode = colordodge
                        alpha = 0

                        spriteborder = { 20 0 }
                        spritetype = corneredStretched
                    }

                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_center_shimmer.dds"
                        blend_mode = mask
                    }

                    modify_texture = {
                        name = "shimmer"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                        rotate_uv = 0
                    }

                    modify_texture = {
                        name = "shimmer_2"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                        rotate_uv = 0
                    }

                    modify_texture = {
                        name = "shimmer_3"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                    }

                    modify_texture = {
                        name = "shimmer_4"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                    }

                    state = {
                        trigger_on_create = yes
                        name = a
                        next = b
                        duration = 0

                        modify_texture = {
                            name = "shimmer"
                            translate_uv = { -0.1 0 }
                            alpha = 0.1
                            rotate_uv = 0
                        }

                        modify_texture = {
                            name = "shimmer_2"
                            translate_uv = { 0.1 0 }
                            alpha = 0.3
                            rotate_uv = 0
                        }

                        modify_texture = {
                            name = "shimmer_3"
                            translate_uv = { 1 0 }
                            alpha = 0.1
                        }

                        modify_texture = {
                            name = "shimmer_4"
                            translate_uv = { -1 0 }
                            alpha = 0.5
                        }
                    }

                    state = {
                        name = b
                        next = c
                        duration = 10

                        modify_texture = {
                            name = "shimmer"
                            translate_uv = { 0.1 0 }
                            alpha = 0.3
                            rotate_uv = 180
                        }

                        modify_texture = {
                            name = "shimmer_2"
                            translate_uv = { -0.1 0 }
                            alpha = 0.1
                            rotate_uv = -180
                        }

                        modify_texture = {
                            name = "shimmer_3"
                            translate_uv = { 0 0 }
                            alpha = 0.5
                        }

                        modify_texture = {
                            name = "shimmer_4"
                            translate_uv = { 0 0 }
                            alpha = 0.1
                        }
                    }

                    state = {
                        name = c
                        next = a
                        duration = 10

                        modify_texture = {
                            name = "shimmer"
                            translate_uv = { -0.1 0 }
                            alpha = 0.1
                            rotate_uv = 360
                        }

                        modify_texture = {
                            name = "shimmer_2"
                            translate_uv = { 0.1 0 }
                            alpha = 0.3
                            rotate_uv = -360
                        }

                        modify_texture = {
                            name = "shimmer_3"
                            translate_uv = { -1 0 }
                            alpha = 0.1
                        }

                        modify_texture = {
                            name = "shimmer_4"
                            translate_uv = { 1 0 }
                            alpha = 0.5
                        }
                    }

                    state = {
                        name = _mouse_hierarchy_enter

                        modify_texture = {
                            name = "glow"
                            alpha = 1
                        }
                    }

                    state = {
                        name = _mouse_hierarchy_leave
                        duration = 0.2
                        using = Animation_Curve_Default

                        modify_texture = {
                            name = "glow"
                            alpha = 0
                        }
                    }

                    state = {
                        name = _mouse_press
                        duration = 0
                        using = Animation_Curve_Default

                        modify_texture = {
                            name = "glow"
                            alpha = 0
                        }
                    }
                    tooltip = "[GetScriptedGui('can_cast_spell_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                    enabled = "[GetScriptedGui('can_cast_spell_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                    onclick = "[GetScriptedGui( 'cast_spell_no_triggers_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    onclick = "[GetScriptedGui( 'set_raise_dead_type_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    onclick = "[OpenCharacterInteraction(GetPlayer.MakeScope.Var('current_secondary_interaction').GetFlagName, GetPlayer)]"
                    onclick = "[GetVariableSystem.Clear( 'current_raise_dead_type_selected' )]"

                    onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    onclick = "[GetScriptedGui( 'close_raise_dead_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    onclick = "[GetVariableSystem.Clear( 'raise_dead_window' )]"
                    onclick = "[GetVariableSystem.Clear( 'current_raise_dead_type_selected' )]"
                    onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    onclick = "[GetScriptedGui( 'close_raise_dead_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

                    text_single = {
                        parentanchor = center
                        text = "RAISE_DEAD_HEADER_TEXT"
                        align = nobaseline
                        using = Font_Size_Big
                        default_format = "#high;bold;glow_color:{0,0,0,1}"
                        background = {
                            texture ="gfx/interface/colors/black.dds"
                            alpha = 0.2
                            margin = { 50% 0}
                            modify_texture = {
                                texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                blend_mode = alphamultiply

                            }
                        }
                    }

                    icon = {
                        size = { 300 80 }
                        texture = "gfx/interface/bookmarks/start_buttons/start_frame.dds"
                    }
                }

            }
            background = {
                using = Background_Area
                modify_texture = {
                    texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
                    blend_mode = alphamultiply
                    alpha = 0.8
                }
            }
        }


    }
}

types undead_breakdowns {

    type undead_traits_list = dynamicgridbox {
        datamodel_wrap = 1
        flipdirection = yes

        block "undead_datamodel" {
            datamodel = "[GetGlobalList('raise_dead_types')]"
        }
        item = {
            container = {
                button_standard_clean = {
                    hbox = {
                        visible = "[GetScriptedGui('can_select_raise_dead_type_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'type', MakeScopeFlag(Scope.GetFlagName)).End)]"
                        tooltipwidget = {
                            block "undead_tooltip" {
                                undead_type_breakdown_tooltip = {}
                            }
                        }
                    }

                    position = { 10 10 }
                    minimumsize = { 600 200 }
                    background = {
                        using = Background_Area
                    }

                    # Spell Info
                    vbox = {
                        spacer = { size = { 0 5 } }
                        hbox = {
                            icon = {
                                name = "trait_icon"
                                using = Animation_Glow_Pulse

                                block "icon_size"
                                {
                                    size = { 50 50 }
                                }
                                block "glow"
                                {

                                }

                                texture = "[GetTrait(Concatenate(Select_CString(EqualTo_string(Scope.GetFlagName, 'undead'), 'being_', 'creature_'), Scope.GetFlagName)).GetIcon(GetPlayer)]"
                            }
                            spacer = { size = { 10 0 } }
                            # Name
                            text_single = {
                                visible = "[EqualTo_string(Scope.GetFlagName, 'undead')]"
                                default_format = "#high"
                                fontsize = 20
                                text = "[Localize(Concatenate('trait_being_', Scope.GetFlagName))]"
                                background = {
                                    texture ="gfx/interface/colors/black.dds"
                                    alpha = 0.4
                                    margin = { 50% 0}
                                    modify_texture = {
                                        texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                        blend_mode = alphamultiply
                                    }
                                }
                            }
                            text_single = {
                                visible = "[Not(EqualTo_string(Scope.GetFlagName, 'undead'))]"
                                default_format = "#high"
                                fontsize = 20
                                text = "[Localize(Concatenate('trait_creature_', Scope.GetFlagName))]"
                                background = {
                                    texture ="gfx/interface/colors/black.dds"
                                    alpha = 0.4
                                    margin = { 50% 0}
                                    modify_texture = {
                                        texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                        blend_mode = alphamultiply
                                    }
                                }
                            }
                        }
                        divider_light = {
                            layoutpolicy_horizontal = expanding
                            modify_texture = {
                                texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                blend_mode = alphamultiply
                            }
                        }
                        text_multi = {
                            visible = "[EqualTo_string(Scope.GetFlagName, 'undead')]"
                            parentanchor = left
                            autoresize = yes
                            max_width = 500
                            align = center
                            fontsize = 14
                            text = "[Localize(Concatenate('trait_being_', Concatenate(Scope.GetFlagName, '_desc')))]"
                            background = {
                                texture ="gfx/interface/colors/black.dds"
                                alpha = 0.2
                                margin = { 50% 0}
                                modify_texture = {
                                    texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                    blend_mode = alphamultiply

                                }
                            }
                        }
                        text_multi = {
                            visible = "[Not(EqualTo_string(Scope.GetFlagName, 'undead'))]"
                            parentanchor = left
                            autoresize = yes
                            max_width = 500
                            align = center
                            fontsize = 14
                            text = "[Localize(Concatenate('trait_creature_', Concatenate(Scope.GetFlagName, '_desc')))]"
                            background = {
                                texture ="gfx/interface/colors/black.dds"
                                alpha = 0.2
                                margin = { 50% 0}
                                modify_texture = {
                                    texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                    blend_mode = alphamultiply

                                }
                            }
                        }
                        spacer = { size = { 0 20 } }
                    }
                    onclick = "[GetVariableSystem.Set( 'current_raise_dead_type_selected', Scope.GetFlagName )]"
                    down = "[GetVariableSystem.HasValue( 'current_raise_dead_type_selected', Scope.GetFlagName )]"
                    onclick = "[GetVariableSystem.Set('character_finder_magic_selection', 'no')]"
                    block "set_spell" {
                        onclick = "[GetScriptedGui( 'set_current_spell_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell', MakeScopeFlag('raise_dead')).End))]"
                    }
                    onclick = "[GetScriptedGui( 'set_current_raise_dead_type_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'type', MakeScopeFlag(Scope.GetFlagName)).End))]"
                    enabled = "[GetScriptedGui('can_select_raise_dead_type_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'type', MakeScopeFlag(Scope.GetFlagName)).End)]"
                    tooltip = "[GetScriptedGui('can_select_raise_dead_type_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'type', MakeScopeFlag(Scope.GetFlagName)).End)]"
                    onclick = "[GetVariableSystem.Set( 'raise_dead_view', 'effects_view' )]"
                }
            }
        }
    }

    type undead_type_breakdown_tooltip = widget {
        size = { 50 50 }
        alwaystransparent = no

        using = DefaultTooltipBackground

        vbox = {
            max_width = 400
            layoutpolicy_horizontal = expanding
            restrictparent_min = yes
            margin = { 15 10 }
            spacing = 20

            vbox = {
                layoutpolicy_horizontal = expanding
                alwaystransparent = no

                vbox = {
                    layoutpolicy_horizontal = expanding
                    margin_bottom = 10
                    spacing = 5

                    text_single = {
                        layoutpolicy_horizontal = expanding
                        text = "UNDEAD_TYPE"
                        default_format = "#T"

                        background = {
                            using = Background_Area
                            margin = { 10 0 }
                            margin_bottom = 5
                        }
                    }

                    vbox = {
                        layoutpolicy_horizontal = expanding

                        hbox = {
                            layoutpolicy_horizontal = expanding
                            spacing = 10

                            text_single = {
                                using = DefaultTooltipText
                                max_width = 400
                                layoutpolicy_horizontal = expanding
                                text = "[GetTrait(Concatenate(Select_CString(EqualTo_string(Scope.GetFlagName, 'undead'), 'being_', 'creature_'), Scope.GetFlagName)).GetFullDescription( GetPlayer, GetPlayer.GetFaith )]"
                            }
                        }
                    }
                }
                vbox = {
                    layoutpolicy_horizontal = expanding
                    margin_bottom = 10
                    spacing = 5

                    text_single = {
                        layoutpolicy_horizontal = expanding
                        text = "RAISE_DEAD_CD_CT"
                        default_format = "#T"

                        background = {
                            using = Background_Area
                            margin = { 10 0 }
                            margin_bottom = 5
                        }
                    }

                    vbox = {
                        layoutpolicy_horizontal = expanding

                        hbox = {
                            layoutpolicy_horizontal = expanding
                            spacing = 10
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                text = "NO_CD_TEXT"
                                visible = "[EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('wc_spell_raise_dead_cooldown_value'), '(CFixedPoint)0')]"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(GetPlayer.MakeScope.ScriptValue('wc_spell_raise_dead_cooldown_value'))]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                text = "RAISE_DEAD_CD_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('wc_spell_raise_dead_cooldown_value')]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                visible = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('wc_spell_raise_dead_cast_time_value'), '(CFixedPoint)0'))]"
                                text = "RAISE_DEAD_CT_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('wc_spell_raise_dead_cast_time_value'))]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                visible = "[EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('wc_spell_raise_dead_cast_time_value'), '(CFixedPoint)0')]"
                                text = "NO_CT_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('wc_spell_raise_dead_cast_time_value'))]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                text = "RAISE_DEAD_COST_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate(Concatenate('wc_spell_raise_dead_', Scope.GetFlagName), '_mana_cost_value'))]"
                            }
                        }
                    }
                }
            }
        }

    }

    type supreme_undead_type_breakdown_tooltip = widget {
        size = { 50 50 }
        alwaystransparent = no

        using = DefaultTooltipBackground

        vbox = {
            max_width = 400
            layoutpolicy_horizontal = expanding
            restrictparent_min = yes
            margin = { 15 10 }
            spacing = 20

            vbox = {
                layoutpolicy_horizontal = expanding
                alwaystransparent = no

                vbox = {
                    layoutpolicy_horizontal = expanding
                    margin_bottom = 10
                    spacing = 5

                    text_single = {
                        layoutpolicy_horizontal = expanding
                        text = "UNDEAD_TYPE"
                        default_format = "#T"

                        background = {
                            using = Background_Area
                            margin = { 10 0 }
                            margin_bottom = 5
                        }
                    }

                    vbox = {
                        layoutpolicy_horizontal = expanding

                        hbox = {
                            layoutpolicy_horizontal = expanding
                            spacing = 10

                            text_single = {
                                using = DefaultTooltipText
                                max_width = 400
                                layoutpolicy_horizontal = expanding
                                text = "[GetTrait(Concatenate('creature_', Scope.GetFlagName)).GetFullDescription( GetPlayer, GetPlayer.GetFaith )]"
                            }
                        }
                    }
                }
                vbox = {
                    layoutpolicy_horizontal = expanding
                    margin_bottom = 10
                    spacing = 5

                    text_single = {
                        layoutpolicy_horizontal = expanding
                        text = "RAISE_DEAD_CD_CT"
                        default_format = "#T"

                        background = {
                            using = Background_Area
                            margin = { 10 0 }
                            margin_bottom = 5
                        }
                    }

                    vbox = {
                        layoutpolicy_horizontal = expanding

                        hbox = {
                            layoutpolicy_horizontal = expanding
                            spacing = 10
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                text = "NO_CD_TEXT"
                                visible = "[EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('wc_spell_supreme_raise_dead_cooldown_value'), '(CFixedPoint)0')]"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(GetPlayer.MakeScope.ScriptValue('wc_spell_supreme_raise_dead_cooldown_value'))]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                text = "SUPREME_RAISE_DEAD_CD_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('wc_spell_supreme_raise_dead_cooldown_value')]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                visible = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('wc_spell_supreme_raise_dead_cast_time_value'), '(CFixedPoint)0'))]"
                                text = "SUPREME_RAISE_DEAD_CT_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('wc_spell_supreme_raise_dead_cast_time_value'))]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                visible = "[EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue('wc_spell_supreme_raise_dead_cast_time_value'), '(CFixedPoint)0')]"
                                text = "NO_CT_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('wc_spell_supreme_raise_dead_cast_time_value'))]"
                            }
                            text_single = {
                                layoutpolicy_horizontal = expanding
                                text = "SUPREME_RAISE_DEAD_COST_TEXT"
                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('wc_spell_supreme_raise_dead_cost_mana_value')]"
                            }
                        }
                    }
                }
            }
        }

    }
}