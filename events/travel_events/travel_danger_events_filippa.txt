
namespace = travel_danger_events

# travel_danger_events.4000 - Sea - Someone falls overboard
# travel_danger_events.4010 - Illness - an entourage member falls ill

#Sea: Someone falls overboard
travel_danger_events.4000 = { 
	type = character_event
	title = travel_danger_events.4000.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_character_flag = had_travel_danger_event_4000_twice_recently }
				desc = travel_danger_events.4000.desc.seriously
			}
			triggered_desc = {
				trigger = { has_character_flag = had_travel_danger_event_4000_recently }
				desc = travel_danger_events.4000.desc.again
			}
			desc = travel_danger_events.4000.desc
		}
	}
	theme = travel_danger
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:overboard_character
		animation = fear
	}
	lower_left_portrait = {
		trigger = { exists = scope:travel_leader }
		character = scope:travel_leader
	}
	trigger = {
		is_available_travelling_adult = yes
		location = {
			OR = {
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = sea
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = coastal_sea
				}
			}
		}
		current_travel_plan ?= {
			any_entourage_character = {
				age >= 5 #We are NOT throwing infants overboard :colbert:
				count >= 2
				NOT = { 
					this = root
					has_character_flag = travel_danger_fell_overboard
				}
			}
		}
	}
	cooldown = { months = 1 }
	immediate = {
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					age >= 5
					NOT = { 
						this = root
						has_character_flag = travel_danger_fell_overboard
					}
				}
				weight = {
					base = 1
					modifier = {
						has_any_bad_relationship_with_root_trigger = yes
						add = 5
					}
					modifier = {
						NOT = { 
							is_of_major_or_minor_interest_trigger = { CHARACTER = root }
						}
						add = 5
					}
					modifier = {
						is_adult = yes
						add = 5
					}
				}
				add_character_flag = {
					flag = travel_danger_fell_overboard
					months = 18
				}
				save_scope_as = overboard_character
			}
			#Save travel leader
			if = {
				limit = {
					NOT = { travel_leader ?= scope:overboard_character }
				}
				travel_leader ?= { save_scope_as = travel_leader }
			}
			#Save destination scope 
			next_destination_province = { save_scope_as = destination }
		}
	}
	#Save them!
	option = { 
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = { has_character_flag = had_travel_danger_event_4000_twice_recently }
						desc = travel_danger_events.4000.a_seriously
					}
					triggered_desc = {
						trigger = {
							NOT = { has_character_flag = had_travel_danger_event_4000_twice_recently }
							has_character_flag = had_travel_danger_event_4000_recently
						}
						desc = travel_danger_events.4000.a_again
					}
					desc = travel_danger_events.4000.a
				}
			}
		}
		duel = {
			skills = { learning prowess }
			value = medium_skill_rating
			#Fish them out of the water
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				desc = travel_danger_events.4000.a.saved.desc
				send_interface_toast = {
					left_icon = root
					right_icon = scope:overboard_character
					title = travel_danger_events.4000.a.saved.t
					scope:overboard_character = {
						improve_relationship_effect = { 
							TARGET = root
							REASON = friend_saved_my_life
						}
					}
				}
				stress_impact = {
					base = minor_stress_impact_loss
				}
			}
			#...but they became injured
			30 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				desc = travel_danger_events.4000.a.wounded.desc
				send_interface_toast = {
					left_icon = root
					right_icon = scope:overboard_character
					title = travel_danger_events.4000.a.wounded.t
					scope:overboard_character = {
						increase_wounds_effect = { REASON = sea_storm }
						add_opinion = {
							target = root 
							modifier = saved_my_life_opinion
							opinion = 30
						}
					}
				}
			}
			#They died
			5 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = 5
				}
				desc = travel_danger_events.4000.a.failure.desc
				send_interface_toast = {
					left_icon = root
					right_icon = scope:overboard_character
					title = travel_danger_events.4000.a.failure.t
					scope:overboard_character = {
						override_death_effect = { death_reason = death_drowned }
					}
				}
			}
		}
		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 6
		}
		stress_impact = {
			craven = minor_stress_impact_gain
			brave = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_relation_rival = root
					has_relation_nemesis = root
				}
				factor = 0
			}
		}
	}
	#I _really_ don't want to lose this character
	option = { 
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {	
							exists = scope:travel_leader
							NOT = { scope:overboard_character = scope:travel_leader }
						}
						desc = travel_danger_events.4000.b_travel_leader
					}
					desc = travel_danger_events.4000.b
				}
			}
		}
		trigger = {
			is_ai = no
			scope:overboard_character = {
				OR = {
					has_any_best_good_relationship_with_character_trigger = { CHARACTER = root }
					is_of_major_or_minor_interest_trigger = { CHARACTER = root }
				}
				trigger_if = {
					limit = { exists = scope:travel_leader }
					NOT = { this = scope:travel_leader }
				}
			}
			OR = {
				exists = scope:travel_leader
				AND = {
					is_incapable_trigger = no  # Warcraft
					has_any_debilitating_illness = no
					health > poor_health
				}
			}
		}
		show_unlock_reason = no
		flavor = travel_danger_events.4000.b.flavor
		if = {
			#If we take the hit
			limit = {
				NOT = {	exists = scope:travel_leader }
			}
			increase_wounds_effect = { REASON = sea_storm }
			traveler_danger_xp_effect = {
				MIN = 6
				MAX = 10
			}
			scope:overboard_character = {
				improve_relationship_effect = { 
					TARGET = root
					REASON = friend_saved_my_life
				}
			}
			if = {
				limit = { is_alive = yes }
				stress_impact = {
					brave = minor_stress_impact_loss
					craven = minor_stress_impact_gain
				}
			}
		}
		else = {
			#If our travel leader takes the hit
			scope:travel_leader = {
				increase_wounds_effect = { REASON = sea_storm }
			}
			traveler_danger_xp_effect = {
				MIN = 3
				MAX = 6
			}
			scope:overboard_character = {
				add_opinion = {
					target = root 
					modifier = saved_my_life_opinion
					opinion = 20
				}
			}
			stress_impact = {
				compassionate = minor_stress_impact_gain
			}
		}
	}
	#Let's move on
	option = { 
		name = travel_danger_events.4000.c
		current_travel_plan = {
			add_destination_progress = { days = 5 }
			every_entourage_character = {
				custom = every_entourage_tt
				add_opinion = {
					target = root
					modifier = left_companion_behind_opinion
					opinion = -5
				}
			}
		}
		flavor = travel_danger_events.4000.c.flavor
		scope:overboard_character = {
			override_death_effect = { death_reason = death_drowned }
		}
		#Not so stressful
		if = {
			limit = {
				scope:overboard_character = {
					OR = {
						has_relation_rival = root
						has_relation_nemesis = root
					}
				}
			}
			stress_impact = {
				base = medium_stress_impact_loss
				#Balancing
				compassionate = minor_stress_impact_gain
			}
		}
		#Very stressful
		else_if = {
			limit = {
				scope:overboard_character = {
					OR = {
						has_any_good_relationship_with_root_trigger = yes
						has_any_best_good_relationship_with_character_trigger = { CHARACTER = root }
					}
				}
				#You had the opportunity to save them, but said no
				is_ai = no
				scope:overboard_character = {
					OR = {
						has_any_best_good_relationship_with_character_trigger = { CHARACTER = root }
						is_of_major_or_minor_interest_trigger = { CHARACTER = root }
					}
				}
				OR = {
					exists = scope:travel_leader
					AND = {
						is_incapable_trigger = no  # Warcraft
						has_any_debilitating_illness = no
						health > poor_health
					}
				}
			}
			stress_impact = {
				base = medium_stress_impact_gain
				#Balancing
				callous = minor_stress_impact_loss
				sadistic = minor_stress_impact_loss
			}
		}
		#Eh
		else = {
			stress_impact = {
				compassionate = major_stress_impact_gain
				brave = medium_stress_impact_gain
				sadistic = medium_stress_impact_loss
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_any_best_good_relationship_with_character_trigger = { CHARACTER = root }
					is_of_major_or_minor_interest_trigger = { CHARACTER = root }
				}
				factor = 0
			}
		}
	}
	after = {
		#Second time getting the event in a short while
		if = {
			limit = { 
				has_character_flag = had_travel_danger_event_4000_recently
				NOT = { has_character_flag = had_travel_danger_event_4000_twice_recently }
			}
			add_character_flag = {
				flag = had_travel_danger_event_4000_twice_recently
				months = 6 #Smaller time window to get the third flavor desc
			}
		}
		#First time getting the event
		else_if = {
			limit = {
				NOT = { has_character_flag = had_travel_danger_event_4000_recently }
			}
			add_character_flag = {
				flag = had_travel_danger_event_4000_recently
				years = 1
			}
		}	
	}
}

#Illness - an entourage member falls ill
travel_danger_events.4010 = { 
	type = character_event
	title = travel_danger_events.4010.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_character_flag = had_travel_danger_event_4010_recently
					location = { is_sea_province = yes }
				}
				desc = travel_danger_events.4010.desc_sea_again
			}
			triggered_desc = {
				trigger = {
					location = { is_sea_province = yes }
				}
				desc = travel_danger_events.4010.desc_sea
			}
			triggered_desc = {
				trigger = { has_character_flag = had_travel_danger_event_4010_recently }
				desc = travel_danger_events.4010.desc_again
			}
			desc = travel_danger_events.4010.desc
		}
	}
	theme = travel_danger
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				OR = {
					has_relation_rival = scope:ill_character
					has_relation_nemesis = scope:ill_character
					has_trait = callous
					has_trait = sadistic
				}
			}
			animation = personality_callous
		}
		animation = worry
	}
	right_portrait = {
		character = scope:ill_character
		animation = sick
	}
	lower_left_portrait = {
		trigger = { exists = scope:medicine_person }
		character = scope:medicine_person
	}
	trigger = {
		#No location travel_danger_type check since this is applicable everywhere
		current_travel_plan ?= {
			any_entourage_character = {
				age >= 5 #We are NOT giving infants a rasping cough :colbert:
				count >= 2
				NOT = { 
					this = root
					has_character_flag = travel_danger_recently_ill
					has_any_illness = yes
				}
			}
		}
	}
	cooldown = { months = 3 }
	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					age >= 5
					NOT = { 
						this = root
						has_character_flag = travel_danger_recently_ill
						has_any_illness = yes
					}
				}
				weight = {
					base = 1
					modifier = {
						is_adult = yes
						add = 5
					}
				}
				add_character_flag = {
					flag = travel_danger_recently_ill
					months = 12
				}
				contract_disease_effect = { DISEASE = ill TREATMENT_EVENT = no }
				save_scope_as = ill_character
			}
			#Find our court physician, if we have one
			if = {
				limit = {
					any_entourage_character = {
						has_court_position = court_physician_court_position
						NOR = {
							this = root
							this = scope:ill_character
						}
					}
				}
				random_entourage_character = {
					limit = { 
						has_court_position = court_physician_court_position
						NOR = {
							this = root
							this = scope:ill_character
						}
					}
					save_scope_as = court_physician
					#For loc
					save_scope_as = medicine_person
				}
			}
			#Otherwise find a medical character
			else_if = {
				limit = {
					any_entourage_character = {
						learning > high_skill_rating
						NOR = {
							this = root
							this = scope:ill_character
						}
					}
				}
				random_entourage_character = {
					limit = {
						has_trait = lifestyle_physician
						NOR = {
							this = root
							this = scope:ill_character
						}
					}
					alternative_limit = {
						learning > high_skill_rating
						NOR = {
							this = root
							this = scope:ill_character
						}
					}
					save_scope_as = medical_character
					#For loc
					save_scope_as = medicine_person
				}
			}
			#Save destination scope 
			next_destination_province = { save_scope_as = destination }
		}
	}
	#Delay and let them recover
	option = { 
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							location = { is_sea_province = yes }
						}
						desc = travel_danger_events.4010.a_sea
					}
					desc = travel_danger_events.4010.a
				}
			}
		}
		current_travel_plan = { 
			delay_travel_plan = { days = 21 }
			every_entourage_character = {
				custom = every_patient_entourage_tt
				limit = {
					NOR = { 
						this = scope:ill_character
						this = root
					}
				}
				add_opinion = {
					target = root
					modifier = let_ill_recover_opinion
					opinion = 5
				}
			}
		}
		scope:ill_character = { 
			remove_trait = ill
			if = {
				limit = {
					OR = {
						has_relation_rival = root
						has_relation_nemesis = root
					}
				}
				add_opinion = {
					target = root
					modifier = cared_for_my_health_opinion
					opinion = 10
				}
			}
			else = {
				add_opinion = {
					target = root
					modifier = cared_for_my_health_opinion
					opinion = 20
				}
			}
		}
		if = {
			limit = {
				has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:ill_character }
			}
			stress_impact = {
				vengeful = medium_stress_impact_gain #Hate that guy
				impatient = medium_stress_impact_gain
				paranoid = major_stress_impact_gain
			}
		}
		else = {
			stress_impact = {
				impatient = medium_stress_impact_gain
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_relation_rival = root
					has_relation_nemesis = root
				}
				factor = 0
			}
			modifier = {
				exists = scope:court_physician
				factor = 0
			}
		}
	}
	#Try to cure them yourself
	option = { 
		name = travel_danger_events.4010.b
		trigger = { 
			OR = {
				has_trait = whole_of_body
				has_trait = lifestyle_herbalist
				is_witch_trigger = yes
				has_trait = lifestyle_physician
				learning > high_skill_rating
			}
		}
		flavor = travel_danger_events.4010.b.flavor
		duel = {
			skill = learning
			value = high_skill_rating
			#Cured! Yay!
			75 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				desc = travel_danger_events.4010.b.cured.desc
				send_interface_toast = {
					left_icon = root
					right_icon = scope:ill_character
					title = travel_danger_events.4010.b.cured.t
					scope:ill_character = { remove_trait = ill }
				}
				#Putting outside of toast to avoid cutting it off
				if = {
					limit = { 
						has_trait = lifestyle_physician
						has_trait_xp = {
							trait = lifestyle_physician
							value < 100 #TODO_CD_EP2 Standardize; MAX
						}
					}
					add_trait_xp = {
						trait = lifestyle_physician
						value = 10 #TODO_CD_EP2 Standardize; MAJOR
					}
				}
				scope:ill_character = {
					improve_relationship_effect = { 
						TARGET = root
						REASON = friend_cared_for_health
					}
				}
				if = {
					limit = {
						has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:ill_character }
					}
					stress_impact = {
						base = minor_stress_impact_loss #I was schmart
						vengeful = medium_stress_impact_gain #Hate that guy
						paranoid = major_stress_impact_gain
						compassionate = minor_stress_impact_loss
						arrogant = minor_stress_impact_loss
					}
				}
				else = {
					stress_impact = {
						base = minor_stress_impact_loss #I was schmart
						compassionate = minor_stress_impact_loss
						arrogant = minor_stress_impact_loss
					}
				}
			}
			#Condition worsens
			25 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = 5
				}
				desc = travel_danger_events.4010.b.worsened.desc
				custom_tooltip = travel_danger_events.4010.b.tt
				send_interface_toast = {
					left_icon = root
					right_icon = scope:ill_character
					title = travel_danger_events.4010.b.worsened.t
					scope:ill_character = {
						show_as_tooltip = { add_trait_force_tooltip = pneumonic }
						hidden_effect = {
							#Adds the trait, sends event "health.2201" to those who care if health is brought too low
							contract_disease_effect = {
								DISEASE = pneumonic
								TREATMENT_EVENT = no
							}
						}
					}
				}
				#Putting outside of toast to avoid cutting it off
				scope:ill_character = {
					if = {
						limit = {
							OR = {
								has_relation_rival = root
								has_relation_nemesis = root
							}
						}
						add_opinion = {
							target = root
							modifier = botched_my_treatment_opinion
							opinion = -30
						}
					}
					else = {
						add_opinion = {
							target = root
							modifier = botched_my_treatment_opinion
							opinion = -15
						}
					}
				}
				if = {
					limit = {
						has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:ill_character }
					}
					stress_impact = {
						base = minor_stress_impact_gain
						vengeful = minor_stress_impact_loss #Serves them right
						compassionate = minor_stress_impact_gain
						arrogant = minor_stress_impact_gain
					}
				}
				else = {
					stress_impact = {
						base = minor_stress_impact_gain
						compassionate = minor_stress_impact_gain
						arrogant = minor_stress_impact_gain
					}
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				exists = scope:court_physician
				factor = 0
			}
		}
	}
	#Court physician; heel!
	option = { 
		name = travel_danger_events.4010.c
		trigger = {	exists = scope:medicine_person }
		#Guaranteed if we have a court physician
		if = {
			limit = { exists = scope:court_physician }
			scope:ill_character = { 
				remove_trait = ill
				if = {
					limit = {
						OR = {
							has_relation_rival = root
							has_relation_nemesis = root
						}
					}
					add_opinion = {
						target = root
						modifier = cared_for_my_health_opinion
						opinion = 10
					}
				}
				else = {
					add_opinion = {
						target = root
						modifier = cared_for_my_health_opinion
						opinion = 20
					}
				}
			}
			scope:court_physician = {
				hidden_effect = {
					if = {
						limit = { 
							has_trait = lifestyle_physician
							has_trait_xp = {
								trait = lifestyle_physician
								value < 100 #TODO_CD_EP2 Standardize; MAX
							}
						}
						add_trait_xp = {
							trait = lifestyle_physician
							value = 10 #TODO_CD_EP2 Standardize; MAJOR
						}
					}
				}
			}
		}
		#If we *only* have a medical person
		else = {
			scope:medical_character = {
				duel = {
					skill = learning
					value = high_skill_rating
					#Cured! Yay!
					50 = {
						compare_modifier = {
							value = scope:duel_value
							multiplier = 3.5
						}
						desc = travel_danger_events.4010.b.cured.desc
						root = {
							send_interface_toast = {
								left_icon = scope:medical_character
								right_icon = scope:ill_character
								title = travel_danger_events.4010.b.cured.t
								scope:ill_character = { remove_trait = ill }
							}
						}
						#Putting outside of toast to avoid cutting it off
						scope:medical_character = {
							if = {
								limit = { 
									has_trait = lifestyle_physician
									has_trait_xp = {
										trait = lifestyle_physician
										value < 100 #TODO_CD_EP2 Standardize; MAX
									}
								}
								add_trait_xp = {
									trait = lifestyle_physician
									value = 10 #TODO_CD_EP2 Standardize; MAJOR
								}
							}
						}
					}
					#Condition worsens
					50 = {
						compare_modifier = {
							value = scope:duel_value
							multiplier = -3.5
							min = 5
						}
						desc = travel_danger_events.4010.b.worsened.desc
						root = {
							send_interface_toast = {
								left_icon = root
								right_icon = scope:ill_character
								title = travel_danger_events.4010.b.worsened.t
								custom_tooltip = travel_danger_events.4010.b.tt
								scope:ill_character = {
									show_as_tooltip = { add_trait_force_tooltip = pneumonic }
									hidden_effect = {
										#Adds the trait, sends event "health.2201" to those who care if health is brought too low
										contract_disease_effect = {
											DISEASE = pneumonic
											TREATMENT_EVENT = no
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if = {
			limit = {
				OR = {
					has_trait = whole_of_body
					has_trait = lifestyle_herbalist
					is_witch_trigger = yes
					has_trait = lifestyle_physician
					learning > high_skill_rating
				}
			}
			stress_impact = {
				arrogant = medium_stress_impact_gain #Pft, could've done it m'self
			}
		}
		ai_chance = {
			base = 200
		}
	}
	#Rival: Attempt poisoning?
	option = { 
		name = travel_danger_events.4010.d
		trigger = {
			is_ai = no
			scope:ill_character = {
				OR = {
					has_relation_potential_rival = root
					has_relation_rival = root
					has_relation_nemesis = root
				}
			}
		}
		flavor = travel_danger_events.4010.d.flavor
		duel = {
			skills = { learning intrigue }
			target = scope:ill_character
			#Poison successful
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				desc = travel_danger_events.4010.d.poisoned.desc
				send_interface_toast = {
					left_icon = root
					right_icon = scope:ill_character
					title = travel_danger_events.4010.d.poisoned.t
					scope:ill_character = { 
						override_death_killer_effect = { 
							killer = root
							death_reason = death_poison 
						}
					}
				}
				stress_impact = {
					base = medium_stress_impact_loss #Hate that guy
					paranoid = major_stress_impact_loss #Can't come after me no more
					craven = medium_stress_impact_gain
					compassionate = massive_stress_impact_gain
					just = medium_stress_impact_gain
					honest = medium_stress_impact_gain
				}
			}
			#Found out
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = 5
				}
				desc = travel_danger_events.4010.d.failure.desc
				send_interface_toast = {
					left_icon = root
					right_icon = scope:ill_character
					title = travel_danger_events.4010.d.failure.t
					add_secret = {
						type = secret_murder_attempt
						target = scope:ill_character
					}
				}
				#Putting outside of toast to avoid cutting it off
				random_secret = { #They know that you tried killing them
					limit = {
						secret_type = secret_murder_attempt
						secret_target = scope:ill_character
					}
					reveal_to = scope:ill_character
				}
				scope:ill_character = {
					#Potential Rival -> Nemesis
					if = {
						limit = {
							has_relation_potential_rival = root
							can_set_relation_rival_trigger = { CHARACTER = root }
						}
						set_relation_rival = {
							target = root
							reason = rival_poison_vengeance
						}
						add_opinion = {
							target = root
							modifier = tried_to_poison_me_opinion
							opinion = -30
						}
					}
					#Rival -> Nemesis
					else_if = {
						limit = {
							has_relation_rival = root
							can_set_relation_nemesis_trigger = { CHARACTER = root }
						}
						set_relation_nemesis = {
							target = root
							reason = rival_poison_vengeance
						}
						add_opinion = {
							target = root
							modifier = tried_to_poison_me_opinion
							opinion = -30
						}
					}
					#Already nemesis
					else = {
						add_opinion = {
							target = root
							modifier = tried_to_poison_me_opinion
							opinion = -30
						}
					}
				}
				stress_impact = {
					paranoid = major_stress_impact_gain #Oh sh*t
					craven = medium_stress_impact_gain
					compassionate = major_stress_impact_gain
					just = medium_stress_impact_gain
					honest = medium_stress_impact_gain
				}
			}
		}
	}
	#Let's move on
	option = { 
		name = travel_danger_events.4010.e
		flavor = travel_danger_events.4010.e.flavor
		random_list = {
			#Condition worsens
			75 = {
				custom_tooltip = travel_danger_events.4010.b.tt
				send_interface_toast = {
					left_icon = scope:ill_character
					title = travel_danger_events.4010.e.pneumonic.t
					scope:ill_character = {
						show_as_tooltip = { add_trait_force_tooltip = pneumonic }
						hidden_effect = {
							#Adds the trait, sends event "health.2201" to those who care if health is brought too low
							contract_disease_effect = {
								DISEASE = pneumonic
								TREATMENT_EVENT = no
							}
						}
					}
				}
				#Putting outside of toast to avoid cutting it off
				reverse_add_opinion = {
					target = scope:ill_character
					modifier = ignored_my_illness_opinion
					opinion = -15
				}
			}
			#Condition... does _not_ worsen
			25 = {
				send_interface_toast = {
					left_icon = scope:ill_character
					title = travel_danger_events.4010.e.no_change.t
					scope:ill_character = {
						add_opinion = {
							target = root
							modifier = ignored_my_illness_opinion
							opinion = -15
						}
					}
				}
			}
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			impatient = minor_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_any_best_good_relationship_with_character_trigger = { CHARACTER = root }
					is_of_major_or_minor_interest_trigger = { CHARACTER = root }
				}
				factor = 0
			}
		}
	}
	after = {
		mp_resume_travel_plan = yes
		#Second time getting the event in a short while
		if = {
			limit = { 
				NOT = { has_character_flag = had_travel_danger_event_4010_recently }
			}
			add_character_flag = {
				flag = had_travel_danger_event_4010_recently
				years = 1
			}
		}
	}
}
