
# Everyone Loves the Party Baron
# by Petter Vilberg

story_party_baron = {

	on_setup = {
		set_global_variable = {
			name = had_party_baron_story
			value = yes
		}
		set_variable = {
			name = event_counter
			value = 0
		}
		set_variable = {
			name = attitude_change_buildup
			value = 0
		}
		set_variable = {
			name = party_baron_kind_acts
			value = 0
		}
		set_variable = {
			name = negative_actions_counter
			value = 0
		}
		story_owner = { # End the story on its own after a while
			trigger_event = {
				id = party_baron.9999
				years = 13
			}
		}
	}

	on_end = {
		if = {
			limit = { var:party_baron = { is_alive = yes } }
			var:party_baron = {
				remove_character_flag = is_party_baron
				remove_character_flag = immune_to_disease
				hidden_effect = {
					if = {
						limit = { has_character_modifier = party_baron_beloved_by_all_modifier }
						remove_character_modifier = party_baron_beloved_by_all_modifier
						add_character_modifier = {
							modifier = party_baron_beloved_by_all_modifier
							years = 20
						}
					}
					if = {
						limit = { has_character_modifier = party_baron_beloved_by_all_except_modifier }
						remove_character_modifier = party_baron_beloved_by_all_except_modifier
						add_character_modifier = {
							modifier = party_baron_beloved_by_all_except_modifier
							years = 20
						}
					}
				}
			}
		}
		debug_log = "Party Baron story ended on:"
		debug_log_date = yes
	}

	on_owner_death = {
		story_owner = {
			if = {
				limit = {
					has_relation_friend = scope:story.var:party_baron
					exists = player_heir
				}
				save_scope_as = previous_character
				scope:story.var:party_baron = {
					save_scope_as = party_baron
				}
				player_heir = {
					trigger_event = {
						id = party_baron.4001
						days = 30
					}
				}
			}
		}
		end_story = yes
	}

	# Maintenance group
	effect_group = {
		days = 30
		trigger = {
			always = yes
		}

		triggered_effect = {
			trigger = {
				NOT = {
					exists = var:party_baron
				}
			}
			effect = {
				# Party Baron variable is missing! Ending story prematurely.
				end_story = yes
			}
		}

		triggered_effect = {
			trigger = {
				var:event_counter >= 2 # Only fire if the player has seen the Party Baron several times
				var:party_baron = {
					is_alive = no
					NOT = {
						killer = scope:story.story_owner
					}
				}
			}
			effect = {
				set_variable = {
					name = had_party_baron_maintenance
					value = yes
					days = 100
				}
				var:party_baron = {
					save_scope_as = party_baron
				}
				story_owner = {
					trigger_event = party_baron.9001
				}
			}
		}

		# Restock Party Baron friends
		triggered_effect = {
			trigger = {
				var:party_baron = {
					is_alive = yes
					num_of_relation_friend < 1
					num_of_relation_best_friend < 1
				}
			}

			effect = {
				var:party_baron = {
					save_scope_as = party_baron
				}
				story_owner = {
					trigger_event = party_baron.9002
				}
			}
		}

		# Married the Party Baron
		triggered_effect = {
			trigger = {
				var:party_baron = {
					is_alive = yes
					is_married = yes
					any_spouse = {
						this = scope:story.story_owner
					}
				}
			}

			effect = {
				set_variable = {
					name = had_party_baron_maintenance
					value = yes
					days = 100
				}
				var:party_baron = {
					save_scope_as = party_baron
				}
				if = {
					limit = { var:event_counter > 1 }
					story_owner = {
						trigger_event = party_baron.9003
					}
				}
				else = { # It's not really interesting if you immediately marry the Party Baron
					end_story = yes
				}
			}
		}
	}
	
	#Party Baron events
	effect_group = {
		days = { 200 400 }
		trigger = {
			story_owner = {
				is_available = yes
			}
			var:party_baron = {
				is_alive = yes
				is_available = yes
			}
			NOT = { exists = var:had_party_baron_maintenance }
			NOT = { exists = var:enough_is_enough }
		}

		triggered_effect = {
			trigger = {
				always = yes
			}
			effect = {
				var:party_baron = {
					save_scope_as = party_baron
				}
				story_owner = {
					trigger_event = {
						on_action = party_baron_events
					}
				}
			}
		}
	}
}
