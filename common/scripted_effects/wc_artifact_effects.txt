buff_frostmourne_if_equipped_effect = {
	if = {
		limit = {
			any_equipped_character_artifact = { has_artifact_modifier = frostmourne_modifier }
		}
		random_equipped_character_artifact = {
			limit = { has_artifact_modifier = frostmourne_modifier }
			save_temporary_scope_as = frostmourne
		}
		if = {
			limit = {
				scope:frostmourne = {
					exists = var:frostmourne_level
					var:frostmourne_level < 10
				}
			}
			send_interface_message = {
				type = event_generic_good
				title = buff_frostmourne_message_title
				scope:frostmourne = {
					change_variable = { name = frostmourne_level add = 1 }
					add_artifact_modifier = frostmourne_level_modifier
				}
			}
		}
	}
}

frostmourne_twist_soul_effect = {
	# Remove traits after twisting
	remove_trait_and_mark_twisted_effect = { TRAIT = generous }
	remove_trait_and_mark_twisted_effect = { TRAIT = calm }
	remove_trait_and_mark_twisted_effect = { TRAIT = humble }
	remove_trait_and_mark_twisted_effect = { TRAIT = honest }
	remove_trait_and_mark_twisted_effect = { TRAIT = just }
	remove_trait_and_mark_twisted_effect = { TRAIT = zealous }
	remove_trait_and_mark_twisted_effect = { TRAIT = compassionate }
	remove_trait_and_mark_twisted_effect = { TRAIT = forgiving }
	
	# Pick new traits after twisting, can't pick opposites of removed traits
	if = {
		limit = { number_of_personality_traits < 3 }
		pick_random_soul_twister_trait_effect = yes
	}
	if = {
		limit = { number_of_personality_traits < 3 }
		pick_random_soul_twister_trait_effect = yes
	}
	if = {
		limit = { number_of_personality_traits < 3 }
		pick_random_soul_twister_trait_effect = yes
	}
}
remove_trait_and_mark_twisted_effect = {
	if = {
		limit = { has_trait = $TRAIT$ }
		remove_trait = $TRAIT$
		add_to_variable_list = { name = twisted_traits target = flag:$TRAIT$ }
	}
}
pick_random_soul_twister_trait_effect = {
	random_list = {
		2 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:generous 		} } } add_trait = greedy 	}
		# 5 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:calm 		} } } add_trait = wrathful 	}	# death_god considers it a sin
		2 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:humble 		} } } add_trait = arrogant 	}
		5 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:honest 		} } } add_trait = deceitful }
		5 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:just 			} } } add_trait = arbitrary }
		5 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:zealous 		} } } add_trait = cynical 	}
		10 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:compassionate } } } add_trait = callous 	}
		10 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:compassionate } } } add_trait = sadistic 	}
		10 = { trigger = { NOT = { is_target_in_variable_list = { name = twisted_traits target = flag:forgiving 	} } } add_trait = vengeful 	}
	}
}


create_artifact_book_of_medivh_effect = {
	
	$OWNER$ = { save_scope_as = owner }
	## stops errors
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = book_of_medivh_name
		description = book_of_medivh_description
		type = miscellaneous
		visuals = book
		wealth = scope:wealth
		quality = scope:quality
		template = book_of_medivh_template
		history = {
			type = created
			date = 583.1.1
			recipient = character:5000 #medivh
			location = province:46 #karazhan
		}
		modifier = book_of_medivh_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = book_of_medivh
		set_variable = wow_unique
		save_scope_as = epic
	}
}