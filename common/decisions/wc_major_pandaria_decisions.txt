create_pandaria_decision = { # Create the Empire of Pandaria
	# Name and Flavor changes depending on race (Pandaren Empire, Mogu Empire, etc)
	# By Juke (juketm on discord)
	title = {
		first_valid = {
			# Mogu Empire
			triggered_desc = {
				trigger = { culture = { has_cultural_pillar = heritage_mogu } }
				desc = create_pandaria_decision.t.mogu
			}
			# Pandaren Empire
			triggered_desc = {
				trigger = { culture = { has_cultural_pillar = heritage_pandaren } }
				desc = create_pandaria_decision.t.pandaren
			}
			# Neutral
			desc = create_pandaria_decision.t.neutral
		}
	}
	desc = {
		first_valid = {
			# Mogu Empire
			triggered_desc = {
				trigger = { culture = { has_cultural_pillar = heritage_mogu } }
				desc = create_pandaria_decision.desc.mogu
			}
			# Pandaren Empire
			triggered_desc = {
				trigger = { culture = { has_cultural_pillar = heritage_pandaren } }
				desc = create_pandaria_decision.desc.pandaren
			}
			# Neutral
			desc = create_pandaria_decision.desc.neutral
		}
	}
	
	ai_check_interval = 120
	major = yes
	picture = "gfx/interface/illustrations/decisions/fp3/fp3_decision_sunder.dds"
	selection_tooltip = create_pandaria_decision_tt

	is_shown = {
		capital_county = {
			title_province = { geographical_region = world_pandaria }
		}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:create_pandaria_decision
			}
		}
		is_independent_ruler = yes
	}

	cost = {					
		gold = 300
		prestige = 500
	}
	
	is_valid = {
		prestige_level >= 4
		has_title = title:e_kun_lai
		has_title = title:e_yulin
		has_title = title:e_banshan
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_capable_adult = yes
		is_at_war = no
	}

	effect = {
		# Can only happen once
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:create_pandaria_decision
			}
		}
		save_scope_as = founder
		
		if = {
			limit = { NOT = { has_title = title:e_pandaria_empire } }
			get_title = title:e_pandaria_empire
		}
		title:e_pandaria_empire = {
			if = {
				limit = { NOT = { has_cultural_pillar = heritage_mogu } }
				set_color_from_title = title:k_mogushan
			}
		}
		set_primary_title_to = title:e_pandaria_empire
		
		custom_tooltip = create_pandaria_decision_dejure_tt
		custom_tooltip = create_pandaria_decision_shekmag_tt
		hidden_effect = {
			every_kingdom = {
				if = {
					limit = {
						OR = {
							empire = title:e_kun_lai
							empire = title:e_yulin
							empire = title:e_banshan
						}
					}
					set_de_jure_liege_title = title:e_pandaria_empire
				}
			}
			if = {
				limit = {
					has_title = title:e_shekmag
				}
				every_kingdom = {
					if = {
						limit = {
							empire = title:e_shekmag
						}
						set_de_jure_liege_title = title:e_pandaria_empire
					}
				}
			}
			if = {
				limit = { has_title = title:e_kun_lai }
				destroy_title = title:e_kun_lai
			}
			if = {
				limit = { has_title = title:e_yulin }
				destroy_title = title:e_yulin
			}
			if = {
				limit = { has_title = title:e_banshan }
				destroy_title = title:e_banshan
			}
			if = {
				limit = { has_title = title:e_shekmag }
				destroy_title = title:e_shekmag
			}
		}
		
		#show_as_tooltip = {
		#	give_nickname = nick_the_restorer
		#}
		if = { # Mogu Empire Notification
			limit = {
				culture = { has_cultural_pillar = heritage_mogu }
			}
			# Notification
			every_ruler = {
				limit = {
					is_within_diplo_range = { CHARACTER = scope:founder }
				}
				trigger_event = pandaria_unification.0001
			}
		}
		else_if = { # Pandaren Empire Notification
			limit = {
				culture = { has_cultural_pillar = heritage_pandaren }
			}
			# Notification
			every_ruler = {
				limit = {
					is_within_diplo_range = { CHARACTER = scope:founder }
				}
				trigger_event = pandaria_unification.0002
			}
		}
		else = { # Neutral Pandaria Notification
			# Notification
			every_ruler = {
				limit = {
					is_within_diplo_range = { CHARACTER = scope:founder }
				}
				trigger_event = pandaria_unification.0003
			}
		}
		
		add_prestige_level = 1
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}

revive_lei_shen_decision = { # Revive the Thunder King
	# Bring back Lei Shen the Thunder King, to lead the Mogu into battle once more
	# By Juke (juketm on discord)
	
	ai_check_interval = 120
	major = yes
	picture = "gfx/interface/illustrations/decisions/fp3/fp3_decision_sunder.dds"
	selection_tooltip = create_pandaria_decision_tt

	is_shown = {
		#OR = {
		#	AND = {	# Zandalari
		#		culture = { has_cultural_pillar = heritage_zulite }
		#		has_title = title:e_zandalari
		#		OR = {
		#			has_religion = religion:loa_group
		#			has_religion = religion:titanic_group
		#		}
		#	}
			culture = { has_cultural_pillar = heritage_mogu }
		#}
		NOT = {
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:revive_lei_shen_decision
			}
		}
		is_independent_ruler = yes
	}

	cost = {					
		prestige = 500
		piety = 1000
	}
	
	is_valid = {
		highest_held_title_tier = tier_empire
		completely_controls = title:k_lei_dao
		completely_controls = title:d_howlingwind
		#completely_controls = title:d_neverest
		completely_controls = title:c_shangoalor
		province:1229 = { has_building_or_higher = throne_of_thunder_03 }
		piety_level >= 4
		learning >= 15
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_capable_adult = yes
		is_at_war = no
	}

	effect = {
		custom_tooltip = revive_lei_shen_decision.tt
		save_scope_as = reviver
		#trigger_event = pandaria_unification.0004
		add_prestige_level = 1
		
		hidden_effect = {
			# Can only happen once
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:revive_lei_shen_decision
			}
			
	#		# Resurrect the Thunder King
	#		create_character = {
	#			template = lei_shen_template
	#			save_scope_as = lei_shen
	#			location = root.location
	#		}
		}
			
	#	# Setup titles
	#	scope:lei_shen = {
	#		thunder_king_effect = yes
	#	}
		
		trigger_event = pandaria_unification.0100
	}

	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 100
	}
}
