namespace = WCPLF

# Faction Created Notification
WCPLF.100 = {
	type = character_event
	content_source = dlc_GOA
	title = WCPLF_100_TITLE
	desc = {
		desc = WCPLF_100_DESC_beg
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:faction_leader = { is_in_this_union_trigger = { faction = horde } }
				}
				desc = WCPLF_100_DESC_horde
			}
			triggered_desc = {
				trigger = {
					scope:faction_leader = { is_in_this_union_trigger = { faction = alliance } }
				}
				desc = WCPLF_100_DESC_alliance
			}
			triggered_desc = {
				trigger = {
					scope:faction_leader = { is_in_this_union_trigger = { faction = illidari_forces } }
				}
				desc = WCPLF_100_DESC_illidari_forces
			}
			triggered_desc = {
				trigger = {
					scope:faction_leader = { is_in_this_union_trigger = { faction = dragon_forces } }
				}
				desc = WCPLF_100_DESC_dragon_forces
			}
			triggered_desc = {
				trigger = {
					scope:faction_leader = { is_in_this_union_trigger = { faction = scourge_forces } }
				}
				desc = WCPLF_100_DESC_scourge_forces
			}
			triggered_desc = {
				trigger = {
					scope:faction_leader = { is_in_this_union_trigger = { faction = custom } }
				}
				desc = WCPLF_100_DESC_custom
			}
			desc = WCPLF_100_DESC_axis_of_awful
		}
	}
	theme = alliance
	override_background = {
		reference = throne_room_scope
	}
	left_portrait = scope:faction_leader
	
	immediate = {
		scope:faction_leader = {
			save_scope_as = background_throne_room_scope
		}
	}

	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							this = scope:faction_leader
						}
						desc = FOR_FACTION
					}
					triggered_desc = {
						trigger = {
							trigger_if = {
								limit = { scope:faction_leader = { is_in_this_union_trigger = { faction = alliance } } }
								has_alliance_religion_trigger = yes
								has_alliance_culture_trigger = yes
							}
							trigger_else_if = {
								limit = { scope:faction_leader = { is_in_this_union_trigger = { faction = horde } } }
								has_horde_religion_trigger = yes
								has_horde_culture_trigger = yes
							}
							trigger_else_if = {
								limit = { scope:faction_leader = { is_in_this_union_trigger = { faction = illidari_forces } } }
								has_illidari_religion_trigger = yes
								has_illidari_culture_trigger = yes
							}
							trigger_else_if = {
								limit = { scope:faction_leader = { is_in_this_union_trigger = { faction = dragon_forces } } }
								has_draconic_religion_trigger = yes
							}
							trigger_else_if = {
								limit = { scope:faction_leader = { is_in_this_union_trigger = { faction = scourge_forces } } }
								has_scourge_religion_trigger = yes
							}
							trigger_else_if = {
								limit = { scope:faction_leader = { is_in_this_union_trigger = { faction = axis_of_awful } } }
								has_axisawful_culture_trigger = yes
								has_axisawful_religion_trigger = yes
							}
							trigger_else = {
								scope:faction_leader = { is_in_this_union_trigger = { faction = custom } }
								has_custom_union_religion_trigger = yes
								has_custom_union_culture_trigger = yes
							}
						}
						desc = WCPLF_100_OPT_pos
					}
					triggered_desc = {
						trigger = {
							trigger_if = {
								limit = { scope:faction_leader = { is_in_this_union_trigger = { faction = horde } } }
								has_alliance_religion_trigger = yes
								has_alliance_culture_trigger = yes
							}
							trigger_else = {
								scope:faction_leader = { is_in_this_union_trigger = { faction = alliance } }
								has_horde_religion_trigger = yes
								has_horde_culture_trigger = yes
							}
						}
						desc = WCPLF_100_OPT_neg
					}
					desc = WCPLF_100_OPT_neu
				}
			}
		}
	}
}

### Joining
# Someone wishs to join your faction
WCPLF.150 = {
	type = letter_event
	opening = {
		desc = call_ally.0001.opening
	}
	desc = WCPLF_150_DESC
	sender = scope:actor

	option = {
		name = ACCEPT_OPT
		
		scope:actor = { trigger_event = WCPLF.155 }
		
		ai_chance = {
			base = 100
		}
	}
	option = {
		name = DECLINE_OPT
		
		scope:actor = { trigger_event = WCPLF.160 }
		
		ai_chance = {
			base = 0
		}
	}
}
# Faction accepts you
WCPLF.155 = {
	type = letter_event
	opening = {
		desc = call_ally.0001.opening
	}
	desc = WCPLF_155_DESC
	sender = scope:recipient

	option = {
		name = GREAT_OPT
		
		join_this_union_scope_effect = { UNION = joining_union give_modifiers = yes }
	}
}
# Faction declines you
WCPLF.160 = {
	type = letter_event
	opening = {
		desc = call_ally.0001.opening
	}
	desc = WCPLF_160_DESC
	sender = scope:recipient

	option = {
		name = ALAS_OPT
	}
}

# Faction Inherited Notification
WCPLF.200 = {
	type = character_event
	content_source = dlc_GOA
	title = WCPLF_100_TITLE
	desc = WCPLF_200_DESC
	theme = alliance
	left_portrait = scope:faction_leader
	
	immediate = {
		save_scope_as = faction_leader
	}

	option = {
		name = FOR_FACTION
	}
}

# Faction Destroyed Notification
WCPLF.250 = {
	type = character_event
	content_source = dlc_GOA
	title = WCPLF_100_TITLE
	desc = WCPLF_250_DESC
	theme = alliance
	override_background = {
		reference = throne_room_scope
	}
	left_portrait = scope:former_leader
	
	immediate = {
		scope:former_leader = {
			save_scope_as = faction_leader
			save_scope_as = background_throne_room_scope
		}
	}

	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							trigger_if = {
								limit = { scope:former_leader = { is_former_member_of_this_union_trigger = { faction = alliance } } }
								is_former_member_of_this_union_trigger = { faction = alliance }
							}
							trigger_else_if = {
								limit = { scope:former_leader = { is_former_member_of_this_union_trigger = { faction = horde } } }
								is_former_member_of_this_union_trigger = { faction = horde }
							}
							trigger_else_if = {
								limit = { scope:former_leader = { is_former_member_of_this_union_trigger = { faction = illidari_forces } } }
								is_former_member_of_this_union_trigger = { faction = illidari_forces }
							}
							trigger_else_if = {
								limit = { scope:former_leader = { is_former_member_of_this_union_trigger = { faction = dragon_forces } } }
								is_former_member_of_this_union_trigger = { faction = dragon_forces }
							}
							trigger_else_if = {
								limit = { scope:former_leader = { is_former_member_of_this_union_trigger = { faction = scourge_forces } } }
								is_former_member_of_this_union_trigger = { faction = scourge_forces }
							}
							trigger_else_if = {
								limit = { scope:former_leader = { is_former_member_of_this_union_trigger = { faction = axis_of_awful } } }
								is_former_member_of_this_union_trigger = { faction = axis_of_awful }
							}
							trigger_else = {
								scope:former_leader = { is_former_member_of_this_union_trigger = { faction = custom } }
								is_former_member_of_this_union_trigger = { faction = custom }
							}
						}
						desc = ALAS_OPT
					}
					desc = WCPLF_250_OPT_a
				}
			}
		}
	}
}

### Inviting
# Invite to Union - Auto-Accepted
WCPLF.300 = {
	type = letter_event
	opening = {
		desc = char_interaction.0070.opening
	}
	desc = WCPLF_300_DESC
	
	sender = scope:actor

	option = {
		name = char_interaction.0234.a
	}
}
# Invite to Union - Accepted
WCPLF.305 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = WCPLF_305_DESC
	
	sender = scope:recipient

	immediate = {
		show_as_tooltip = {
			invite_to_this_union_effect = yes
		}
	}

	option = {
		name = MARVELOUS_NEWS
	}
}
# Invite to Union - Refused
WCPLF.310 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = WCPLF_310_DESC
	
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = TROUBLING
	}
}

# Faction renaming/naming if you create custom faction
WCPLF.330 = {
	type = character_event
	content_source = dlc_GOA
	title = WCPLF_330_TITLE
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:creating_custom
					scope:creating_custom = flag:yes
				}
				desc = WCPLF_330_DESC_new_union
			}
			desc = WCPLF_330_DESC_old_union
		}
		desc = WCPLF_330_DESC
	}
	theme = alliance
	left_portrait = root
	
	immediate = {
		remove_variable = custom_union_name
	}
	
	widget = {
		gui = "event_window_widget_enter_text"
		container = "dynamic_birth_name"
		controller = {
			type = text
			data = {
				key = custom_union_name
				default = {
					trigger = { root = { is_in_this_union_trigger = { faction = horde } } }
					localization_key = union_horde_name
				}
				default = {
					trigger = { root = { is_in_this_union_trigger = { faction = alliance } } }
					localization_key = union_alliance_name
				}
				default = {
					trigger = { root = { is_in_this_union_trigger = { faction = illidari_forces } } }
					localization_key = union_illidari_forces_name
				}
				default = {
					trigger = { root = { is_in_this_union_trigger = { faction = dragon_forces } } }
					localization_key = union_dragon_forces_name
				}
				default = {
					trigger = { root = { is_in_this_union_trigger = { faction = scourge_forces } } }
					localization_key = union_scourge_forces_name
				}
				default = {
					trigger = { root = { is_in_this_union_trigger = { faction = axis_of_awful } } }
					localization_key = union_axis_of_awful_name
				}
				default = {
					trigger = {
						root = {
							OR = {
								AND = {
									exists = scope:creating_custom
									scope:creating_custom = flag:yes
								}
								is_in_this_union_trigger = { faction = custom }
							}
						}
					}
					localization_key = CULTURE_CONFEDERATION
				}
			}
		}
		setup_scope = {
			root = { save_scope_as = text_target }
		}
	}

	option = {
		name = WCPLF_330_OPT_a
		if = {
			limit = {
				exists = scope:creating_custom
				scope:creating_custom = flag:yes
			}
			become_leader_of_union_flag_effect = {
				faction = custom
				give_modifiers = yes
			}
			
			every_player = {
				trigger_event = WCPLF.100
			}
		}
	}
	
	after = {
		if = {
			# We entered custom text into the pop up
			limit = { is_ai = no NOT = { has_variable = custom_union_name } }
			set_variable = {
				name = custom_union_name
				value = flag:custom
			}
		}
		remove_variable = gui_union_rename_open
	}
}