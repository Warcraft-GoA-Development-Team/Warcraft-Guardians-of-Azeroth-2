#Interactions relating to factions

force_join_faction_interaction = {
	category = interaction_category_vassal
	special_interaction = force_join_faction
	desc = force_join_faction_interaction_desc

	force_notification = yes
	greeting = positive
	notification_text = FORCE_JOIN_FACTION_NOTIFICATION

	is_shown = {
		scope:actor = {
			is_a_faction_member = yes
			liege = scope:recipient.liege
			NOT = {
				joined_faction = scope:recipient.joined_faction
			}
			NOT = {
				scope:recipient = scope:actor.liege
			}
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			has_strong_usable_hook = scope:recipient # Make sure to update the NFaction::POTENTIAL_FORCE_JOIN_HOOK_TYPE define if you change the type of hook used here
			NOT = {
				is_at_war_with = scope:recipient
			}
		}
		scope:recipient = {
			trigger_if = {
				limit = {
					is_a_faction_member = yes
				}
				joined_faction.faction_leader = {
					is_ai = yes
				}
			}
			is_forced_into_faction = no	
			can_join_faction = scope:actor.joined_faction	
		}
		custom_description = {
			text = barons_joining_independence_factions
			NAND = {
				scope:actor.joined_faction = { faction_is_type = independence_faction }
				scope:recipient.highest_held_title_tier = tier_barony
			}
		}

		#Warcraft
		scope:actor = { 
			is_in_stun_trigger = no
		}
	}
	

	on_accept = {
		scope:actor = {
			send_interface_message = {
				type = event_generic_neutral
				title = force_join_faction_interaction_notification
				right_icon = scope:recipient
				if = {
					limit = {
						scope:actor = {
							has_strong_usable_hook = scope:recipient
						}
					}
					scope:actor = {
						use_hook = scope:recipient
					}
				}
				scope:recipient = {
					join_faction_forced = {
						faction = scope:actor.joined_faction
						forced_by = scope:actor
						years = 10
					}
				}
			}
		}
	}

	auto_accept = yes
	
	# AI
	
	ai_targets = {
		ai_recipients = peer_vassals
	}
	ai_frequency = 12
	
	ai_potential = {
		is_independent_ruler = no
		is_a_faction_member = yes
	}
	
	ai_will_do = {
		base = 100
		
		# Don't steal players' factions' members
		modifier = {
			factor = 0
			scope:recipient = {
				is_a_faction_member = yes
				joined_faction = {
					faction_leader = {
						is_ai = no
					}
				}
			}
		}
	}
}
