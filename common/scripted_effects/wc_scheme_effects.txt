#Sets up the Outcome Roll values
hostile_scheme_outcome_roll_setup_effect = {
	#Discovery Roll setup
	save_scope_value_as = {
		name = discovery_chance
		value = {
			value = 100
			subtract = scope:scheme.scheme_secrecy
		}
	}
}

hostile_scheme_success_roll_effect = {
	random = {
		chance = scope:scheme.scheme_success_chance
		custom_tooltip = $TOOLTIP$
		save_scope_value_as = {
			name = scheme_successful
			value = yes
		}
	}
}

hostile_scheme_discovery_roll_effect = {
	random = {
		chance = scope:discovery_chance
		custom_tooltip = scheme_remain_secret_roll_tt
		save_scope_value_as = {
			name = scheme_discovered
			value = yes
		}
		if = {
			limit = { exists = scope:target.host }
			scope:target.host = { save_scope_as = exposer }
		}
		else = {
			scope:target = { save_scope_as = exposer }
		}
	}
}

hostile_scheme_rival_check_effect = {
	if = {
		limit = {
			scope:scheme.scheme_owner = {
				has_relation_rival = scope:scheme.scheme_target_character
			}
		}
		save_scope_value_as = {
			name = targeted_rival
			value = yes
		}
	}
}

dont_execute_scheme_effect = {
	scope:scheme = {
		add_scheme_progress = decline_execution_setback
	}

	stress_impact = {
		impatient = medium_stress_impact_gain
		stubborn = medium_stress_impact_gain
	}
	
	custom_tooltip = do_not_execute_scheme_tooltip
}

abandon_scheme_effect = {
	show_as_tooltip = {
		scope:scheme = {
			end_scheme = yes
		}
	}

	stress_impact = {
		stubborn = medium_stress_impact_gain
	}
}

restart_scheme_effect = {
	show_as_tooltip = {
		custom_tooltip = restart_scheme_tt
	
		scope:scheme = {
			add_scheme_progress = -10 # Reset scheme progress
		}
	}
}

hostile_scheme_opinion_common_effect = {
	$VICTIM$ = {
		if = {
			limit = { is_alive = yes }

			if = {
				limit = { scope:scheme_name = flag:plague }
				if = {
					limit = { NOT = { exists = scope:scheme_successful } }
					add_opinion = {
						target = $ATTACKER$
						modifier = attempted_plagued_me
					}
				}
				else = {
					add_opinion = {
						target = $ATTACKER$
						modifier = plagued_me
					}
				}
			}
			#By default it's murder
			else = {
				if = {
					limit = { NOT = { exists = scope:scheme_successful } }
					add_opinion = {
						target = $ATTACKER$
						modifier = attempted_murder_me_crime
					}
					hidden_effect = {
						add_opinion = {
							target = $ATTACKER$
							modifier = murder_personal_grudge_opinion
							years = 2
						}
					}
				}
			}
		}
		
		if = {
			limit = { NOT = { scope:scheme_name = flag:plague } }
			
			every_spouse = {
				limit = { NOT = { this = $ATTACKER$ } }
				add_to_temporary_list = close_family_scheme_opinion_list
			}
			every_close_family_member = {
				limit = { NOT = { this = $ATTACKER$ } }
				add_to_temporary_list = close_family_scheme_opinion_list
			}

			if = {
				limit = {
					any_in_list = {
						list = close_family_scheme_opinion_list
						always = yes
					}
				}
				every_in_list = {
					list = close_family_scheme_opinion_list
					custom = all_close_family_and_spouses

					#Murder
					if = {
						limit = { scope:scheme_name = flag:murder }
						if = {
							limit = { NOT = { exists = scope:scheme_successful } }
							add_opinion = {
								target = $ATTACKER$
								modifier = attempted_murder_close_family_crime
							}
						}
						else = {
							add_opinion = {
								target = $ATTACKER$
								modifier = murdered_close_family_crime
							}
						}
					}
				}
			}
		}
	}
}
hostile_scheme_opinion_effect = {
	#If you pass scheme, check scheme type
	$SCHEME$ = {
		if = {
			limit = { scheme_type = plague }
			save_temporary_scope_value_as = {
				name = scheme_name
				value = flag:plague
			}
		}
		else = {
			save_temporary_scope_value_as = {
				name = scheme_name
				value = flag:murder
			}
		}
	}
	hostile_scheme_opinion_common_effect = { VICTIM = $VICTIM$ ATTACKER = $ATTACKER$ }
}
hostile_scheme_type_opinion_effect = {
	#Otherwise consider you pass scheme type
	save_temporary_scope_value_as = {
		name = scheme_name
		value = flag:$SCHEME_TYPE$
	}
	hostile_scheme_opinion_common_effect = { VICTIM = $VICTIM$ ATTACKER = $ATTACKER$ }
}

hostile_consequences_known_or_exposed_effect = {
	$ATTACKER$ = {
		if = {
			limit = { this = $POV$ }
			add_dread = minor_dread_gain
		}
		else = {
			hidden_effect = {
				add_dread = minor_dread_gain
			}
		}
	}
	
	hostile_scheme_opinion_effect = {
		VICTIM = $VICTIM$
		ATTACKER = $ATTACKER$
		SCHEME = $SCHEME$
	}
}

force_owner_to_reveal_use_stealth_clothes_effect = {
	if = {
		limit = {
			exists = scope:scheme_discovered
			exists = scope:owner_to_reveal
		}
		scope:owner_to_reveal = {
			add_character_flag = {
				flag = use_stealth_clothes
				days = 1
			}
		}
	}
}