
#################################################
# Debug Agents

# Hitman
## Placeholder for demo'ing the system: don't actually _use_ this for anything.
### Though uhhh, IO, if you're reading this and you're interested in a collab, hit us up.
agent_hitman = {
	contribution_type = success_chance_max

	valid_agent_for_slot = {
		intrigue > 5
	}

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		add = {
			value = learning
			multiply = 1.75
			max = 50
			desc = court_position_skill_learning
		}
	}
}

# Debug agents for QA purposes.
## Secrecy
agent_vampire = {
	contribution_type = secrecy

	contribution = { value = 100 }
}
## Speed
agent_werewolf = {
	contribution_type = speed

	contribution = { value = -100 }
}
## Success Chance Max
agent_mage = {
	contribution_type = success_chance_max

	contribution = { value = 100 }
}
## Success Chance Base
agent_wraith = {
	contribution_type = success_chance

	contribution = { value = 100 }
}
## Success Chance Growth
agent_changeling = {
	contribution_type = success_chance_growth

	# Set this one a bit lower, but still extremely high, because if you're using it at all rather than just boosting your base skill, then it means you probably want to watch growth go up. Just. Y'know, faster.
	contribution = { value = 10 }
}

#################################################
# Max Success Chance Agents

# Assassin
agent_assassin = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Prowess
		add = {
			value = prowess
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Vengeful vs. Rival
		if = {
			limit = {
				has_trait = vengeful
				exists = scope:scheme
				exists = scope:scheme.scheme_target_character
				has_relation_rival = scope:scheme.scheme_target_character
			}
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.vengeful.target_is_rival
			}
		}
		### +++ Sadistic
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### +++ Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		### ++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### + Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		## Maluses
		### - Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Forgiving vs. Rival
		if = {
			limit = {
				has_trait = forgiving
				exists = scope:scheme
				exists = scope:scheme.scheme_target_character
				has_relation_rival = scope:scheme.scheme_target_character
			}
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.forgiving.target_is_rival
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Thug
agent_thug = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Prowess
		add = {
			value = prowess
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### +++ Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### ++ Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### ++ Sadistic
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### + Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### + Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		## Maluses
		### - Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### - Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		
		### - Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### -- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### --- Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}


		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Comrade-in-Arms
## Medieval wingman, essentially.
agent_comrade_in_arms = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### +++ Lustful
		if = {
			limit = { has_trait = lustful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lustful
			}
		}
		### ++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		### ++ Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### + Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### + Trusting
		if = {
			limit = { has_trait = trusting }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.trusting
			}
		}
		## Maluses
		### - Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### - Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### -- Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### -- Sadistic
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### -- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### --- Chaste
		if = {
			limit = { has_trait = chaste }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.chaste
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Musician
agent_musician = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## With apology to musicians out there because there's literally no way to do this without character assassinating you.
		### So what I've tried to go for is a mix of eccentricity and focus at a craft (bearing in mind that for most characters, that craft is quite ancillary).
		## Bonuses
		### +++ Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		### +++ Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### ++ Trailing Musician's Camp Upgrade
		if = {
			limit = {
				scope:owner.domicile ?= { has_domicile_parameter = camp_improved_musician_scheme_agent }
			}
			add = {
				value = agent_trait_bonus_t2_value
				desc = camp_fire_trailing_musicians_domicile_building
			}
		}
		### ++ Diligent (you stick with it)
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Lazy (you're doing this instead of other things)
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### ++ Content (you make time for the arts)
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### + Gregarious (you won't stop playing the Wonderous Barrier to your friends)
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Shy (you won't stop playing the Wonderous Barrier whilst alone)
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		## Maluses
		### -- Ambitious (you have other thing to be doing)
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Tumbler
agent_tumbler = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Prowess
		add = {
			value = prowess
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		### ++ Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### + Temperate
		if = {
			limit = { has_trait = temperate }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.temperate
			}
		}
		## Maluses
		### - Gluttonous
		if = {
			limit = { has_trait = gluttonous }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.gluttonous
			}
		}
		### -- Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### --- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Poet
agent_poet = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_2to1to1_2_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_2to1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Learning
		add = {
			value = learning
			multiply = agent_2to1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## With zero apology to all the poets out there because we know we're character assassinating you and you both deserve it _and_ know that you deserve it.
		### I am in no way salty about the poetry generator from FP1.
		#### I know it's bad shutup.
		## Bonuses
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### +++ Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		### ++ Wandering Poets Camp Upgrade
		if = {
			limit = {
				scope:owner.domicile ?= { has_domicile_parameter = camp_improved_poet_scheme_agent }
			}
			add = {
				value = agent_trait_bonus_t2_value
				desc = camp_fire_wandering_poets_domicile_building
			}
		}
		### ++ Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### ++ Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### ++ Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### + Sadistic (it doesn't matter what you feel...)
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### + Compassionate (... as long as you feel something)
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		## Maluses
		### - Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### -- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### -- Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### -- Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### --- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Shill
agent_shill = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### + Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		## Maluses
		### - Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### -- Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Diplomat
agent_diplomat = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### +++ Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### ++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### ++ Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### + Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		## Maluses
		### - Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### -- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### -- Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### --- Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Scribe
agent_scribe = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### ++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### + Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### + Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		## Maluses
		### - Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### - Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### -- Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### -- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Wolf Hunter
agent_wolf_hunter = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Prowess
		add = {
			value = prowess
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		## Martial
		add = {
			value = martial
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.martial
		}
		# Traits
		## Bonuses
		### +++ Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		### +++ Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### +++ Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		## Maluses
		### - Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### -- Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### -- Sadistic
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### --- Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### --- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Thief
agent_thief = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Prowess
		add = {
			value = prowess
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		# Traits
		## Bonuses
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### +++ Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### ++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### + Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### + Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		## Maluses
		### - Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### - Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### -- Trusting
		if = {
			limit = { has_trait = trusting }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.trusting
			}
		}
		### -- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### --- Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Tutor
agent_tutor = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### ++ Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### + Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		### + Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		## Maluses
		### - Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### -- Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### -- Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### -- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Sadistic
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Poisoner
agent_poisoner = {
	contribution_type = success_chance_max

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = prowess
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Vengeful vs. Rival
		if = {
			limit = {
				has_trait = vengeful
				exists = scope:scheme
				exists = scope:scheme.scheme_target_character
				has_relation_rival = scope:scheme.scheme_target_character
			}
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.vengeful.target_is_rival
			}
		}
		### +++ Sadistic
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### +++ Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Herbalist
		if = {
			limit = { has_trait = lifestyle_herbalist }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.herbalist
			}
		}
		### ++ Physician
		if = {
			limit = { has_trait = lifestyle_physician }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.physician
			}
		}
		### + Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### + Witch
		if = {
			limit = { has_trait = witch }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.witch
			}
		}
		## Maluses
		### - Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### +++ Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Forgiving vs. Rival
		if = {
			limit = {
				has_trait = forgiving
				exists = scope:scheme
				exists = scope:scheme.scheme_target_character
				has_relation_rival = scope:scheme.scheme_target_character
			}
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.forgiving.target_is_rival
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Eunuch
agent_eunuch = {
	contribution_type = success_chance_max

	valid_agent_for_slot = {
		is_eunuch_trigger = yes
		OR = {
			scope:owner.culture = { has_cultural_parameter = eunuch_trait_bonuses }
			scope:target.culture = { has_cultural_parameter = eunuch_trait_bonuses }
		}
	} 

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## Bonuses
		### +++ Disloyal in Depose Scheme
		if = {
			limit = {
				has_trait = disloyal
				exists = scope:scheme
				scope:scheme = {
					scheme_type = depose
				}
			}
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.disloyal.depose_scheme
			}
		}
		### +++ Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Herbalist
		if = {
			limit = { has_trait = lifestyle_herbalist }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.herbalist
			}
		}
		### ++ Physician
		if = {
			limit = { has_trait = lifestyle_physician }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.physician
			}
		}
		### + Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		## Maluses
		### - Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Loyal in Depose Scheme
		if = {
			limit = {
				has_trait = loyal
				exists = scope:scheme
				scope:scheme = {
					scheme_type = depose
				}
			}
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.loyal.depose_scheme
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Muscle
agent_muscle = {
	contribution_type = success_chance_max
	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Prowess
		add = {
			value = prowess
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		# Traits
		## Bonuses
		### +++ physique_good_3
		if = {
			limit = { has_trait = physique_good_3 }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.physique_good_3
			}
		}
		### ++ physique_good_2
		if = {
			limit = { has_trait = physique_good }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.physique_good_2
			}
		}
		### + physique_good_!
		if = {
			limit = { has_trait = physique_good }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.physique_good_1
			}
		}
		### +++ Strong
		if = {
			limit = { has_trait = strong }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.strong
			}
		}
		### +++ Giant
		if = {
			limit = { has_dire_or_giant_trigger = yes }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.giant
			}
		}
		### +++ Athletic
		if = {
			limit = { has_trait = athletic }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.athletic
			}
		}
		### ++ Shieldmaiden
		if = {
			limit = { has_trait = shieldmaiden }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.shieldmaiden
			}
		}
		### ++ Berserker
		if = {
			limit = { has_trait = berserker }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.berserker
			}
		}
		### ++ Varangian
		if = {
			limit = { has_trait = varangian }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.varangian
			}
		}
		### + Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		## Maluses
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### - Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### -- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Weak
		if = {
			limit = { has_trait = weak }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.weak
			}
		}
		### - physique_bad_1
		if = {
			limit = { has_trait = physique_bad_1 }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.physique_bad_1
			}
		}
		### -- physique_bad_2
		if = {
			limit = { has_trait = physique_bad_2 }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.physique_bad_2
			}
		}
		### --- physique_bad_3
		if = {
			limit = { has_trait = physique_bad_3 }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.physique_bad_3
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Physic
agent_physic = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## Bonuses
		### +++ Physician
		if = {
			limit = { has_trait = lifestyle_physician }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_physician
			}
		}
		### +++ Whole of Body
		if = {
			limit = { has_trait = whole_of_body }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.whole_of_body
			}
		}
		### ++ Mystic
		if = {
			limit = { has_trait = lifestyle_mystic }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lifestyle_mystic
			}
		}
		### ++ Herbalist
		if = {
			limit = { has_trait = lifestyle_herbalist }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lifestyle_herbalist
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### + Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### + Shrewd
		if = {
			limit = { has_trait = shrewd }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.shrewd
			}
		}
		## Maluses
		### - Sadistic
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### - Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### -- Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### --- Drunkard
		if = {
			limit = { has_trait = drunkard }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.drunkard
			}
		}
		### --- Blind
		if = {
			limit = { has_trait = blind }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.blind
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Smith
agent_smith = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		## Prowess
		add = {
			value = prowess
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		# Traits
		## Bonuses
		### +++ Architect
		if = {
			limit = { has_trait = architect }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.architect
			}
		}
		### ++ Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### + Strong
		if = {
			limit = { has_trait = strong }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.strong
			}
		}
		## Maluses
		### - Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### - Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### -- Temperate
		if = {
			limit = { has_trait = temperate }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.temperate
			}
		}
		### --- Weak
		if = {
			limit = { has_trait = weak }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.weak
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Ambusher
agent_ambusher = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Martial
		add = {
			value = martial
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.martial
		}
		# Traits
		## Bonuses
		### +++ Traveler
		if = {
			limit = { has_trait = lifestyle_traveler }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_traveler
			}
		}
		### +++ Hunter
		if = {
			limit = { has_trait = lifestyle_hunter }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_hunter
			}
		}
		### +++ Schemer
		if = {
			limit = { has_trait = schemer }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.schemer
			}
		}
		### ++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### + Cynical
		if = {
			limit = { has_trait = cynical }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.cynical
			}
		}
		### + Sadistic
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		## Maluses
		### - Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### - Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### -- Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### -- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### --- Loyal
		if = {
			limit = { has_trait = loyal }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.loyal
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Bodyguard
agent_bodyguard = {
	contribution_type = success_chance_max
	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Prowess
		add = {
			value = prowess
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		## Martial
		add = {
			value = martial
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.martial
		}
		# Traits
		## Bonuses
		### +++ physique_good_3
		if = {
			limit = { has_trait = physique_good_3 }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.physique_good_3
			}
		}
		### ++ physique_good_2
		if = {
			limit = { has_trait = physique_good }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.physique_good_2
			}
		}
		### + physique_good_!
		if = {
			limit = { has_trait = physique_good }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.physique_good_1
			}
		}
		### +++ Strong
		if = {
			limit = { has_trait = strong }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.strong
			}
		}
		### ++ Shieldmaiden
		if = {
			limit = { has_trait = shieldmaiden }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.shieldmaiden
			}
		}
		### ++ Berserker
		if = {
			limit = { has_trait = berserker }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.berserker
			}
		}
		### + Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### + Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### + vengeful
		if = {
			limit = { has_trait = vengeful }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.vengeful
			}
		}
		## Maluses
		### - physique_bad_1
		if = {
			limit = { has_trait = physique_bad_1 }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.physique_bad_1
			}
		}
		### -- physique_bad_2
		if = {
			limit = { has_trait = physique_bad_2 }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.physique_bad_2
			}
		}
		### --- physique_bad_3
		if = {
			limit = { has_trait = physique_bad_3 }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.physique_bad_3
			}
		}
		### - Temperate
		if = {
			limit = { has_trait = temperate }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.temperate
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### --- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Weak
		if = {
			limit = { has_trait = weak }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.weak
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Scout
agent_scout = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Martial
		add = {
			value = martial
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.martial
		}
		# Traits
		## Bonuses
		### +++ Traveler
		if = {
			limit = { has_trait = lifestyle_traveler }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_traveler
			}
		}
		### +++ Hunter
		if = {
			limit = { has_trait = lifestyle_hunter }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_hunter
			}
		}
		### ++ Forder
		if = {
			limit = { has_trait = forder }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.forder
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		## Maluses
		### - Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### - Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Blind
		if = {
			limit = { has_trait = blind }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.blind
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Outrider
agent_outrider = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Martial
		add = {
			value = martial
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.martial
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Traveler
		if = {
			limit = { has_trait = lifestyle_traveler }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_traveler
			}
		}
		### +++ Hunter
		if = {
			limit = { has_trait = lifestyle_hunter }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_hunter
			}
		}
		### ++ Forder
		if = {
			limit = { has_trait = forder }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.forder
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		## Maluses
		### - Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### - Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Blind
		if = {
			limit = { has_trait = blind }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.blind
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Bookkeeper
agent_bookkeeper = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Scholar
		if = {
			limit = { has_trait = scholar }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.scholar
			}
		}
		### +++ Theologian
		if = {
			limit = { has_trait = theologian }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.theologian
			}
		}
		### ++ Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### ++ Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		### + Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		## Maluses
		### - Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### - Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Bailiff
agent_bailiff = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Overseer
		if = {
			limit = { has_trait = overseer }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.overseer
			}
		}
		### +++ Administrator
		if = {
			limit = { has_trait = administrator }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.administrator
			}
		}
		### ++ Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### ++ Vengeful
		if = {
			limit = { has_trait = vengeful }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.vengeful
			}
		}
		### + Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### + Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		## Maluses
		### - Trusting
		if = {
			limit = { has_trait = trusting }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.trusting
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Draughtsman
agent_draughtsman = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Architect
		if = {
			limit = { has_trait = architect }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.architect
			}
		}
		### ++ Administrator
		if = {
			limit = { has_trait = administrator }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.administrator
			}
		}
		### ++ Journaller
		if = {
			limit = { has_trait = journaller }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.journaller
			}
		}
		### + Scholar
		if = {
			limit = { has_trait = scholar }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.scholar
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		## Maluses
		### - Generous
		if = {
			limit = { has_trait = generous }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.generous
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Outcast
agent_outcast = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### +++ Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### ++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### ++ Schemer
		if = {
			limit = { has_trait = schemer }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.schemer
			}
		}
		### + Shrewd
		if = {
			limit = { has_trait = shrewd }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.shrewd
			}
		}
		### + Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### + Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### + Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		## Maluses
		### - Trusting
		if = {
			limit = { has_trait = trusting }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.trusting
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### --- Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### --- Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Devotee
agent_devotee = { # This one is only added through an event, not for regular agent slots
	contribution_type = success_chance_max
	
	valid_agent_for_slot = {
		has_variable = devotee_agent_var
	}
	
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### ++ Drunkard
		if = {
			limit = { has_trait = drunkard }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.drunkard
			}
		}
		### + Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		## Maluses
		### - Cynical
		if = {
			limit = { has_trait = cynical }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.cynical
			}
		}
		### -- Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Wrangler
agent_wrangler = {
	contribution_type = success_chance_max
	contribution = { add = agent_wrangler_contribution_value }
}
# Wrangler (Speed)
agent_wrangler_speed = {
	contribution_type = speed
	contribution = {
		add = agent_wrangler_contribution_value
		# Speed, so invert it.
		multiply = -1
	}
}

#Alchemist
agent_alchemist = {
	contribution_type = success_chance_max
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## Bonuses
		### +++ Physician
		if = {
			limit = { has_trait = lifestyle_physician }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_physician
			}
		}
		### +++ Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### ++ Mystic
		if = {
			limit = { has_trait = lifestyle_mystic }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lifestyle_mystic
			}
		}
		### ++ Herbalist
		if = {
			limit = { has_trait = lifestyle_herbalist }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lifestyle_herbalist
			}
		}
		### + Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### + Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		### + Shrewd
		if = {
			limit = { has_trait = shrewd }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.shrewd
			}
		}
		## Maluses
		### - Cynical
		if = {
			limit = { has_trait = cynical }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.cynical
			}
		}
		### - Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Blind
		if = {
			limit = { has_trait = blind }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.blind
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

#################################################
# Speed Agents

# Infiltrator
agent_infiltrator = {
	contribution_type = speed

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		## Maluses
		### - Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### -- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Footpad
agent_footpad = {
	contribution_type = speed

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Prowess
		add = {
			value = prowess
			multiply = agent_1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.prowess
		}
		# Traits
		## Bonuses
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### + Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		## Maluses
		### -- Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Socialite
agent_socialite = {
	contribution_type = speed

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_2to1to1_2_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_2to1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Learning
		add = {
			value = learning
			multiply = agent_2to1to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## Bonuses
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### +++ Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### ++ Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### ++ Compassionate (nasty or nice, polarising'll get you ahead)
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### ++ Sadistic (nasty or nice, polarising'll get you ahead)
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### ++ Lazy (spend more time in idle chitter chatter)
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### + Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		## Maluses
		### - Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### - Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### -- Callous (if you don't take joy in what you do...)
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### -- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Gabbler
agent_gabbler = {
	contribution_type = speed

	contribution = {
		add = agent_gabbler_contribution_value
		# Speed, so invert it.
		multiply = -1
	}
}
# Gabbler (Secrecy)
agent_gabbler_secrecy = {
	contribution_type = speed

	contribution = { add = agent_gabbler_contribution_value }
}

# Cleric
agent_cleric = {
	contribution_type = speed

	contribution = {
		add = agent_cleric_contribution_value
		# Speed, so invert it.
		multiply = -1
	}
}
# Cleric (Success)
agent_cleric_success = {
	contribution_type = success_chance_max

	contribution = { add = agent_cleric_contribution_value }
}

# Theologian
agent_theologian = {
	contribution_type = speed

	contribution = {
		add = agent_theologian_contribution_value
		# Speed, so invert it.
		multiply = -1
	}
}
# Theologian (Success)
agent_theologian_success = {
	contribution_type = success_chance_max

	contribution = { add = agent_theologian_contribution_value }
}

# Herald
agent_herald = {
	contribution_type = speed

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Trusting
		if = {
			limit = { has_trait = trusting }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.trusting
			}
		}
		## Maluses
		### - Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### -- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### --- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Drillmaster
agent_drillmaster = {
	contribution_type = speed
	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Martial
		add = {
			value = martial
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.martial
		}
		# Traits
		## Bonuses
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### +++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### ++ Shrewd
		if = {
			limit = { has_trait = shrewd }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.shrewd
			}
		}
		### ++ Athletic
		if = {
			limit = { has_trait = athletic }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.athletic
			}
		}
		### + organizer
		if = {
			limit = { has_trait = organizer }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.organizer
			}
		}
		### + Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		## Maluses
		### - Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### - Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Tracker
agent_tracker = {
	contribution_type = speed
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Martial
		add = {
			value = martial
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.martial
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Traveler
		if = {
			limit = { has_trait = lifestyle_traveler }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_traveler
			}
		}
		### +++ Hunter
		if = {
			limit = { has_trait = lifestyle_hunter }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lifestyle_hunter
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		## Maluses
		### - Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### -- Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Blind
		if = {
			limit = { has_trait = blind }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.blind
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Planner
agent_planner = {
	contribution_type = speed
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Architect
		if = {
			limit = { has_trait = architect }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.architect
			}
		}
		### +++ Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Administrator
		if = {
			limit = { has_trait = administrator }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.administrator
			}
		}
		### + Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Scholar
		if = {
			limit = { has_trait = scholar }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.scholar
			}
		}
		### + Journaller
		if = {
			limit = { has_trait = journaller }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.journaller
			}
		}
		## Maluses
		### - Generous
		if = {
			limit = { has_trait = generous }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.generous
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Profligate
		if = {
			limit = { has_trait = profligate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.profligate
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Supplier
agent_supplier = {
	contribution_type = speed
	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Avaricious
		if = {
			limit = { has_trait = avaricious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.avaricious
			}
		}
		### +++ Overseer
		if = {
			limit = { has_trait = overseer }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.overseer
			}
		}
		### ++ Organizer
		if = {
			limit = { has_trait = organizer }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.organizer
			}
		}
		### ++ Logistician
		if = {
			limit = { has_trait = logistician }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.logistician
			}
		}
		### ++ Schemer
		if = {
			limit = { has_trait = schemer }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.schemer
			}
		}
		### + Shrewd
		if = {
			limit = { has_trait = shrewd }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.shrewd
			}
		}
		### + Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### + Generous
		if = {
			limit = { has_trait = generous }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.generous
			}
		}
		## Maluses
		### - Greedy
		if = {
			limit = { has_trait = greedy }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.greedy
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### --- Profligate
		if = {
			limit = { has_trait = profligate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.profligate
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

#################################################
# Secrecy Agents

# Lookout
agent_lookout = {
	contribution_type = secrecy

	contribution = { add = agent_lookout_contribution_value }
}
# Lookout (Success)
agent_lookout_success = {
	contribution_type = success_chance_max

	contribution = { add = agent_lookout_contribution_value }
}
# Lookout (Speed)
agent_lookout_speed = {
	contribution_type = speed

	contribution = {
		add = agent_lookout_contribution_value
		# Speed, so invert it.
		multiply = -1
	}
}

# Alibi
agent_alibi = {
	contribution_type = secrecy

	valid_agent_for_slot = {
		# Filter out rando nobodies.
		OR = {
			is_ruler = yes
			is_councillor_of = scope:target
			is_close_or_extended_family_of = scope:target
			has_any_good_relationship_with_character_trigger = { CHARACTER = scope:target }
		}
	}

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## Bonuses
		### +++ Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### +++ Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### +++ Loyal
		if = {
			limit = { has_trait = loyal }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.loyal
			}
		}
		### ++ Confider
		if = {
			limit = { has_trait = confider }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.confider
			}
		}
		### ++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### ++ Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### + Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		## Maluses
		### - Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### -- Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### -- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### -- Contrite
		if = {
			limit = { has_trait = contrite }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.contrite
			}
		}
		### --- Disloyal
		if = {
			limit = { has_trait = disloyal }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.disloyal
			}
		}
		### --- Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### --- Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Justiciar
agent_justiciar = {
	contribution_type = secrecy

	contribution = { add = agent_justiciar_contribution_value }
}
# Justicar (Speed)
agent_justiciar_speed = {
	contribution_type = speed

	contribution = {
		add = agent_justiciar_contribution_value
		# Speed, so invert it.
		multiply = -1
	}
}

# Decoy
agent_decoy = {
	contribution_type = secrecy

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		# Traits
		## Bonuses
		### +++ Eccentric
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### +++ Eccentric
		if = {
			limit = { has_trait = eccentric }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.eccentric
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### ++ Brave
		if = {
			limit = { has_trait = brave }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.brave
			}
		}
		## Maluses
		### - Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### -- Trusting
		if = {
			limit = { has_trait = trusting }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.trusting
			}
		}
		### -- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}


#################################################
### Political Agents

## Success

# Intermediary (Political)
agent_intermediary = {
	contribution_type = success_chance_max

	valid_agent_for_slot = {
		government_allows = administrative
		OR = {
			is_governor = yes
			is_house_head = yes
		}
	} 

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### +++ Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### ++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### ++ Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### + Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		## Maluses
		### - Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### -- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### -- Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### --- Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Public Proponent (Political)
agent_proponent = {
	contribution_type = success_chance_max

	valid_agent_for_slot = {
		government_allows = administrative
		OR = {
			is_governor = yes
			is_house_head = yes
		}
	} 

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### +++ Calm
		if = {
			limit = { has_trait = calm }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.calm
			}
		}
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### ++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### ++ Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### ++ Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### ++ Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		## Maluses
		### - Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### -- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### -- Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### --- Wrathful
		if = {
			limit = { has_trait = wrathful }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.wrathful
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Sycophant
agent_sycophant = {
	contribution_type = success_chance_max

	valid_agent_for_slot = {
		government_allows = administrative
	}

	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Greedy
		if = {
			limit = { has_trait = greedy }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.greedy
			}
		}
		### + Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### + Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		### + Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		## Maluses
		### - Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### --- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

## Speed

# Socialite (Political)
agent_political_socialite = {
	contribution_type = speed

	valid_agent_for_slot = {
		government_allows = administrative
		OR = {
			is_governor = yes
			is_house_head = yes
		}
	}

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_2to1to1_2_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_2to1to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### +++ Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### ++ Arrogant
		if = {
			limit = { has_trait = arrogant }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.arrogant
			}
		}
		### ++ Compassionate (nasty or nice, polarising'll get you ahead)
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### ++ Sadistic (nasty or nice, polarising'll get you ahead)
		if = {
			limit = { has_trait = sadistic }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.sadistic
			}
		}
		### ++ Lazy (spend more time in idle chitter chatter)
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### + Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		## Maluses
		### - Stubborn
		if = {
			limit = { has_trait = stubborn }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.stubborn
			}
		}
		### - Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### -- Callous (if you don't take joy in what you do...)
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### -- Humble
		if = {
			limit = { has_trait = humble }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.humble
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Bureaucrat (Political)
agent_bureaucrat = {
	contribution_type = speed

	valid_agent_for_slot = {
		primary_title.tier >= tier_county
	}

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Architect
		if = {
			limit = { has_trait = architect }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.architect
			}
		}
		### +++ Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Administrator
		if = {
			limit = { has_trait = administrator }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.administrator
			}
		}
		### + Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Scholar
		if = {
			limit = { has_trait = scholar }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.scholar
			}
		}
		### + Journaller
		if = {
			limit = { has_trait = journaller }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.journaller
			}
		}
		## Maluses
		### - Generous
		if = {
			limit = { has_trait = generous }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.generous
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Profligate
		if = {
			limit = { has_trait = profligate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.profligate
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

# Bureaucrat (targeting title)
agent_bureaucrat_title = {
	contribution_type = speed

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Architect
		if = {
			limit = { has_trait = architect }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.architect
			}
		}
		### +++ Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Administrator
		if = {
			limit = { has_trait = administrator }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.administrator
			}
		}
		### + Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Scholar
		if = {
			limit = { has_trait = scholar }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.scholar
			}
		}
		### + Journaller
		if = {
			limit = { has_trait = journaller }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.journaller
			}
		}
		## Maluses
		### - Generous
		if = {
			limit = { has_trait = generous }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.generous
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Profligate
		if = {
			limit = { has_trait = profligate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.profligate
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
		# Speed, so invert it.
		multiply = -1
	}
}

## Secrecy

# Courtesan
agent_courtesan = {
	contribution_type = secrecy

	valid_agent_for_slot = {
		scope:target = { is_attracted_to_gender_of = root }
	}

	contribution = {
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Diplomacy
		add = {
			value = diplomacy
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.diplomacy
		}
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		# Traits
		## Bonuses
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### +++ Lustful
		if = {
			limit = { has_trait = lustful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.lustful
			}
		}
		### ++ Ambitious
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.ambitious
			}
		}
		### ++ Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### + Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		## Maluses
		### - Shy
		if = {
			limit = { has_trait = shy }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.shy
			}
		}
		### -- Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### --- Chaste
		if = {
			limit = { has_trait = chaste }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.chaste
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		# Physical Traits
		## Beauty
		### +++ Beautiful
		if = {
			limit = { has_trait = beauty_good_3 }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.beauty_good_3
			}
		}
		### ++ Pretty/Handsome
		if = {
			limit = { has_trait = beauty_good_2 }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.beauty_good_2
			}
		}
		### + Comely
		if = {
			limit = { has_trait = beauty_good_1 }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.beauty_good_1
			}
		}
		### - Homely
		if = {
			limit = { has_trait = beauty_bad_1 }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.beauty_bad_1
			}
		}
		### -- Ugly
		if = {
			limit = { has_trait = beauty_bad_2 }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.beauty_bad_2
			}
		}
		### --- Hideous
		if = {
			limit = { has_trait = beauty_bad_3 }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.beauty_bad_3
			}
		}
		## Physique
		### +++ Amazonian/Herculean
		if = {
			limit = { has_trait = physique_good_3 }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.physique_good_3
			}
		}
		### ++ Robust
		if = {
			limit = { has_trait = physique_good_2 }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.physique_good_2
			}
		}
		### + Hale
		if = {
			limit = { has_trait = physique_good_1 }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.physique_good_1
			}
		}
		### - Delicate
		if = {
			limit = { has_trait = physique_bad_1 }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.physique_bad_1
			}
		}
		### -- Frail
		if = {
			limit = { has_trait = physique_bad_2 }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.physique_bad_2
			}
		}
		### --- Feeble
		if = {
			limit = { has_trait = physique_bad_3 }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.physique_bad_3
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Amanuensis
agent_amanuensis = {
	contribution_type = secrecy

	valid_agent_for_slot = {
		OR = {
			is_courtier_of = scope:target
			is_courtier_of = scope:owner
		}
	}

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		## Stewardship
		add = {
			value = stewardship
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = political_agent_max_skill_value
			desc = scheme_agent_aptitude.skill.stewardship
		}
		# Traits
		## Bonuses
		### +++ Architect
		if = {
			limit = { has_trait = architect }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.architect
			}
		}
		### +++ Paranoid
		if = {
			limit = { has_trait = paranoid }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.paranoid
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Administrator
		if = {
			limit = { has_trait = administrator }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.administrator
			}
		}
		### + Gregarious
		if = {
			limit = { has_trait = gregarious }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.gregarious
			}
		}
		### + Scholar
		if = {
			limit = { has_trait = scholar }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.scholar
			}
		}
		### + Journaller
		if = {
			limit = { has_trait = journaller }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.journaller
			}
		}
		## Maluses
		### - Generous
		if = {
			limit = { has_trait = generous }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.generous
			}
		}
		### - Forgiving
		if = {
			limit = { has_trait = forgiving }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.forgiving
			}
		}
		### -- Fickle
		if = {
			limit = { has_trait = fickle }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.fickle
			}
		}
		### -- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Content
		if = {
			limit = { has_trait = content }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.content
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Profligate
		if = {
			limit = { has_trait = profligate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.profligate
			}
		}
		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

# Eunuch (Secrecy)
agent_eunuch_speed = {
	contribution_type = secrecy

	valid_agent_for_slot = {
		is_eunuch_trigger = yes
		OR = {
			scope:owner.culture = { has_cultural_parameter = eunuch_trait_bonuses }
			scope:target.culture = { has_cultural_parameter = eunuch_trait_bonuses }
		}
	} 

	contribution = {
		# Base value.
		value = scheme_agent_general_bonuses_contribution_score_value
		# Powerful Family Score
		add = agent_house_power_score_value
		# Skills
		## Intrigue
		add = {
			value = intrigue
			multiply = agent_3to1_3_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.intrigue
		}
		## Learning
		add = {
			value = learning
			multiply = agent_3to1_1_skill_mult_value
			ceiling = yes
			max = agent_max_skill_value
			desc = scheme_agent_aptitude.skill.learning
		}
		# Traits
		## Bonuses
		### +++ Disloyal in Depose Scheme
		if = {
			limit = {
				has_trait = disloyal
				exists = scope:scheme
				scope:scheme = {
					scheme_type = depose
				}
			}
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.disloyal.depose_scheme
			}
		}
		### +++ Callous
		if = {
			limit = { has_trait = callous }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.callous
			}
		}
		### +++ Patient
		if = {
			limit = { has_trait = patient }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.patient
			}
		}
		### +++ Deceitful
		if = {
			limit = { has_trait = deceitful }
			add = {
				value = agent_trait_bonus_t3_value
				desc = scheme_agent_aptitude.trait.deceitful
			}
		}
		### ++ Diligent
		if = {
			limit = { has_trait = diligent }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.diligent
			}
		}
		### ++ Herbalist
		if = {
			limit = { has_trait = lifestyle_herbalist }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.herbalist
			}
		}
		### ++ Physician
		if = {
			limit = { has_trait = lifestyle_physician }
			add = {
				value = agent_trait_bonus_t2_value
				desc = scheme_agent_aptitude.trait.physician
			}
		}
		### + Arbitrary
		if = {
			limit = { has_trait = arbitrary }
			add = {
				value = agent_trait_bonus_t1_value
				desc = scheme_agent_aptitude.trait.arbitrary
			}
		}
		## Maluses
		### - Just
		if = {
			limit = { has_trait = just }
			add = {
				value = agent_trait_malus_t1_value
				desc = scheme_agent_aptitude.trait.just
			}
		}
		### -- Craven
		if = {
			limit = { has_trait = craven }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.craven
			}
		}
		### --- Honest
		if = {
			limit = { has_trait = honest }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.honest
			}
		}
		### --- Lazy
		if = {
			limit = { has_trait = lazy }
			add = {
				value = agent_trait_malus_t2_value
				desc = scheme_agent_aptitude.trait.lazy
			}
		}
		### --- Impatient
		if = {
			limit = { has_trait = impatient }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.impatient
			}
		}
		### --- Compassionate
		if = {
			limit = { has_trait = compassionate }
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.trait.compassionate
			}
		}
		### --- Loyal in Depose Scheme
		if = {
			limit = {
				has_trait = loyal
				exists = scope:scheme
				scope:scheme = {
					scheme_type = depose
				}
			}
			add = {
				value = agent_trait_malus_t3_value
				desc = scheme_agent_aptitude.loyal.depose_scheme
			}
		}

		# Cap this off.
		max = agent_scheme_contributor_max
		min = agent_scheme_contributor_min
	}
}

