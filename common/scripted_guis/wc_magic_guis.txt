wc_show_mana_gui = { scope = character is_shown = { wc_max_mana_value > 0 } } # Used to show/hide the entire interface
wc_show_mp_gui = { scope = character is_shown = { wc_mp_value > 0 } } # Used to show/hide the entire interface

open_spellbook_sgui = {
    scope = character

    effect = {
        if = {
            limit = {
                NOT = { exists = global_var:spellbook_init }
            }
            init_elemental_fire_spells_effect = yes
            init_order_spells_effect = yes

            # set_global_variable = spellbook_init
        }
        # Temporary list so spell types will be displayed
        if = {
            limit = {
                NOT = { has_variable_list = spell_types }
            }

            add_to_variable_list = { name = spell_types target = flag:light }
            add_to_variable_list = { name = spell_types target = flag:shadow }
            add_to_variable_list = { name = spell_types target = flag:life }
            add_to_variable_list = { name = spell_types target = flag:death }
            add_to_variable_list = { name = spell_types target = flag:order }
            add_to_variable_list = { name = spell_types target = flag:disorder }
            add_to_variable_list = { name = spell_types target = flag:elemental_earth }
            add_to_variable_list = { name = spell_types target = flag:elemental_air }
            add_to_variable_list = { name = spell_types target = flag:elemental_fire }
            add_to_variable_list = { name = spell_types target = flag:elemental_water }

            add_to_variable_list = { name = spell_elemental_types target = flag:decay }
            add_to_variable_list = { name = spell_elemental_types target = flag:spirit }

            add_to_variable_list = { name = spell_ranks target = flag:rank_1 }
            add_to_variable_list = { name = spell_ranks target = flag:rank_2 }
            add_to_variable_list = { name = spell_ranks target = flag:rank_3 }
        }
        if = { # So they open same page everytime
            limit = {
                NOT = { exists = var:spellbook_index }
            }
            set_variable = {
                name = spellbook_index
                value = 0
            }
        }
    }
}

open_spellbook_lite_sgui = {
    scope = character
    effect = {
        set_variable = {
            name = spellbook_open
            value = yes
        }
    }
}

set_spell_target_sgui = {
    scope = character
    saved_scopes = { target }
    effect = {
        set_variable = { name = spell_recipient value = scope:target }
        set_variable = {
            name = spellbook_open
            value = yes
        }
    }
}

can_open_spellbook_sgui = {

}

close_spellbook_sgui = {
    scope = character
    effect = {
        # Remove all spell-related variables
        remove_variable = current_spell_name
        remove_variable = current_spell_rank
        remove_variable = current_spell_mana_cost
        remove_variable = current_spell_class
        remove_variable = current_target_type
        if = {
            limit = {
                has_variable = elemental_type
            }
            set_variable = {
                name = last_elemental_type
                value = var:elemental_type
            }
        }
        remove_variable = current_secondary_interaction

        remove_variable = elemental_type
        remove_variable = spellbook_open
        clear_variable_list = spell_types
        clear_variable_list = elemental_types
        clear_variable_list = spell_ranks

        remove_variable = spell_recipient
        remove_variable = original_recipient
        remove_variable = spellbook_type_cast
        remove_variable = spellbook_type_view
        remove_variable = spell_targets_list
        clear_variable_list = target_titles

        remove_variable = spellbook_open
        remove_variable = direct_only
    }
}

close_spellbook_lite_sgui = {
    scope = character
    effect = {
        remove_variable = spellbook_open
    }
}

add_spellbook_index_sgui = {
    scope = character
    effect = {
        change_variable = {
            name = spellbook_index
            add = 1
        }
    }
}

subtract_spellbook_index_sgui = {
    scope = character
    effect = {
        change_variable = {
            name = spellbook_index
            subtract = 1
        }
    }
}

update_current_spell_class_sgui = {
    scope = character
    effect = {
        switch = {
            trigger = var:spellbook_index
            0 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:light
                }
            }
            1 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:shadow
                }
            }
            3 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:life
                }
            }
            4 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:death
                }
            }
            5 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:order
                }
            }
            6 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:disorder
                }
            }
            7 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:elemental_earth
                }
            }
            8 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:elemental_fire
                }
            }
            9 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:elemental_water
                }
            }
            9 = {
                set_variable = {
                    name = current_spell_class
                    value = flag:elemental_air
                }
            }
        }
        if = {
            limit = {
                OR = {
                    var:current_spell_class = flag:elemental_air
                    var:current_spell_class = flag:elemental_water
                    var:current_spell_class = flag:elemental_fire
                    var:current_spell_class = flag:elemental_earth
                }
                has_variable = last_elemental_type
            }
            set_variable = {
                name = elemental_type
                value = var:last_elemental_type
            }
        }
        else_if = {
            limit = {
                NOR = {
                    var:current_spell_class = flag:elemental_air
                    var:current_spell_class = flag:elemental_water
                    var:current_spell_class = flag:elemental_fire
                    var:current_spell_class = flag:elemental_earth
                }
                has_variable = elemental_type
            }
            remove_variable = elemental_type
        }
    }
}

set_current_spell_class_sgui = {
    scope = character
    saved_scopes = { class }
    effect = {
        set_variable = {
            name = current_spell_class
            value = scope:class
        }
        if = {
            limit = {
                OR = {
                    var:current_spell_class = flag:elemental_air
                    var:current_spell_class = flag:elemental_water
                    var:current_spell_class = flag:elemental_fire
                    var:current_spell_class = flag:elemental_earth
                }
                has_variable = last_elemental_type
            }
            set_variable = {
                name = elemental_type
                value = var:last_elemental_type
            }
        }
        else_if = {
            limit = {
                NOR = {
                    var:current_spell_class = flag:elemental_air
                    var:current_spell_class = flag:elemental_water
                    var:current_spell_class = flag:elemental_fire
                    var:current_spell_class = flag:elemental_earth
                }
                has_variable = elemental_type
            }
            remove_variable = elemental_type
        }
    }
}

set_current_spell_sgui = {
    scope = character
    saved_scopes = { spell }
    effect = {
        set_variable = {
            name = current_spell_name
            value = scope:spell
        }
        if = {
            limit = {
                has_variable_list = spell_targets_list
            }
            clear_variable_list = spell_targets_list
        }
        if = {
            limit = {
                NOT = {
                    spell_has_ranks_trigger = {
                        SPELL = var:current_spell_name
                    }
                }
            }
            set_variable = {
                name = current_spell_rank
                value = 0
            }
        }
        else = {
            set_variable = {
                name = current_spell_rank
                value = 1
            }
        }
        if = {
            limit = {
                has_variable = current_target_type
            }
            set_variable = {
                name = old_target_type
                value = var:current_target_type
            }
        }
        else = {
            set_variable = {
                name = old_target_type
                value = flag:poop
            }
        }
        # getting the target type by rank
        if = {
            limit = { spell_target_is_character_list_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:character_list }
        }
        else_if = {
            limit = { spell_target_is_province_or_title_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:title }
        }
        else_if = {
            limit = { spell_target_is_character_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:character }
        }
        else_if = {
            limit = { spell_target_is_province_or_title_list_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:title_list }
        }
        else_if = {
            limit = {
                spell_target_is_enemy_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
                spell_target_is_friendly_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
            }
            set_variable = { name = current_target_type value = flag:army }
        }
        else_if = {
            limit = {
                spell_target_is_friendly_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
            }
            set_variable = { name = current_target_type value = flag:friendly_army }
        }
        else_if = {
            limit = {
                spell_target_is_enemy_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
            }
            set_variable = { name = current_target_type value = flag:enemy_army }
        }
        execute_scoped_spell_effect = {
            SPELL = var:current_spell_name
            EFFECT = set_spell_mana_cost_variable_effect
        }
        if = {
            limit = {
                OR = {
                    var:old_target_type = flag:character
                    var:old_target_type = flag:poop
                }
                NOT = { var:current_target_type = flag:character }
                NOT = { exists = var:original_recipient }
            }
            set_variable = {
                name = original_recipient
                value = var:spell_recipient
            }
            remove_variable = spell_recipient
        }
        else_if = {
            limit = {
                var:current_target_type = flag:character
                NOT = { var:old_target_type = flag:character }
                exists = var:original_recipient
            }
            set_variable = {
                name = spell_recipient
                value = var:original_recipient
            }
            remove_variable = original_recipient
        }
        else_if = {
            limit = {
                OR = {
                    var:current_target_type = flag:title_list
                    var:current_target_type = flag:title
                    var:current_target_type = flag:army
                    var:current_target_type = flag:enemy_army
                    var:current_target_type = flag:friendly_army
                }
                OR = {
                    var:old_target_type = flag:title_list
                    var:old_target_type = flag:title
                    var:old_target_type = flag:army
                    var:old_target_type = flag:enemy_army
                    var:old_target_type = flag:friendly_army
                }
                NOT = { var:old_target_type = var:current_target_type }
                exists = var:original_recipient
                exists = var:spell_recipient
            }
            remove_variable = spell_recipient
        }
        set_spell_secondary_interaction_effect = { SPELL = var:current_spell_name }
        # something for lists ?
        remove_variable = old_target_type
    }
}

set_spell_rank_sgui = {
    scope = character
    saved_scopes = { function }
    effect = {
        if = {
            limit = {
                has_variable_list = spell_targets_list
            }
            clear_variable_list = spell_targets_list
        }
        switch = {
            trigger = scope:function
            flag:rank_1 = {
                set_variable = {
                    name = current_spell_rank
                    value = 1
                }
            }
            flag:rank_2 = {
                set_variable = {
                    name = current_spell_rank
                    value = 2
                }
            }
            flag:rank_3 = {
                set_variable = {
                    name = current_spell_rank
                    value = 3
                }
            }
        }
        if = {
            limit = {
                has_variable = current_target_type
            }
            set_variable = {
                name = old_target_type
                value = var:current_target_type
            }
        }
        else = {
            set_variable = {
                name = old_target_type
                value = flag:poop
            }
        }
        # getting the target type by rank
        if = {
            limit = { spell_target_is_character_list_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:character_list }
        }
        else_if = {
            limit = { spell_target_is_province_or_title_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:title }
        }
        else_if = {
            limit = { spell_target_is_character_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:character }
        }
        else_if = {
            limit = { spell_target_is_province_or_title_list_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank } }
            set_variable = { name = current_target_type value = flag:title_list }
        }
        else_if = {
            limit = {
                spell_target_is_enemy_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
                spell_target_is_friendly_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
            }
            set_variable = { name = current_target_type value = flag:army }
        }
        else_if = {
            limit = {
                spell_target_is_friendly_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
            }
            set_variable = { name = current_target_type value = flag:friendly_army }
        }
        else_if = {
            limit = {
                spell_target_is_enemy_army_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
            }
            set_variable = { name = current_target_type value = flag:enemy_army }
        }
        execute_scoped_spell_effect = {
            SPELL = var:current_spell_name
            EFFECT = set_spell_mana_cost_variable_effect
        }
        if = {
            limit = {
                var:old_target_type = flag:character
                NOT = { var:current_target_type = flag:character }
                NOT = { exists = var:original_recipient }
            }
            set_variable = {
                name = original_recipient
                value = var:spell_recipient
            }
            remove_variable = spell_recipient
        }
        else_if = {
            limit = {
                var:current_target_type = flag:character
                NOT = { var:old_target_type = flag:character }
                exists = var:original_recipient
            }
            set_variable = {
                name = spell_recipient
                value = var:original_recipient
            }
            remove_variable = original_recipient
        }
        else_if = {
            limit = {
                OR = {
                    var:current_target_type = flag:title_list
                    var:current_target_type = flag:title
                    var:current_target_type = flag:army
                    var:current_target_type = flag:enemy_army
                    var:current_target_type = flag:friendly_army
                }
                OR = {
                    var:old_target_type = flag:title_list
                    var:old_target_type = flag:title
                    var:old_target_type = flag:army
                    var:old_target_type = flag:enemy_army
                    var:old_target_type = flag:friendly_army
                }
                NOT = { var:old_target_type = var:current_target_type }
                exists = var:original_recipient
                exists = var:spell_recipient
            }
            remove_variable = spell_recipient
        }
        # something for lists ?
        remove_variable = old_target_type
    }
}

set_spirit_decay_sgui = {
    scope = character
    saved_scopes = { function }
    effect = {
        set_variable = {
            name = elemental_type
            value = scope:function
        }
    }
}

is_spell_elemental_sgui = {
    scope = character
    is_valid = {
        AND = {
            exists = var:current_spell_class
            OR = {
                var:current_spell_class = flag:elemental_air
                var:current_spell_class = flag:elemental_water
                var:current_spell_class = flag:elemental_fire
                var:current_spell_class = flag:elemental_earth
            }
        }
    }
}

does_spell_have_ranks_sgui = {
    scope = character
    is_valid = {
        exists = var:current_spell_name
        spell_has_ranks_trigger = { SPELL = var:current_spell_name  }
    }
}

clear_selected_spell_sgui = {
    scope = character
    effect = {
        remove_variable = current_spell_name
    }
}

spell_is_ritual_sgui = {
    scope = character
    saved_scopes = { spell }
    is_valid = {
        spell_is_ritual_trigger = {
            SPELL = scope:spell
        }
    }
}
can_select_spell_sgui = {
    scope = character
    saved_scopes = { spell }
    is_valid = {
        trigger_if = {
            limit = {
                spell_hack_activated_trigger = no
                wc_presence_of_mind_activated_trigger = no
                wc_reverse_causality_activated_trigger = no
            }
            is_known_spell_trigger = {
                SPELL = scope:spell
            }
            NOT = {
                ritual_on_cooldown_trigger = {
                    SPELL = scope:spell
                }
            }
            NOT = {
                spell_on_cooldown_trigger = {
                    SPELL = scope:spell
                }
            }
            NOT = {
                is_casting_spell_trigger = {
                    SPELL = scope:spell
                }
            }
            satisfy_spell_triggers = {
                SPELL = scope:spell
            }
            custom_description = {
                text = only_target_self_trigger
                trigger_if = {
                    limit = {
                        spell_target_is_only_self_trigger = {
                            SPELL = scope:spell
                        }
                    }
                    OR = {
                        var:original_recipient ?= root
                        var:spell_recipient ?= root
                    }
                }
            }
        }
        trigger_else_if = {
            limit = {
                spell_hack_activated_trigger = yes
            }
            NOT = { spell_cant_be_hacked_trigger = { SPELL = scope:spell } }
        }
        trigger_else_if = {
            limit = {
                wc_presence_of_mind_activated_trigger = yes
            }
            custom_tooltip = {
                text = WC_CANT_REDUCE_RITUAL_SPELL
                NOT = { spell_is_ritual_trigger = { SPELL = scope:spell } }
            }

            spell_on_cooldown_trigger = {
                SPELL = scope:spell
            }
        }
        trigger_else = {
            is_known_spell_trigger = {
                SPELL = scope:spell
            }
            custom_tooltip = {
                text = WC_CANT_REVERSE_RITUAL_SPELL
                NOT = { spell_is_ritual_trigger = { SPELL = scope:spell } }
            }
            NOT = {
                spell_on_cooldown_trigger = {
                    SPELL = scope:spell
                }
            }
            NOT = {
                is_casting_spell_trigger = {
                    SPELL = scope:spell
                }
            }
        }
    }
}

has_unlocked_spell_rank_sgui = {
    scope = character
    saved_scopes = { spell_rank }
    is_valid = {
        has_unlocked_spell_rank_trigger = {
            SPELL = var:current_spell_name
            SPELL_RANK = scope:spell_rank
        }
    }
}


can_cast_spell_sgui = {
    # checking for all parameters
    scope = character

    is_valid = {
        trigger_if = {
            limit = {
                spell_hack_activated_trigger = no
                wc_presence_of_mind_activated_trigger = no
                wc_reverse_causality_activated_trigger = no
            }
            all_requirements_for_casting_satisfied_trigger = yes
        }
        trigger_else = {
            has_spell_selected_trigger = yes
        }
    }
}

knows_magic_class_sgui = {
    scope = character
    saved_scopes = { spell_class }

    is_valid = {
        trigger_if = {
            limit = { scope:spell_class = flag:light }
            is_magic_class_user_trigger = { MAGIC = light }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:shadow }
            is_magic_class_user_trigger = { MAGIC = shadow }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:death }
            is_magic_class_user_trigger = { MAGIC = death }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:life }
            is_magic_class_user_trigger = { MAGIC = life }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:order }
            is_magic_class_user_trigger = { MAGIC = order }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:disorder }
            is_magic_class_user_trigger = { MAGIC = disorder }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:elemental_fire }
            is_magic_class_user_trigger_elemental = { MAGIC = elemental_fire }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:elemental_air }
            is_magic_class_user_trigger_elemental = { MAGIC = elemental_air }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:elemental_water }
            is_magic_class_user_trigger_elemental = { MAGIC = elemental_water }
        }
        trigger_else_if = {
            limit = { scope:spell_class = flag:elemental_earth }
            is_magic_class_user_trigger_elemental = { MAGIC = elemental_earth }
        }
        trigger_else = {
            always = no
        }
    }
}

set_target_or_add_sgui = {
    scope = character
    saved_scopes = { target }
    effect = {
        if = {
            limit = {
                OR = {
                    var:current_target_type = flag:character_list
                    var:current_target_type = flag:title_list
                }
                OR = {
                    NOT = { has_variable_list = spell_targets_list }
                    AND = {
                        NOT = { any_in_list = { variable = spell_targets_list this = scope:target } }
                        has_variable_list = spell_targets_list
                    }
                }
            }
            add_to_variable_list = {
                name = spell_targets_list
                target = scope:target
            }
        }
        else_if = {
            limit = {
                OR = {
                    var:current_target_type = flag:character_list
                    var:current_target_type = flag:title_list
                }
                AND = {
                    any_in_list = { variable = spell_targets_list this = scope:target }
                    has_variable_list = spell_targets_list
                }
            }
            remove_list_variable = {
                name = spell_targets_list
                target = scope:target
            }
        }
        else = {
            set_variable = {
                name = spell_recipient
                value = scope:target
            }
        }
    }
}

remove_target_sgui = {
    scope = character
    saved_scopes = { target }
    effect = {
        if = {
            limit = {
                OR = {
                    var:current_target_type = flag:character_list
                    var:current_target_type = flag:title_list
                }
            }
            remove_list_variable = {
                name = spell_targets_list
                target = scope:target
            }
        }
        else = {
            remove_variable = spell_recipient
        }
    }
}

is_spell_target_valid_sgui = {
    scope = character
    saved_scopes = { target }
    is_valid = {
        NOT = {
            target_has_max_stacks_trigger = {
                SPELL = var:current_spell_name
                RANK = var:current_spell_rank
                TARGET = scope:target
            }
        }
        OR = {
            has_max_targets_trigger = no
            AND = {
                has_max_targets_trigger = yes
                any_in_list = { variable = spell_targets_list this = scope:target }
            }
        }
    }
}

can_add_more_targets_sgui = {
    scope = character
    is_valid = {
        NOT = {
            has_max_targets_trigger = yes
        }
    }
}

is_selected_target_sgui = {
    saved_scopes = { target }
    scope = character
    is_valid = {
        OR = {
            AND = {
                has_variable = spell_recipient
                var:spell_recipient = scope:target
            }
            AND = {
                has_variable_list = spell_targets_list
                any_in_list = { variable = spell_targets_list this = scope:target }
            }
        }
    }
}

cast_spell_sgui = {
    scope = character
    effect = {
        if = {
            limit = {
                spell_hack_activated_trigger = no
                wc_presence_of_mind_activated_trigger = no
                wc_reverse_causality_activated_trigger = no
            }
            execute_scoped_spell_effect = {
                EFFECT = spell_cast_effect
                SPELL = var:current_spell_name
            }
        }
        else_if = {
            limit = {
                spell_hack_activated_trigger = yes
            }
            execute_scoped_spell_effect = {
                EFFECT = wc_learn_spell_effect_external
                SPELL = var:current_spell_name
            }
            remove_variable = wc_spell_hack_activated
        }
        else_if = {
            limit = {
                wc_presence_of_mind_activated_trigger = yes
            }
            execute_scoped_spell_effect = {
                EFFECT = wc_halve_cooldown_effect
                SPELL = var:current_spell_name
            }
            remove_variable = wc_presence_of_mind_activated
            trigger_event = {
                on_action = regenerate_presence_of_mind
                years = 1
            }
        }
        else = {
            execute_scoped_spell_effect = {
                EFFECT = wc_reverse_causality_effect
                SPELL = var:current_spell_name
            }
            remove_variable = wc_reverse_causality_activated
            trigger_event = {
                on_action = regenerate_reverse_causality
                years = 5
            }
        }
    }
}

spell_tooltip_sgui = {
    scope = character
    saved_scopes = { tooltip_target }
    effect = {
        if = {
            limit = {
                exists = var:current_spell_name
            }
            show_as_tooltip = {
                execute_scoped_spell_effect = {
                    EFFECT = spell_cast_effect
                    SPELL = var:current_spell_name
                }
                execute_scoped_spell_effect = {
                    EFFECT = show_spell_tt_effect
                    SPELL = var:current_spell_name
                }
            }
        }
    }
}

player_has_single_target_sgui = {
    scope = character
    is_valid = {
        exists = var:spell_recipient
        OR = {
            exists = var:current_spell_class
            OR = {
                spell_target_is_character_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
                spell_target_is_province_or_title_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
            }
        }
    }
}

spell_target_is_character_sgui = {
    scope = character
    is_valid = {
        exists = var:current_spell_name
        exists = var:current_spell_rank
        spell_target_is_character_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
    }
}

spell_target_is_province_sgui = {
    scope = character

    is_valid = {
        exists = var:current_spell_name
        exists = var:current_spell_rank
        spell_target_is_province_or_title_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
    }
}

spell_target_is_province_list_sgui = {
    scope = character

    is_valid = {
        exists = var:current_spell_name
        exists = var:current_spell_rank
        spell_target_is_province_or_title_list_trigger = { SPELL = var:current_spell_name RANK_VALUE = var:current_spell_rank }
    }
}

player_has_targets_sgui = {
    scope = character

    is_valid = {
        OR = {
            exists = var:spell_recipient
            has_variable_list = spell_targets_list
        }
    }
}

select_province_start_sgui = {
    scope = character

    effect = {
        if = {
            limit = {
                exists = var:current_target_type
                OR = {
                    var:current_target_type = flag:title
                    var:current_target_type = flag:title_list
                }
                var:original_recipient = {
                    is_landed = yes
                }
            }
            pan_camera_to_title = var:original_recipient.capital_barony
        }
    }
}


toggle_titles_list_sgui = {
    scope = character
    effect = {
        if = {
            limit = {
                has_variable = direct_only
            }
            remove_variable = direct_only
        }
        else = {
            set_variable = {
                name = direct_only
                value = yes
            }
        }
    }
}

get_titles_list_sgui = {
    scope = character
    effect = {
        var:original_recipient = {
            save_scope_as = spell_target
        }
        if = {
            limit = {
                has_variable_list = target_titles
            }
            clear_variable_list = target_titles
        }
        scope:spell_target = {
            if = {
                limit = {
                    root = {
                        spell_target_title_subtype_province_trigger = {
                            SPELL = var:current_spell_name
                            RANK_VALUE = var:current_spell_rank
                        }
                    }
                }
                every_held_title = {
                    limit = {
                        tier = tier_barony
                    }
                    save_scope_as = potential_title
                    root = {
                        add_to_variable_list = {
                            name = target_titles
                            target = scope:potential_title
                        }
                    }
                }
                if = {
                    limit = {
                        root = {
                            NOT = { has_variable = direct_only }
                        }
                    }
                    every_vassal_or_below = {
                        every_held_title = {
                            limit = {
                                tier = tier_barony
                            }
                            save_scope_as = potential_title
                            root = {
                                add_to_variable_list = {
                                    name = target_titles
                                    target = scope:potential_title
                                }
                            }
                        }
                    }
                }
            }
            else_if = {
                limit = {
                    root = {
                        spell_target_title_subtype_county_trigger = {
                            SPELL = var:current_spell_name
                            RANK_VALUE = var:current_spell_rank
                        }
                    }
                }
                every_held_title = {
                    limit = {
                        tier = tier_county
                    }
                    save_scope_as = potential_title
                    root = {
                        add_to_variable_list = {
                            name = target_titles
                            target = scope:potential_title
                        }
                    }
                }
                if = {
                    limit = {
                        root = {
                            NOT = { has_variable = direct_only }
                        }
                    }
                    every_vassal_or_below = {
                        every_held_title = {
                            limit = {
                                tier = tier_county
                            }
                            save_scope_as = potential_title
                            root = {
                                add_to_variable_list = {
                                    name = target_titles
                                    target = scope:potential_title
                                }
                            }
                        }
                    }
                }
            }
            else_if = {
                limit = {
                    root = {
                        spell_target_title_subtype_duchy_trigger = {
                            SPELL = var:current_spell_name
                            RANK_VALUE = var:current_spell_rank
                        }
                    }
                }
                every_held_title = {
                    limit = {
                        tier = tier_duchy
                    }
                    save_scope_as = potential_title
                    root = {
                        add_to_variable_list = {
                            name = target_titles
                            target = scope:potential_title
                        }
                    }
                }
                if = {
                    limit = {
                        root = {
                            NOT = { has_variable = direct_only }
                        }
                    }
                    every_vassal_or_below = {
                        every_held_title = {
                            limit = {
                                tier = tier_duchy
                            }
                            save_scope_as = potential_title
                            root = {
                                add_to_variable_list = {
                                    name = target_titles
                                    target = scope:potential_title
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

is_barony_targets_sgui = {
    scope = character

    is_valid = {
        spell_target_title_subtype_province_trigger = {
            SPELL = var:current_spell_name
            RANK_VALUE = var:current_spell_rank
        }
    }
}

is_county_targets_sgui = {
    scope = character

    is_valid = {
        spell_target_title_subtype_county_trigger = {
            SPELL = var:current_spell_name
            RANK_VALUE = var:current_spell_rank
        }
    }
}
clear_target_titles_sgui = {
    scope = character
    effect = {
        clear_variable_list = target_titles
    }
}

can_animate_rage_sgui = {
    scope = character
    is_valid = {
        can_animate_rage_trigger = yes
    }
}

animate_rage_effect_sgui = {
    scope = character
    saved_scopes = { artifact }
    effect = {
        animate_rage_effect = {
            ARTIFACT = scope:artifact
        }
        destroy_owned_artifact = scope:artifact
    }
}


create_armies_list_sgui = {
    scope = character
    effect = {
        if = {
            limit = {
                NOT = { exists = var:original_recipient }
            }
            set_variable = {
                name = original_recipient
                value = var:spell_recipient
            }
            remove_variable = spell_recipient
        }
        if = {
            limit = {
                has_variable_list = target_armies
            }
            clear_variable_list = target_armies
        }

        var:original_recipient = {
            save_scope_as = army_target
        }

        if = {
            limit = {
                var:current_target_type = flag:friendly_army
            }
            every_war_ally = {
                every_army = {
                    save_scope_as = this_army
                    root = {
                        add_to_variable_list = {
                            name = target_armies
                            target = scope:this_army
                        }
                    }
                }
            }
        }
        else_if = {
            limit = {
                var:current_target_type = flag:enemy_army
            }
            every_war_enemy = {
                every_army = {
                    save_scope_as = this_army
                    root = {
                        add_to_variable_list = {
                            name = target_armies
                            target = scope:this_army
                        }
                    }
                }
            }
            every_army = {
                save_scope_as = this_army
                root = {
                    add_to_variable_list = {
                        name = target_armies
                        target = scope:this_army
                    }
                }
            }
        }
        else_if = {
            limit = {
                var:current_target_type = flag:army
            }
            scope:army_target = {
                every_war_enemy = {
                    every_army = {
                        save_scope_as = this_army
                        root = {
                            add_to_variable_list = {
                                name = target_armies
                                target = scope:this_army
                            }
                        }
                    }
                }
                every_war_ally = {
                    every_army = {
                        save_scope_as = this_army
                        root = {
                            add_to_variable_list = {
                                name = target_armies
                                target = scope:this_army
                            }
                        }
                    }
                }
                every_army = {
                    save_scope_as = this_army
                    root = {
                        add_to_variable_list = {
                            name = target_armies
                            target = scope:this_army
                        }
                    }
                }
            }

        }
    }
}

spell_target_is_army_sgui = {
    scope = character
    is_valid = {
        exists = var:current_spell_name
        exists = var:current_spell_rank
        OR = {
            var:current_target_type = flag:enemy_army
            var:current_target_type = flag:friendly_army
            var:current_target_type = flag:army
        }
    }
}

has_targets_list_sgui = {
    scope = character
    is_valid = {
        has_variable_list = spell_targets_list
    }
}

player_has_spell_hack = {
    scope = character
    is_valid = {
        spell_hack_activated_trigger = yes
    }
}