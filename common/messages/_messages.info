Definitions for messages shown to the player either in the message feed or as "toasts".

###############################################################################
# Structure 
###############################################################################

my_message = {

	### Brief: display ( enum )
	# Where to display the message.
	#	Default: feed
	display = feed/toast

	### Brief: text ( localization key )
	# Loc key to the string to be used in the message; 
	#	Default: same as message key (e.g "my_message" in this example)
	text = some_loc_key

	### Brief: desc ( localization key )
	# Loc key to the string that gives more info about what happened.
	desc = some_loc_key

	### Brief: tooltip ( localization key )
	# Loc key to the string to be used for tooltip of type(optional);
	# 	Default: no tooltip
	tooltip = some_loc_key		

	### Brief: soundeffect ( sound effect name )
	# Name of the sound effect played when showing the message.
	# 	Default: no sound
	soundeffect = sound_name	

	### Brief: icon (  )
	# Icon textures found in gfx\interface\message_icons
	icon = "texture.dds"

	### Brief: style ( enum )		
	# Affects the look of message items
	# 	Default: neutral
	style = good/bad/neutral

	### Brief: flag ( keys )
	# List of flags to which can be used to further customize the look and
	# behaviour of your message.  # warcraft - not updating this poorly worded note
	#
	# If a flag is defined, handling for this flag must be added to a 
	# corresponding widget in hud_notification_templates.gui, as the default
	# toast will only appear for messages without any flags. 
	flag = flag_1
	flag = flag_2

	### Brief: combine_into_one ( bool )
	# If messages of this type should be combined into one message immediately if one already exists in the feed,
	# without triggering new animations or sound effects. (for potentially high frequency messages)
	combine_into_one = yes
}


EXAMPLES:

my_message_type = {
	display = feed
	title = "My Title"
	desc = "My $EFFECT$"
	tooltip = "My Tooltip"
	soundeffect = "blah.audio"
	icon = "nice.dds"
	style = good
}



send_interface_message = {
	type = my_message_type
	add_gold = 50
}
// Will output:
	Title = My Title
	Description = My Add 50 Gold
	Tooltip = My Tooltip


send_interface_message = {
	type = my_message_type
	desc = {
		desc = "My Start Line"
		desc = linebreak
		desc = "My $EFFECT$"
	}
	title = "My Cooler Title"
	tooltip = "$DESCRIPTION$"
	add_gold = 50
}

// Will output:
	Title = My Cooler Title
	Description = My Start Line \n My Add 50 Gold
	Tooltip = My Start Line \n My Add 50 Gold
