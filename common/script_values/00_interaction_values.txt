golden_obligation_value = {
	if = {
		limit = { 
			ransom_cost_value < medium_gold_value 
			ransom_cost_value > minor_gold_value 
		}
		value = minor_gold_value
	}
	else_if = {
		limit = {
			ransom_cost_value < medium_gold_value 
			ransom_cost_value < minor_gold_value 
		}
		value = ransom_cost_value
	}
	else = {
		value = medium_gold_value
	}
}

ransom_cost_value = {
	value = ransom_cost
	# Some cultures are better at ransoming than others.
	if = {
		limit = {
			exists = imprisoner
			imprisoner.culture = { has_cultural_parameter = can_demand_higher_ransoms_from_lower_tiers }
			# Kings and emperors are already worth more, so we just boost landless and ducal-tier or below.
			OR = {
				NOT = { exists = liege }
				highest_held_title_tier <= tier_duchy
			}
		}
		multiply = 1.5
	}
	# Rich guests can pay a bit more...
	if = {
		limit = {
			NOT = { exists = liege }
			gold >= 100
		}
		add = 90
	}
}

half_ransom_cost_value = {
	value = {
		add = ransom_cost_value
		divide = 2
		min = 1
	}
}

half_increased_ransom_cost_value = {
	value = {
		add = increased_ransom_cost_value
		divide = 2
		min = 1
	}
}

increased_ransom_cost_value = {
	value = {
		add = ransom_cost_value
		multiply = 1.5
	}
}

increased_ransom_cost = {
	value = {
		add = ransom_cost
		multiply = 1.5
	}
}

grant_title_opinion_sum_baronies = {
	if = { # if no other titles present, calc for baronies
		limit = {
			any_in_list = {
				list = titles_to_grant
				tier = tier_barony
			}
		}

		every_in_list = {
			list = titles_to_grant
			limit = {
				tier = tier_barony
			}
			add = 20 # barony grant opinion
		}
	}
}

grant_title_opinion_sum_counties = {
	if = { # if no higher titles present, calc for counties
		limit = {
			any_in_list = {
				list = titles_to_grant
				tier = tier_county
			}
		}

		every_in_list = {
			list = titles_to_grant
			limit = {
				tier = tier_county
			}
			add = 40 # county grant opinion
		}
	}
}

grant_title_opinion_sum_duchies = {
	if = {
		limit = {
			any_in_list = {
				list = titles_to_grant
				tier = tier_duchy
			}
		}
		
		every_in_list = {
			list = titles_to_grant
			limit = {
				tier = tier_duchy
			}
			add = 60 # county grant opinion
		}
	}
}

grant_title_opinion_sum_kingdoms = {
	if = {
		limit = {
			any_in_list = {
				list = titles_to_grant
				tier = tier_kingdom
			}
		}
		
		every_in_list = {
			list = titles_to_grant
			limit = {
				tier = tier_kingdom
			}
			add = 80 # kingdom grant opinion
		}
	}
}

grant_title_opinion_sum_empires = {
	if = {
		limit = {
			any_in_list = {
				list = titles_to_grant
				tier = tier_empire
			}
		}
		
		every_in_list = {
			list = titles_to_grant
			limit = {
				tier = tier_empire
			}
			add = 100 # empire grant opinion
		}
	}
}

# Used in the corresponding character interaction
# when granting a title to the member of a faction.
grant_title_opinion_sum_discontent_calc = {
	value = 0

	add = {
		if = {
			limit = {
				grant_title_opinion_sum_empires > 0
			}
			add = {
				value = grant_title_opinion_sum_empires
				multiply = 0.6
			}
		}
		if = {
			limit = {
				grant_title_opinion_sum_kingdoms > 0
			}
			add = {
				value = grant_title_opinion_sum_kingdoms
				divide = 2
			}
		}
		if = {
			limit = {
				grant_title_opinion_sum_duchies > 0
			}
			add = {
				value = grant_title_opinion_sum_duchies
				divide = 3
			}
		}
		if = {
			limit = {
				grant_title_opinion_sum_counties > 0
			}
			add = {
				value = grant_title_opinion_sum_counties
				divide = 4
			}
		}
		if = {
			limit = {
				grant_title_opinion_sum_baronies > 0
			}
			add = {
				value = grant_title_opinion_sum_baronies
				divide = 4
			}
		}
	}

	# Discontent should *drop* when someone is granted a title
	multiply = -1
}

council_position_locked_value = {
	value = 25
}

marriage_fertile_age_value = {
	value = {
		add = 16
		# Warcraft
		subtract = {
			value = scope:secondary_recipient.age
			divide = scope:secondary_recipient.racial_age_multiplier_value
		}
		add = {
			value = scope:secondary_actor.age
			divide = scope:secondary_actor.racial_age_multiplier_value
		}
	}
}

marriage_fertile_age_reverse_value = {
	value = {
		add = 16
		# Warcraft
		subtract = {
			value = scope:secondary_actor.age
			divide = scope:secondary_actor.racial_age_multiplier_value
		}
		add = {
			value = scope:secondary_recipient.age
			divide = scope:secondary_recipient.racial_age_multiplier_value
		}
	}
}

marriage_female_fertility_cutoff_age_value = {
	# Warcraft
	value = female_fertility_age_value

}

offer_vassalage_acceptance_value = {
	value = {
		add = -35
		if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 80 }
				}
			}
			add = {
				value = 33
			}
		}
		else_if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 70 }
				}
			}
			add = {
				value = 30
			}
		}
		else_if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 60 }
				}
			}
			add = {
				value = 25
			}
		}
		else_if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 50 }
				}
			}
			add = {
				value = 20
			}
		}
		else_if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 40 }
				}
			}
			add = {
				value = 15
			}
		}
		else_if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 30 }
				}
			}
			add = {
				value = 10
			}
		}
		else_if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 20 }
				}
			}
			add = {
				value = 8
			}
		}
		else_if = {
			limit = {
				scope:actor.culture = {
					cultural_acceptance = { target = scope:recipient.culture value >= 10 }
				}
			}
			add = {
				value = 5
			}
		}
	}
}

vassal_claim_liege_title_interaction_highlight_value = {
	value = {
		add = monumental_prestige_value
		if = {
			limit = {
				scope:actor.prestige_level > scope:recipient.prestige_level
			}
			subtract = {
				value = medium_prestige_value
				multiply = scope:actor.prestige_level
			}
		}
		else_if = {
			limit = {
				scope:actor.prestige_level < scope:recipient.prestige_level
			}
			add = {
				value = medium_prestige_value
				multiply = scope:recipient.prestige_level
			}
		}
	}
}

one_and_a_half_times_current_military_strength = {
	value = {
		add = current_military_strength
		multiply = 1.5
	}
}

twice_current_military_strength = {
	value = {
		add = current_military_strength
		multiply = 2
	}
}