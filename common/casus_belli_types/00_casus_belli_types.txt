debug_war = {
	group = testing
	
	combine_into_one = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		debug_only = yes
	}
	allowed_against_character = {
	
	}
	target_titles = all
	target_title_tier = all
	
	on_declaration = {
		on_declared_war = yes
	}
	
	cost = {
		#gold = scope:attacker.diplomacy
		#piety = 1
		#prestige = 1
	}

	on_victory_desc = {
		desc = debug_war_victory_desc
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		every_in_list = {
			list = target_titles
			change_title_holder_include_vassals = {
				holder = scope:attacker
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
				
		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		desc = debug_war_white_peace_desc
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		desc = debug_war_white_peace_desc
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		# Truce
		add_truce_attacker_defeat_effect = yes
	}
	
	on_invalidated = {
	}
	
	on_invalidated_desc = {
		desc = debug_war_invalidated_desc
	}
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "DEBUG_WAR_NAME"
	cb_name_no_target = "DEBUG_WAR_NAME_FALLBACK"
	
	interface_priority = 0
	
	#attacker_ticking_warscore = NWar::ATTACKER_TICKING_WAR_SCORE
	#attacker_ticking_warscore_delay = NWar::ATTACKER_TICKING_WAR_SCORE_DELAY_DAYS # e.g. { months = 12 }
	#defender_ticking_warscore = NWar::DEFENDER_TICKING_WAR_SCORE
	#defender_ticking_warscore_delay = NWar::DEFENDER_TICKING_WAR_SCORE_DELAY_DAYS # e.g. { months = 12 }
	#ticking_war_score_targets_entire_realm = yes
	attacker_wargoal_percentage = 0.8
	
	should_show_war_goal_subview = yes
}

debug_artifact_war = {
	group = testing
	
	allowed_for_character = {
		debug_only = yes
	}
	allowed_against_character = {
		scope:defender = {
			has_any_artifact = yes
		}
	}
	
	on_declaration = {
		on_declared_war = yes
	}
	
	cost = {
	}

	on_victory_desc = {
		desc = debug_artifact_war_victory_desc
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		# transfer artifacts
		scope:defender = {
			every_character_artifact = {
				set_owner = scope:attacker
			}
		}
				
		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		desc = debug_artifact_war_white_peace_desc
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		desc = debug_artifact_war_defeat_desc
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Truce
		add_truce_attacker_defeat_effect = yes
	}
	
	on_invalidated = {
	}
	
	on_invalidated_desc = {
		desc = debug_artifact_war_invalidated_desc
	}
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "DEBUG_ARTIFACT_WAR_NAME"
	cb_name_no_target = "DEBUG_ARTIFACT_WAR_NAME_FALLBACK"
	
	interface_priority = 0
	
	attacker_wargoal_percentage = 0.8
	
	should_show_war_goal_subview = no
}
