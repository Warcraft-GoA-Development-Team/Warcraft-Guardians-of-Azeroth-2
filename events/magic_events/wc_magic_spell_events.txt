namespace = wc_magic_spell_events

wc_magic_spell_events.0001 = {
    title = wc_magic_spell_events.0001.title
    desc = wc_magic_spell_events.0001.desc
    theme = order

    left_portrait = {
        character = root
    }

    right_portrait = {
        character = scope:ice_caster
        animation = disapproval
    }

    immediate = {
        remove_character_modifier = wc_frost_armor_modifier
        add_trait = ice_block
    }

    option = {
        name = wc_magic_spell_events.0001.a

        trigger_event = {
            id = wc_magic_spell_events.0002
            months = 6
        }
    }
}

wc_magic_spell_events.0002 = {
    hidden = yes
    immediate = {
        remove_trait = ice_block
    }
}

wc_magic_spell_events.1001 = {
    hidden = yes
    immediate = {
        remove_trait = polymorph
        add_prowess_skill = {
            value = scope:polymorph_prowess
            multiply = -1
        }
    }
}

wc_magic_spell_events.2001 = {
    type = character_event
    title = wc_magic_spell_events.2001.title
    desc = wc_magic_spell_events.2001.desc
    theme = order

    left_portrait = {
        character = root
        animation = toast
    }

    option = {
        name = wc_magic_spell_events.2001.a

        custom_tooltip = wc_magic_spell_events.2001.a.tt
        set_variable = {
            name = selected_refreshment
            value = flag:food
        }
    }

    option = {
        name = wc_magic_spell_events.2001.b

        custom_tooltip = wc_magic_spell_events.2001.b.tt
        set_variable = {
            name = selected_refreshment
            value = flag:drink
        }
    }
}

wc_magic_spell_events.2101 = {
    type = activity_event
    title = wc_magic_spell_events.2101.title
    desc = wc_magic_spell_events.2101.desc
    theme = feast_activity
    override_icon = {
        reference = "gfx/interface/icons/icon_order_magic.dds"
    }

    left_portrait = {
        character = root
        animation = toast_goblet
    }

    immediate = {
        remove_character_modifier = wc_conjure_feast_modifier
        if = {
            limit = {
                has_variable = conjure_feast_duration
            }
            var:conjure_feast_duration = {
                save_scope_as = duration
            }
            remove_variable = conjure_feast_duration
        }
        else = {
            save_scope_value_as = {
                name = duration
                value = wc_spell_conjure_refreshment_duration_days_value
            }
        }
        scope:activity = {
            set_variable = {
                name = duration
                value = scope:duration
            }
        }
    }

    option = {
        name = wc_magic_spell_events.2101.a

        custom_tooltip = wc_magic_spell_events.2101.a.tt
        scope:activity = {
            set_variable = {
                name = selected_refreshment
                value = flag:food
            }
            hidden_effect = {
                every_attending_character = {
                    add_character_modifier = {
                        modifier = wc_conjure_food_modifier
                        days = wc_current_spell_duration
                    }
                }
            }
        }
    }

    option = {
        name = wc_magic_spell_events.2101.b

        custom_tooltip = wc_magic_spell_events.2101.b.tt
        scope:activity = {
            set_variable = {
                name = selected_refreshment
                value = flag:drink
            }
            hidden_effect = {
                every_attending_character = {
                    add_character_modifier = {
                        modifier = wc_conjure_drink_modifier
                        days = wc_current_spell_duration
                    }
                }
            }
        }
    }

    after = {
        trigger_event = feast.7002
    }
}

wc_magic_spell_events.3001 = {
    hidden = yes

    trigger = {
        has_character_flag = chronomancy_active
        OR = {
            has_variable_list = chronomancy_trait_list
            has_variable_list = chronomancy_modifier_list
        }
    }

    immediate = {
        save_scope_as = chronomancer
        every_character_trait = {
            limit = {
                NOT = {
                    has_trait_category = lifestyle
                }
            }
            save_scope_as = this_trait
            root = {
                remove_trait = scope:this_trait
            }
        }
        every_in_list = {
            variable = chronomancy_trait_list
            save_scope_as = this_trait
            root = {
                add_trait = scope:this_trait
            }
        }
        clear_variable_list = chronomancy_trait_list

        set_local_variable = { name = modifier_counter value = 0 }

        while = {
            limit = {
                variable_list_size = {
                    name = chronomancy_modifier_list
                    value > local_var:modifier_counter
                }
            }

            ordered_in_list = {
                variable = chronomancy_modifier_list
                position = local_var:modifier_counter
                save_scope_as = modifier
            }
            ordered_in_list = {
                variable = chronomancy_modifier_duration_list
                position = local_var:modifier_counter
                save_scope_as = duration
            }


            switch = {
                trigger = scope:modifier
                flag:wc_conjure_feast_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_conjure_feast_modifier } }
                flag:wc_conjure_drink_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_conjure_drink_modifier } }
                flag:wc_conjure_food_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_conjure_food_modifier } }
                flag:wc_haste_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_haste_modifier } }
                flag:wc_scry_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_scry_modifier } }
                flag:wc_counterspell_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_counterspell_modifier } }
                flag:wc_cauterized_wound_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_cauterized_wound_modifier } }
                flag:wc_flame_wall_good_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_flame_wall_good_modifier } }
                flag:wc_backdraft_proc = { chronomancy_restore_modifier_effect = { MODIFIER = wc_backdraft_proc } }
                flag:wc_empowered_fire_elemental_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_empowered_fire_elemental_modifier } }
                flag:wc_summon_fire_elemental_modifier = { chronomancy_restore_modifier_effect = { MODIFIER = wc_summon_fire_elemental_modifier } }
            }

            change_local_variable = {
                name = modifier_counter
                add = 1
            }
        }

        send_interface_toast = {
            title = chronomancy.toast
            desc = chronomancy.toast.desc
            left_icon = root
        }

        clear_variable_list = chronomancy_modifier_list
        clear_variable_list = chronomancy_modifier_duration_list
        remove_character_flag = chronomancy_active
    }
}