# Events for handling the Meet Peers activity

namespace = playdate

#####################
## SETUP AND MAINTENANCE EVENTS
## 0000-0999
## by Linnéa Thimrén
#####################
#playdate.0001 - Trigger events
#playdate.0010 - Double booked - cancellation event
#playdate.0020 - The host has died during the feast - event for guests
#playdate.0021 - The host has been imprisoned - for host
#playdate.0022 - The host has been imprisoned - for guests
#playdate.9999 - Feast reroll event - in case no event is available

######################
## INVITATION AND START EVENTS
## 1000-2999
## by Linnéa Thimrén
######################
#playdate.1001 - Standard invitation event
#playdate.2001 - Generic start event for host
#playdate.2003 - No guests showed up
#playdate.2501 - Generic start event for guests

#################################
## ONGOING EVENTS
## 3000-8999
## by Linnéa Thimrén
#################################
#playdate.3001 - Get friend or victim
#playdate.3002 - Discover secret or spend time with your crush/friend
#playdate.3003 - Spend time with cat
#playdate.3004 - Spend time with dog
#playdate.3005 - Someone learns one of your secrets
#playdate.3006 - Book nerd
#playdate.3007 - Climb tree
#playdate.3008 - Go for a swim
#playdate.3009 - Snow fight!
#playdate.3010 - Go to local market
#playdate.3011 - Playing house
#playdate.3012 - Play at being knights
#playdate.3013 - Meet a witch
#playdate.3014 - Hang with a priest

#################################
## END EVENTS
## 9000-9999
## by Linnéa Thimrén
#################################
#playdate.9000 - End events setup
#playdate.9001 - Host end event
#playdate.9002 - Guest end event

#######################################################################################


#####################
## SETUP AND MAINTENANCE EVENTS
## 0000 - 0999
#####################

# Trigger events
# by Linnéa Thimrén
playdate.0001 = {
	hidden = yes

	immediate = {
		#Give all participants start playdate events
		scope:activity = {
			every_participant = {
				if = { #You're busy at another playdate! (invites were sent the same day, but you agreed to another playdate after this one )
					limit = {
						exists = var:booked_for_a_party
						var:booked_for_a_party = { NOT = { this = scope:activity.activity_owner } }
					}
					trigger_event = playdate.0010
				}
				else = {
					trigger_event = {
						on_action = playdate_start_events
						days = playdate_initial_event_delay
					}
				}
			}
		}

		trigger_event = {
			id = playdate.9000
			days = max_playdate_duration
		}
	}
}


# Double booked - cancellation event
# by Linnéa Thimrén
playdate.0010 = {
	type = letter_event
	opening = {
		desc = feast.1501.opening
	}
	desc = playdate.0010.desc
	sender = scope:activity.activity_owner

	immediate = {
		var:booked_for_a_party = {
			save_scope_as = other_host
		}
		scope:activity = {
			decline_invitation_for_character = root
		}
		scope:activity.activity_owner = {
			add_opinion = {
				target = root
				modifier = insult_opinion
				opinion = -10
			}
		}
	}

	option = {
		name = playdate.0010.a
		
	}
}

#The host has died during the feast - event for guests
# by Linnéa Thimrén
playdate.0020 = {
	type = character_event
	title = playdate.0020.t
	desc = playdate.0020.desc
	theme = playdate_activity
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_illness.dds"
	}
	left_portrait = {
		character = scope:host
	}
	
	option = {
		name = playdate.0020.a
		custom_tooltip = playdate.0020.a.tt
	}
}


#The host has been imprisoned - for host
# by Linnéa Thimrén
playdate.0021 = {
	type = character_event
	title = playdate.0020.t
	desc = playdate.0021.desc
	theme = playdate_activity
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_prison.dds"
	}
	left_portrait = {
		character = scope:host
		animation = prison_dungeon
	}

	immediate = {
		hosted_successful_playdate_interrupted_effect = yes
	}
	
	option = {
		name = playdate.0021.a
	}
}

#The host has been imprisoned - for guests
# by Linnéa Thimrén
playdate.0022 = {
	type = character_event
	title = playdate.0020.t
	desc = playdate.0022.desc
	theme = playdate_activity
	override_icon = {
		reference = "gfx/interface/icons/event_types/type_prison.dds"
	}
	left_portrait = {
		character = scope:host
		animation = prison_dungeon
	}
	
	option = {
		name = playdate.0021.a
	}
}


# Feast reroll event - in case no event is available
playdate.9999 = {
	hidden = yes

	trigger = {
		exists = scope:activity
	}

	immediate = {
		playdate_wrap_up_or_fire_random_event_effect = yes	
	}
}

######################
## INVITATION AND START EVENTS
## 1000-2999
## by Linnéa Thimrén
######################

# Standard invitation event
# by Linnéa Thimrén
playdate.1001 = {
	type = letter_event
	opening = {
		desc = feast.1501.opening
	}
	desc = {
		desc = playdate.1001.opening_desc
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						reverse_opinion = {
							target = scope:sender
							value > 50
						}
						has_relation_friend = scope:sender
						scope:sender = { has_relation_crush = root }
					}
				}
				desc = playdate.1001.host_likes_me
			}
			triggered_desc = {
				trigger = {
					OR = {
						reverse_opinion = {
							target = scope:sender
							value < -1
						}
						has_relation_bully = scope:sender
						has_relation_victim = scope:sender
					}
				}
				desc = playdate.1001.host_dislikes_me
			}
			desc = playdate.1001.host_gets_along_with_me
		}
	}
	sender = scope:sender

	trigger = {
		is_available_for_child_activity_trigger = yes
		exists = scope:activity.activity_owner
		NOT = { exists = var:is_handling_playdate_invitation }
	}

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		if = {
			limit = {
				is_available_for_child_activity_trigger = yes
				exists = var:is_handling_playdate_invitation
			}
			trigger_event = {
				id = playdate.1001
				days = 1
			}
		}
	}

	immediate = {
		scope:activity.activity_owner = {
			save_scope_as = sender
		}
		scope:activity.activity_province = {
			barony = {
				save_scope_as = barony
			}
		}
		set_variable = {
			name = is_handling_playdate_invitation
			value = scope:sender
			days = 20
		}
	}

	option = {
		name = playdate.1001.a
		play_music_cue = mx_cue_banquet
		scope:activity = {
			accept_invitation_for_character = prev
		}
		set_variable = {
			name = booked_for_a_party
			value = scope:sender
			days = 20
		}
		stress_impact = {
			gregarious = minor_stress_loss
			curious = minor_stress_loss
			shy = minor_stress_gain
		}
		ai_chance = {
			base = 100
			opinion_modifier = {
				opinion_target = scope:sender
			}
		}
	}

	option = {
		name = playdate.1001.b
		scope:activity = {
			decline_invitation_for_character = prev
		}
		stress_impact = {
			shy = minor_stress_loss
			gregarious = minor_stress_gain
			curious = minor_stress_gain
		}
		if = {
			limit = {
				faith = {
					has_doctrine_parameter = mandatory_feast_attendance
				}
			}
			add_piety = medium_piety_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_boldness = 0.2
			}
			modifier = {
				add = -50
				faith = {
					has_doctrine_parameter = mandatory_feast_attendance
				}
			}
		}
	}

	after = {
		remove_variable = is_handling_playdate_invitation
	}
}


# Your (AI) child has been invited to a playdate, allow them to go?
# by Linnéa Thimrén
playdate.1002 = {
	type = letter_event
	opening = {
		desc = feast.1501.opening
	}
	desc = {
		desc = playdate.1002.opening_desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:sender = {
						OR = {
							opinion = {
								target = scope:child_scope
								value > 50
							}
							has_relation_friend = scope:child_scope
							has_relation_crush = scope:child_scope
						}
					}
				}
				desc = playdate.1002.host_likes_child
			}
			triggered_desc = {
				trigger = {
					scope:sender = {
						OR = {
							opinion = {
								target = scope:child_scope
								value < -1
							}
							has_relation_bully = scope:child_scope
							has_relation_victim = scope:child_scope
						}
					}
				}
				desc = playdate.1002.host_dislikes_child
			}
			desc = playdate.1002.host_gets_along_with_child
		}
	}
	sender = scope:sender

	trigger = {
		scope:child_scope = {
			is_available_for_child_activity_trigger = yes
		}
		exists = scope:activity.activity_owner
		NOT = { exists = var:is_handling_playdate_invitation }
	}

	on_trigger_fail = { #Trigger invitation again if it was blocked because the character was handling another invitation
		if = {
			limit = {
				scope:child_scope = {
					is_available_for_child_activity_trigger = yes
				}
				exists = var:is_handling_playdate_invitation
			}
			trigger_event = {
				id = playdate.1002
				days = 1
			}
		}
	}

	immediate = {
		scope:activity.activity_owner = {
			save_scope_as = sender
		}
		scope:activity.activity_province = {
			barony = {
				save_scope_as = barony
			}
		}
		set_variable = {
			name = is_handling_playdate_invitation
			value = scope:sender
			days = 20
		}
	}

	option = {
		name = playdate.1002.a
		play_music_cue = mx_cue_banquet
		scope:activity = {
			accept_invitation_for_character = scope:child_scope
		}
		scope:child_scope = {
			set_variable = {
				name = booked_for_a_party
				value = scope:sender
				days = 20
			}
		}
		stress_impact = {
			gregarious = minor_stress_loss
			reveler_1 = minor_stress_impact_loss
			reveler_2 = minor_stress_impact_loss
			reveler_3 = minor_stress_impact_loss
		}
	}

	option = {
		name = playdate.1002.b
		scope:activity = {
			decline_invitation_for_character = scope:child_scope
		}
		if = {
			limit = {
				faith = {
					has_doctrine_parameter = mandatory_feast_attendance
				}
			}
			add_piety = medium_piety_loss
		}
		stress_impact = {
			callous = minor_stress_loss
			compassionate = minor_stress_gain
		}
	}

	after = {
		remove_variable = is_handling_playdate_invitation
	}
}


## START EVENTS FOR HOST

# Generic start event for host
# by Linnéa Thimrén
scripted_trigger playdate_2001_guest_of_interest_1_trigger = {
	playdate_default_participant_trigger = yes
	NOR = {
		has_relation_rival = root
		has_relation_bully = root
	}
	#Don't care about family-members in the same court
	NOT = {
		is_close_family_of = root
		is_in_the_same_court_as_or_guest = root
	}
	#To avoid awkward loc we don't want two siblings
	NOR = {
		AND = {
			exists = scope:guest_of_interest_1
			is_sibling_of = scope:guest_of_interest_1
		}
		AND = {
			exists = scope:guest_of_interest_2
			is_sibling_of = scope:guest_of_interest_2
		}
	}
}

scripted_trigger playdate_2001_guest_of_interest_4_trigger = {
	playdate_default_participant_trigger = yes
	OR = {
		has_relation_rival = root
		has_relation_potential_rival = root
		has_relation_bully = root
	}
	NOR = {
		AND = {
			exists = scope:guest_of_interest_1
			this = scope:guest_of_interest_1
		}
		AND = {
			exists = scope:guest_of_interest_2
			this = scope:guest_of_interest_2
		}
		AND = {
			exists = scope:guest_of_interest_3
			this = scope:guest_of_interest_3
		}
	}
}

playdate.2001 = {
	type = character_event
	title = playdate.2001.t
	desc = {
		desc = playdate.2001.desc_opening
		first_valid = {
			triggered_desc = {
			    trigger = {
					exists = scope:guest_of_interest_1
					exists = scope:guest_of_interest_2
					exists = scope:guest_of_interest_3
			    }
			    desc = playdate.2001.desc_guest_of_interest_1_2_3
			}
			triggered_desc = {
			    trigger = {
					exists = scope:guest_of_interest_1
					exists = scope:guest_of_interest_2
			    }
			    desc = playdate.2001.desc_guest_of_interest_1_and_2
			}
			triggered_desc = {
			    trigger = {
					exists = scope:guest_of_interest_1
			    }
			    desc = playdate.2001.desc_guest_of_interest_1
			}
			desc = playdate.2001.desc
		}
		triggered_desc = {
		    trigger = {
				exists = scope:guest_of_interest_4
		    }
		    desc = playdate.2001.desc_guest_of_interest_4
		}
	}
	theme = playdate_activity
	left_portrait = scope:portrait_1
	right_portrait = scope:portrait_2
	lower_left_portrait = scope:portrait_3
	lower_right_portrait = scope:portrait_4

	trigger = {
		this = scope:activity.activity_owner
	}

	immediate = {
		play_music_cue = mx_cue_banquet

		scope:activity = {
			#save down interesting scopes
			if = {
				limit = {
					any_participant = {
						playdate_2001_guest_of_interest_1_trigger = yes
					}
				}
				random_participant = {
					limit = { #Let's grab your liege if they're here
						playdate_2001_guest_of_interest_1_trigger = yes
						target_is_vassal_or_below = root
					}
					alternative_limit = { #Otherwise, a powerful vassal
						playdate_2001_guest_of_interest_1_trigger = yes
						is_powerful_vassal_of = root
					}
					alternative_limit = { #Or just any good relationship
						playdate_2001_guest_of_interest_1_trigger = yes
					}
					save_scope_as = guest_of_interest_1
					save_scope_as = portrait_1
				}
				if = {
					limit = {
						any_participant = {
							playdate_2001_guest_of_interest_1_trigger = yes
							NOT = { this = scope:guest_of_interest_1 }
						}
					}
					random_participant = {
						limit = { #We would rather have someone interesting
							playdate_2001_guest_of_interest_1_trigger = yes
							OR = {
								root = { has_relation_crush = prev }
								has_relation_friend = root
							}
							NOT = { this = scope:guest_of_interest_1 }
						}
						alternative_limit = { #We would rather have someone interesting
							playdate_2001_guest_of_interest_1_trigger = yes
							is_of_major_interest_to_root_trigger = yes
							NOT = { this = scope:guest_of_interest_1 }
						}
						alternative_limit = {
							playdate_2001_guest_of_interest_1_trigger = yes
							NOT = { this = scope:guest_of_interest_1 }
						}
						save_scope_as = guest_of_interest_2
						save_scope_as = portrait_2
					}
					if = {
						limit = {
							any_participant = {
								playdate_2001_guest_of_interest_1_trigger = yes
								NOR = {
									this = scope:guest_of_interest_1
									this = scope:guest_of_interest_2
								}
							}
						}
						random_participant = {
							limit = { #We would rather have someone interesting
								playdate_2001_guest_of_interest_1_trigger = yes
								is_of_major_interest_to_root_trigger = yes
								NOR = {
									this = scope:guest_of_interest_1
									this = scope:guest_of_interest_2
								}
							}
							alternative_limit = {
								playdate_2001_guest_of_interest_1_trigger = yes
								NOR = {
									this = scope:guest_of_interest_1
									this = scope:guest_of_interest_2
								}
							}
							save_scope_as = guest_of_interest_3
							save_scope_as = portrait_3
						}
					}
				}
			}
			if = {
				limit = {
					any_participant = {
						playdate_2001_guest_of_interest_4_trigger = yes
					}
				}
				random_participant = {
					limit = {
						playdate_2001_guest_of_interest_4_trigger = yes
					}
					save_scope_as = guest_of_interest_4
					save_scope_as = portrait_4
				}
			}
		}

		if = {
			limit = {
				NOT = {
					exists = scope:portrait_1
				}
			}
			save_scope_as = portrait_1
		}
	}

	option = {
		name = playdate.2001.a
		custom_tooltip = playdate.2001.a.tt
	}
}

# No guests showed up
# by Linnéa Thimrén
playdate.2003 = {
	type = character_event
	title = playdate.2003.t
	desc = playdate.2003.desc
	theme = playdate_activity
	left_portrait = scope:activity.activity_owner
	
	immediate = {
		scope:activity = {
			complete_activity = no
		}
	}

	option = {
		name = playdate.2003.a
		stress_impact = {
			base = minor_stress_impact_gain
			gregarious = medium_stress_impact_gain
			charming = medium_stress_impact_gain
			shy = minor_stress_impact_loss
			pensive = minor_stress_impact_loss
		}
	}
}


## START EVENTS FOR GUESTS

# Generic start event for guests
# by Linnéa Thimrén
playdate.2501 = {
	type = character_event
	title = playdate.2501.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_relation_rival = scope:activity.activity_owner
						has_relation_bully = scope:activity.activity_owner
						has_relation_victim = scope:activity.activity_owner
						reverse_opinion = {
							target = scope:activity.activity_owner
							value < -40
						}
					}
				}
				desc = playdate.2501.dislikes_host
			}
			desc = playdate.2501.likes_host
		}
	}
	theme = playdate_activity
	left_portrait = {
		character = scope:activity.activity_owner
		animation = happiness
	}

	trigger = {
		NOT = { this = scope:activity.activity_owner }
	}

	immediate = {
		play_music_cue = mx_cue_banquet
		trigger_event = { on_action = playdate_event_selection days = 15 }
	}

	option = {
		name = {
			trigger = {
				OR = {
					has_relation_rival = scope:activity.activity_owner
					has_relation_bully = scope:activity.activity_owner
					has_relation_victim = scope:activity.activity_owner
					reverse_opinion = {
						target = scope:activity.activity_owner
						value < -40
					}
				}
			}
			text = playdate.2501.a_dislike
		}
		name = {
			trigger = { always = yes }
			text = playdate.2501.a
		}
	}
}



#################################
## ONGOING EVENTS
## 3000-8999
## by Linnéa Thimrén
#################################

# Get friend or victim
# by Linnéa Thimrén
playdate.3001 = {
	type = character_event
	title = playdate.3001.t
	desc = playdate.3001.desc
	theme = playdate_activity
	override_background = { event_background = courtyard }
	left_portrait = {
		character = scope:guest
		animation = fear
	}
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3001 }
		scope:activity = {
			any_participant = {
				playdate_default_participant_trigger = yes
				NOR = {
					has_relation_friend = root
					has_relation_victim = root
				}
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3001
			value = yes
		}
		scope:activity = {
			random_participant = {
				limit = {
					playdate_default_participant_trigger = yes
					NOR = {
						has_relation_friend = root
						has_relation_victim = root
					}
				}
				weight = {
					base = 1
					compare_modifier = { #More likely to pick someone bad at fighting
						value = prowess
						multiplier = -2
					}
					#More likely the closer to your age they are
					playdate_close_age_scripted_modifier = yes
				}
				save_scope_as = guest
			}
		}
	}

	option = { #help them
		name = playdate.3001.a
		set_relation_friend = { reason = friend_saved_as_children target = scope:guest }
		scope:guest = {
			add_opinion = {
				target = root
				modifier = kindness_opinion
				opinion = 30
			}
		}
		random = {
			chance = 10
			send_interface_toast = {
				title = playdate.3001.a_injured
				left_icon = root
				increase_wounds_no_death_effect = { REASON = fight }
			}
		}
		stress_impact = {
			callous = medium_stress_impact_gain
			rowdy = medium_stress_impact_loss
			pensive = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.75
			}
		}
	}

	option = { #scream for help
		name = playdate.3001.b
		add_prestige = medium_prestige_loss
		scope:guest = {
			add_opinion = {
				target = root
				modifier = kindness_opinion
				opinion = 30
			}
		}
		stress_impact = {
			callous = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			rowdy = minor_stress_impact_gain
			pensive = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = -1
			}
		}
	}

	option = { #join in
		name = playdate.3001.c
		if = {
			limit = {
				NOR = {
					has_relation_bully = scope:guest
					has_relation_victim = scope:guest
				}
			}
			set_relation_victim = scope:guest
		}
		scope:guest = {
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -30
			}
			increase_wounds_no_death_effect = { REASON = fight }
		}
		stress_impact = {
			rowdy = medium_stress_impact_loss
			callous = minor_stress_impact_loss
			sadistic = medium_stress_impact_loss
			compassionate = medium_stress_impact_gain
			pensive = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Discover secret or spend time with your crush/friend
# by Linnéa Thimrén
scripted_trigger playdate_3002_secret_trigger = {
	NOT = {
		any_secret_knower = { this = root }
	}
	secret_owner = { save_temporary_scope_as = owner_check }
	scope:activity = {
		any_participant = {
			NOT = { this = scope:owner_check }
		}
	}
}

scripted_trigger playdate_3002_close_participant_trigger = {
	playdate_default_participant_trigger = yes
	NOT = { any_secret = { this = scope:secret } }
}

playdate.3002 = {
	type = character_event
	title = playdate.3002.t
	desc = playdate.3002.desc
	theme = playdate_activity
	left_portrait = scope:close_participant
	right_portrait = scope:secret_holder
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3002 }
		scope:activity = {
			any_participant = {
				playdate_default_participant_trigger = yes
			}
			OR = {
				activity_province.county.holder = {
					any_courtier_or_guest = {
						any_secret = {
							playdate_3002_secret_trigger = yes
						}
					}
				}
				any_participant = {
					any_secret = {
						playdate_3002_secret_trigger = yes
					}
				}
			}
		}
	}

	weight_multiplier = {
		base = 0.5
		modifier = { #More likely to trigger if you have a crush/friend there to distract you
			add = 0.5
			scope:activity = {
				any_participant = {
					playdate_default_participant_trigger = yes
					OR = {
						root = { has_relation_crush = prev }
						has_relation_friend = root
					}
				}
				OR = {
					activity_province.county.holder = {
						any_courtier_or_guest = {
							any_secret = {
								playdate_3002_secret_trigger = yes
							}
						}
					}
					any_participant = {
						any_secret = {
							playdate_3002_secret_trigger = yes
						}
					}
				}
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3002
			value = yes
		}
		scope:activity = {
			#Find a secret and a secret holder
			if = {
				limit = { #Does a participant have a secret?
					any_participant = {
						any_secret = {
							playdate_3002_secret_trigger = yes
						}
					}
				}
				random_participant = {
					limit = {
						any_secret = {
							playdate_3002_secret_trigger = yes
						}
					}
					save_scope_as = secret_holder
					random_secret = {
						limit = {
							playdate_3002_secret_trigger = yes
						}
						save_scope_as = secret
					}
				}
			}
			else = { #If no participant have a secret you get a random courtier's
				activity_province.county.holder = {
					random_courtier_or_guest = {
						limit = {
							any_secret = {
								playdate_3002_secret_trigger = yes
							}
						}
						save_scope_as = secret_holder
						random_secret = {
							limit = {
								playdate_3002_secret_trigger = yes
							}
							save_scope_as = secret
						}
					}
				}
			}

			# Save crush/friend/person
			random_participant = {
				limit = {
					playdate_3002_close_participant_trigger = yes
					root = { has_relation_crush = prev }
				}
				alternative_limit = {
					playdate_3002_close_participant_trigger = yes
					has_relation_friend = root
				}
				alternative_limit = {
					playdate_3002_close_participant_trigger = yes
				}
				weight = {
					base = 1
					opinion_modifier = { #More likely to be picked if they like you
						opinion_target = root
						multiplier = 1
					}
				}
				save_scope_as = close_participant
			}
		}
	}

	option = { # Spend time with crush/friend
		name = playdate.3002.a
		
		scope:close_participant = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 40
			}
		}
		stress_impact = {
			charming = medium_stress_impact_loss
			curious = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
		}
	}

	option = { #Learn the secret!
		name = playdate.3002.b
		scope:secret = {
			reveal_to = root
		}
		scope:close_participant = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = -10
			}
		}
		stress_impact = {
			charming = medium_stress_impact_gain
			curious = medium_stress_impact_loss
			bossy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Spend time with cat
# by Linnéa Thimrén
scripted_trigger playdate_3003_guest_trigger = {
	playdate_default_participant_trigger = yes
	any_owned_story = {
		OR = {
			story_type = story_cycle_pet_dog
			story_type = story_cycle_pet_cat
		}
	}
}

playdate.3003 = {
	type = character_event
	title = playdate.3003.t
	desc = {
		desc = playdate.3003.desc_opening
		first_valid = {
			triggered_desc = {
			    trigger = {
					exists = scope:bonding_cat
			    }
			    desc = {
			    	desc = playdate.3003.desc_bonding_cat_opening
			    	desc = playdate.3003.desc_bonding_cat
			    }
			}
			triggered_desc = {
			    trigger = {
					exists = scope:bonding_dog
			    }
			    desc = {
			    	desc = playdate.3003.desc_bonding_dog_opening
			    	desc = playdate.3003.desc_bonding_dog
			    }
			}
		}
	}
	theme = playdate_activity
	left_portrait = scope:guest

	trigger = {
		NOT = { exists = local_var:had_playdate_event_3003 }
		any_owned_story = {
			story_type = story_cycle_pet_cat
		}
		scope:activity = {
			any_participant = {
				playdate_3003_guest_trigger = yes
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3003
			value = yes
		}

		scope:activity = {	
			random_participant = {
				limit = {
					playdate_3003_guest_trigger = yes
				}
				weight = {
					base = 1
					modifier = { #More likely to pick someone who has a dog so you can take it...
						add = 2
						any_owned_story = {
							story_type = story_cycle_pet_dog
						}
					}
				}
				save_scope_as = guest
				if = { # Is it a cat or a dog they have?
					limit = {
						any_owned_story = {
							story_type = story_cycle_pet_dog
						}
					}
					random_owned_story = {
						limit = {
							story_type = story_cycle_pet_dog
						}
						save_scope_as = their_story
					}
					save_scope_value_as = {
						name = bonding_dog
						value = yes
					}
				}
				else = {
					random_owned_story = {
						limit = {
							story_type = story_cycle_pet_cat
						}
						save_scope_as = their_story
					}
					save_scope_value_as = {
						name = bonding_cat
						value = yes
					}
				}
			}
		}
	}

	option = { # You have a cute animal!!
		name = {
			trigger = { exists = scope:bonding_cat }
			text = playdate.3003.a_cat
		}
		name = {
			trigger = { exists = scope:bonding_dog }
			text = playdate.3003.a_dog
		}

		progress_towards_friend_effect = {
			REASON = friend_pet
			CHARACTER = scope:guest
			OPINION = default_friend_opinion
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			charming = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.75
			}
		}
	}

	option = { # Hmm, my dog now.
		name = playdate.3003.b
		trigger = {
			exists = scope:bonding_dog
			NOT = {
				any_owned_story = {
					story_type = story_cycle_pet_dog
				}
			}
		}
		scope:guest = {
			transfer_dog_story_cycle_to_effect = {
				CHARACTER = root
				STORY = scope:their_story
			}
		}
		if = {
			limit = {
				NOR = {
					has_relation_bully = scope:guest
					has_relation_victim = scope:guest
				}
			}
			set_relation_victim = scope:guest
			scope:guest = {
				add_opinion = {
					target = root
					modifier = hate_opinion
					opinion = -20
				}
			}
		}
		else = {
			progress_towards_rival_effect = {
				CHARACTER = scope:guest
				REASON = rival_guest_pet
				OPINION = default_rival_opinion
			}
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			charming = medium_stress_impact_gain
			greedy = medium_stress_impact_loss
			bossy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = 0.75
				ai_compassion = -0.75
			}
		}
	}

	option = { #Your pet looks like shit
		name = playdate.3003.c
		progress_towards_rival_effect = {
			CHARACTER = scope:guest
			REASON = rival_pet_insulted
			OPINION = default_rival_opinion
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			charming = medium_stress_impact_gain
			arrogant = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.75
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Spend time with dog
# by Linnéa Thimrén
playdate.3004 = {
	type = character_event
	title = playdate.3004.t
	desc = {
		desc = playdate.3004.desc_opening
		first_valid = {
			triggered_desc = {
			    trigger = {
					exists = scope:bonding_cat
			    }
			    desc = {	
			    	desc = playdate.3004.desc_bonding_cat_opening
			    	desc = playdate.3003.desc_bonding_cat
			    }
			}
			triggered_desc = {
			    trigger = {
					exists = scope:bonding_dog
			    }
			    desc = {
			    	desc = playdate.3004.desc_bonding_dog_opening
			    	desc = playdate.3003.desc_bonding_dog
			    }
			}
		}
	}
	theme = playdate_activity
	left_portrait = scope:guest

	trigger = {
		NOT = { exists = local_var:had_playdate_event_3003 }
		any_owned_story = {
			story_type = story_cycle_pet_dog
		}
		scope:activity = {
			any_participant = {
				playdate_3003_guest_trigger = yes
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3003
			value = yes
		}

		scope:activity = {	
			random_participant = {
				limit = {
					playdate_3003_guest_trigger = yes
				}
				weight = {
					base = 1
					modifier = { #More likely to pick someone who has a cat so you can take it...
						add = 2
						any_owned_story = {
							story_type = story_cycle_pet_cat
						}
					}
				}
				save_scope_as = guest
				if = { # Is it a cat or a cat they have?
					limit = {
						any_owned_story = {
							story_type = story_cycle_pet_cat
						}
					}
					random_owned_story = {
						limit = {
							story_type = story_cycle_pet_cat
						}
						save_scope_as = their_story
					}
					save_scope_value_as = {
						name = bonding_cat
						value = yes
					}
				}
				else = {
					random_owned_story = {
						limit = {
							story_type = story_cycle_pet_dog
						}
						save_scope_as = their_story
					}
					save_scope_value_as = {
						name = bonding_dog
						value = yes
					}
				}
			}
		}
	}

	option = { # You have a cute animal!!
		name = {
			trigger = { exists = scope:bonding_cat }
			text = playdate.3003.a_cat
		}
		name = {
			trigger = { exists = scope:bonding_dog }
			text = playdate.3003.a_dog
		}

		progress_towards_friend_effect = {
			REASON = friend_pet
			CHARACTER = scope:guest
			OPINION = default_friend_opinion
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			charming = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.75
			}
		}
	}

	option = { # Hmm, my cat now.
		name = playdate.3004.b
		trigger = {
			exists = scope:bonding_cat
			NOT = {
				any_owned_story = {
					story_type = story_cycle_pet_cat
				}
			}
		}
		scope:guest = {
			transfer_cat_story_cycle_to_effect = {
				CHARACTER = root
				STORY = scope:their_story
			}
		}
		if = {
			limit = {
				NOR = {
					has_relation_bully = scope:guest
					has_relation_victim = scope:guest
				}
			}
			set_relation_victim = scope:guest
			scope:guest = {
				add_opinion = {
					target = root
					modifier = hate_opinion
					opinion = -20
				}
			}
		}
		else = {
			progress_towards_rival_effect = {
				CHARACTER = scope:guest
				REASON = rival_guest_pet
				OPINION = default_rival_opinion
			}
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			charming = medium_stress_impact_gain
			greedy = medium_stress_impact_loss
			bossy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = 0.75
				ai_compassion = -0.75
			}
		}
	}

	option = { #Your pet looks like shit
		name = playdate.3004.c
		progress_towards_rival_effect = {
			CHARACTER = scope:guest
			REASON = rival_pet_insulted
			OPINION = default_rival_opinion
		}
		stress_impact = {
			compassionate = medium_stress_impact_gain
			charming = medium_stress_impact_gain
			arrogant = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.75
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Someone learns one of your secrets
# by Linnéa Thimrén
playdate.3005 = {
	type = character_event
	title = playdate.3005.t
	desc = playdate.3005.desc
	theme = playdate_activity
	left_portrait = {
		character = scope:guest
		animation = shock
	}
	lower_right_portrait = scope:secret_owner
	lower_center_portrait = scope:secret.secret_target
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3005 }
		scope:activity = {
			any_participant = {
				playdate_default_participant_trigger = yes
				save_temporary_scope_as = guest_check
				NOT = {
					any_known_secret = {
						OR = {
							secret_owner = root
							any_secret_knower = { this = root }
						}
					}
				}
			}
		}
		OR = {
			any_secret = {
				NOT = { any_secret_knower = { this = scope:guest_check } }
			}
			any_known_secret = {
				NOR = {
					secret_owner = { this = scope:guest_check }
					any_secret_knower = { this = scope:guest_check }
				}
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3005
			value = yes
		}
		scope:activity = {
			random_participant = { #to save a participant who can learn your secret
				limit = {
					playdate_default_participant_trigger = yes
					NOT = {
						any_known_secret = {
							OR = {
								secret_owner = root
								any_secret_knower = { this = root }
							}
						}
					}
				}
				save_scope_as = guest
			}
		}
		if = {
			limit = {
				any_secret = {
					NOT = { any_secret_knower = { this = scope:guest } }
				}
			}
			random_secret = {
				limit = {
					NOT = { any_secret_knower = { this = scope:guest } }
				}
				save_scope_as = secret
			}
		}
		else = {
			random_known_secret = {
				limit = {
					NOR = {
						secret_owner = { this = scope:guest }
						any_secret_knower = { this = scope:guest }
					}
				}
				save_scope_as = secret
				reveal_to = scope:guest
			}
		}
		scope:secret = {
			secret_owner = {
				save_scope_as = secret_owner
			}
			if = {
				limit = {
					exists = secret_target
				}
				secret_target = {
					save_scope_as = secret_target
				}
			}
		}
	}

	option = { # Just panic
		name = playdate.3005.a
				
		stress_impact = {
			charming = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = -0.5
			}
		}
	}

	option = { # Promise them a favor
		name = playdate.3005.b
		trigger = {
			scope:guest = {
				can_add_hook = {
					target = root
					type = favor_hook
				}
			}
		}
		scope:guest = {
			add_hook = {
				target = root
				type = favor_hook
			}
		}
		scope:secret = {
			set_variable = {
				name = promised_not_to_reveal
				value = scope:guest
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_gain
			ambitious = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
			charming = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = -0.75
			}
		}
	}

	option = { # Pay them off
		name = playdate.3005.c
		trigger = {
			short_term_gold >= medium_gold_value
		}
		show_as_unavailable = {
			short_term_gold < medium_gold_value
		}
		pay_short_term_gold = {
			target = scope:guest
			gold = medium_gold_value
		}
		scope:secret = {
			set_variable = {
				name = promised_not_to_reveal
				value = scope:guest
			}
		}
		stress_impact = {
			greedy = medium_stress_impact_gain
			bossy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = -0.75
			}
		}
	}

	option = { # Threaten them
		name = playdate.3005.d
		duel = {
			skill = prowess
			target = scope:guest
			20 = {
				desc = playdate.3005.d.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				send_interface_toast = {
					title = playdate.3005.d.success
					left_icon = scope:guest
					scope:guest = {
						add_opinion = {
							target = root
							modifier = respect_opinion
							opinion = 20
						}
					}
				}
				scope:secret = {
					set_variable = {
						name = promised_not_to_reveal
						value = scope:guest
					}
				}
			}
			10 = {
				desc = playdate.3005.d.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				send_interface_toast = {
					title = playdate.3005.d.failure
					left_icon = scope:guest
					scope:secret = {
						expose_secret = scope:guest
					}
				}
			}
		}
		stress_impact = {
			rowdy = medium_stress_impact_loss
			bossy = medium_stress_impact_loss
			compassionate = major_stress_impact_gain
			shy = medium_stress_impact_gain
			honest = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			content = minor_stress_impact_gain
			pensive = medium_stress_impact_gain
			charming = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = -0.75
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Book nerd - Bond with another nerd or gain learning
# by Linnéa Thimrén
scripted_trigger playdate_3006_fellow_nerd_trigger = {
	playdate_default_participant_trigger = yes
	OR = {
		has_trait_introverted_trigger = yes
		has_focus = education_learning
	}
}
playdate.3006 = {
	type = character_event
	title = playdate.3006.t
	desc = playdate.3006.desc
	theme = playdate_activity
	left_portrait = scope:fellow_nerd
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3006 }
		OR = {
			has_trait_introverted_trigger = yes
			has_focus = education_learning
		}
		scope:activity = {
			any_participant = {
				playdate_3006_fellow_nerd_trigger = yes
			}
		}
	}

	weight_multiplier = {
		base = 0.5
		modifier = {
			add = 0.5
			has_focus = education_learning
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3006
			value = yes
		}
		set_random_informative_text_effect = yes
		scope:activity = {
			random_participant = {
				limit = {
					playdate_3006_fellow_nerd_trigger = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 4
						has_focus = education_learning
					}
					#More likely the closer to your age they are
					playdate_close_age_scripted_modifier = yes
				}
				save_scope_as = fellow_nerd
			}
		}
	}

	option = { #Talk with them instead
		name = playdate.3006.a
		progress_towards_friend_effect = {
			REASON = friend_fellow_nerd
			CHARACTER = scope:fellow_nerd
			OPINION = default_friend_opinion
		}
		stress_impact = {
			shy = medium_stress_impact_gain
			diligent = medium_stress_impact_gain
			pensive = medium_stress_impact_gain
			gregarious = medium_stress_impact_loss
			charming = medium_stress_impact_loss
			curious = medium_stress_impact_loss
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_honor = 0.25
			}
		}
	}

	option = { #Focus on reading
		name = playdate.3006.b
		add_learning_skill = 1
		scope:fellow_nerd = {
			add_opinion = {
				target = root
				modifier = rude_opinion
				opinion = -30
			}
		}
		stress_impact = {
			callous = medium_stress_impact_loss
			shy = medium_stress_impact_loss
			diligent = minor_stress_impact_loss
			pensive = medium_stress_impact_loss
			bossy = minor_stress_impact_loss
			compassionate = medium_stress_impact_gain
			charming = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = -0.5
				ai_rationality = 0.25
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}



# Climb tree (or other appropriate object)
# by Linnéa Thimrén
playdate.3007 = {
	type = character_event
	title = playdate.3007.t
	desc = playdate.3007.desc
	theme = playdate_activity
	override_background = {
		event_background = terrain_activity
	}
	left_portrait = scope:participant
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3007 }
		scope:activity = {
			any_participant = {
				playdate_default_participant_trigger = yes
			}
		}
	}

	weight_multiplier = {
		base = 0.5
		modifier = {
			add = 0.5
			scope:activity = {
				any_participant = {
					playdate_default_participant_trigger = yes
					has_trait = rowdy
				}
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3007
			value = yes
		}
		scope:activity = {
			random_participant = {
				limit = {
					playdate_default_participant_trigger = yes
					has_trait = rowdy
				}
				alternative_limit = {
					playdate_default_participant_trigger = yes
				}
				weight = {
					base = 1
					ai_value_modifier = {
						ai_boldness = 0.75
					}
					#More likely the closer to your age they are
					playdate_close_age_scripted_modifier = yes
				}
				save_scope_as = participant
			}
		}
	}

	option = { # Climb the tree
		name = playdate.3007.a
		
		random_list = {
			90 = {
				desc = playdate.3007.a.success
				modifier = {
					add = -70
					OR = {
						has_trait = physique_bad
						has_trait = spindly
						has_trait = weak
					}
				}
				send_interface_toast = {		
					title = playdate.3007.a.success
					left_icon = root
					add_prowess_skill = 1
				}
			}
			10 = {
				desc = playdate.3007.a.failure
				send_interface_toast = {		
					title = playdate.3007.a.failure
					left_icon = root
					increase_wounds_no_death_effect = { REASON = fall }
				}
			}
		}
		scope:participant = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = 30
			}
		}
		stress_impact = {
			brave = medium_stress_impact_loss
			rowdy = medium_stress_impact_loss
			craven = medium_stress_impact_gain
			pensive = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
		}
	}

	option = { #No, I don't want to climb
		name = playdate.3007.b
		scope:participant = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_prestige = medium_prestige_loss
		stress_impact = {
			brave = medium_stress_impact_gain
			rowdy = medium_stress_impact_gain
			craven = medium_stress_impact_loss
			lazy = medium_stress_impact_loss
			pensive = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = -1
				ai_energy = -0.75
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}

scripted_trigger appropriate_drowning_target_trigger = {
	playdate_default_participant_trigger = yes
	OR = {
		has_trait = wounded 
		has_trait = maimed
		has_trait = physique_bad
		has_trait = weak
		has_trait = spindly
		has_trait = dwarf
		has_trait = weak
		has_trait = dull
		has_trait = intellect_bad
		has_trait = brave
		prowess <= 1
	}
	NOT = {
		any_sibling = {
			even_if_dead = yes
			is_alive = no
			death_reason = death_drowned
		}
	}
}

# Going for a swim - someone is about to drown
# by Linnéa Thimrén
playdate.3008 = {
	type = character_event
	title = playdate.3008.t
	desc = playdate.3008.desc
	theme = playdate_activity
	override_background = {
		event_background = terrain_activity
	}
	left_portrait = scope:participant
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3008 }
		scope:activity = {
			root.location = {
				NOR = {
					terrain = desert
					terrain = steppe
					terrain = desert_mountains
					terrain = drylands
				}
			}
			any_participant = {
				appropriate_drowning_target_trigger = yes
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3008
			value = yes
		}
		scope:activity = {
			random_participant = {
				limit = {
					appropriate_drowning_target_trigger = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 4
						OR = {
							has_trait = physique_bad
							has_trait = spindly
							has_trait = weak
						}
					}
					ai_value_modifier = {
						ai_energy = 0.5
					}
				}
				save_scope_as = participant
			}
		}

		save_scope_as = host #in case of death notification event
	}

	option = { # Try to save them - might gain hook
		name = playdate.3008.a
		
		duel = {
			skill = prowess
			value = 6
			15 = {
				desc = playdate.3008.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 0.5
				}
				send_interface_toast = {		
					title = playdate.3008.a.success	
					left_icon = scope:participant		
					scope:participant = {
						if = {
							limit = {
								can_add_hook = {
									target = scope:participant
									type = favor_hook
								}
							}
							add_hook = {
								type = favor_hook
								target = scope:participant
								days = default_favor_duration
							}
						}
						#Are their parents someone I care about? Then they're also grateful
						if = {
							limit = {
								any_parent = {
									is_ruler = yes
								}
							}
							every_parent = {
								limit = {
									is_ruler = yes
								}
								add_opinion = {
									target = root
									modifier = grateful_opinion
									opinion = 40
								}
							}
						}
					}
				}
				progress_towards_friend_effect = { #We put this outside of the toast to save space
					REASON = friend_saved_life
					CHARACTER = scope:participant
					OPINION = 0
				}
			}
			6 = {
				desc = playdate.3008.a.failure
				send_interface_toast = {	
					title = playdate.3008.a.failure
					left_icon = scope:participant
					scope:participant = {
						save_scope_as = drowned_participant
						if = {
							limit = {
								any_parent = {
									is_ruler = yes
									is_alive = yes
									is_ai = no
								}
							}
							every_parent = {
								limit = {
									is_ruler = yes
									is_alive = yes
									is_ai = no
								}
								trigger_event = playdate.4000
							}
						}
						override_death_effect = { death_reason = death_drowned }
					}
				}
			}
			1 = {
				desc = playdate.3008.a.critical_failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				send_interface_toast = {	
					title = playdate.3008.a.critical_failure
					left_icon = scope:participant				
					scope:participant = {
						save_scope_as = drowned_participant
						if = {
							limit = {
								any_parent = {
									is_ruler = yes
									is_alive = yes
									is_ai = no
								}
							}
							every_parent = {
								limit = {
									is_ruler = yes
									is_alive = yes
									is_ai = no
								}
								trigger_event = playdate.4000
							}
						}
						override_death_effect = { death_reason = death_drowned }
					}
					add_character_modifier = {
						modifier = almost_drowned_modifier
						years = 5
					}
				}
			}
		}
		stress_impact = {
			callous = medium_stress_impact_gain
			brave = medium_stress_impact_loss
			rowdy = medium_stress_impact_loss
			pensive = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_honor = 0.25
			}
		}
	}

	option = { #Please, help!
		name = playdate.3008.b
		add_character_modifier = {
			modifier = playdate_showing_weakness_modifier
			years = 5
		}
		random_list = {
			80 = {
				desc = playdate.3008.b.success
				send_interface_toast = {	
					title = playdate.3008.b.success
					left_icon = scope:participant
					scope:participant = {
						add_opinion = {
							target = root
							modifier = grateful_opinion
							opinion = 30
						}
					}
				}
			}
			20 = {
				desc = playdate.3008.b.failure
				send_interface_toast = {
					title = playdate.3008.b.failure
					left_icon = scope:participant
					scope:participant = {
						save_scope_as = drowned_participant
						if = {
							limit = {
								any_parent = {
									is_ruler = yes
									is_alive = yes
									is_ai = no
								}
							}
							every_parent = {
								limit = {
									is_ruler = yes
									is_alive = yes
									is_ai = no
								}
								trigger_event = playdate.4000
							}
						}
						override_death_effect = { death_reason = death_drowned }
					}
				}
			}
		}
		stress_impact = {
			arrogant = major_stress_impact_gain
			callous = medium_stress_impact_gain
			charming = minor_stress_impact_loss
		}
		ai_chance = {
			base = 50
			modifier = {
				add = 50
				prowess <= low_skill_rating
			}
			ai_value_modifier = {
				ai_boldness = -2
				ai_energy = -0.5
				ai_compassion = 0.5
			}
		}
	}

	option = { #No, I'll let them drown
		name = playdate.3008.c
		scope:participant = {
			#Their parents are not impressed
			if = {
				limit = {
					any_parent = {
						is_alive = yes
						is_ai = yes
					}
				}
				every_parent = {
					limit = {
						is_alive = yes
						is_ai = no
					}
					root = { #We need to do these jumps for the tooltip to show correctly
						progress_towards_rival_effect = {
							CHARACTER = prev
							REASON = rival_let_child_drown
							OPINION = default_rival_opinion
						}
					}
				}
			}
			save_scope_as = drowned_participant
			if = {
				limit = {
					any_parent = {
						is_alive = yes
						is_ai = no
					}
				}
				every_parent = {
					limit = {
						is_alive = yes
						is_ai = no
					}
					trigger_event = playdate.4000
				}
			}
			override_death_effect = { death_reason = death_drowned }
		}
		stress_impact = {
			base = medium_stress_impact_gain
			compassionate = major_stress_impact_gain
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
			curious = medium_stress_impact_loss
		}
		ai_chance = {
			base = 45
			ai_value_modifier = {
				ai_boldness = -2
				ai_energy = -0.5
				ai_compassion = -1
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}



# Snow fight!
# by Linnéa Thimrén
scripted_trigger playdate_3009_second_participant_trigger = {
	playdate_default_participant_trigger = yes
	NOT = { this = scope:participant }
}

playdate.3009 = {
	type = character_event
	title = playdate.3009.t
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = {
					exists = scope:to_blame
			    }
			    desc = playdate.3009.desc_two
			}
			desc = playdate.3009.desc_opening
		}
		desc = playdate.3009.desc
	}
	theme = playdate_activity
	left_portrait = {
		character = scope:participant
		animation = happiness
	}
	right_portrait = scope:to_blame
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3009 }
		scope:activity = {
			any_participant = {
				playdate_default_participant_trigger = yes
			}
			activity_province = {
				OR = {
					has_province_modifier = winter_mild_modifier
					has_province_modifier = winter_normal_modifier
					has_province_modifier = winter_harsh_modifier
				}
			}
		}
	}

	weight_multiplier = {
		base = 0.75
		modifier = {
			add = 0.25
			has_trait = rowdy
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3009
			value = yes
		}
		scope:activity = {
			random_participant = {
				limit = {
					playdate_default_participant_trigger = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 2
						has_trait = rowdy
					}
					#More likely the closer to your age they are
					playdate_close_age_scripted_modifier = yes
				}
				save_scope_as = participant
			}

			if = {
				limit = {
					any_participant = {
						playdate_3009_second_participant_trigger = yes
					}
				}
				random_participant = {
					limit = {
						playdate_3009_second_participant_trigger = yes
					}
					weight = {
						base = 1
						modifier = { #more likely to pick someone you don't like
							add = 5
							OR = {
								has_relation_rival = root
								has_relation_potential_rival = root
								has_relation_bully = root
							}
						}
					}
					save_scope_as = to_blame
				}
			}
		}
	}

	option = { #I will not back down!
		name = playdate.3009.a
		duel = {
			skill = prowess
			target = scope:participant
			40 = {
				desc = playdate.3009.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				send_interface_toast = {
					title = playdate.3009.a.success
					left_icon = scope:participant
					add_character_modifier = {
						modifier = playdate_shown_bravery_modifier
						years = 5
					}
				}
			}
			10 = {
				desc = playdate.3009.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				send_interface_toast = {
					title = playdate.3009.a.failure
					left_icon = scope:participant
					increase_wounds_no_death_effect = { REASON = fight }
				}
			}
		}
		progress_towards_friend_effect = {
			REASON = friend_snowball_fight
			CHARACTER = scope:participant
			OPINION = default_friend_opinion
		}
		stress_impact = {
			brave = medium_stress_impact_loss
			rowdy = medium_stress_impact_loss
			bossy = minor_stress_impact_loss
			craven = medium_stress_impact_gain
			pensive = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.75
				ai_energy = 0.5
				ai_honor = 0.5
			}
		}
	}

	option = { #no, pls
		name = playdate.3009.b
		add_prestige = minor_prestige_loss
		scope:participant = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -15
			}
		}
		stress_impact = {
			brave = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			rowdy = medium_stress_impact_gain
			bossy = minor_stress_impact_gain
			craven = medium_stress_impact_loss
			charming = minor_stress_impact_loss
			pensive = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_boldness = -0.75
			}
		}
	}

	option = { #it was them, not me!!
		name = playdate.3009.c
		trigger = {
			exists = scope:to_blame
		}
		duel = {
			skill = diplomacy
			target = scope:to_blame
			20 = {
				desc = playdate.3009.c.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				send_interface_toast = {
					title = playdate.3009.c.success
					left_icon = scope:participant
					scope:participant = {
						add_opinion = {
							target = root
							modifier = trust_opinion
							opinion = 30
						}
					}
				}
				scope:participant = {
					if = {
						limit = {
							NOT = {
								has_relation_rival = scope:to_blame
							}
						}
						set_relation_rival = {
							target = scope:to_blame
							reason = rival_shifted_blame
						}
					}
				}
			}
			10 = {
				desc = playdate.3009.c.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				send_interface_toast = {
					title = playdate.3009.c.failure
					left_icon = scope:participant
					progress_towards_rival_effect = {
						CHARACTER = scope:participant
						REASON = rival_playdate_lie
						OPINION = 0
					}
					scope:participant = {
						add_opinion = {
							target = root
							modifier = respect_opinion
							opinion = -15
						}
					}
				}
			}
		}
		progress_towards_rival_effect = {
			CHARACTER = scope:to_blame
			REASON = rival_playdate_lie
			OPINION = default_rival_opinion
		}
		stress_impact = {
			deceitful = medium_stress_impact_loss
			curious = minor_stress_impact_loss
			charming = minor_stress_impact_loss
			honest = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_vengefulness = 0.75
				ai_honor = -0.75
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}



# Go to local market and try to make merchant accept leaves as currency
# by Linnéa Thimrén
playdate.3010 = {
	type = character_event
	title = playdate.3010.t
	desc = playdate.3010.desc
	theme = playdate_activity
	override_background = {
		event_background = market
	}
	left_portrait = scope:participant
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3010 }
		scope:activity = {
			any_participant = {
				playdate_default_participant_trigger = yes
			}
		}
		NOT = {
			any_character_artifact = {
				has_variable = playdate_trinket
			}
		}
	}

	weight_multiplier = {
		base = 0.75
		modifier = {
			add = 0.25
			has_focus = education_stewardship
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3010
			value = yes
		}
		scope:activity = {
			random_participant = {
				limit = {
					playdate_default_participant_trigger = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 2
						has_focus = education_stewardship
					}
					#More likely the closer to your age they are
					playdate_close_age_scripted_modifier = yes
				}
				save_scope_as = participant
			}
		}
	}

	option = { # Convince them to accept the payment
		name = playdate.3010.a
		duel = {
			skill = diplomacy
			value = 8
			40 = {
				desc = playdate.3010.a.success
				compare_modifier = {
					value = scope:duel_value
					multiplier = 1
					min = -19
				}
				send_interface_toast = {
					title = playdate.3010.a.success
					left_icon = root
					add_stewardship_skill = 1
					scope:participant = {
						add_opinion = {
							target = root
							modifier = respect_opinion
							opinion = 30
						}
					}
				}
			}
			10 = {
				desc = playdate.3010.a.failure
				compare_modifier = {
					value = scope:duel_value
					multiplier = -0.5
				}
				send_interface_toast = {
					title = playdate.3010.a.failure
					left_icon = root
					add_character_modifier = {
						modifier = playdate_fumbling_merchant_modifier
						years = 5
					}
					scope:participant = {
						add_opinion = {
							target = root
							modifier = respect_opinion
							opinion = -15
						}
					}
				}
			}
		}
		stress_impact = {
			diligent = minor_stress_impact_loss
			gregarious = minor_stress_impact_loss
			ambitious = minor_stress_impact_loss
			bossy = medium_stress_impact_loss
			curious = minor_stress_impact_loss
			shy = medium_stress_impact_gain
			pensive = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.75
				ai_energy = 0.5
				ai_rationality = -0.5
			}
		}
	}

	option = { # You have to give me stuff!! I'm a LORD
		name = playdate.3010.b
		
		trigger = { # To not spawn too many artifacts on unlanded characters
			is_ruler = yes
		}

		scope:activity.activity_province.county = {
			add_county_modifier = {
				modifier = harassing_merchants_modifier
				years = 10
			}
		}
		save_scope_as = owner
		scope:owner = {
			create_artifact = {
				name = playdate_minor_trinket_modifier
				description = playdate_minor_trinket_modifier_desc
				template = child_toy_template
				type = miscellaneous
				visuals = small_box
				modifier = artifact_monthly_prestige_1_modifier
				modifier = artifact_child_opinion_2_modifier
				save_scope_as = newly_created_artifact
			}
			
			scope:newly_created_artifact = {
				flag_as_trash_artifact = yes
				set_variable = {
					name = playdate_trinket
					value = yes
				}
			}
		}
		stress_impact = {
			honest = medium_stress_impact_gain
			just = medium_stress_impact_gain
			pensive = minor_stress_impact_gain
			charming = minor_stress_impact_gain
			greedy = minor_stress_impact_loss
			arrogant = medium_stress_impact_loss
			bossy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 0.75
				ai_compassion = -0.25
				ai_honor = -0.75
			}
		}
	}

	option = { # Play store
		name = playdate.3010.c
		custom_tooltip = playdate.3010.c.tt
		add_character_modifier = {
			modifier = playdate_practicing_trade_modifier
			years = 10
		}
		hidden_effect = {
			education_point_acquisition_effect = yes
			scope:participant = { education_point_acquisition_effect = yes }
		}

		progress_towards_friend_effect = {
			REASON = friend_childhood_game
			CHARACTER = scope:participant
			OPINION = 0
		}
		
		stress_impact = {
			curious = medium_stress_impact_loss
			charming = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Playing house
# by Linnéa Thimrén
scripted_trigger playdate_3011_friendly_participant_trigger = {
	playdate_default_participant_trigger = yes
	NOR = {
		has_relation_rival = root
		has_relation_victim = root
	}
}

scripted_trigger playdate_3011_disliked_participant_trigger = {
	playdate_default_participant_trigger = yes
	NOT = { this = scope:participant }
	OR = {
		opinion = {
			target = root
			value <= -20
		}
		has_relation_rival = root
		has_relation_potential_rival = root
		has_relation_victim = root
		has_relation_bully = root
	}
}

playdate.3011 = {
	type = character_event
	title = playdate.3011.t
	desc = playdate.3011.desc
	theme = playdate_activity
	left_portrait = {
		character = scope:participant
		animation = happiness
	}
	right_portrait = scope:disliked_participant
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3011 }
		scope:activity = {
			any_participant = {
				playdate_3011_friendly_participant_trigger = yes
			}
		}
	}

	weight_multiplier = {
		base = 0.75
		modifier = {
			add = 0.25
			scope:activity = { #more likely if there's someone you're crushing on
				any_participant = {
					playdate_3011_friendly_participant_trigger = yes
					root = { has_relation_crush = prev }
				}
			}
		}
		modifier = {
			add = 0.25
			scope:activity = { #more likely if there's someone you can crush on
				any_participant = {
					playdate_3011_friendly_participant_trigger = yes
					
				}
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3011
			value = yes
		}
		scope:activity = {
			random_participant = {
				limit = {
					playdate_3011_friendly_participant_trigger = yes
					root = { age > childhood_education_start_age }
					save_good_crush_character_trigger_check = yes #A possible crush?
				}
				alternative_limit = {
					playdate_3011_friendly_participant_trigger = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 2
						root = { has_relation_crush = prev }
					}
					opinion_modifier = { #More likely to be picked if they like you
						opinion_target = root
						multiplier = 1
					}
					#More likely the closer to your age they are
					playdate_close_age_scripted_modifier = yes
				}
				save_scope_as = participant
				if = {
					limit = {
						root = { age > childhood_education_start_age }
						has_sexual_orientation_trigger = yes
						save_good_crush_character_trigger_check = yes #A possible crush?
					}
					save_scope_value_as = {
						name = possible_crush
						value = yes
					}
					hidden_effect = {
						#Add a crush from their side if appropriate
						if = {
							limit = {
								NOR = {
									has_relation_crush = root
									has_relation_bully = root
								}
								trigger_if = {
									limit = {
										OR = {
											has_sexuality = heterosexual
											has_sexuality = bisexual
											has_sexuality = homosexual
											has_sexuality = asexual
										}
									}
									is_attracted_to_gender_of = root
								}
							}
							random = {
								chance = 50
								set_relation_crush = root
							}
						}
					}
				}
			}
			#Is someone you dislike there?
			if = {
				limit = {
					any_participant = {
						playdate_3011_disliked_participant_trigger = yes
					}
				}
				random_participant = {
					limit = {
						playdate_3011_disliked_participant_trigger = yes
					}
					save_scope_as = disliked_participant
				}
			}
		}
	}

	option = { # We are the parents!
		name = playdate.3011.a
		if = {
			limit = {
				exists = scope:possible_crush
			}
			set_relation_crush = scope:participant
		}
		else = {
			progress_towards_friend_effect = {
				REASON = friend_childhood_game
				CHARACTER = scope:participant
				OPINION = 0
			}
		}
		scope:participant = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 20
			}
		}
		stress_impact = {
			charming = medium_stress_impact_loss
			bossy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.75
				ai_energy = 0.25
				ai_compassion = 0.25
			}
		}
	}

	option = { # Only if disliked_participant is the dog
		name = playdate.3011.b
		trigger = {
			exists = scope:disliked_participant
		}

		scope:participant = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 20
			}
		}
		progress_towards_rival_effect = {
			CHARACTER = scope:disliked_participant
			REASON = rival_playdate_bullied
			OPINION = default_rival_opinion
		}
		stress_impact = {
			bossy = medium_stress_impact_loss
			charming = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_vengefulness = 0.75
				ai_compassion = -0.50
				ai_honor = -0.25
			}
		}
	}

	option = { # No
		name = playdate.3011.c
		
		scope:participant = {
			add_opinion = {
				target = root
				modifier = refusal_opinion
				opinion = -20
			}
		}

		add_character_modifier = {
			modifier = playdate_boring_playmate_modifier
			years = 10
		}
		if = {
			limit = {
				has_focus = education_learning
			}
			custom_tooltip = playdate.3011.c.tt
			hidden_effect = {
				education_point_acquisition_effect = yes
			}
		}
		stress_impact = {
			pensive = medium_stress_impact_loss
			bossy = minor_stress_impact_loss
			curious = minor_stress_impact_loss
			charming = medium_stress_impact_gain
			rowdy = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.50
				ai_energy = -0.25
				ai_boldness = -0.25
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Play at being knights
# by Linnéa Thimrén
playdate.3012 = {
	type = character_event
	title = playdate.3012.t
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = {
					exists = scope:knight
			    }
			    desc = playdate.3012.desc_knight
			}
			desc = playdate.3012.desc_no_knight
		}
		desc = playdate.3012.desc
	}
	theme = playdate_activity
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = scope:participant
		animation = admiration
	}
	right_portrait = {
		character = scope:knight
		animation = personality_bold
	}
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3012 }
		scope:activity = {
			any_participant = {
				playdate_default_participant_trigger = yes
			}
		}
	}

	weight_multiplier = {
		base = 0.75
		modifier = {
			add = 0.25
			has_trait = rowdy
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3012
			value = yes
		}
		scope:activity = {
			random_participant = {
				limit = {
					playdate_default_participant_trigger = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 2
						has_trait = rowdy
					}
					ai_value_modifier = {
						ai_boldness = 0.5
					}
					#More likely the closer to your age they are
					playdate_close_age_scripted_modifier = yes
				}
				save_scope_as = participant
			}
		}
		if = {
			limit = {
				any_knight = {
					is_available_ai_adult = yes
				}
			}
			random_knight = {
				limit = {
					is_available_ai_adult = yes
				}
				save_scope_as = knight
			}
		}
	}

	option = { #Learn the basics
		name = playdate.3012.a
		random_list = {
			80 = {
				desc = playdate.3012.a.success
				send_interface_toast = {
					title = playdate.3012.a.success
					left_icon = scope:participant
					add_prowess_skill = 1
					scope:participant = { add_prowess_skill = 1 }
				}
			}
			15 = {
				desc = playdate.3012.a.neutral
				send_interface_toast = {
					title = playdate.3012.a.neutral
					left_icon = scope:participant
					add_stress = medium_stress_gain
				}
			}
			5 = {
				desc = playdate.3012.a.failure
				send_interface_toast = {
					title = playdate.3012.a.failure
					left_icon = scope:participant
					increase_wounds_no_death_effect = { REASON = training_accident }
				}
			}
		}
		progress_towards_friend_effect = {
			REASON = friend_childhood_knight
			CHARACTER = scope:participant
			OPINION = default_friend_opinion
		}
		stress_impact = {
			rowdy = medium_stress_impact_loss
			curious = medium_stress_impact_loss
			pensive = minor_stress_impact_gain
			craven = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.75
				ai_energy = 0.5
				ai_rationality = -0.25
			}
		}
	}

	option = { #No I would rather watch
		name = playdate.3012.b
		add_martial_skill = 1
		scope:participant = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		if = {
			limit = {
				exists = scope:knight
			}
			scope:knight = {
				add_opinion = {
					target = root
					modifier = refusal_opinion
					opinion = -10
				}
			}
		}
		
		stress_impact = {
			curious = medium_stress_impact_loss
			rowdy = medium_stress_impact_gain
			brave = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = -0.75
				ai_boldness = -0.25
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}


# Meet a witch
# by Linnéa Thimrén
playdate.3013 = {
	type = character_event
	title = playdate.3013.t
	desc = playdate.3013.desc
	theme = playdate_activity
	override_background = {
		event_background = wilderness_forest
	}
	left_portrait = scope:witch
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3013 }
		OR = {
			scope:activity = {
				any_participant = {
					playdate_default_participant_trigger = yes
					is_witch_trigger = yes
				}
			}
			any_courtier = {
				is_available_ai = yes
				is_witch_trigger = yes
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3013
			value = yes
		}
		scope:activity = {
			if = {
				limit = {
					any_participant = {
						playdate_default_participant_trigger = yes
						is_witch_trigger = yes
					}
				}
				random_participant = {
					limit = {
						playdate_default_participant_trigger = yes
						is_witch_trigger = yes
					}
					weight = {
						base = 1
						compare_modifier = { #More likely the closer to your age they are
							value = {
								if = {
									limit = {
										age > root.age
									}
									add = age
									subtract = root.age
								}
								else = {
									add = root.age
									subtract = age
								}
							}
							multiplier = -0.1
						}
					}
					save_scope_as = witch
					hidden_effect = { add_trait = lifestyle_herbalist }
					if = {
						limit = {
							any_secret = {
								secret_type = secret_witch
							}
						}
						random_secret = {
							limit = {
								secret_type = secret_witch
							}
							save_scope_as = secret
							reveal_to = root
						}
					}
				}
			}
			else = {
				root = {
					random_courtier = {
						limit = {
							is_available_ai = yes
							is_witch_trigger = yes
						}
						save_scope_as = witch
						hidden_effect = { add_trait = lifestyle_herbalist }
						if = {
							limit = {
								any_secret = {
									secret_type = secret_witch
								}
							}
							random_secret = {
								limit = {
									secret_type = secret_witch
								}
								save_scope_as = secret
								reveal_to = root
							}
						}
					}
				}
			}
		}
	}

	option = { #Teach me plants!
		name = playdate.3013.a
		random_list = {
			80 = {
				desc = playdate.3013.a.success
				send_interface_toast = {
					title = playdate.3013.a.success
					left_icon = scope:witch
					add_trait = lifestyle_herbalist
				}
			}
			20 = {
				desc = playdate.3013.a.failure
				send_interface_toast = {
					title = playdate.3013.a.failure
					left_icon = scope:witch
					add_stress = medium_stress_gain
				}
			}
		}
		stress_impact = {
			curious = major_stress_impact_loss
			rowdy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_boldness = 0.75
				ai_energy = 0.5
				ai_rationality = -0.25
			}
		}
	}

	option = { #I want to be a witch!
		name = playdate.3013.b
		trigger = {
			NOR = {
				any_secret = { secret_type = secret_witch }
				has_trait = witch
			}
		}
		give_witch_secret_or_trait_effect = yes
		hidden_effect = {
			if = {
				limit = {
					any_secret = {
						secret_type = secret_witch
					}
				}
				random_secret = {
					limit = { secret_type = secret_witch }
					reveal_to = scope:witch
				}
			}
		}
		
		if = {
			limit = {
				OR = {
					trait_is_shunned_in_faith_trigger = {
						TRAIT = witch
						GENDER_CHARACTER = scope:witch
						FAITH = root.faith
					}
					trait_is_criminal_in_faith_trigger = {
						TRAIT = witch
						GENDER_CHARACTER = scope:witch
						FAITH = root.faith
					}
				}
			}
			stress_impact = {
				base = minor_stress_impact_gain
				zealous = major_stress_impact_gain
				curious = major_stress_impact_loss
			}
		}
		else = {
			stress_impact = {
				curious = major_stress_impact_loss
			}
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.25
				ai_zeal = -2
				ai_boldness = 0.25
			}
		}
	}

	option = { #I'll tell on you!
		name = playdate.3013.c
		trigger = {
			OR = {
				trait_is_shunned_in_faith_trigger = {
					TRAIT = witch
					GENDER_CHARACTER = scope:witch
					FAITH = root.faith
				}
				trait_is_criminal_in_faith_trigger = {
					TRAIT = witch
					GENDER_CHARACTER = scope:witch
					FAITH = root.faith
				}
			}
			exists = scope:secret
			scope:secret = {
				can_be_exposed_by = root
			}
		}
		scope:secret = {
			expose_secret = root
		}
		add_piety = medium_piety_gain
		
		stress_impact = {
			base = minor_stress_impact_loss
			zealous = major_stress_impact_loss
			curious = medium_stress_impact_gain
			charming = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.75
				ai_zeal = 2
				ai_compassion = -0.75
				ai_boldness = -0.50
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}



# Hang with a priest
# by Linnéa Thimrén
scripted_trigger playdate_3014_participant_trigger = {
	playdate_default_participant_trigger = yes
	OR = {
		has_focus = education_learning
		has_trait = pensive
	}
}

playdate.3014 = {
	type = character_event
	title = playdate.3014.t
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = {
					exists = scope:participant
			    }
			    desc = playdate.3014.desc_participant
			}
			desc = playdate.3014.desc
		}
	}
	theme = playdate_activity
	override_background = {
		event_background = temple
	}
	left_portrait = scope:priest
	right_portrait = scope:participant
	
	trigger = {
		NOT = { exists = local_var:had_playdate_event_3014 }
		exists = cp:councillor_court_chaplain
		scope:activity = {
			any_participant = {
				playdate_3014_participant_trigger = yes
			}
		}
	}

	weight_multiplier = { #Quite rare since it gives rare traits and secrets
		base = 0.25
		modifier = {
			add = 0.25
			has_focus = education_learning
		}
		modifier = {
			add = 0.50
			scope:activity = {
				any_participant = {
					playdate_3014_participant_trigger = yes
				}
			}
		}
	}

	immediate = {
		set_local_variable = {
			name = had_playdate_event_3014
			value = yes
		}
		cp:councillor_court_chaplain = {
			save_scope_as = priest
		}
		scope:activity = {
			if = {
				limit = {
					any_participant = {
						playdate_3014_participant_trigger = yes
					}
				}
				random_participant = {
					limit = {
						playdate_3014_participant_trigger = yes
					}
					alternative_limit = {
						playdate_default_participant_trigger = yes
					}
					weight = {
						base = 1
						compare_modifier = { #More likely the closer to your age they are
							value = {
								if = {
									limit = {
										age > root.age
									}
									add = age
									subtract = root.age
								}
								else = {
									add = root.age
									subtract = age
								}
							}
							multiplier = -0.1
						}
					}
					save_scope_as = participant
					root = {
						progress_towards_friend_effect = {
							REASON = friend_childhood_religious_scrolls
							CHARACTER = scope:participant
							OPINION = 0
						}
					}
				}
			}
		}
	}

	option = { #Teach me/us writing!
		name = playdate.3014.a
		random_list = {
			50 = {
				desc = playdate.3014.a.success
				send_interface_toast = {
					title = playdate.3014.a.success
					left_icon = scope:priest
					right_icon = scope:participant
					if = {
						limit = {
							can_be_journaller = yes
						}
						add_trait = journaller
					}
					else = {
						add_learning_skill = 1
					}
					if = {
						limit = {
							exists = scope:participant
						}
						scope:participant = {
							add_learning_skill = 1
						}
					}
				}
			}
			40 = {
				desc = playdate.3014.a.neutral
				trigger = {
					has_focus = education_learning
				}
				send_interface_toast = {
					title = playdate.3014.a.neutral
					left_icon = scope:priest
					right_icon = scope:participant
					if = {
						limit = {
							exists = scope:participant
							scope:participant = { has_focus = education_learning }
						}
						custom_tooltip = playdate.3014.a.tt_participant
						hidden_effect = {
							education_point_acquisition_effect = yes
							scope:participant = { education_point_acquisition_effect = yes }
						}
					}
					else = {
						custom_tooltip = playdate.3014.a.tt
						hidden_effect = { education_point_acquisition_effect = yes }
					}
				}
			}
			10 = {
				desc = playdate.3014.a.failure
				send_interface_toast = {
					title = playdate.3014.a.failure
					left_icon = scope:priest
					add_character_modifier = {
						modifier = playdate_struggling_with_writing_modifier
						years = 5
					}
				}
			}
		}
		
		scope:priest = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = 20
			}
		}
		stress_impact = {
			curious = major_stress_impact_loss
			pensive = medium_stress_impact_loss
			calm = medium_stress_impact_loss
			rowdy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.75
				ai_energy = -0.25
			}
		}
	}

	option = { #Read us stories instead!
		name = playdate.3014.b
		
		scope:priest = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -10
			}
		}
		stress_impact = {
			base = medium_stress_impact_loss
			curious = medium_stress_impact_gain
			rowdy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 0.50
				ai_zeal = -0.25
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}

# Play date language barrier 
# By Bianca Savazzi

scripted_trigger playdate_4001_paticipant_trigger = {
	playdate_default_participant_trigger = yes
	is_ai = yes
	NOT = {
		knows_language_of_culture = root.culture
	}
}

playdate.4001 = {
	type = character_event
	title = playdate.4001.t
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = {
					scope:participant = { has_trait_dominant_trigger = yes }
			    }
			    desc = playdate.4001.desc.rowdy
			}
			desc = playdate.4001.desc.pensive
		}
		desc = playdate.4001.desc
	}
	theme = playdate_activity
	cooldown = {
		years = 2
	}
	left_portrait = scope:participant
	
	trigger = {
		scope:activity = {
			any_participant = {
				playdate_4001_paticipant_trigger = yes
				root = { NOT = { knows_language_of_culture = prev.culture } }
			}
		}
	}

	weight_multiplier = { #Quite rare since it gives rare traits and secrets
		base = 0.5
		modifier = {
			add = 0.25
			has_focus = education_learning
		}
	}

	immediate = {
		scope:activity = {
			if = {
				limit = {
					any_participant = {
						playdate_4001_paticipant_trigger = yes
						root = { NOT = { knows_language_of_culture = prev.culture } }
					}
				}
				random_participant = {
					limit = {
						playdate_4001_paticipant_trigger = yes
						root = { NOT = { knows_language_of_culture = prev.culture } }
					}
					save_scope_as = participant
				}
			}
		}
	}

	option = { #I'll teach them
		name = playdate.4001.a

		scope:participant = {
			if = {
				limit = {
					has_trait_dominant_trigger = yes 
				}
				add_opinion = {
					modifier = annoyed_opinion
					target = root
					opinion = -10
				}
			}
			else_if = {
				limit = {
					has_trait_introverted_trigger = yes 
				}
				add_opinion = {
					modifier = annoyed_opinion
					target = root
					opinion = -20
				}
			}
			if = {
				limit = {
					can_start_scheme = {
						type = learn_language
						target = root
					}
				}
				start_scheme = {
					type = learn_language
					target = root
				}
			}
		}
				
		stress_impact = {
			pensive = medium_stress_impact_loss
			calm = medium_stress_impact_loss
			charming = medium_stress_impact_loss
			rowdy = minor_stress_impact_gain
			base = minor_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.75
				ai_energy = -0.25
			}
		}
	}

	option = { #I'll learn some
		name = playdate.4001.b

		scope:participant = {
			if = {
				limit = {
					has_trait_dominant_trigger = yes 
				}
				add_opinion = {
					modifier = annoyed_opinion
					target = root
					opinion = -20
				}
			}
			else_if = {
				limit = {
					has_trait_introverted_trigger = yes 
				}
				add_opinion = {
					modifier = pleased_opinion
					target = root
					opinion = 20
				}
			}
		}

		if = {
			limit = {
				can_start_scheme = {
					type = learn_language
					target = scope:participant
				}
			}
			start_scheme = {
				type = learn_language
				target = scope:participant
			}
		}
		
		stress_impact = {
			curious = medium_stress_impact_loss
			rowdy = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 0.50
				ai_zeal = -0.25
			}
		}
	}

	option = { #I just wanna play...
		name = playdate.4001.c
		
		scope:participant = {
			if = {
				limit = {
					has_trait_dominant_trigger = yes 
				}
				add_opinion = {
					modifier = pleased_opinion
					target = root
					opinion = 20
				}
			}
			else_if = {
				limit = {
					has_trait_extroverted_trigger = yes 
				}
				add_opinion = {
					modifier = dismissive_opinion
					target = root
					opinion = -10
				}
			}
			else_if = {
				limit = {
					has_trait_introverted_trigger = yes 
				}
				add_opinion = {
					modifier = pleased_opinion 
					target = root
					opinion = 10
				}
			}
		}

		stress_impact = {
			base = medium_stress_impact_loss
			curious = medium_stress_impact_gain
			rowdy = major_stress_impact_loss
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 0.50
				ai_zeal = -0.25
			}
		}
	}

	after = {
		hidden_effect = {
			playdate_wrap_up_or_fire_random_event_effect = yes
		}
	}
}



#################################
## END EVENTS
## 9000-9999
## by Linnéa Thimrén
#################################

scripted_trigger playdate_end_events_participant_trigger = {
	NOT = { this = scope:host }
	is_alive = yes
	is_imprisoned = no
}

# End events setup
playdate.9000 = {
	type = character_event
	hidden = yes

	trigger = {
		exists = scope:activity
		NOT = { exists = scope:activity.var:playdate_event_ended } 
	}
	
	immediate = {
		if = {
			limit = {
				OR = {
					# Everyone has wrapped up their events
					scope:activity = {
						any_participant = {
							count = all
							trigger_if = {
								limit = {
									is_alive = yes
									is_imprisoned = no
								}
								save_temporary_scope_as = participant_check
								scope:activity = {
									is_target_in_variable_list = {
										name = finished_participants
										target = scope:participant_check
									}
								}
							}
							trigger_else = { always = yes }
						}
					}
					# Has attempted to wrap up the playdate already
					AND = {
						trigger_if = {
							limit = {
								exists = scope:activity.var:attempted_to_end_playdate
							}
							scope:activity.var:attempted_to_end_playdate > 2
						}
						trigger_else = {
							always = no
						}
					}
				}
			}
			scope:activity = {
				activity_owner = {
					save_scope_as = host
				}

				every_participant = {
					limit = { playdate_end_events_participant_trigger = yes }
					trigger_event = playdate.9002
				}
				activity_owner = {
					trigger_event = playdate.9001
				}

				set_variable = {
					name = playdate_event_ended
					value = 1
				}
			}
		}
		if = {
			limit = { NOT = { exists = scope:activity.var:attempted_to_end_playdate } }
			scope:activity = {
				set_variable = {
					name = attempted_to_end_playdate
					value = 1
				}
			}
		}
		else = {
			scope:activity = {
				change_variable = {
					name = attempted_to_end_playdate
					add = 1
				}
			}
		}
		trigger_event = {
			id = playdate.9000
			days = 10
		}
	}
}

# Host end event
# by Linnéa Thimrén
playdate.9001 = {
	type = character_event
	title = playdate.9001.t
	desc = playdate.9001.desc
	theme = playdate_activity
	left_portrait = {
		character = root
		animation = happiness
	}

	immediate = {
		
	}
	
	option = {
		name = playdate.9001.a
		hosted_successful_playdate_effect = yes
	}

	after = {
		scope:activity = {
			complete_activity = yes
		}
	}
}


#Guest end event
# by Linnéa Thimrén
playdate.9002 = {
	type = character_event
	title = playdate.9002.t
	desc = playdate.9002.desc
	theme = playdate_activity
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:host
		animation = happiness
	}

	option = {
		name = playdate.9002.a
		playdate_end_guest_effect = yes
		reverse_add_opinion = {
			target = scope:host
			modifier = attended_my_playdate_opinion
		}
	}
}

#Parent is notified that their child died during playdate
playdate.4000 = {
	type = character_event
	title = playdate.4000.t
	desc = playdate.4000.desc
	theme = death

	left_portrait = { 
		character = scope:participant
		animation = fear
	}

	lower_right_portrait = { 
		character = scope:host
	}

	immediate = {
		add_stress = major_stress_gain
	}

	option = { 
		name = playdate.4000.a
		reverse_add_opinion = {
			target = scope:host
			modifier = forgiven_opinion
		}
	}

	option = {
		name = playdate.4000.b
		reverse_add_opinion = {
			target = scope:host
			modifier = shamed_me_opinion
		}
	}

	option = {
		name = playdate.4000.c
		progress_towards_rival_effect = {
			CHARACTER = scope:host
			REASON = rival_let_child_drown_corresponding
			OPINION = default_rival_opinion
		}
	}
}
