find_arthas_effect = {
	save_scope_as = terenas
	set_global_variable = { name = terenas_character value = this }
	
	every_close_or_extended_family_member = { add_to_temporary_list = valid_arthases }
	every_courtier = { add_to_temporary_list = valid_arthases }
	every_vassal = { add_to_temporary_list = valid_arthases }
	ordered_in_list = {
		limit = {
			can_be_invited_in_arthas_expedition_trigger = { INVITER = scope:terenas }
		}
		list = valid_arthases
		order_by = find_arthas_value
		max = 1
		
		save_scope_as = arthas
		set_global_variable = { name = arthas_character value = this }
	}
}
find_uther_effect = {
	every_courtier = { add_to_temporary_list = valid_uthers }
	every_vassal = { add_to_temporary_list = valid_uthers }
	top_liege = {
		every_courtier = { add_to_temporary_list = valid_uthers }
		every_vassal = { add_to_temporary_list = valid_uthers }
	}
	faith = {
		every_faith_holy_order = { leader = { add_to_temporary_list = valid_uthers } }
	}
	ordered_in_list = {
		limit = {
			is_ai = yes
			
			can_be_invited_in_arthas_expedition_trigger = { INVITER = scope:host }
		}
		list = valid_uthers
		order_by = find_uther_value
		max = 1
		
		save_scope_as = uther
		scope:activity = { set_variable = { name = uther value = scope:uther } }
	}
}
find_jaina_effect = {
	every_courtier = { add_to_temporary_list = valid_jainas }
	every_vassal = { add_to_temporary_list = valid_jainas }
	top_liege = {
		every_courtier = { add_to_temporary_list = valid_jainas }
		every_vassal = { add_to_temporary_list = valid_jainas }
	}
	every_relation = {
		type = lover
		add_to_temporary_list = valid_jainas
	}
	every_relation = {
		type = soulmate
		add_to_temporary_list = valid_jainas
	}
	ordered_in_list = {
		limit = {
			can_be_invited_in_arthas_expedition_trigger = { INVITER = scope:host }
		}
		list = valid_jainas
		order_by = find_jaina_value
		max = 1
		
		save_scope_as = jaina
		scope:activity = { set_variable = { name = jaina value = scope:jaina } }
	}
}
find_kelthuzad_effect = {
	find_nerzhul_effect = yes
	
	if = {
		limit = { scope:activity = { NOT = { has_variable = kelthuzad } } }
		scope:activity.var:nerzhul = {
			every_courtier = { add_to_temporary_list = valid_kelthuzads }
			every_vassal = { add_to_temporary_list = valid_kelthuzads }
		}
		ordered_in_list = {
			limit = {
				is_ai = yes
				
				is_available_for_activity_trigger = yes
				
				faith = scope:activity.var:nerzhul.faith
			}
			list = valid_kelthuzads
			order_by = find_kelthuzad_value
			max = 1
			
			save_scope_as = kelthuzad
			scope:activity = { set_variable = { name = kelthuzad value = scope:kelthuzad } }
		}
	}
	
	if = {
		limit = { NOT = { exists = scope:kelthuzad } }
		create_character = {
			template = high_scourge_cultist_character_template
			
			faith = scope:activity.var:nerzhul.faith
			culture = scope:activity.var:nerzhul.culture
			
			employer = scope:activity.var:nerzhul
			
			after_creation = {
				save_scope_as = kelthuzad
				scope:activity = { set_variable = { name = kelthuzad value = scope:kelthuzad } }
			}
		}
	}
}
find_malganis_effect = {
	find_nerzhul_effect = yes
	if = {
		limit = { scope:activity = { NOT = { has_variable = malganis } } }
		scope:activity.var:nerzhul = {
			every_relation = {
				type = scourge_jailor
				add_to_temporary_list = valid_malganises
			}
		}
		ordered_in_list = {
			limit = {
				is_ai = yes
				
				is_available_for_activity_trigger = yes
			}
			list = valid_malganises
			order_by = find_malganis_value
			max = 1
			
			save_scope_as = malganis
			scope:activity = { set_variable = { name = malganis value = scope:malganis } }
		}
		if = {
			limit = { NOT = { exists = scope:malganis } }
			create_character = {
				template = malganis_character_template
				
				employer = scope:activity.var:nerzhul
				
				after_creation = {
					save_scope_as = malganis
					scope:activity = { set_variable = { name = malganis value = scope:malganis } }
				}
			}
		}
	}
}
find_stratholme_effect = {
	top_liege = {
		ordered_realm_county = {
			limit = {
				is_valid_stratholme_trigger = yes
			}
			order_by = find_stratholme_value
			max = 1
			
			save_scope_as = stratholme
		}
	}
}
find_hearthglen_effect = {
	top_liege = {
		ordered_realm_county = {
			limit = {
				is_valid_hearthglen_trigger = yes
			}
			order_by = find_hearthglen_value
			max = 1
			
			save_scope_as = hearthglen
		}
	}
}
find_muradin_effect = {
	if = {
		limit = {
			scope:activity = { has_variable = muradin }
			scope:activity.var:muradin = {
				is_in_arthas_expedition_trigger = yes
			}
		}
		scope:activity.var:muradin = { save_scope_as = muradin }
		# Do nothing
	}
	else = {
		top_liege = {
			add_to_temporary_list = muradin_realms
			every_ally = {
				limit = { NOT = { is_in_list = muradin_realms } }
				add_to_temporary_list = muradin_realms
			}
		}
		title:c_budur.holder.top_liege = {
			add_to_temporary_list = muradin_realms
			if = {
				limit = { is_at_war = yes }
				every_character_war = {
					end_war = white_peace
				}
			}
			add_to_temporary_list = valid_muradins
		}
		every_in_list = {
			list = muradin_realms
			every_courtier = {
				limit = { NOT = { is_in_list = valid_muradins } }
				add_to_temporary_list = valid_muradins
			}
			every_vassal = {
				limit = { NOT = { is_in_list = valid_muradins } }
				add_to_temporary_list = valid_muradins
			}
		}
		ordered_in_list = {
			limit = {
				is_ai = yes
				
				can_be_invited_in_arthas_expedition_trigger = { INVITER = scope:host }
			}
			list = valid_muradins
			order_by = find_muradin_value
			max = 1
			
			save_scope_as = muradin
			scope:activity = { set_variable = { name = muradin value = scope:muradin } }
		}
		
		if = {
			limit = { NOT = { exists = scope:muradin } }
			create_character = {
				template = new_warrior_character
				
				gender_female_chance = this_faith_dominant_gender_female_chance
				faith = faith:khazism
				culture = culture:bronzebeard
				location = title:c_nokeroa.title_province
				
				after_creation = {
					save_scope_as = muradin
					scope:activity = { set_variable = { name = muradin value = scope:muradin } }
				}
			}
		}
	}
	
}
find_nerzhul_effect = {
	title:e_scourge.holder = { save_scope_as = nerzhul }
	scope:activity = { set_variable = { name = nerzhul value = scope:nerzhul } }
}
arthas_find_terenas_effect = {
	if = {
		limit = {
			has_global_variable = terenas_character
			global_var:terenas_character = { is_valid_terenas_to_kill_trigger = yes }
		}
		global_var:terenas_character = {
			primary_title = { save_scope_as = lordaeron }
			capital_county = { save_scope_as = lordaeron_city }
		}
	}
	else_if = {
		limit = {
			exists = top_liege
			NOT = { root = top_liege }
			top_liege = { is_valid_terenas_to_kill_trigger = yes }
		}
		top_liege = {
			save_scope_as = terenas
			primary_title = { save_scope_as = lordaeron }
			capital_county = { save_scope_as = lordaeron_city }
			set_global_variable = { name = terenas_character value = scope:terenas }
		}
	}
	else = {
		primary_title = { save_scope_as = lordaeron }
		capital_county = { save_scope_as = lordaeron_city }
	}
	scope:activity = {
		set_global_variable = { name = lordaeron value = scope:lordaeron }
		set_global_variable = { name = lordaeron_city value = scope:lordaeron_city }
	}
}

join_arthas_expedition_effect = {
	hidden_effect = { set_location = scope:host.location }
	custom_description = {
		text = join_draenor_expedition_tooltip
		
		object = scope:activity
		
		add_to_activity_without_travel = scope:activity
	}
}
leave_arthas_expedition_effect = {
	if = {
		limit = { this = scope:host }
		complete_arthas_expedition_effect = yes
	}
	else = {
		scope:host.current_travel_plan = {
			remove_character = prev
		}
		custom_description = {
			text = leave_arthas_expedition_effect
			
			object = scope:activity
			
			scope:activity = {
				add_to_variable_list = { name = characters_left target = prev }
			}
			remove_from_activity = scope:activity
			set_location_to_default = yes
		}
	}
}
complete_arthas_expedition_effect = {
	remove_from_activity = scope:activity
	scope:activity = { set_variable = finish_this_activity }
}

purge_event_effect = {
	find_nerzhul_effect = yes
	
	if = {
		limit = {
			exists = scope:host
			this = scope:host
		}
		random_list = {
			25 = { }
			75 = { plague_county_setup_effect = { PLAGUER = scope:activity.var:nerzhul PLACE = global_var:stratholme } }
		}
	}
	
	if = {
		limit = { is_in_arthas_expedition_trigger = yes }
		if = {
			limit = { faith = { trait_is_virtue = compassionate } }
			add_piety = massive_piety_loss
		}
		
		stress_impact = {
			compassionate = massive_stress_impact_gain
			craven = medium_stress_impact_gain
			vengeful = medium_stress_impact_loss
			wrathful = minor_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		
		arthas_solo_battle_roll_effect = { RISK = 1 }
	}
}
evacuate_event_effect = {
	find_nerzhul_effect = yes
	
	if = {
		limit = {
			exists = scope:host
			this = scope:host
		}
		plague_county_setup_effect = { PLAGUER = scope:activity.var:nerzhul PLACE = global_var:stratholme }
	}
	
	if = {
		limit = { is_in_arthas_expedition_trigger = yes }
		if = {
			limit = { faith = { trait_is_virtue = compassionate } }
			add_piety = major_piety_gain
		}
		
		stress_impact = {
			compassionate = medium_stress_impact_loss
			craven = major_stress_impact_gain
			vengeful = medium_stress_impact_gain
		}
		
		arthas_solo_battle_roll_effect = { RISK = 5 }
	}
}
quarantine_event_effect = {
	find_nerzhul_effect = yes
	
	if = {
		limit = {
			exists = scope:host
			this = scope:host
		}
		plague_county_setup_effect = { PLAGUER = scope:activity.var:nerzhul PLACE = global_var:stratholme }
	}
	
	if = {
		limit = { is_in_arthas_expedition_trigger = yes }
		stress_impact = {
			compassionate = medium_stress_impact_gain
			brave = minor_stress_impact_gain
			vengeful = major_stress_impact_gain
			impatient = medium_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		
		arthas_solo_battle_roll_effect = { RISK = 3 }
	}
}
leave_arthas_expedition_event_effect = {
	leave_arthas_expedition_effect = yes
	
	stress_impact = {
		brave = medium_stress_impact_gain
		vengeful = major_stress_impact_gain
		wrathful = medium_stress_impact_gain
		content = minor_stress_impact_gain
		trusting = minor_stress_impact_gain
	}
}
sail_northrend_event_effect = {
	custom_tooltip = sail_northrend_event_effect_tooltip
	
	add_prestige = medium_prestige_gain
	
	stress_impact = {
		craven = major_stress_impact_gain
		vengeful = medium_stress_impact_loss
		wrathful = minor_stress_impact_loss
		ambitious = medium_stress_loss
		paranoid = major_stress_impact_gain
	}
}
not_sail_northrend_event_effect = {
	leave_arthas_expedition_event_effect = yes
	
	stress_impact = {
		stubborn = minor_stress_impact_gain
	}
}

arthas_solo_battle_roll_effect = {
	# Actually, Arthas is immune because the Scourge doesn't want to kill him
	if = {
		limit = {
			exists = scope:host
			this = scope:host
		}
		show_as_tooltip = { draenor_solo_battle_roll_effect = { RISK = $RISK$ } }
		scope:activity = { activity_special_type_progression_super_tiny = yes }
	}
	else = {
		draenor_solo_battle_roll_effect = { RISK = $RISK$ }
		scope:activity = { activity_special_type_progression_super_tiny = yes }
	}
}

check_every_participant_in_arthas_expedition_effect = {
	scope:activity = {
		every_attending_character = {
			limit = {
				exists = scope:host
				NOT = { this = scope:host }
				is_in_arthas_expedition_trigger = yes
			}
			if = {
				limit = { is_valid_arthas_expedition_member_trigger = no }
				leave_arthas_expedition_effect = yes
			}
		}
	}
}

share_event_with_group_effect = {
	check_every_participant_in_arthas_expedition_effect = yes
	scope:activity = {
		every_attending_character = {
			limit = {
				NOT = { this = scope:host }
				is_in_arthas_expedition_trigger = yes
			}
			trigger_event = $ID$
		}
	}
}
share_event_with_group_delay_effect = {
	check_every_participant_in_arthas_expedition_effect = yes
	scope:activity = {
		every_attending_character = {
			limit = {
				NOT = { this = scope:host }
				is_in_arthas_expedition_trigger = yes
			}
			trigger_event = { id = $ID$ days = $DAYS$ }
		}
	}
}
turn_realm_undead_effect = {
	custom_description = {
		text = turn_realm_undead_effect
		subject = $MASTER$
		every_sub_realm_barony = {
			limit = {
				NOT = {
					is_in_list = baronies_raised
				}
			}
			title_province = {
				every_character_in_location = {
					limit = {
						can_become_undead_trigger = yes
						NOT = {
							has_character_modifier = important_lore_character
						}
						trigger_if = {
							limit = {
								is_ruler = yes
							}

							any_liege_or_above = {
								this = $RULER$
							}
						}
					}
					raise_undead_by_basic_effect = { MASTER = $MASTER$ FROSTMOURNE = no }
				}
			}
			add_to_list = baronies_raised
		}
	}
}
murder_terenas_effect = {
	create_title_and_vassal_change = {
		type = conquest
		save_scope_as = change
		add_claim_on_loss = yes
	}

	usurp_entire_title_effect = { TARGET = $TERENAS$ TITLE = title:k_lordaeron ONLY_DIRECT = yes TAKE_TITLE = yes }
	hidden_effect = {
		$TERENAS$ = {
			every_heir = {
				add_pressed_claim = $TERENAS$.primary_title
			}

			global_var:arthas_character = {
				disinherit_effect = { DISINHERITOR = $TERENAS$ }
			}
		}
	}
	$TERENAS$ = { override_death_killer_effect = { death_reason = death_murder killer = prev } } # Kill first because Terenas must die a king
	usurp_all_titles_resolve_effect = yes
	turn_realm_undead_effect = { MASTER = global_var:arthas_character RULER = global_var:arthas_character }
	set_primary_title_to = title:k_lordaeron
}
massacre_of_lordaeron_city_effect = {
	if = {
		limit = { NOT = { faith = $ARTHAS$.faith } }
		set_county_faith = $ARTHAS$.faith
	}
	if = {
		limit = { NOT = { culture = $ARTHAS$.culture } }
		set_county_culture = $ARTHAS$.culture
	}
}

add_reward_prestige_ae_effect = {
	scope:activity = {
		if = {
			limit = {
				var:activity_special_type_progression >= 75
			}
			prev = { add_prestige = 3000 }
		}
		else_if = {
			limit = { 
				var:activity_special_type_progression < 75
				var:activity_special_type_progression >= 50
			}
			prev = { add_prestige = 2000 }
		}
		else_if = {
			limit = { 
				var:activity_special_type_progression < 50
				var:activity_special_type_progression >= 25
			}
			prev = { add_prestige = 1000 }
		}
		else = {
			prev = { add_prestige = 500 }
		}
	}
}

add_reward_dynasty_ae_effect = {
	if = {
		limit = {
			var:activity_special_type_progression >= 75
		}
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 1000
		}
	}
	else_if = {
		limit = { 
			var:activity_special_type_progression < 75
			var:activity_special_type_progression >= 50
		}
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 750
		}
	}
	else_if = {
		limit = { 
			var:activity_special_type_progression < 50
			var:activity_special_type_progression >= 25
		}
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 500
		}
	}
	else = {
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 250
		}
	}
}