activity_beyond_dark_portal = {
	is_shown = {
		NOT = { is_target_in_global_variable_list = { name = unavailable_unique_events target = flag:beyond_dark_portal } }
		title:c_dark_portal.holder.top_liege = root
		is_landed = yes
		# Can't happen twice
		game_start_date < 592.1.1
		
		# Ner'zhul should be alive
		current_date > 560.1.1
		current_date < 620.1.1
		is_incapable = no
		# DLC locked
		#has_dlc_feature = tours_and_tournaments
		#has_dlc_feature = advanced_activities
	}

	can_start = {
		root = {
			has_draenor_culture_trigger = no
			draenor_faith_trigger = no
		}
		# The Dark Portal is guarded, there's no way to get to Azeroth so Ner'zhul has to open new portals
		trigger_if = {
			limit = { NOT = { title:c_dark_portal.holder = root } }
			title:c_dark_portal.holder = {
				has_draenor_culture_trigger = no
				draenor_faith_trigger = no
			}
		}
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
		is_imprisoned = no
	}

	is_valid = {
		any_attending_character = {
			is_alive = yes
		}
	}

	guest_join_chance = {
		base = 300
	}

	wait_time_before_start = {
		months = 8
	}
	max_guest_arrival_delay_time = {
		months = 1
	}
	#on_invalidated = {
	#	
	#}

	on_host_death = {
		#Make the player heir the new host, if they're on the Pilgrimage
		if = {
			limit = { 
				any_attending_character = { is_alive = yes NOT = { this = scope:host } }
			}
			scope:host = { save_scope_as = old_host }
			ordered_attending_character = {
				limit = {
					is_ai = no
					is_alive = yes
				}
				# Prefers players
				alternative_limit = {
					is_alive = yes
				}
				order_by = martial
				
				save_scope_as = new_host
			}
			#Also inherit the travel plan
			if = {
				limit = {
					scope:host.current_travel_plan = {
						any_entourage_character = { this = scope:new_host }
					}
				}
				scope:host.current_travel_plan = { set_travel_plan_owner = scope:new_host }
			}
			set_activity_host = scope:new_host
		}
		#Otherwise indirectly cancel the activity by not setting a new host
		else = {
			# Send your entourage home
			scope:host = {
				current_travel_plan = {
					every_entourage_character = { set_location_to_default = yes }
				}
			}
		}
	}

	is_location_valid = {
		custom_tooltip = {
			text = activity_bdp_is_dark_portal_province_tt
			root = title:c_dark_portal.title_province
		}
	}

	province_description = {
		desc = activity_bdp_province_desc
	}

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 0
		if = {
			limit = {
				any_ally = {
					count >= 1
					is_landed = yes
				}
			}
			add = {
				value = 500
				desc = "Has Allies"
			}
		}
		if = {
			limit = {
				ai_energy < 0
			}
			add = {
				add = ai_energy
				desc = "ai_energy"
			}
		}
		
		if = {
			limit = { has_trait = brave }
			add = {
				value = 300
				desc = "Has Brave"
			}
		}
		if = {
			limit = { has_trait = ambitious }
			add = {
				value = 300
				desc = "Has Ambitious"
			}
		}
	}

	ai_check_interval = 3

	ai_will_select_province = {
		value = 100
	}

	###################
	# PARAMETERS
	###################

	is_grand_activity = no

	is_single_location = yes

	province_filter = top_realm

	max_route_deviation_mult = 3.0

	cost = {
		gold = {
			add = {
				value = 100
				if = {
					limit = { is_ai = yes }
					subtract = 40
				}
			}
		}
	}

	ui_predicted_cost = {
		gold = 300
	}

	###################
	# OPTIONS
	###################

	options = {
		#########
		# TYPE OF PILGRIMAGE [SPECIAL TYPE] OPTION
		#########
		special_type = {
			bdp_leading_myself = {
				#Crashes [sometimes] if you start the game with a ruler where this is default then tag over to another ruler where this isn't default
				default = {
					always = yes
				}
				is_valid = {
					always = yes
				}
				ai_will_do = {
					value = 50
					if = {
						limit = {
							OR = {
								has_trait = zealous
								has_trait = diligent
								has_trait = ambitious
								has_trait = brave
							}
						}
						add = 50
					}
					if = {
						limit = {
							OR = {
								has_trait = cynical
								has_trait = lazy
								has_trait = craven
							}
						}
						subtract = 50
					}
				}
			}
			bdp_leading_others = {
				is_valid = {
					always = yes
				}
				ai_will_do = {
					value = 50
					if = {
						limit = {
							OR = {
								has_trait = cynical
								has_trait = lazy
								has_trait = craven
							}
						}
						add = 50
					}
					if = {
						limit = {
							OR = {
								has_trait = zealous
								has_trait = diligent
								has_trait = ambitious
								has_trait = brave
							}
						}
						subtract = 50
					}
				}
			}
		}
		#########
		# POMP OPTION
		#########
		bdp_option_financial_support = {
			bdp_finance_weak = {
				#is_shown = { has_dlc_feature = advanced_activities }
				# Entourage option grabbing suitable bodyguards & maybe someone from court who really likes you, + randos.
				travel_entourage_selection = { 
					weight = bdp_entourage_base_set_weighting_value
					max = 2
					invite_rule_order = 1
				}

				cost = { gold = -50 }
				
				# Travel modifier given in on_enter_travel_state.

				# We just grab/generate random same-faith "pilgrims" from the local pool.

				ai_will_do = {
					value = 0
					if = {
						limit = {
							has_trait = greedy
						}
						add = 20
					}
				}
			}
			bdp_finance_normal = {
				default = yes

				# Entourage option grabbing suitable bodyguards & maybe someone from court who really likes you, + randos.
				travel_entourage_selection = { 
					weight = bdp_entourage_base_set_weighting_value
					max = 3
					invite_rule_order = 1
				}

				ai_will_do = {
					value = 5
				}
			}
			bdp_finance_good = {
				#is_shown = { has_dlc_feature = advanced_activities }

				cost = { gold = 100 }

				#Entourage option grabbing most people suitable from court, + randos.
				travel_entourage_selection = {
					weight = {
						add = bdp_entourage_base_set_weighting_value
					}

					max = 4
					invite_rule_order = 1
				}

				ai_will_do = {
					value = 5
				}
			}
			bdp_finance_enormous = {
				#is_shown = { has_dlc_feature = advanced_activities }

				cost = { gold = 300 }
				#Entourage option grabbing sodding everyone suitable from court, + every grabbable rando in the duchy and maybe a few extra.
				travel_entourage_selection = {
					weight = {
						add = bdp_entourage_base_set_weighting_value
					}

					max = 5
					invite_rule_order = 1
				}

				ai_will_do = {
					value = 5
				}
			}
		}
	}

	special_option_category = special_type

	# Effects run when the activity is created
	on_start = {
		scope:activity ?= {
			#Counter for the Activity Special Type (Pious/Worldly etc) Progress bar
			activity_setup_special_type_progression_effect = yes
		}
		scope:host = { save_scope_as = portal_owner trigger_event = { id = WCDRA.998 days = { 7 14 } } }
		add_to_global_variable_list = {
			name = unavailable_unique_events
			target = flag:beyond_dark_portal
		}
	}

	###################
	# PHASES
	###################

	phases = {
		bdp_phase_preparations = {
			is_predefined = yes
			order = 1

			ai_will_do = { value = 100 }

			on_phase_active = {
				if = {
					limit = { this = scope:host }
					scope:activity = {
						progress_activity_phase_after = { months = 1 }
						every_attending_character = {
							scope:activity = { add_to_variable_list = { name = summoned_rulers target = prev } }
						}
					}

				}
				
				
				if = {
					limit = {
						is_ruler = yes
					}
					trigger_event = { id = WCDRA.1000 days = 10 }
				}
			}

			#Events that happen while we're on site
			on_weekly_pulse = {
				if = {
					limit = { this = scope:host }
					
				}
			}

			on_end = {
				if = {
					limit = { this = scope:host }
					
					every_player = { trigger_event = { id = WCDRA.1001 days = 1 } }
				}
			}
		}
		bdp_phase_hellfire_citadel = {
			is_predefined = yes
			order = 2

			ai_will_do = { value = 100 }

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					# List of dynasties for renown reward
					scope:activity = {
						progress_activity_phase_after = { days = 45 }
						every_attending_character = {
							dynasty ?= {
								scope:activity = {
									add_to_variable_list = {
										name = dynasties_for_renown_reward
										target = prev
									}
								}
							}
						}
					}

					trigger_event = { id = WCDRA.1003 days = 7 }
				}
			}

			#Events that happen while we're on site
			#on_weekly_pulse = {
			#	if = {
			#		limit = { this = scope:host }
			#		
			#	}
			#}
			#
			#on_end = {
			#	if = {
			#		limit = { this = scope:host }
			#		
			#	}
			#}
		}
		bdp_phase_auchindoun = {
			is_predefined = yes
			order = 3

			ai_will_do = { value = 100 }

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					scope:activity = {
						progress_activity_phase_after = { days = 100 } # we skip it earlier through WCDRA.1018 event
						trigger_event = { id = WCDRA.1008 days = 7 }
						trigger_event = { id = WCDRA.1013 days = 30 }
					}
				}
			}
		}
		bdp_phase_black_temple = {
			is_predefined = yes
			order = 4

			ai_will_do = { value = 100 }

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					scope:activity = {
						progress_activity_phase_after = { days = 33 }
						trigger_event = { id = WCDRA.1023 days = 30 }
						
					}
				}
			}
		}
		bdp_phase_dark_portal = {
			is_predefined = yes
			order = 5

			ai_will_do = { value = 100 }

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					scope:activity = {
						progress_activity_phase_after = { days = 40 }
						trigger_event = { id = WCDRA.1028 days = 15 }
						trigger_event = { id = WCDRA.1033 days = 30 }
					}
				}
			}
		}
	}

	###################
	# GUEST HANDLING
	###################

	allow_zero_guest_invites = yes

	guest_invite_rules = {
		defaults = {
			1 = activity_invite_rule_allies_and_player_vassals
			2 = activity_invite_rule_landed_family
		}
	}

	can_be_activity_guest = {
		age >= 14
	}

	max_guests = 80

	host_intents = {
		intents = { save_azeroth_intent survive_intent }
		default = save_azeroth_intent
	}

	guest_intents = {
		intents = { save_azeroth_intent survive_intent }
		default = save_azeroth_intent
	}

	travel_entourage_selection = {
		weight = bdp_entourage_base_set_weighting_value
		max = 3
		invite_rule_order = 1
	}

	###################
	# ACTIVITY-SPECIFIC PULSES
	###################

	#pulse_actions = {
	#	entries = {
	#		apa_preaching_wrath_of_god
	#		apa_studying_scripture
	#	}
	#	chance_of_no_event = 5
	#}

	on_enter_travel_state = {
		scope:activity ?= {
			
		}
	}

	on_travel_state_pulse = {
		#Handled in the on_travel_plan_movement on_action for Pilgrimage and Hajj
	}

	on_enter_passive_state = {
		
	}

	on_passive_state_pulse = { }

	on_enter_active_state = { }

	on_active_state_pulse = { }

	on_complete = {
		#Conclusion/reward event is run in the phase on_end
		if = {
			limit = {
				is_ai = yes
				is_alive = yes
				NOT = { this = scope:host }
			}
			set_location_to_default = yes
		}
	}

	###################
	# GRAPHICS
	###################

	# Travel
	background = { # Bridge
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_riverside_province = yes
				geographical_region = world_europe
				OR = {
					terrain = farmlands
					terrain = plains
					terrain = mountains
					terrain = hills
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_bridge.dds"
		environment = "environment_travel_bridge"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	
	background = { # Farmland, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_farm.dds"
		environment = "environment_travel_farmlands"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { # Farmland, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/farms.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #Desert, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_desert.dds"
		environment = "environment_travel_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = { #Desert, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/desert.dds"
		environment = "environment_event_bp1_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #forest snowy
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location ?= { hunt_snowy_forest_trigger = yes }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_hunt_snowy_forest.dds"
		environment = "environment_hunt_snowy_forest"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #forest_pine
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_pine_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest_pine.dds"
		environment = "environment_event_forest_pine"
		ambience = "event:/SFX/Events/Backgrounds/coniferous_forest_day"
	}

	background = { #forest
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest.dds"
		environment = "environment_event_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #mountains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = { #mountains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #steppe, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_steppe.dds"
		environment = "environment_travel_steppe_settlement"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = { #steppe, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}

	background = { #drylands (formerly desert)
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_drylands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/drylands.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #wetlands
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_wetlands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_wetlands.dds"
		environment = "environment_event_bp1_wetlands" 
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #jungle
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_jungle_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_jungle.dds"
		environment = "environment_event_bp1_jungle"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #plains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #plains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_plains.dds"
		environment = "environment_event_bp1_plains"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #hills, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #hills, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_hills.dds"
		environment = "environment_event_bp1_hills"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #sea
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_sea_province = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_ocean.dds"
		environment = "environment_event_fp1_ocean"
		ambience = "event:/DLC/FP1/SFX/Events/event_ocean_longship"
	}
	# End Travel

	#Draenor
	background = {
		trigger = {
			has_current_phase = bdp_phase_preparations
		}
		texture = "gfx/interface/illustrations/event_scenes/genericcamp.dds"
		environment = "environment_event_genericcamp"
		ambience = "event:/SFX/Events/Backgrounds/camp_generic_day"
	}
	background = {
		trigger = {
			OR = {
				has_current_phase = bdp_phase_hellfire_citadel
				has_current_phase = bdp_phase_black_temple
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/hellfire_peninsula.dds"
		environment = "environment_hellfire_peninsula"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = {
		trigger = {
			has_current_phase = bdp_phase_auchindoun
		}
		texture = "gfx/interface/illustrations/event_scenes/wc_terokkar_forest.dds"
		environment = "environment_terokkar_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}
	#background = {
	#	trigger = {
	#		has_current_phase = bdp_phase_black_temple
	#	}
	#	texture = "gfx/interface/illustrations/event_scenes/ep2_holysite_western.dds"
	#	environment = "environment_western_holy_site"
	#	ambience = "event:/SFX/Events/Backgrounds/temple_christian"
	#}
	background = {
		trigger = {
			has_current_phase = bdp_phase_dark_portal
		}
		texture = "gfx/interface/illustrations/event_scenes/wc_dark_portal.dds"
		environment = "environment_event_portal"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/wc_dark_portal.dds"
		environment = "environment_event_portal"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	### Plug in widgets
	activity_window_widgets = {
		activity_special_type_progression = "activity_plugin_widgets_summary"
	}

	window_characters = {

		son_of_lothar = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = { NOT = { this = scope:host } is_ruler = yes }
					alternative_limit = { any_close_family_member = { NOT = { this = scope:host } is_ruler = yes } }
					alternative_limit = { NOT = { this = scope:host } is_lowborn = no }
					alternative_limit = { NOT = { this = scope:host } is_lowborn = yes }
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = {
						root = { has_current_phase = bdp_phase_preparations }
					}
					animation = { hunting_shortbow_aim_arrow_default personality_bold personality_honorable toast_goblet worry ecstasy }
				}
				animation = jockey_walk
			}
		}

		son_of_lothar = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = { NOT = { this = scope:host } is_ruler = yes }
					alternative_limit = { any_close_family_member = { NOT = { this = scope:host } is_ruler = yes } }
					alternative_limit = { NOT = { this = scope:host } is_lowborn = no }
					alternative_limit = { NOT = { this = scope:host } is_lowborn = yes }
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = {
						root = { has_current_phase = bdp_phase_preparations }
					}
					animation = { hunting_shortbow_aim_arrow_default personality_bold personality_honorable toast_goblet worry ecstasy }
				}
				animation = jockey_walk
			}
		}
		
		expedition_leader = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = { add_to_list = characters }
				}
			}
			scripted_animation = {
				triggered_animation = {
					trigger = {
						root = { has_current_phase = bdp_phase_preparations }
					}
					animation = { hunting_shortbow_aim_arrow_default personality_bold personality_honorable toast_goblet worry ecstasy }
				}
				triggered_animation = {
					trigger = {
						always = yes
					}
					animation = jockey_walk #jockey_lance_tilted jockey_lance_couched_gallop jockey_walk jockey_idle jockey_victory
				}
				#Fallback
				animation = jockey_lance_couched_gallop
			}
		}
		
		expedition_leader = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = {
						root = { has_current_phase = bdp_phase_preparations }
					}
					animation = { hunting_shortbow_aim_arrow_default personality_bold personality_honorable toast_goblet worry ecstasy }
				}
				animation = jockey_lance_couched_gallop
			}
		}


		son_of_lothar = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = { is_lowborn = yes }
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = {
						root = { has_current_phase = bdp_phase_preparations }
					}
					animation = { hunting_shortbow_aim_arrow_default personality_bold personality_honorable toast_goblet worry ecstasy }
				}
				animation = jockey_walk
			}
		}

		son_of_lothar = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					#limit = { is_ruler = yes }
					#alternative_limit = { any_close_family_member = { is_ruler = yes } }
					#alternative_limit = { is_lowborn = no }
					#alternative_limit = { is_lowborn = yes }
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				triggered_animation = {
					trigger = {
						root = { has_current_phase = bdp_phase_preparations }
					}
					animation = { hunting_shortbow_aim_arrow_default personality_bold personality_honorable toast_goblet worry ecstasy }
				}
				animation = jockey_walk
			}
		}
	}
}
