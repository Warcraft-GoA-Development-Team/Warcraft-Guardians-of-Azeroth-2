get_pol_faction_variables_effect = {
	save_temporary_scope_as = effect_root
	
	clear_pol_faction_variables_effect = yes
	
	set_variable = {
		name = gui_pol_faction_name
		value = flag:$faction$
	}
	
	set_variable = {
		name = gui_pol_faction_strength
		value = 0
	}
	set_variable = {
		name = gui_pol_faction_member_number
		value = 0
	}
	
	# Get all faction leaders
	get_pol_faction_leaders_effect = { block_clear = yes }
	# Leader of chosen faction
	if = {
		limit = { exists = global_var:$faction$_leader }
		global_var:$faction$_leader = {
			scope:effect_root = {
				set_variable = {
					name = gui_pol_faction_leader
					value = prev
				}
			}
			# Heir
			primary_heir = {
				if = {
					limit = { can_lead_faction_trigger = { faction = $faction$ landless = yes } }
					scope:effect_root = {
						set_variable = {
							name = gui_pol_faction_heir
							value = prev
						}
					}
				}
			}
		}
	
		# Members
		every_in_global_list = {
			variable = $faction$_members
			if = {
				limit = { NOT = { this = global_var:$faction$_leader } }
				scope:effect_root = {
					add_to_variable_list = {
						name = gui_pol_faction_members
						target = prev
					}
					change_variable = {
						name = gui_pol_faction_member_number
						add = 1
					}
				}
			}
			# Strength
			scope:effect_root = {
				change_variable = {
					name = gui_pol_faction_strength
					add = prev.max_military_strength
				}
			}
		}
	
		# Vice Leader
		ordered_in_global_list = {
			variable = $faction$_members
			limit = {
				NOT = { this = global_var:$faction$_leader }
				can_lead_faction_trigger = { faction = $faction$ landless = no }
			}
			order_by = pol_faction_leader_values
			max = 1
		
			scope:effect_root = {
				set_variable = {
					name = gui_pol_faction_vice_leader
					value = prev
				}
			}
		}
	}
}
# Used in normal effects to tell when it's time to update info
try_to_update_pol_faction_info_effect = {
	every_player = {
		if = {
			limit = { 
				exists = var:gui_pol_faction_name
				var:gui_pol_faction_name = flag:$faction$
			}
			get_pol_faction_variables_effect = { faction = $faction$ }
		}
		else = {
			get_pol_faction_leaders_effect = { block_clear = yes }
		}
	}
}
clear_pol_faction_variables_effect = {
	remove_variable = gui_pol_faction_name
	
	clear_pol_faction_leaders_effect = yes
	remove_variable = gui_pol_faction_leader
	clear_variable_list = gui_pol_faction_members
	remove_variable = gui_pol_faction_strength
	remove_variable = gui_pol_faction_heir
	remove_variable = gui_pol_faction_vice_leader
	remove_variable = gui_pol_faction_member_number
}

get_pol_faction_leaders_effect = {
	save_temporary_scope_value_as = {
		name = block_clear
		value = flag:$block_clear$
	}
	
	if = {
		limit = { scope:block_clear = flag:yes }
		add_character_flag = gui_leader_clear_block_flag
	}
	
	if = {
		limit = { exists = global_var:alliance_leader }
		set_variable = {
			name = gui_alliance_leader
			value = global_var:alliance_leader
		}
	}
	# So it won't be blank
	else = {
		set_variable = {
			name = gui_alliance_leader
			value = this
		}
	}
	if = {
		limit = { exists = global_var:horde_leader }
		set_variable = {
			name = gui_horde_leader
			value = global_var:horde_leader
		}
	}
	# So it won't be blank
	else = {
		set_variable = {
			name = gui_horde_leader
			value = this
		}
	}
	if = {
		limit = { exists = global_var:custom_leader }
		set_variable = {
			name = gui_custom_leader
			value = global_var:custom_leader
		}
	}
	# So it won't be blank
	else = {
		set_variable = {
			name = gui_custom_leader
			value = this
		}
	}
}
clear_pol_faction_leaders_effect = {
	if = {
		limit = { NOT = { has_character_flag = gui_leader_clear_block_flag } }
		remove_variable = gui_alliance_leader
		remove_variable = gui_horde_leader
		remove_variable = gui_custom_leader
	}
}

get_crisis_title_gui_effect = {
	if = {
		limit = { exists = $TITLE$.holder }
		set_variable = {
			name = crisis_character
			value = $TITLE$.holder
		}
	}
	if = {
		limit = { exists = $TITLE$ }
		set_variable = {
			name = crisis_title
			value = $TITLE$
		}
	}
	
	if = {
		limit = {
			exists = var:crisis_character
			exists = var:coalition_members
		}
		var:crisis_character = {
			every_in_list = {
				variable = coalition_members
			}
		}
	}
}
clear_crisis_gui_effect = {
	remove_variable = crisis_character
	remove_variable = crisis_title
}