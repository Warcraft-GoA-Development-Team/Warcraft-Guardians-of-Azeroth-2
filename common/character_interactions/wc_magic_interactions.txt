# wc_magic_cast_spell_interaction = {
# 	common_interaction = yes
# 	use_diplomatic_range = yes
# 	category = interaction_category_wc_magic
# 	icon = wc_spellbook_icon

# 	is_shown = {
# 		scope:actor = {
# 			is_magic_user_trigger = yes
# 			can_cast_another_spell_trigger = yes
# 		}
# 	}

# 	on_accept = {
# 		scope:actor = {
# 			set_global_variable = {
# 				name = spellbook_open
# 				value = yes
# 			}
# 			set_variable = {
# 				name = spellbook_type_cast
# 				value = yes
# 			}
# 			custom_tooltip = wc_magic_cast_spell_interaction_tt
# 		 	set_variable = { name = spell_recipient value = scope:recipient }
# 		}
# 		scope:recipient = {
# 			custom_tooltip = wc_magic_cast_spell_interaction_tt_r
# 		}
# 	}

# 	auto_accept = yes
# }

# wc_magic_stop_channeling_spell_interaction = {

# }

wc_magic_fire_shield_interaction = {
	category = interaction_category_wc_magic
	icon = wc_spellbook_icon

	populate_recipient_list = {
		scope:recipient = {
			if = {
				limit = {
					exists = primary_spouse
					primary_spouse = {
						NOT = {
							has_character_modifier = wc_fire_shield_modifier
						}
					}
				}
				primary_spouse = {
					add_to_list = characters
				}
			}
			every_relation = {
				type = friend
				limit = {
					NOT = {
						has_character_modifier = wc_fire_shield_modifier
					}
				}
				add_to_list = characters
			}
			every_relation = {
				type = best_friend
				limit = {
					NOT = {
						has_character_modifier = wc_fire_shield_modifier
					}
				}
				add_to_list = characters
			}
			every_relation = {
				type = lover
				limit = {
					NOT = {
						has_character_modifier = wc_fire_shield_modifier
					}
				}
				add_to_list = characters
			}
		}
	}

	auto_accept = yes

	hidden = yes

	on_accept = {
		scope:secondary_recipient = {
			custom_tooltip = wc_twin_flame_character_effect_tt
		}
		hidden_effect = {
			scope:actor = {
				set_variable = {
					name = fire_shield_secondary_target
					value = scope:secondary_recipient
				}
			}
		}
	}
}