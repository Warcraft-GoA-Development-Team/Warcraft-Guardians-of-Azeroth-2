###################################
# Favour Skilled Outsiders
# By Ewan Cowhig Croft
###################################

# Bring in skilled characters that like you at the cost of offending your other vassals.
favour_skilled_outsiders_decision = {
	desc = favour_skilled_outsiders_decision_desc
	confirm_text = favour_skilled_outsiders_decision_confirm
	selection_tooltip = favour_skilled_outsiders_decision_tooltip
	picture = "gfx/interface/illustrations/decisions/fp3_decision_tax_collector.dds"
	sort_order = 180
	
	is_shown = {
		has_fp3_dlc_trigger = yes
		is_landed = yes
		favour_skilled_outsiders_decision_valid_character_to_take_trigger = yes
	}

	is_valid = {
		any_sub_realm_county = { favour_skilled_outsiders_decision_valid_county_to_generate_trigger = yes }
		favour_skilled_outsiders_decision_valid_character_to_take_trigger = yes
		realm_size >= medium_realm_size
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
		is_at_war = no
	}

	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "favour_skilled_outsiders_decision.second_step"

		# Diplomacy-Martial: Eloquent Captains
		item = {
			value = outsider_diplomacy_martial
			current_description = favour_skilled_outsiders_decision.tt.diplomacy_martial
			localization = favour_skilled_outsiders_decision.tt.diplomacy_martial
			icon = "gfx/interface/icons/message_feed/a_catch_all_councillor_icon.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_CHANCELLOR
					exists = cp:councillor_chancellor
				}
				trigger_if = {
					limit = { exists = cp:councillor_chancellor }
					cp:councillor_chancellor = { diplomacy < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_chancellor = { diplomacy < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = diplomacy
				subtract = martial
			}
		}
		# Martial-Prowess: Career Soldiers
		item = {
			value = outsider_martial_prowess
			current_description = favour_skilled_outsiders_decision.tt.martial_prowess
			localization = favour_skilled_outsiders_decision.tt.martial_prowess
			icon = "gfx/interface/icons/message_feed/mercenary.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_MARSHAL
					exists = cp:councillor_marshal
				}
				trigger_if = {
					limit = { exists = cp:councillor_marshal }
					cp:councillor_marshal = { martial < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_marshal = { martial < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = martial
				subtract = prowess
			}
		}
		# Prowess-Learning: Fringe Nobility
		item = {
			value = outsider_prowess_learning
			current_description = favour_skilled_outsiders_decision.tt.prowess_learning
			localization = favour_skilled_outsiders_decision.tt.prowess_learning
			icon = "gfx/interface/icons/message_feed/tier_down.dds"
			# Always valid.
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = prowess
				subtract = learning
			}
		}
		# Learning-Intrigue: Dedicated Functionaries
		item = {
			value = outsider_learning_intrigue
			current_description = favour_skilled_outsiders_decision.tt.learning_intrigue
			localization = favour_skilled_outsiders_decision.tt.learning_intrigue
			icon = "gfx/interface/icons/message_feed/secret.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_COURT_CHAPLAIN
					exists = cp:councillor_court_chaplain
				}
				trigger_if = {
					limit = { exists = cp:councillor_court_chaplain }
					cp:councillor_court_chaplain = { learning < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_court_chaplain = { learning < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = learning
				subtract = intrigue
			}
		}
		# Intrigue-Stewardship: Cunning Officials
		item = {
			value = outsider_intrigue_stewardship
			current_description = favour_skilled_outsiders_decision.tt.intrigue_stewardship
			localization = favour_skilled_outsiders_decision.tt.intrigue_stewardship
			icon = "gfx/interface/icons/message_feed/spy_master.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_SPYMASTER
					exists = cp:councillor_spymaster
				}
				trigger_if = {
					limit = { exists = cp:councillor_spymaster }
					cp:councillor_spymaster = { intrigue < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_spymaster = { intrigue < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = intrigue
				subtract = stewardship
			}
		}
		# Stewardship-Diplomacy: Skilled Administrators
		item = {
			value = outsider_stewardship_diplomacy
			current_description = favour_skilled_outsiders_decision.tt.stewardship_diplomacy
			localization = favour_skilled_outsiders_decision.tt.stewardship_diplomacy
			icon = "gfx/interface/icons/message_feed/money.dds"
			is_valid = {
				custom_tooltip = {
					text = COUNCILLOR_MISSING_STEWARD
					exists = cp:councillor_steward
				}
				trigger_if = {
					limit = { exists = cp:councillor_steward }
					cp:councillor_steward = { stewardship < favour_skilled_outsiders_decision_skill_threshold_value }
					# And an extra tooltip for narrative clarity.
					custom_tooltip = {
						text = favour_skilled_outsiders_decision.tt.skilled_councillor_keeps_clean_house
						cp:councillor_steward = { stewardship < favour_skilled_outsiders_decision_skill_threshold_value }
					}
				}
			}
			ai_chance = {
				# The AI wants to recruit characters that compensate for their skills.
				## So we set a high base.
				value = 100
				## Then we subtract root's relevant skills.
				subtract = stewardship
				subtract = diplomacy
			}
		}
	}

	effect = {
		# So here's what'll happen.
		custom_tooltip = favour_skilled_outsiders_decision.tt.promote_minorities_from_within_realm
		custom_tooltip = favour_skilled_outsiders_decision.tt.two_batches_to_choose_from
		# And how people will react.
		show_as_tooltip = { favour_skilled_outsiders_decision_apply_opinions_effect = yes }
		# Save how much prestige we paid in case we back out.
		save_scope_value_as = {
			name = prestige_cost
			value = favour_skilled_outsiders_decision_prestige_cost_value
		}
		# Now fire the actual event.
		trigger_event = fp3_misc_decisions.0032
	}

	cooldown = { years = 25 }
	
	cost = { prestige = favour_skilled_outsiders_decision_prestige_cost_value }

	ai_check_interval = 24

	ai_potential = {
		# Check this stuff early, else we'll go through a bunch of county checks unnecessarily.
		favour_skilled_outsiders_decision_valid_character_to_take_trigger = yes
		# Plus simple validity checks.
		is_adult = yes
		is_at_war = no
	}

	ai_will_do = {
		# We don't want to use this too much - the AI is gonna have trouble utilising such characters correctly.
		base = -50

		# Missing councillors.
		## Chancellor
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_chancellor }
		}
		## Steward
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_steward }
		}
		## Marshal
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_marshal }
		}
		## Spymaster
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_spymaster }
		}
		## Court_chaplain
		modifier = {
			add = 50
			NOT = { exists = cp:councillor_court_chaplain }
		}
		# Government.
		## Teensy upweight for clans, as the model for the decision.
		modifier = {
			add = 20
			government_has_flag = government_is_clan
		}
		# Traits.
		## Calm
		modifier = {
			add = 15
			has_trait = calm
		}
		## Humble
		modifier = {
			add = 15
			has_trait = humble
		}
		## Ambitious
		modifier = {
			add = 15
			has_trait = ambitious
		}
	}
}

###################################
# Become a Clan Government
###################################
fp3_become_clan_government_decision = {
	picture = "gfx/interface/illustrations/decisions/fp3/friendly.dds"

	desc = fp3_become_clan_government_decision_desc
	selection_tooltip = fp3_become_clan_government_decision_tooltip

	ai_check_interval = 64

	cost = { prestige = major_prestige_value }

	is_shown = {
		has_fp3_dlc_trigger = yes
		# You are Feudal
		#government_has_flag = government_is_feudal
		NOT = { government_has_flag = government_is_clan }
		# Has a House and is not House Head
		exists = house
		NOT = { house.house_head = root }
		# Religion is Islam (Clan)
		#like_islam_religion_trigger = yes
		# House head is Clan
		house.house_head = { government_has_flag = government_is_clan }
	}

	is_valid = {
		# You are Feudal
		#government_has_flag = government_is_feudal
		NOT = { government_has_flag = government_is_clan }
		# Religion is Islam (Clan)
		#like_islam_religion_trigger = yes
		# House head is Clan
		custom_tooltip = {
			text = fp3_become_clan_government_decision_house_head_tt
			house.house_head = { government_has_flag = government_is_clan }
		}
	}

	effect = {
		show_as_tooltip ={
			change_government = clan_government
			# Increase unity, uses this effect since both chars are not clan when script is evaluated
			house.house_head = {
				apply_clan_unity_interaction_effect = {
					CHARACTER = root
					TARGET = root.house.house_head
					DESC = clan_unity_adopt_clan.desc
					VALUE = medium_unity_gain
					VALUE_REVERSED = no
				}
			}
		}
		trigger_event = fp3_misc_decisions.0051
	}

	ai_will_do = {
		base = -25
		# More likely if Clan preferred culture
		modifier = {
			add = 10
			culture = {
				OR = { # Warcraft
					like_heritage_arabic_trigger = yes 	# just sethralic
					like_heritage_iranian_trigger = yes # always no
					like_turkic_group_trigger = yes		# always no
					clan_government_primary_heritage_trigger = yes
				}
			}
		}
		# More likely if a fan of House Head
		opinion_modifier = {
			opinion_target = house.house_head
			multiplier = 0.5
		}
	}
}
