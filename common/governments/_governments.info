== Structure ==

my_government = {
	create_cadet_branches = yes/no
	religious = yes/no
	rulers_should_have_dynasty = yes/no		# rulers of this government type generate a dynasty; default: no
	council = yes/no						# The council is available for this ruler; default: yes

	fallback = 1..n							# At least one government should be scripted as fallback, fallback governments will be selected in order of priority (1 is selected over 2), used when lacking other selection and when populationg the map with holdings but no county holder exists.

	always_use_patronym = yes/no	# patronyms will display for characters if either their Culture or Government has this. Default is no.

	can_get_government = { ... }	# Trigger in character scope; checked when landed to see if it is an appropriate government. If failed, won't get this government (fallback will be used even if this fails if no other government is valid)

	primary_holding = castle_holding
	valid_holdings = { church_holding }		# Holdings that can be held directly by rulers of this government type. The primary holding is always valid.
	required_county_holdings = { castle_holding city_holding }	# Which holdings must be present in a county before more of an existing type or others can be built
	
	primary_cultures = { ... }			# A list of cultures for which this government type is valid and preferred. If both primary_cultures and primary_heritages are empty, there are no cultural restrictions or preferences.
	primary_heritages = { ... }			# A list of heritages for which this government type is valid and preferred. If both primary_cultures and primary_heritages are empty, there are no cultural restrictions or preferences.
	
	preferred_religions = { ... }		# A list of religions for which this government type is preferred

	court_generate_spouses = yes/no		# Should spouses be generated in courts of this government? yes by default
	court_generate_commanders = yes/no/<mult>	# Should commanders be generated in courts of this government? Can use a multiplier to the default number. yes = 1, no = 0

	royal_court = yes/no # Should this government allow having a royal court if of the correct tier from NRoyalCourt::MIN_ROYAL_COURT_TIER, default = no

	supply_limit_mult_for_others = 0		# Army owners of different govenment type have this multiplier applied to the supply limit
	affected_by_development = yes/no 		# Are the counties with owners with this government type affected by development. default: yes
	regiments_prestige_as_gold = yes/not 	# Is this govenmnet type using prestige to buy and reinforce MaA Regiments? ( mainteance still costs gold ). default: no

	prestige_opinion_override = { -20 10 ... } # an override for the opinion bonus that prestige levels gain, number of values should match the define in NCharacterOpinion::PRESTIGIOUS
	
	# Vassal obligations - how much does the vassal give to their liege. The vassal's government type determines which contract type is used.
	# Note that the values can be changed with the vassal_tax_contribution_add and vassal_levy_contribution_add modifiers.
	vassal_contract = {
		# List of vassal contract types
	}

	house_unity = house_unity_key			# the house unity is configured in common/house_unities and shows if a government can have house unity

	# Disable some AI features for this government type (all are enabled by default).
	# Note that some features might be disabled for other reasons (e.g. if not independent, if below a certain tier).
	ai = {
		use_lifestyle = yes/no
		imprison = yes/no					# Imprison & release from prison
		start_murders = yes/no
		arrange_marriage = yes/no			# Actively arrange marriages. Can still receive marriage requests if disabled.
		use_goals = yes/no					# Use longterm goals (build holdings, perform major decisions, ...)
		use_decisions = yes/no				# Use minor decisions
		use_scripted_guis = yes/no			# Will evaluate using scripted guis
		use_legends = yes/no 				# Will create and promote legends
		perform_religious_reformation = yes/no
	}

	character_modifier = {					# Modifier applied to the ruler character with this government type
	}

	color = { 100 100 100 }					# color for map mode
}

Allowed Modifiers
=================

Modifiers referenced by a government object can be only generic (hardcoded) modifiers, or modifiers generated from the following databases:
- schemes
- holdings
- lifestyles
- regions

Other generated modifiers are _not_ allowed, such as those from other governments, men_at_arms_types, cultures, or terrain types.
