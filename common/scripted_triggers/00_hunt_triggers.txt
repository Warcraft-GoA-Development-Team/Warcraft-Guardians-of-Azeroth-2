
can_hunt_trigger = {
	NOR = {
		has_trait = wounded_2
		has_trait = wounded_3
		has_trait = infirm
		has_trait = maimed
		has_trait = blind
	}
	has_contagious_deadly_disease_trigger = no
	custom_tooltip = {
		text = hunt_cannot_hunt_parameter_tt
		NOT = {
			culture = { has_cultural_parameter = cannot_hunt }
		}
	}
}

# Deer/Antelope
hunt_animal_deer_antelope_trigger = {	
	OR = {
		hunt_animal_deer_trigger = yes
		hunt_animal_antelope_trigger = yes
	}
	hunt_animal_big_available_trigger = yes
}

# Deer
hunt_animal_deer_trigger = {
	desert_region_trigger = no
	steppe_region_trigger = no
	jungle_region_trigger = no
	OR = {
		hunt_animal_temperate_terrain_trigger = yes
		terrain = jungle
	}
}

# Antelope
hunt_animal_antelope_trigger = {
	geographical_region = hunt_animal_antelope_region
	OR = {
		hunt_animal_temperate_terrain_trigger = yes
		hunt_animal_tropical_terrain_trigger = yes
		NOT = { terrain = jungle }
	}
}

# Gazelle
hunt_animal_gazelle_trigger = {
	geographical_region = hunt_animal_gazelle_region
	hunt_animal_tropical_terrain_trigger = yes
}

# Roe
hunt_animal_roe_trigger = {
	geographical_region = world_asia_minor
	geographical_region = world_india
	geographical_region = world_tibet
}

# Bison
hunt_animal_bison_trigger = {
	OR = {
		geographical_region = hunt_animal_bison_region
		steppe_region_trigger = yes
	}
	hunt_animal_tropical_terrain_trigger = no
	hunt_animal_big_available_trigger = yes
}

# Aurochs
hunt_animal_aurochs_trigger = {
	geographical_region = hunt_animal_aurochs_region
	hunt_animal_tropical_terrain_trigger = no
	hunt_animal_big_available_trigger = yes
}

# Fox
hunt_animal_fox_trigger = {
	hunt_animal_small_available_trigger = yes
}

# Terrain Triggers
hunt_animal_temperate_terrain_trigger = {
	OR = {
		# Flat
		terrain = plains
		terrain = farmlands
		terrain = steppe		
		terrain = wetlands
		# Wooded
		terrain = forest
		terrain = taiga
		# Rough
		terrain = hills
		terrain = mountains
	}
}

hunt_animal_tropical_terrain_trigger = {
	OR = {
		# Flat
		terrain = desert
		terrain = drylands
		terrain = floodplains
		terrain = oasis
		# Wooded
		terrain = jungle
		# Rough
		terrain = desert_mountains
	}
}

# Wolf
hunt_animal_wolf_trigger = {
	NAND = {
		geographical_region = world_africa_west
		OR = {
			terrain = hills
			terrain = forest
			terrain = jungle
			terrain = mountains
		}
	}
}

# Hyena
hunt_animal_hyena_trigger = {
	OR = {
		geographical_region = world_africa
		geographical_region = world_middle_east
		geographical_region = world_india
	}
}

# Lynx
hunt_animal_lynx_trigger = {
	OR = {
		geographical_region = world_eastern_kingdoms_quelthalas
		geographical_region = world_south_seas_darkspear_islands
		geographical_region = world_kalimdor_central_durotar_echo_isles
		geographical_region = world_broken_isles
	}
}

# Boar
hunt_animal_boar_trigger = { 
	geographical_region = hunt_animal_boar_region
	hunt_animal_big_available_trigger = yes
}

# Bear
hunt_animal_bear_trigger = {
	NOR = {
		tiger_region_trigger = yes
		lion_region_trigger = yes
	}
	hunt_animal_big_available_trigger = yes
}

# Caracal
hunt_animal_caracal_trigger = {
	OR = {
		geographical_region = world_kalimdor_central
		geographical_region = world_kalimdor_south
	}
	OR = {
		terrain = drylands
		terrain = hills
	}
}

# Crocodile
hunt_animal_crocodile_trigger = {
	OR = { 
		terrain = floodplains
		AND = { 
			OR = { 
				is_riverside_province = yes
				is_coastal = yes
			}
			NOT = { terrain = taiga }
		}
		terrain = wetlands
	}
	# OR = {
	# 	is_riverside_province = yes
	# 	terrain = floodplains
	# 	AND = {
	# 		is_coastal = yes
	# 		# Nile crocodiles  aren't ocean-dwellers.
	# 		NOT = { geographical_region = world_africa_north_east }
	# 	}
	# }
}

# Hippo
hunt_animal_hippo_trigger = {
	OR = {
		geographical_region = world_eastern_kingdoms_azeroth_stranglethorn
		geographical_region = world_kalimdor_central
		geographical_region = world_south_seas
	}
	is_riverside_province = yes
}

# Big Cat
hunt_animal_big_cat_trigger = {
	OR = {
		geographical_region = hunt_animal_big_cat_region
		desert_region_trigger = yes
		steppe_region_trigger = yes
	}
	hunt_animal_big_available_trigger = yes
}

hunt_animal_lion_trigger = {
	OR = {
		desert_region_trigger = yes
		steppe_region_trigger = yes
		AND = {
			OR = {
				geographical_region = world_eastern_kingdoms_azeroth_redridge_mountains
				geographical_region = world_eastern_kingdoms_khaz_modan_searing_gorge
				geographical_region = world_eastern_kingdoms_khaz_modan_badlands
			}
			OR = {
				terrain = drylands
				terrain = desert
				terrain = desert_mountains
				terrain = jungle
				terrain = forest
				terrain = hills
				terrain = mountains
			}
			NOR = {
				terrain = farmlands
				terrain = floodplains
			}
		}
	}
}

hunt_animal_tiger_trigger = {
	OR = {
		jungle_region_trigger = yes
		geographical_region = world_kalimdor_south_uldum
	}
	NOR = {
		terrain = farmlands
		terrain = floodplains
	}
}

hunt_animal_leopard_trigger = {
	OR = {
		eastern_kingdoms_jungle_region_trigger = yes
		geographical_region = world_south_seas
	}
	NOR = {
		terrain = farmlands
		terrain = floodplains
		terrain = desert_mountains
	}
}

hunt_animal_steppe_trigger = { # Saiga/etc.
	geographical_region = world_steppe
	OR = {
		terrain = steppe
		terrain = hills
		terrain = desert
		terrain = wetlands
	}
}

hunt_animal_big_available_trigger = {
	OR = {
		OR = {
			has_building_or_higher = hunting_grounds_01
			has_building_or_higher = royal_forest_01
		}
		AND = {
			trigger_if = {
				limit = { exists = county }
				always = yes
			}
			trigger_if = {
				limit = { exists = duchy }
				always = yes
			}
		}
	}
}

hunt_animal_small_available_trigger = {
	OR = {
		OR = {
			has_building_or_higher = hunting_grounds_01
			has_building_or_higher = royal_forest_01
		}
		AND = {
			trigger_if = {
				limit = { exists = county }
				always = yes
			}
			trigger_if = {
				limit = { exists = duchy }
				always = yes # Not native 
			}
		}
	}
}

hunt_activity_attendee_trigger = {
	is_available_for_activity_trigger = yes
	liege = scope:activity.activity_host
	NOT = { has_trait = blind }
}

hunt_activity_large_game_trigger = {
	OR = {
		$VAR$ ?= flag:hart
		$VAR$ ?= flag:elk
		$VAR$ ?= flag:stag
		$VAR$ ?= flag:antelope
		$VAR$ ?= flag:saiga
		$VAR$ ?= flag:reindeer
		$VAR$ ?= flag:saiga
		$VAR$ ?= flag:bison
		$VAR$ ?= flag:aurochs
		$VAR$ ?= flag:boar
		$VAR$ ?= flag:bear
		$VAR$ ?= flag:lion
		$VAR$ ?= flag:tiger
		$VAR$ ?= flag:leopard
	}
}

hunt_activity_deer_antelope_game_trigger = {
	OR = {
		hunt_activity_deer_game_trigger = { VAR = $VAR$ }
		hunt_activity_antelope_game_trigger = { VAR = $VAR$ }
	}
}

hunt_activity_antelope_game_trigger = {
	OR = {
		$VAR$ ?= flag:antelope
		$VAR$ ?= flag:gazelle
		$VAR$ ?= flag:saiga
	}
}

hunt_activity_deer_game_trigger = {
	OR = {
		$VAR$ ?= flag:stag
		$VAR$ ?= flag:hart
		$VAR$ ?= flag:roe
		$VAR$ ?= flag:reindeer
		$VAR$ ?= flag:elk
	}
}

hunt_activity_big_cat_game_trigger = {
	OR = {
		$VAR$ ?= flag:leopard
		$VAR$ ?= flag:lion
		$VAR$ ?= flag:tiger
	}
}

hunt_activity_herd_game_trigger = {
	OR = {
		hunt_activity_deer_antelope_game_trigger = { VAR = $VAR$ }
		$VAR$ ?= flag:bison
		$VAR$ ?= flag:aurochs
	}
}

hunt_activity_exotic_bird_trigger = {
	OR = {
		$VAR$ ?= flag:stork
		$VAR$ ?= flag:crane
		$VAR$ ?= flag:heron
		$VAR$ ?= flag:egret
		$VAR$ ?= flag:flamingo
		$VAR$ ?= flag:pelican
	}
}

hunt_activity_bird_trigger = {
	OR = {
		$VAR$ ?= flag:pheasant
		$VAR$ ?= flag:goose
		$VAR$ ?= flag:grouse
		$VAR$ ?= flag:quail
		$VAR$ ?= flag:duck
		$VAR$ ?= flag:swan
		$VAR$ ?= flag:goose
		$VAR$ ?= flag:quail
		$VAR$ ?= flag:stork
		$VAR$ ?= flag:crane
		$VAR$ ?= flag:heron
		$VAR$ ?= flag:egret
		$VAR$ ?= flag:flamingo
		$VAR$ ?= flag:pelican
	}
}

hunt_activity_ground_bird_trigger = {
	OR = {
		$VAR$ ?= flag:pheasant
		$VAR$ ?= flag:bustard
		$VAR$ ?= flag:grouse
		$VAR$ ?= flag:quail
	}
}

hunt_activity_recent_hunt_sighting_trigger = {
	OR = {
		exists = var:recent_sighting
		exists = var:animal_type		
		has_county_modifier = hunt_sighting_standard_modifier
		has_county_modifier = hunt_sighting_dangerous_modifier
		has_county_modifier = hunt_sighting_legendary_modifier
		has_county_modifier = hunt_sighting_falconry_modifier		
	}	
}

hunt_sighting_event_trigger = {
	is_available_adult = yes
	NOT = { has_character_flag = recent_hunt_sighting }
	trigger_if = {
		limit = {
			is_landed = no
			is_landless_adventurer = no
		}
		NOT = { domicile.domicile_location ?= province:496 }
	}
	OR = {
		court_position:master_of_hunt_court_position ?= { is_available_adult = yes }
		court_position:huntperson_camp_officer ?= { is_available_adult = yes }
		any_vassal_or_below = {
			is_available_adult = yes
			has_trait = lifestyle_hunter
		}
		any_courtier = {
			is_available_adult = yes
			has_trait = lifestyle_hunter
		}
	}
}

hunt_new_sighting_event_trigger = {
	trigger_if = {
		limit = { is_landed = no }
		domicile.domicile_location.county ?= {
			NOR = {
				has_variable = recent_sighting
				any_neighboring_county = { has_variable = recent_sighting }
				has_county_modifier = hunt_sighting_$TYPE$_modifier
				any_neighboring_county = { has_county_modifier = hunt_sighting_$TYPE$_modifier }
				hunt_activity_recent_hunt_sighting_trigger = yes
				any_neighboring_county = { hunt_activity_recent_hunt_sighting_trigger = yes }
			}
		}
	}
	trigger_else = {
		any_sub_realm_county = { hunt_activity_recent_hunt_sighting_trigger = no }
	}
}

hunt_is_valid_subordinate_trigger = {
	is_adult = yes
	NOT = { this = $LIEGE$ }
	OR = {
		is_vassal_of = $LIEGE$
		is_courtier_of = $LIEGE$
	}
	is_participant_in_activity = $LIEGE$.involved_activity
	NOR = {
		has_trait = incapable
		has_trait = wounded_2
		has_trait = wounded_3
	}
}

hunt_small_game_trigger = {
	exists = $VAR$
	OR = {
		$VAR$ = flag:fox
		$VAR$ = flag:hare
	}
}

hunt_story_trigger = {
	exists = scope:activity
	scope:activity = {
		exists = var:hunt_activity_story
		var:hunt_activity_story = flag:$STORY$
	}
}

activity_befriend_woo_trigger = {
	exists = intent_target
	intent_target = $CHARACTER$
	OR = {
		has_activity_intent = befriend_attendee_intent
		has_activity_intent = woo_attendee_intent
	}
}

hunt_mentor_child_trigger = {
	NOR = {
		has_trait = lifestyle_hunter
		AND = {
			has_trait = tourney_participant
			has_trait_xp = {
				trait = tourney_participant
				track = bow
				value >= 25
			}
		}
	}
	is_child_of = scope:host
	can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:host }
	NAND = {
		exists = scope:hunt_participant
		this = scope:hunt_participant
	}
}

hunt_hide_big_trigger = {
	OR = {
		$VARIABLE$ ?= flag:wolf
		$VARIABLE$ ?= flag:stag
		$VARIABLE$ ?= flag:reindeer
		$VARIABLE$ ?= flag:antelope
		$VARIABLE$ ?= flag:saiga
		$VARIABLE$ ?= flag:hart
		$VARIABLE$ ?= flag:elk
		$VARIABLE$ ?= flag:bison
		$VARIABLE$ ?= flag:aurochs
		$VARIABLE$ ?= flag:lion
		$VARIABLE$ ?= flag:tiger
		$VARIABLE$ ?= flag:bear
		$VARIABLE$ ?= flag:leopard
		$VARIABLE$ ?= flag:unicorn
		$VARIABLE$ ?= flag:dragon
	}
}

hunt_lifestyle_track_greater_equal_trigger = {
	has_trait = lifestyle_hunter
	has_trait_xp = {
		trait = lifestyle_hunter
		track = $TRACK$
		value >= $GREATER_EQUAL$
	}
}

hunt_lifestyle_track_less_trigger = {
	has_trait = lifestyle_hunter
	has_trait_xp = {
		trait = lifestyle_hunter
		track = $TRACK$
		value < $LESS_THAN$
	}
}

hunt_murder_target_trigger = {
	OR = {
		# Intent
		AND = {
			has_activity_intent = murder_attendee_intent
			intent_target ?= { hunt_valid_accidental_murder_target_trigger = yes }
		}
		# Schemes
		scope:activity = {
			any_attending_character = {
				NOT = { this = root }
				hunt_valid_accidental_murder_target_trigger = yes
				OR = {
					# Rival
					has_relation_rival = root
					# Scheme
					any_targeting_scheme = { hunt_murder_scheme_target_trigger = yes }
				}
				save_temporary_scope_as = murder_target_temp
			}
		}
		# Is trying to murder
		var:hunt_murder_attempt ?= {
			hunt_valid_accidental_murder_target_trigger = yes
			save_temporary_scope_as = murder_target_temp
		}
	}
	# Not put off murder already
	NAND = {
		exists = scope:murder_target_temp
		var:hunt_murder_defer ?= scope:murder_target_temp
	}
}

hunt_abduct_target_trigger = {
	OR = {
		# Intent
		hunt_murder_intent_target_trigger = yes
		# Schemes
		scope:activity = {
			any_attending_character = {
				NOT = { this = root }
				hunt_valid_accidental_murder_target_trigger = yes
				OR = {
					# Rival
					has_relation_rival = root
					# Scheme
					any_targeting_scheme = { hunt_murder_scheme_target_trigger = yes }
				}
				save_temporary_scope_as = abduct_target_temp
			}
		}
		# Is trying to abduct
		var:hunt_abduct_attempt ?= {
			hunt_valid_accidental_murder_target_trigger = yes
			save_temporary_scope_as = abduct_target_temp
		}
	}
	# Not put off abduction already
	NAND = {
		exists = scope:abduct_target_temp
		var:hunt_abduct_defer ?= scope:abduct_target_temp
	}
}

hunt_valid_accidental_murder_target_trigger = {
	is_alive = yes
	can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:host }
	NOT = { has_character_flag = not_slaying }
	is_participant_in_activity = scope:activity
}

hunt_murder_scheme_target_trigger = {
	scheme_type = murder
	OR = {
		scheme_owner = root
		any_scheme_agent_character = { this = root }
	}
	scheme_progress > 3
}

hunt_murder_intent_target_trigger = {
	has_activity_intent = murder_attendee_intent
	exists = intent_target
	intent_target = { hunt_valid_accidental_murder_target_trigger = yes }
	save_temporary_scope_as = murder_target_temp
}

hunt_valid_murder_accomplice_trigger = {
	NOT = { this = root }
	is_adult = yes
	is_participant_in_activity = scope:activity
	can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:host }
	save_temporary_scope_as = murderer_temp
}

hunt_1012_hated_participant_trigger = {
	AND = {
		exists = var:participant_to_use_1011
		var:participant_to_use_1011 = {
			is_alive = yes
			is_participant_in_activity = scope:activity
		}
		NOR = {
			has_trait = just
			has_trait = compassionate
		}
	}
}

hunt_murder_risk_trigger = {
	is_adult = yes
	OR = {
		# Scheme
		is_scheming_against = {
			target = root
			type = murder
		}
		# Intent
		AND = {
			hunt_murder_intent_target_trigger = yes
			intent_target = root
		}
		AND = {
			exists = var:hunt_murder_attempt
			var:hunt_murder_attempt = root
		}
	}
}

hunt_potential_murder_risk_trigger = {
	is_adult = yes
	NOT = {
		has_any_good_relationship_with_character_trigger = { CHARACTER = root }
	}
	OR = {
		# Rival
		has_relation_rival = root
		# Feud
		AND = {
			exists = house.house_head
			NOT = { house = root.house }
			house.house_head = {
				any_owned_story = {
					story_type = story_cycle_house_feud
					var:house_feud_house = root.house
				}
			}
		}
		# Heir
		AND = {			
			this = root.player_heir
			NOT = {
				has_any_good_relationship_with_character_trigger = { CHARACTER = root.player_heir }
			}
			opinion = {
				target = root
				value <= 20
			}
			NOR = {
				has_trait = craven
				has_trait = honest
				has_trait = content
			}
		}
		AND = {
			exists = var:hunt_murder_attempt
			var:hunt_murder_attempt = root
		}
	}
	can_start_scheme = {
		type = murder
		target_character = root
	}
	trigger_if = {
		limit = {
			OR = {
				is_close_family_of = root
				is_consort_of = root
			}
		}
		OR = {
			has_relation_rival = root
			NOR = {
				has_trait = compassionate
				has_trait = just
			}
		}
	}
	opinion = {
		target = root
		value <= -25
	}
}

hunt_accomplice_general_trigger = {
	is_ai = yes
	is_participant_in_activity = scope:activity
	NOR = {
		this = $TARGET$
		this = $MURDERER$
		has_any_good_relationship_with_character_trigger = { CHARACTER = $TARGET$ }
	}
	OR = {
		has_any_good_relationship_with_character_trigger = { CHARACTER = $MURDERER$ }
		has_relation_rival = root
		NOR = {
			has_trait = craven
			has_trait = honest
			has_trait = content
		}
	}
}

hunt_elective_accomplice_trigger = {
	hunt_accomplice_general_trigger = {
		MURDERER = $MURDERER$
		TARGET = $TARGET$
	}
	save_temporary_scope_as = elector_temp
	$MURDERER$ = {
		has_election_vote_of = {
			who = scope:elector_temp
			title = $TARGET$.primary_title
		}
	}
}

hunt_claimant_faction_trigger = {
	faction_is_type = claimant_faction
	exists = special_character
	special_character = $MURDERER$
	exists = special_title
	special_title = $TARGET$.primary_title
}

hunt_pertinent_friendly_trigger = {
	OR = {
		AND = {
			OR = {
				has_activity_intent = befriend_attendee_intent
				has_activity_intent = woo_attendee_intent
			}
			intent_target = scope:pertinent 
		}
		has_relation_friend = scope:pertinent
		has_relation_lover = scope:pertinent
	}
}

hunt_pertinent_hostile_trigger = {
	OR = {
		AND = {
			has_activity_intent = murder_attendee_intent
			intent_target = scope:pertinent
		}
		has_relation_rival = scope:pertinent
	}
}

hunt_dharmic_pacificist_trigger = {
	faith = { has_doctrine = tenet_dharmic_pacifism }
	NOT = { has_trait = cynical }
}

hunt_animal_type_small_trigger = {
	OR = {
		$VAR$ ?= flag:cat
		$VAR$ ?= flag:dog
		$VAR$ ?= flag:fox
		$VAR$ ?= flag:gazelle
		$VAR$ ?= flag:hare
		$VAR$ ?= flag:roe
	}
}

hunt_animal_type_herbivore_trigger = {
	OR = {
		hunt_activity_deer_antelope_game_trigger = { VAR = $VAR$ }
		$VAR$ ?= flag:aurochs
		$VAR$ ?= flag:bison
		$VAR$ ?= flag:boar
		$VAR$ ?= flag:hare
	}
}

hunt_animal_type_dangerous_trigger = {
	OR = {
		$VAR$ ?= flag:boar
		$VAR$ ?= flag:bison
		$VAR$ ?= flag:aurochs
		$VAR$ ?= flag:wolf
		$VAR$ ?= flag:hyena
		$VAR$ ?= flag:lynx
		$VAR$ ?= flag:bear
		$VAR$ ?= flag:lion
		$VAR$ ?= flag:tiger
		$VAR$ ?= flag:leopard
		$VAR$ ?= flag:stag
		$VAR$ ?= flag:antelope
		$VAR$ ?= flag:saiga
		$VAR$ ?= flag:reindeer
		$VAR$ ?= flag:hart
		$VAR$ ?= flag:elk
	}
}

hunt_animal_type_predator_trigger = {
	OR = {
		$VAR$ ?= flag:wolf
		$VAR$ ?= flag:hyena
		$VAR$ ?= flag:lynx
		$VAR$ ?= flag:bear
		$VAR$ ?= flag:lion
		$VAR$ ?= flag:tiger
		$VAR$ ?= flag:leopard
	}
}

hunt_animal_type_prestigious_trigger = {
	OR = {
		$VAR$ ?= flag:elk
		$VAR$ ?= flag:hart
		$VAR$ ?= flag:boar
		$VAR$ ?= flag:bear
		$VAR$ ?= flag:lion
		$VAR$ ?= flag:tiger
		$VAR$ ?= flag:leopard
	}
}

hunt_animal_type_lives_in_caves_trigger = {
	OR = {
		$VAR$ ?= flag:wolf
		$VAR$ ?= flag:hyena
		$VAR$ ?= flag:lynx
		$VAR$ ?= flag:bear
		$VAR$ ?= flag:leopard
	}
}

hunt_killed_by_animal_trigger = {
	OR = {
		death_reason = death_deer
		death_reason = death_moose
		death_reason = death_bear
		death_reason = death_boar
		death_reason = death_antelope
		death_reason = death_gazelle
		death_reason = death_bison
		death_reason = death_aurochs
		death_reason = death_wolf
		death_reason = death_hyena
		death_reason = death_lion
		death_reason = death_tiger
		death_reason = death_leopard
		death_reason = death_lynx
		death_reason = death_roe
		death_reason = death_hart
	}
}

hunt_legendary_animal_custom_loc_trigger = {
	trigger_if = {
		limit = { exists = scope:story }
		scope:story = { story_type = story_cycle_hunt_mystical_animal }
	}
	trigger_else_if = {
		limit = { exists = $ACTIVITY$ }
		$ACTIVITY$ = {
			has_activity_option = { category = special_type option = hunt_type_legendary }
		}
	}
	trigger_else = { always = no }
}

hunt_murder_bodyguard_appears_trigger = {
	OR = {
		has_court_position = bodyguard_court_position
		#has_court_position = akolouthos_court_position  # Warcraft - Remove
	}
	is_participant_in_activity = scope:activity
	NOR = {
		this = scope:murderer
		AND = {
			exists = scope:accomplice
			this = scope:accomplice
		}
		is_scheming_against = {
			target = root
			type = murder
		}
		AND = {
			has_activity_intent = murder_attendee_intent
			intent_target = root
		}
	}
}

# Target is valid for host to want to gift
hunt_trophy_recipient_trigger = {
	NOT = {
		has_any_bad_relationship_with_character_trigger = { CHARACTER = root }
	}
	reverse_opinion = { target = root value > 20 }
}

hunt_snowy_forest_trigger = {
	OR = {
		graphical_wilderness_forest_trigger = yes
		graphical_wilderness_forest_pine_trigger = yes
	}
	OR = {
		has_province_modifier = winter_normal_modifier
		has_province_modifier = winter_harsh_modifier
	}
}
