abduct = {

	skill = intrigue
	desc = "abduct_desc_general"
	hostile = yes
	icon = icon_scheme_abduct

	power_per_skill_point = 2.0
	resistance_per_skill_point = 1.75
	power_per_agent_skill_point = 1

	minimum_progress_chance = 10
	maximum_progress_chance = 90
	minimum_success = 5
	maximum_secrecy = 85
	maximum_success = 85

	allow = {
		#OR = {
			has_perk = kidnapper_perk # Scheme unlocked by the Kidnapper Perk
			#AND = {
			#	any_character_struggle = {
			#		involvement = involved
			#		has_struggle_phase_parameter = unlocks_abduct_for_all
			#		is_secondary_character_involvement_involved_trigger = {
			#			CHAR = scope:target
			#		}
			#	}
			#}
		#}

		is_adult = yes
		is_landed = yes
		is_imprisoned = no
	}

	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		
		is_landed = yes
		custom_description = { #If they're your kid you need special traits to do it
			text = abduct_own_children_block
			object = scope:target

			trigger_if = {
				limit = {
					is_parent_of = scope:target
				}
				has_trait_with_flag = can_murder_own_children
			}
		}
		scope:target = {
			is_imprisoned = no
			is_hostage = no
			exists = location
			in_diplomatic_range = scope:owner
		}
		# Special AI exceptions
		NOT = {
			scope:owner = {
				is_ai = yes
				has_opinion_modifier = {
					target = scope:target
					modifier = repentant_opinion
				}
			}
		}
	}

	valid_agent = {
		# Warcraft
		age >= age_14_value
	}

	agent_join_chance = {
		base = 0

		# Base Reluctance, including negative AI Energy
		modifier = {
			add = {
				value = -20
				if = {
					limit = {
						ai_energy < 0
					}
					add = {
						value = ai_energy
						multiply = 0.5
					}
				}
			}
			desc = BASE_RELUCTANCE
		}

		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = bribe_acceptance_value
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					root = { is_parent_of = scope:target }
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}

		#Scope:target has caused internal strife in the realm
		character_hates_scope_due_to_strife_plus_desc_modifier = { TARGET = scope:target }

		#Family Feud
		house_feud_hostile_scheme_agent_modifier = yes

		#Default Hostile Scheme modifiers
		hostile_murder_agent_base_join_chance_modifier = yes
	}

	base_success_chance = {
		base = 0

		hostile_scheme_base_chance_modifier = yes

		# You found their escape tunnel
		modifier = {
			add = 100
			desc = "SCHEME_DISCOVERED_ESCAPE_TUNNEL"
			scope:owner = {
				exists = var:discovered_escape_tunnel_of
				var:discovered_escape_tunnel_of = scope:target
			}
		}
		
		# Spiritual Head of Faith
		modifier = {
			add = -50
			desc = "SCHEME_VS_SPIRITUAL_HOF"
			scope:target = {
				faith = scope:owner.faith
				faith = {
					has_doctrine = doctrine_spiritual_head
				}
				faith = {
					exists = religious_head
					religious_head = {
			 			this = scope:target
			 		}
				}
			}
		}

		# Sponsored Inspiration
		modifier = {
			add = -25
			desc = target_has_sponsored_inspiration
			scope:target = {
				exists = inspiration
				inspiration = { exists = inspiration_sponsor }
			}
		}

		# Family Feud
		house_feud_hostile_scheme_success_modifier = yes

		# Various penalties
		first_valid = {
			modifier = { # Foreign Rulers are very hard to kidnap
				add = -75
				desc = "sway_foreign_target"
				scope:target = {
					is_ruler = yes
					NOT = {
						scope:target.top_liege = scope:owner.top_liege
					}
				}
			}
			modifier = { # Foreign subjects less so
				add = -40
				desc = "sway_foreign_target"
				scope:target = {
					is_foreign_court_or_pool_guest = no
					NOT = {
						scope:target.top_liege = scope:owner.top_liege
					}
				}
			}
			modifier = { # Rulers are harder to kidnap
				add = -50
				desc = "FABRICATE_HOOK_RULER_TARGET"
				scope:target = {
					is_ruler = yes
					scope:target.top_liege = scope:owner.top_liege
				}
			}
		}

		# At War
		first_valid = {
			modifier = {
				add = -200
				desc = "SCHEME_AT_WAR"
				scope:target = {
					is_at_war_with = scope:owner
				}
			}
			modifier = {
				add = -150
				scope:target = {
					is_landed = no
					exists = liege
					liege = {
						is_at_war_with = scope:owner
					}
				}
				desc = "SCHEME_AT_WAR_WITH_LIEGE"
			}
			modifier = {
				add = -100
				scope:target = {
					is_landed = yes
					exists = liege
					liege = {
						is_at_war_with = scope:owner
					}
				}
				desc = "SCHEME_AT_WAR_WITH_LIEGE"
			}
		}

		# Diarchs are better at schemes within their liege's realm
		diarch_scheming_within_realm_bonus_modifier = yes

		# Tailor
		modifier = {
			add = 10
			scope:owner = {
				has_character_modifier = tournament_tailor_mixup_scheme_modifier
				exists = var:tailor_mixup_house
				exists = scope:target.house
				var:tailor_mixup_house = scope:target.house
	}
			desc = "tournament_tailor_mixup_scheme_modifier_value"
		}
	}

	agent_success_chance = {
		base = 0

		hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
	}

	agent_leave_threshold = -25

	cooldown = { years = 10 }
	is_secret = yes
	base_secrecy = 10

	on_ready = {
		scheme_owner = {
			if = {
				limit = {
					has_character_flag = is_in_event_abduct_outcome_0001
				}
				trigger_event = {
					id = abduct_outcome.0001
					days = 1
				}
			}
			else = {
				trigger_event = abduct_outcome.0001
			}
		}
	}

	on_monthly = {
		hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			scheme_owner = {
				trigger_event = {
					on_action = abduct_ongoing
					days = { 1 30 }
				}
			}
		}
	}


	on_invalidated = {
		scheme_target = {
			save_scope_as = target
		}
		scheme_owner = {
			save_scope_as = owner
		}
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = abduct_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = {
					is_imprisoned = yes
					imprisoner = scope:owner
				}
				scope:owner = {
					NOT = { has_character_flag = is_in_event_abduct_outcome_0001 } #You probably abducted them
				}
			}
			scope:owner = {
				send_interface_message = {
					title = abduct_scheme_invalidated_title
					type = abduct_invalidated_i_imprisoned_message
					desc = abduct_scheme_i_imprisoned_them_message
					left_icon = scope:target
				}
			}
		}
		else_if = {
			limit = {
				scope:target = {
					is_imprisoned = yes
					NOT = { imprisoner = scope:owner }
				}
			}
			scope:target.imprisoner = {
				save_scope_as = other_imprisoner
			}
			scope:owner = {
				send_interface_toast = {
					title = abduct_scheme_invalidated_title
					left_icon = scope:target
					right_icon = scope:other_imprisoner
					custom_description_no_bullet = {
						subject = scope:other_imprisoner
						object = scope:target
						text = scheme_target_imprisoned_by_other
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = {
					NOT = { in_diplomatic_range = scope:owner }
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = abduct_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
	}

	success_desc = "ABDUCT_SUCCESS_DESC"
	discovery_desc = "ABDUCT_DISCOVERY_DESC"
}
