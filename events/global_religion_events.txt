namespace = global_religion


#When a pagan (ai) domain is ready to feudalize, a reformed neighbor they're on good terms with should attempt to convert them, or they should have a chance to spontaneously convert


#########################################################################
# Pagan reformed by neighbor or spontaneously 							#
# by Linnéa Thimrén														#
# global_religion.0001-0009												#
#########################################################################


global_religion.0001 = {
	hidden = yes
	
	immediate = {
		random_list = {
			7 = {
				trigger = {
					any_neighboring_top_liege_realm_owner = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
				}
				modifier = {
					add = 1
					any_neighboring_top_liege_realm_owner = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }

						# Warcraft
						has_monarchy_government_trigger = yes
					}
				}
				
				# Warcraft

				random_neighboring_top_liege_realm_owner = {
					limit = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }

						# Warcraft
						has_monarchy_government_trigger = yes
					}
					alternative_limit = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
					save_scope_as = actor #for the effect to work properly
				}
			}
			5 = {
				trigger = {
					any_consort = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
						NOR = {
							has_relation_potential_rival = root
							has_relation_rival = root
						}
					}
				}
				random_consort = {
					limit = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
						NOR = {
							has_relation_potential_rival = root
							has_relation_rival = root
						}
					}
					save_scope_as = actor #for the effect to work properly
				}
			}
			5 = {
				trigger = {
					any_relation = {
						type = soulmate
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
				}
				random_relation = {
					type = soulmate
					limit = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
					save_scope_as = actor #for the effect to work properly
				}
			}
			2 = {
				trigger = {
					any_relation = {
						type = friend
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
				}
				modifier = {
					add = 2
					any_relation = {
						type = friend
						faith = { NOT = { has_doctrine_parameter = unreformed } }
						has_relation_best_friend = root
					}
				}
				random_relation = {
					type = friend
					limit = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
						has_relation_best_friend = root
					}
					alternative_limit = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
					save_scope_as = actor #for the effect to work properly
				}
			}

			# Warcraft

			100 = {
				unreformed_conversion_modifier = yes
			}
		}

		if = {
			limit = {
				exists = scope:actor
			}
			save_scope_as = recipient #for the effect to work properly
			
			every_vassal = {
				limit = {
					faith = root.faith
				}

				demand_conversion_interaction_effect = yes

				if = { #If you converted to a neighboring faith your government and capital county also converts
					limit = {
						root = {
							any_neighboring_top_liege_realm_owner = {
								this = scope:recipient
							}
						}
						NAND = { # The Steppes convert, but stay tribal
							exists = capital_province
							capital_province = { geographical_region = world_steppe }
						}
					}
					check_available_government_effect = yes
					capital_county = {
						set_county_faith = prev.faith
					}
				}
			}

			demand_conversion_interaction_effect = yes

			if = { #If you converted to a neighboring faith your government and capital county also converts
				limit = {
					any_neighboring_top_liege_realm_owner = {
						this = scope:recipient
					}
				}
				
				# Warcraft
				if = {
					limit = { can_get_necro_government_trigger = yes }
					change_necro_government_effect = yes
				}
				else_if = {
					limit = { can_get_demonic_government_trigger = yes }
					change_demonic_government_effect = yes
				}
				else_if = {
					limit = { can_get_eldritch_government_trigger = yes }
					change_eldritch_government_effect = yes
				}
				
				else_if = {
					limit = {
						# Warcraft
						always = no
						# faith = { like_islam_religion_trigger = yes }
					}
					change_government = clan_government
				}
				else = { change_government = feudal_government }
				capital_county = {
					set_county_faith = root.faith
				}
			}
		}
	}
}
