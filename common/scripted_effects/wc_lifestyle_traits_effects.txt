wc_remove_all_wc_lifestyle_traits_effect = {
	
	switch = { # Light
		trigger = has_trait

		user_of_light_magic_1 = { remove_trait = user_of_light_magic_1 }
		user_of_light_magic_2 = { remove_trait = user_of_light_magic_2 }
		user_of_light_magic_3 = { remove_trait = user_of_light_magic_3 }
		user_of_light_magic_4 = { remove_trait = user_of_light_magic_4 }
		user_of_light_magic_5 = { remove_trait = user_of_light_magic_5 }
	}
	switch = { # Shadow
		trigger = has_trait

		user_of_shadow_magic_1 = { remove_trait = user_of_shadow_magic_1 }
		user_of_shadow_magic_2 = { remove_trait = user_of_shadow_magic_2 }
		user_of_shadow_magic_3 = { remove_trait = user_of_shadow_magic_3 }
		user_of_shadow_magic_4 = { remove_trait = user_of_shadow_magic_4 }
		user_of_shadow_magic_5 = { remove_trait = user_of_shadow_magic_5 }
	}
	switch = { # Disorder
		trigger = has_trait

		user_of_disorder_magic_1 = { remove_trait = user_of_disorder_magic_1 }
		user_of_disorder_magic_2 = { remove_trait = user_of_disorder_magic_2 }
		user_of_disorder_magic_3 = { remove_trait = user_of_disorder_magic_3 }
		user_of_disorder_magic_4 = { remove_trait = user_of_disorder_magic_4 }
		user_of_disorder_magic_5 = { remove_trait = user_of_disorder_magic_5 }
	}
	switch = { # Order
		trigger = has_trait

		user_of_order_magic_1 = { remove_trait = user_of_order_magic_1 }
		user_of_order_magic_2 = { remove_trait = user_of_order_magic_2 }
		user_of_order_magic_3 = { remove_trait = user_of_order_magic_3 }
		user_of_order_magic_4 = { remove_trait = user_of_order_magic_4 }
		user_of_order_magic_5 = { remove_trait = user_of_order_magic_5 }
	}
	switch = { # Life
		trigger = has_trait

		user_of_life_magic_1 = { remove_trait = user_of_life_magic_1 }
		user_of_life_magic_2 = { remove_trait = user_of_life_magic_2 }
		user_of_life_magic_3 = { remove_trait = user_of_life_magic_3 }
		user_of_life_magic_4 = { remove_trait = user_of_life_magic_4 }
		user_of_life_magic_5 = { remove_trait = user_of_life_magic_5 }
	}
	switch = { # Death
		trigger = has_trait

		user_of_death_magic_1 = { remove_trait = user_of_death_magic_1 }
		user_of_death_magic_2 = { remove_trait = user_of_death_magic_2 }
		user_of_death_magic_3 = { remove_trait = user_of_death_magic_3 }
		user_of_death_magic_4 = { remove_trait = user_of_death_magic_4 }
		user_of_death_magic_5 = { remove_trait = user_of_death_magic_5 }
	}
	switch = { # Fire
		trigger = has_trait

		user_of_elemental_fire_magic_1 = { remove_trait = user_of_elemental_fire_magic_1 }
		user_of_elemental_fire_magic_2 = { remove_trait = user_of_elemental_fire_magic_2 }
		user_of_elemental_fire_magic_3 = { remove_trait = user_of_elemental_fire_magic_3 }
		user_of_elemental_fire_magic_4 = { remove_trait = user_of_elemental_fire_magic_4 }
		user_of_elemental_fire_magic_5 = { remove_trait = user_of_elemental_fire_magic_5 }

		user_of_elemental_fire_spirit_magic_1 = { remove_trait = user_of_elemental_fire_spirit_magic_1 }
		user_of_elemental_fire_spirit_magic_2 = { remove_trait = user_of_elemental_fire_spirit_magic_2 }
		user_of_elemental_fire_spirit_magic_3 = { remove_trait = user_of_elemental_fire_spirit_magic_3 }
		user_of_elemental_fire_spirit_magic_4 = { remove_trait = user_of_elemental_fire_spirit_magic_4 }
		user_of_elemental_fire_spirit_magic_5 = { remove_trait = user_of_elemental_fire_spirit_magic_5 }

		user_of_elemental_fire_decay_magic_1 = { remove_trait = user_of_elemental_fire_decay_magic_1 }
		user_of_elemental_fire_decay_magic_2 = { remove_trait = user_of_elemental_fire_decay_magic_2 }
		user_of_elemental_fire_decay_magic_3 = { remove_trait = user_of_elemental_fire_decay_magic_3 }
		user_of_elemental_fire_decay_magic_4 = { remove_trait = user_of_elemental_fire_decay_magic_4 }
		user_of_elemental_fire_decay_magic_5 = { remove_trait = user_of_elemental_fire_decay_magic_5 }
	}
	switch = { # Water
		trigger = has_trait

		user_of_elemental_water_magic_1 = { remove_trait = user_of_elemental_water_magic_1 }
		user_of_elemental_water_magic_2 = { remove_trait = user_of_elemental_water_magic_2 }
		user_of_elemental_water_magic_3 = { remove_trait = user_of_elemental_water_magic_3 }
		user_of_elemental_water_magic_4 = { remove_trait = user_of_elemental_water_magic_4 }
		user_of_elemental_water_magic_5 = { remove_trait = user_of_elemental_water_magic_5 }

		user_of_elemental_water_spirit_magic_1 = { remove_trait = user_of_elemental_water_spirit_magic_1 }
		user_of_elemental_water_spirit_magic_2 = { remove_trait = user_of_elemental_water_spirit_magic_2 }
		user_of_elemental_water_spirit_magic_3 = { remove_trait = user_of_elemental_water_spirit_magic_3 }
		user_of_elemental_water_spirit_magic_4 = { remove_trait = user_of_elemental_water_spirit_magic_4 }
		user_of_elemental_water_spirit_magic_5 = { remove_trait = user_of_elemental_water_spirit_magic_5 }

		user_of_elemental_water_decay_magic_1 = { remove_trait = user_of_elemental_water_decay_magic_1 }
		user_of_elemental_water_decay_magic_2 = { remove_trait = user_of_elemental_water_decay_magic_2 }
		user_of_elemental_water_decay_magic_3 = { remove_trait = user_of_elemental_water_decay_magic_3 }
		user_of_elemental_water_decay_magic_4 = { remove_trait = user_of_elemental_water_decay_magic_4 }
		user_of_elemental_water_decay_magic_5 = { remove_trait = user_of_elemental_water_decay_magic_5 }
	}
	switch = { # Air
		trigger = has_trait

		user_of_elemental_air_magic_1 = { remove_trait = user_of_elemental_air_magic_1 }
		user_of_elemental_air_magic_2 = { remove_trait = user_of_elemental_air_magic_2 }
		user_of_elemental_air_magic_3 = { remove_trait = user_of_elemental_air_magic_3 }
		user_of_elemental_air_magic_4 = { remove_trait = user_of_elemental_air_magic_4 }
		user_of_elemental_air_magic_5 = { remove_trait = user_of_elemental_air_magic_5 }

		user_of_elemental_air_spirit_magic_1 = { remove_trait = user_of_elemental_air_spirit_magic_1 }
		user_of_elemental_air_spirit_magic_2 = { remove_trait = user_of_elemental_air_spirit_magic_2 }
		user_of_elemental_air_spirit_magic_3 = { remove_trait = user_of_elemental_air_spirit_magic_3 }
		user_of_elemental_air_spirit_magic_4 = { remove_trait = user_of_elemental_air_spirit_magic_4 }
		user_of_elemental_air_spirit_magic_5 = { remove_trait = user_of_elemental_air_spirit_magic_5 }

		user_of_elemental_air_decay_magic_1 = { remove_trait = user_of_elemental_air_decay_magic_1 }
		user_of_elemental_air_decay_magic_2 = { remove_trait = user_of_elemental_air_decay_magic_2 }
		user_of_elemental_air_decay_magic_3 = { remove_trait = user_of_elemental_air_decay_magic_3 }
		user_of_elemental_air_decay_magic_4 = { remove_trait = user_of_elemental_air_decay_magic_4 }
		user_of_elemental_air_decay_magic_5 = { remove_trait = user_of_elemental_air_decay_magic_5 }
	}
	switch = { # Earth
		trigger = has_trait

		user_of_elemental_earth_magic_1 = { remove_trait = user_of_elemental_earth_magic_1 }
		user_of_elemental_earth_magic_2 = { remove_trait = user_of_elemental_earth_magic_2 }
		user_of_elemental_earth_magic_3 = { remove_trait = user_of_elemental_earth_magic_3 }
		user_of_elemental_earth_magic_4 = { remove_trait = user_of_elemental_earth_magic_4 }
		user_of_elemental_earth_magic_5 = { remove_trait = user_of_elemental_earth_magic_5 }

		user_of_elemental_earth_spirit_magic_1 = { remove_trait = user_of_elemental_earth_spirit_magic_1 }
		user_of_elemental_earth_spirit_magic_2 = { remove_trait = user_of_elemental_earth_spirit_magic_2 }
		user_of_elemental_earth_spirit_magic_3 = { remove_trait = user_of_elemental_earth_spirit_magic_3 }
		user_of_elemental_earth_spirit_magic_4 = { remove_trait = user_of_elemental_earth_spirit_magic_4 }
		user_of_elemental_earth_spirit_magic_5 = { remove_trait = user_of_elemental_earth_spirit_magic_5 }

		user_of_elemental_earth_decay_magic_1 = { remove_trait = user_of_elemental_earth_decay_magic_1 }
		user_of_elemental_earth_decay_magic_2 = { remove_trait = user_of_elemental_earth_decay_magic_2 }
		user_of_elemental_earth_decay_magic_3 = { remove_trait = user_of_elemental_earth_decay_magic_3 }
		user_of_elemental_earth_decay_magic_4 = { remove_trait = user_of_elemental_earth_decay_magic_4 }
		user_of_elemental_earth_decay_magic_5 = { remove_trait = user_of_elemental_earth_decay_magic_5 }
	}
}

wc_nonelemental_MAGIC_magic_lifestyle_rank_up_check_effect = { # Used for perks
	# Trait maintenance
	if = {
		limit = {
			NOT = { has_trait = user_of_$MAGIC$_magic_5 } # Max level
		}

		hidden_effect = {
			if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_5_magic_trait_value
					has_trait = user_of_$MAGIC$_magic_4
				}

				change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 }
			}
			else_if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_4_magic_trait_value
					has_trait = user_of_$MAGIC$_magic_3
				}

				change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 }
			}
			else_if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_3_magic_trait_value
					has_trait = user_of_$MAGIC$_magic_2
				}

				change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 }
			}
			else_if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_2_magic_trait_value
					has_trait = user_of_$MAGIC$_magic_1
				}

				change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 }
			}
			else_if = {
				limit = { NOT = { has_trait = user_of_$MAGIC$_magic_1 } }

				add_trait = user_of_$MAGIC$_magic_1
			}
		}
	}
	# Mana maintenance
	wc_start_mana_regeneration_loop_effect = yes # It can be character's first perk
	wc_fill_mana_on_day_one_from_perks_crutch_effect = yes
	wc_start_hp_regeneration_loop_effect = yes
	# On action maintenance
	trigger_event = { on_action = on_perk_gained }
}
wc_elemental_MAGIC_magic_lifestyle_rank_up_check_effect = {
	# Trait maintenance
	if = {
		limit = {
			NOT = { # Max level
				has_trait = user_of_$MAGIC$_magic_5
				has_trait = user_of_$MAGIC$_spirit_magic_5
				has_trait = user_of_$MAGIC$_decay_magic_5
			}
		}

		hidden_effect = {
			if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_5_magic_trait_value
					OR = {
						has_trait = user_of_$MAGIC$_magic_4
						has_trait = user_of_$MAGIC$_spirit_magic_4
						has_trait = user_of_$MAGIC$_decay_magic_4
					}
				}

				switch = {
					trigger = has_trait

					user_of_$MAGIC$_magic_4 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 } }
					user_of_$MAGIC$_spirit_magic_4 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_spirit_magic rank = 1 } }
					user_of_$MAGIC$_decay_magic_4 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_decay_magic rank = 1 } }
				}
			}
			else_if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_4_magic_trait_value
					OR = {
						has_trait = user_of_$MAGIC$_magic_3
						has_trait = user_of_$MAGIC$_spirit_magic_3
						has_trait = user_of_$MAGIC$_decay_magic_3
					}
				}

				switch = {
					trigger = has_trait

					user_of_$MAGIC$_magic_3 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 } }
					user_of_$MAGIC$_spirit_magic_3 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_spirit_magic rank = 1 } }
					user_of_$MAGIC$_decay_magic_3 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_decay_magic rank = 1 } }
				}
			}
			else_if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_3_magic_trait_value
					OR = {
						has_trait = user_of_$MAGIC$_magic_2
						has_trait = user_of_$MAGIC$_spirit_magic_2
						has_trait = user_of_$MAGIC$_decay_magic_2
					}
				}

				switch = {
					trigger = has_trait

					user_of_$MAGIC$_magic_2 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 } }
					user_of_$MAGIC$_spirit_magic_2 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_spirit_magic rank = 1 } }
					user_of_$MAGIC$_decay_magic_2 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_decay_magic rank = 1 } }
				}
			}
			else_if = {
				limit = {
					$MAGIC$_magic_lifestyle_perks >= wc_perks_needed_for_level_2_magic_trait_value
					OR = {
						has_trait = user_of_$MAGIC$_magic_1
						has_trait = user_of_$MAGIC$_spirit_magic_1
						has_trait = user_of_$MAGIC$_decay_magic_1
					}
				}

				switch = {
					trigger = has_trait

					user_of_$MAGIC$_magic_1 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_magic rank = 1 } }
					user_of_$MAGIC$_spirit_magic_1 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_spirit_magic rank = 1 } }
					user_of_$MAGIC$_decay_magic_1 = { change_trait_rank = { trait = wc_lifestyle_$MAGIC$_decay_magic rank = 1 } }
				}
			}
			else_if = {
				limit = {
					NOT = {
						has_trait = user_of_$MAGIC$_magic_1
						has_trait = user_of_$MAGIC$_spirit_magic_1
						has_trait = user_of_$MAGIC$_decay_magic_1
					}
				}

				if = { # If character doesn't have variable yet
					limit = { NOT = { has_variable = wc_$MAGIC$_favour_variable } }

					set_variable = { name = wc_$MAGIC$_favour_variable value = wc_starting_$MAGIC$_favour_value }
				}

				if = {
					limit = { wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $MAGIC$ TENSE = current } }

					add_trait = user_of_$MAGIC$_spirit_magic_1
				}
				else_if = {
					limit = { wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $MAGIC$ TENSE = current } }

					add_trait = user_of_$MAGIC$_decay_magic_1
				}
				else = {
					add_trait = user_of_$MAGIC$_magic_1
				}
			}
		}
	}
	# Mana maintenance
	wc_start_mana_regeneration_loop_effect = yes # It can be character's first perk
	wc_fill_mana_on_day_one_from_perks_crutch_effect = yes
	# On action maintenance
	trigger_event = { on_action = on_perk_gained }
}

wc_ELEMENT_favour_lifestyle_check_effect = {
	if = {
		limit = {
			NOT = { has_trait = wc_lifestyle_$ELEMENT$_spirit_magic }
			wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
		}

		switch = {
			trigger = has_trait

			user_of_$ELEMENT$_magic_1 = { remove_trait = user_of_$ELEMENT$_magic_1 add_trait = user_of_$ELEMENT$_spirit_magic_1 }
			user_of_$ELEMENT$_magic_2 = { remove_trait = user_of_$ELEMENT$_magic_2 add_trait = user_of_$ELEMENT$_spirit_magic_2 }
			user_of_$ELEMENT$_magic_3 = { remove_trait = user_of_$ELEMENT$_magic_3 add_trait = user_of_$ELEMENT$_spirit_magic_3 }
			user_of_$ELEMENT$_magic_4 = { remove_trait = user_of_$ELEMENT$_magic_4 add_trait = user_of_$ELEMENT$_spirit_magic_4 }
			user_of_$ELEMENT$_magic_5 = { remove_trait = user_of_$ELEMENT$_magic_5 add_trait = user_of_$ELEMENT$_spirit_magic_5 }
			user_of_$ELEMENT$_decay_magic_1 = { remove_trait = user_of_$ELEMENT$_decay_magic_1 add_trait = user_of_$ELEMENT$_spirit_magic_1 }
			user_of_$ELEMENT$_decay_magic_2 = { remove_trait = user_of_$ELEMENT$_decay_magic_2 add_trait = user_of_$ELEMENT$_spirit_magic_2 }
			user_of_$ELEMENT$_decay_magic_3 = { remove_trait = user_of_$ELEMENT$_decay_magic_3 add_trait = user_of_$ELEMENT$_spirit_magic_3 }
			user_of_$ELEMENT$_decay_magic_4 = { remove_trait = user_of_$ELEMENT$_decay_magic_4 add_trait = user_of_$ELEMENT$_spirit_magic_4 }
			user_of_$ELEMENT$_decay_magic_5 = { remove_trait = user_of_$ELEMENT$_decay_magic_5 add_trait = user_of_$ELEMENT$_spirit_magic_5 }
		}
	}
	else_if = {
		limit = {
			NOT = { has_trait = wc_lifestyle_$ELEMENT$_decay_magic }
			wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
		}

		switch = {
			trigger = has_trait

			user_of_$ELEMENT$_magic_1 = { remove_trait = user_of_$ELEMENT$_magic_1 add_trait = user_of_$ELEMENT$_decay_magic_1 }
			user_of_$ELEMENT$_magic_2 = { remove_trait = user_of_$ELEMENT$_magic_2 add_trait = user_of_$ELEMENT$_decay_magic_2 }
			user_of_$ELEMENT$_magic_3 = { remove_trait = user_of_$ELEMENT$_magic_3 add_trait = user_of_$ELEMENT$_decay_magic_3 }
			user_of_$ELEMENT$_magic_4 = { remove_trait = user_of_$ELEMENT$_magic_4 add_trait = user_of_$ELEMENT$_decay_magic_4 }
			user_of_$ELEMENT$_magic_5 = { remove_trait = user_of_$ELEMENT$_magic_5 add_trait = user_of_$ELEMENT$_decay_magic_5 }
			user_of_$ELEMENT$_spirit_magic_1 = { remove_trait = user_of_$ELEMENT$_spirit_magic_1 add_trait = user_of_$ELEMENT$_decay_magic_1 }
			user_of_$ELEMENT$_spirit_magic_2 = { remove_trait = user_of_$ELEMENT$_spirit_magic_2 add_trait = user_of_$ELEMENT$_decay_magic_2 }
			user_of_$ELEMENT$_spirit_magic_3 = { remove_trait = user_of_$ELEMENT$_spirit_magic_3 add_trait = user_of_$ELEMENT$_decay_magic_3 }
			user_of_$ELEMENT$_spirit_magic_4 = { remove_trait = user_of_$ELEMENT$_spirit_magic_4 add_trait = user_of_$ELEMENT$_decay_magic_4 }
			user_of_$ELEMENT$_spirit_magic_5 = { remove_trait = user_of_$ELEMENT$_spirit_magic_5 add_trait = user_of_$ELEMENT$_decay_magic_5 }
		}
	}
	else_if = {
		limit = {
			NOT = { has_trait = wc_lifestyle_$ELEMENT$_magic }
			wc_ELEMENT_favour_TENSE_disposition_is_neutral_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
		}

		switch = {
			trigger = has_trait

			user_of_$ELEMENT$_spirit_magic_1 = { remove_trait = user_of_$ELEMENT$_spirit_magic_1 add_trait = user_of_$ELEMENT$_magic_1 }
			user_of_$ELEMENT$_spirit_magic_2 = { remove_trait = user_of_$ELEMENT$_spirit_magic_2 add_trait = user_of_$ELEMENT$_magic_2 }
			user_of_$ELEMENT$_spirit_magic_3 = { remove_trait = user_of_$ELEMENT$_spirit_magic_3 add_trait = user_of_$ELEMENT$_magic_3 }
			user_of_$ELEMENT$_spirit_magic_4 = { remove_trait = user_of_$ELEMENT$_spirit_magic_4 add_trait = user_of_$ELEMENT$_magic_4 }
			user_of_$ELEMENT$_spirit_magic_5 = { remove_trait = user_of_$ELEMENT$_spirit_magic_5 add_trait = user_of_$ELEMENT$_magic_5 }
			user_of_$ELEMENT$_decay_magic_1 = { remove_trait = user_of_$ELEMENT$_decay_magic_1 add_trait = user_of_$ELEMENT$_magic_1 }
			user_of_$ELEMENT$_decay_magic_2 = { remove_trait = user_of_$ELEMENT$_decay_magic_2 add_trait = user_of_$ELEMENT$_magic_2 }
			user_of_$ELEMENT$_decay_magic_3 = { remove_trait = user_of_$ELEMENT$_decay_magic_3 add_trait = user_of_$ELEMENT$_magic_3 }
			user_of_$ELEMENT$_decay_magic_4 = { remove_trait = user_of_$ELEMENT$_decay_magic_4 add_trait = user_of_$ELEMENT$_magic_4 }
			user_of_$ELEMENT$_decay_magic_5 = { remove_trait = user_of_$ELEMENT$_decay_magic_5 add_trait = user_of_$ELEMENT$_magic_5 }
		}
	}
}

wc_change_amount_element_favour_effect = {

	save_scope_value_as = {
		name = working_amount
		value = $AMOUNT$
	}

	if = { 
		limit = { 
			scope:working_amount > 0 
			culture = { has_cultural_era_or_later = culture_era_late_medieval }
		} 
		elemental_favour_modifier_for_culture = { ELEMENT = $ELEMENT$ }
	}

	save_temporary_scope_value_as = {
		name = desc_value_change
		value = { 
			add = 0 
			$CHANGE$ = scope:working_amount
		}
	}	

	custom_description = { # Tooltip for changing elemental favour
		text = wc_change_amount_$ELEMENT$_favour_effect
		value = scope:desc_value_change
	}

	save_temporary_scope_value_as = {
		name = wc_elemental_favour_after_change_variable
		value = scope:working_amount
	}

	if = { # Disposition change tooltip
		limit = {
			wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
			NOT = { wc_ELEMENT_favour_TENSE_disposition_is_spirit_trigger = { ELEMENT = $ELEMENT$ TENSE = current } }
		}
		custom_description = { text = wc_change_$ELEMENT$_disposition_to_spirit_effect }
	}
	else_if = {
		limit = {
			wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
			NOT = { wc_ELEMENT_favour_TENSE_disposition_is_decay_trigger = { ELEMENT = $ELEMENT$ TENSE = current } }
		}
		custom_description = { text = wc_change_$ELEMENT$_disposition_to_decay_effect }
	}
	else_if = {
		limit = {
			wc_ELEMENT_favour_TENSE_disposition_is_neutral_trigger = { ELEMENT = $ELEMENT$ TENSE = after_change }
			NOT = {
				wc_ELEMENT_favour_TENSE_disposition_is_neutral_trigger = { ELEMENT = $ELEMENT$ TENSE = current }
			}
		}
		custom_description = { text = wc_change_$ELEMENT$_disposition_to_neutral_effect }
	}

	wc_ELEMENT_favour_lifestyle_check_effect = { ELEMENT = $ELEMENT$ } # Trait check

	if = { # Actually changes elemental favour - need to be after wc_ELEMENT_favour_lifestyle_check_effect because otherwise wc_$ELEMENT$_favour_after_change_value will count $AMOUNT$ twice
		limit = { has_variable = wc_$ELEMENT$_favour_variable }

		change_variable = { 
			name = wc_$ELEMENT$_favour_variable 
			$CHANGE$ = scope:working_amount
		}
	}
	else = {
		set_variable = { name = wc_$ELEMENT$_favour_variable value = wc_starting_$ELEMENT$_favour_value }

		change_variable = { 
			name = wc_$ELEMENT$_favour_variable 
			$CHANGE$ = wourling_amount
		}
	}
	clamp_variable = { name = wc_$ELEMENT$_favour_variable max = wc_max_elemental_favour_value min = wc_min_elemental_favour_value }
}

elemental_favour_modifier_for_culture = { # scope from culture

	save_temporary_scope_value_as = {
		name = favour_penalty_multiplier
		value = {
			add = 1
			if = { limit = {culture = { has_cultural_era_or_later = culture_era_late_medieval }}
				add = -0.25
			}
			if = { limit = {culture = { has_cultural_era_or_later = culture_era_early_modern }}
				add =  -0.5
			}
			if = { 
				limit = { 
					$ELEMENT$ = elemental_water 
					culture_is_elemental_water_favoured_heritage = yes
				} 
				add = 0.25
			}
			else_if = { 
				limit = { culture_is_elemental_favoured_heritage = yes }
				add = 0.15
			}
			# add further stuff here
		}
	}

	change_variable = {
		name = scope:working_amount
		multiply = favour_penalty_multiplier
	}
}

add_perk_xp_to_metaclass_trait = { 
	if = { 
		limit = { has_trait = ruler_metaclass_trait }
		add_xp_to_highest_metaclass_track = { GROUPNAME = ruler }
	} 
	else = { 
		add_trait = ruler_metaclass_trait
		add_xp_to_highest_metaclass_track = { GROUPNAME = ruler }
	}
}

add_xp_to_highest_metaclass_track = { 
	if = { 
		limit = { 
			has_trait_xp = {
				trait = $GROUPNAME$_metaclass_trait
				track = common
				value < 90
			}
		}
		add_trait_xp = { 
			trait = $GROUPNAME$_metaclass_trait
			track = common
			value = 10
		}
	} 
	else_if = { 
		limit = { 
			has_trait_xp = {
				trait = $GROUPNAME$_metaclass_trait
				track = uncommon
				value < 90
			}
		}
		add_trait_xp = { 
			trait = $GROUPNAME$_metaclass_trait
			track = uncommon
			value = 10
		}
	} 
	else_if = { 
		limit = { 
			has_trait_xp = {
				trait = $GROUPNAME$_metaclass_trait
				track = rare
				value < 90
			}
		}
		add_trait_xp = { 
			trait = $GROUPNAME$_metaclass_trait
			track = rare
			value = 10
		}
	} 
	else_if = { 
		limit = { 
			has_trait_xp = {
				trait = $GROUPNAME$_metaclass_trait
				track = epic
				value < 90
			}
		}
		add_trait_xp = { 
			trait = $GROUPNAME$_metaclass_trait
			track = epic
			value = 10
		}
	} 
	else_if = { 
		limit = { 
			has_trait_xp = {
				trait = $GROUPNAME$_metaclass_trait
				track = legendary
				value < 90
			}
		}
		add_trait_xp = { 
			trait = $GROUPNAME$_metaclass_trait
			track = legendary
			value = 10
		}
	}
}
