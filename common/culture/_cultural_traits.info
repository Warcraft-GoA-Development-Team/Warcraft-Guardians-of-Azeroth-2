This documents the cultural trait systems, meaning:
Cultural Pillars
Cultural Traditions

Anything that's unique to one of these will be documented inside their folder instead.

== Structure ==
object_key = {
	name = dynamic desc			# If omitted, will use object_key + "_name"
	desc = dynamic desc			# If omitted, will use object_key + "_desc"
	icon = key 					# If omitted, will use object_key

	cost = {
		gold = script value
		prestige = script value
		piety = script value
	}

	character_modifier = {}		# Applied to characters of any culture that has the trait
	province_modifier = {}		# Applied to provinces of any culture that has the trait
	county_modifier = {}		# Applied to counties of any culture that has the trait
	doctrine_character_modifier = { # Applied to characters of cultures with the perk if they have the given doctrine
		doctrine = doctrine_theocracy_lay_clergy
		same_faith_opinion = 3
	}

	can_pick = {}				# Culture scope, and scope:character. Can this trait be picked?
								# The list "traits" is also provided with all traits currently picked so that you can do things like mutually exclusive traits
								# If a trait is being replaced scope:replacing will be the flag of a culture with the replacing culture's key, e.g: "scope:replacing = culture_tradition:tradition_monogamous". It will NEVER exist when evaluating pillars. 
								# Hybridization ignores this and is_shown entirely
	can_pick_for_hybridization = {} # Like can_pick, except used specifically for hybridization and *only* for hybridization. Will never have "scope:replacing".
	is_shown = {}				# Culture scope, and scope:character. Should this trait be shown at all when picking traits?

	parameters = {
		param_name = yes/no 	# Parameters can take bools
		param_name = 0.5		# Or fixed point numbers
	}

	ai_will_do = {
		# Same scopes as can_pick
		value = blah
	}
}

== Triggers ==
Unless otherwise specified, these are all in culture scope.

has_cultural_pillar = key
has_cultural_tradition = key
has_cultural_parameter = key	# Checks if any ethos, pillar, or tradition has this bool parameter set to yes

== can_pick caveat ==
When the AI picks its configuration for divergence, it does so one pillar/tradition at a time. It will not re-examine previous choices.
This means that if any trait can prevent another trait, this *must* go in both directions. E.G., if "warlike" prevents "peaceful", "peaceful" must prevent "warlike". Otherwise the AI could pick "warlike" first, then "peaceful", and invalidate its earlier pick and be stuck unable to diverge.

== Special parameters ==
Some parameters interact directly with the code. This is a list of all such parameters

- number_of_spouses = 1 - How many spouses can people have (script restricts non-rulers to one). This will override faith spouses and consorts
- number_of_consorts = 1 - How many consorts can rulers have (script restricts non-rulers to zero). This will override faith spouses and consorts

Allowed Modifiers
=================

Modifiers referenced by a culture trait can be only generic (hardcoded) modifiers, or modifiers generated from the following databases:
- schemes
- holdings
- lifestyles
- regions
- terrains
- men_at_arms_types
- governments

Other generated modifiers are _not_ allowed, such as those from culture templates
