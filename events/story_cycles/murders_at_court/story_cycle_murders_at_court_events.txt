# Events for the murders at court Story Cycle
namespace = murders_at_court

#Murder as usual
	#GENERAL
	#1001-1999
	
	#HEIR
	#2101-2199

	#WITCH
	#2201-2299

#Confronted by the murderer
	#9001-9050

#Maintenance
	#9051-9999



#######################
## MURDER AS USUAL
#######################

#Pieces found
#by Linnéa Thimrén
murders_at_court.1001 = {
	type = character_event
	title = murders_at_court.1001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:physician
				}
				desc = murders_at_court.1001.desc_physician
			}
			desc = murders_at_court.1001.desc
		}
	}
	theme = death
	override_background = {
		reference = physicians_study
	}
	left_portrait = root
	right_portrait = scope:physician

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_1001 }
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_1001
			years = 10
		}
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
		#To save the court physician
		save_court_physician_as_effect = { SCOPE_NAME = physician }
		
		play_music_cue = "mx_cue_negative"
	}

	option = { #Do nothing
		name = murders_at_court.1001.a
		add_piety = minor_piety_gain
	}

	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		if = {
			limit = {
				any_courtier = {
					has_trait = craven
				}
			}
			every_courtier = {
				limit = {
					has_trait = craven
				}
				custom = murder_at_court_movement_restricted_courtiers_craven
				add_opinion = {
					target = root
					modifier = grateful_opinion
					opinion = 20
				}
			}
			every_courtier = {
				limit = {
					NOT = { has_trait = craven }
				}
				custom = murder_at_court_movement_restricted_courtiers_other
				add_opinion = {
					target = root
					modifier = respect_opinion
					opinion = -20
				}
			}
		}
		else = {
			every_courtier = {
				custom = murder_at_court_movement_restricted_courtiers
				add_opinion = {
					target = root
					modifier = respect_opinion
					opinion = -20
				}
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}


#Another body found
#by Linnéa Thimrén
murders_at_court.1002 = {
	type = character_event
	title = murders_at_court.1002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:victim
				}
				desc = murders_at_court.1002.desc_named
			}
			desc = murders_at_court.1002.desc
		}
	}
	theme = death
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				scope:victim = { has_any_good_relationship_with_root_trigger = yes }
			}
			animation = grief
		}
		triggered_animation = {
			trigger = {
				scope:victim = { has_any_good_relationship_with_root_trigger = no }
			}
			animation = sadness
		}
	}
	right_portrait = scope:victim

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_1002 }
		scope:story = {
			var:escalation >= 1
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_1002
			years = 10
		}
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
		if = {
			limit = {
				any_courtier = {
					basic_is_available_ai = yes
					NOT = { is_close_or_extended_family_of = root }
					OR = { #You probably care more for highly skilled courtiers
						martial > high_skill_rating
						diplomacy > high_skill_rating
						intrigue > high_skill_rating
						learning > high_skill_rating
						stewardship > high_skill_rating
						prowess > high_skill_rating
					}
				}
			}
			random_courtier = {
				limit = {
					basic_is_available_ai = yes
					NOT = { is_close_or_extended_family_of = root }
					has_friendly_relationship_with_root_trigger = yes
				}
				alternative_limit = {
					basic_is_available_ai = yes
					NOT = { is_close_or_extended_family_of = root }
					OR = { #You probably care more for highly skilled courtiers
						martial > high_skill_rating
						diplomacy > high_skill_rating
						intrigue > high_skill_rating
						learning > high_skill_rating
						stewardship > high_skill_rating
						prowess > high_skill_rating
					}
				}
				save_scope_as = victim
				show_as_tooltip = {
					override_death_effect = { death_reason = death_murder }
				}
			}
			hidden_effect = {
				unknown_murder_effect = {
					VICTIM = scope:victim
					MURDERER = scope:murderer
					REASON = death_murder
				}
				scope:murderer = {
					random_secret = {
						limit = {
							secret_type = secret_murder
							secret_target = scope:victim
						}
						set_variable = {
							name = story_cycle_murder
							value = yes
						}
					}
				}
			}
		}
	}

	option = {
		name = murders_at_court.1001.a
		add_piety = minor_piety_gain
	}

	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		every_courtier = {
			custom = murder_at_court_movement_restricted_courtiers
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}


#Spouse is found dead
#by Linnéa Thimrén
murders_at_court.1003 = {
	type = character_event
	title = murders_at_court.1003.t
	desc = {
		desc = murders_at_court.1003.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						scope:spouse = { has_any_bad_relationship_with_root_trigger = yes }
						opinion = {
							target = scope:spouse
							value <= -10
						}
						reverse_opinion = {
							target = scope:spouse
							value <= -10
						}
					}
				}
				desc = murders_at_court.1003.desc
			}
			desc = murders_at_court.1003.desc_like
		}
		desc = murders_at_court.1003.desc_end
	}
	theme = death
	override_background = {
		reference = sitting_room
	}
	left_portrait = scope:spouse

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_1003 }
		scope:story.var:murderer = {
			NOT = { is_spouse_of = root }
		}
		any_spouse = {
			basic_is_available_ai = yes
		}
	}

	weight_multiplier = {
		base = 1
		modifier = { #More likely to trigger later in story cycle
			add = -0.5
			scope:story.var:escalation <= 3
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_1003
			years = 10
		}
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
		add_character_flag = { #To block spam about the death
			flag = sent_relevant_death_event
			days = 3
		}
		random_spouse = {
			limit = {
				basic_is_available_ai = yes
			}
			save_scope_as = spouse
			show_as_tooltip = {
				override_death_effect = { death_reason = death_murder }
			}
		}
		hidden_effect = {
			unknown_murder_effect = {
				VICTIM = scope:spouse
				MURDERER = scope:murderer
				REASON = death_murder
			}
			scope:murderer = {
				random_secret = {
					limit = {
						secret_type = secret_murder
						secret_target = scope:spouse
					}
					set_variable = {
						name = story_cycle_murder
						value = yes
					}
				}
			}
		}
		play_music_cue = "mx_cue_murder"
	}

	option = {
		name = murders_at_court.2002.a
		add_piety = minor_piety_gain
	}

	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		every_courtier = {
			custom = murder_at_court_movement_restricted_courtiers
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}


#Child is found dead
#by Linnéa Thimrén
murders_at_court.1004 = {
	type = character_event
	title = murders_at_court.1004.t
	desc = murders_at_court.1004.desc
	theme = death
	override_background = {
		reference = sitting_room
	}
	left_portrait = scope:child

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_1004 }
		scope:story.var:murderer = {
			NOT = { is_spouse_of = root }
		}
		any_child = {
			basic_is_available_ai = yes
			is_landed = no
			NOT = { is_player_heir_of = root }
		}
	}

	weight_multiplier = {
		base = 1
		modifier = { #More likely to trigger later in story cycle
			add = -0.5
			scope:story.var:escalation <= 3
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_1004
			years = 10
		}
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
		add_character_flag = { #To block spam about the death
			flag = sent_relevant_death_event
			days = 3
		}
		random_child = {
			limit = {
				basic_is_available_ai = yes
				is_landed = no
				NOT = { is_player_heir_of = root }
			}
			save_scope_as = child
			show_as_tooltip = {
				override_death_effect = { death_reason = death_murder }
			}
		}
		hidden_effect = {
			unknown_murder_effect = {
				VICTIM = scope:child
				MURDERER = scope:murderer
				REASON = death_murder
			}
			scope:murderer = {
				random_secret = {
					limit = {
						secret_type = secret_murder
						secret_target = scope:child
					}
					set_variable = {
						name = story_cycle_murder
						value = yes
					}
				}
			}
		}
		
		play_music_cue = "mx_cue_murder"
	}

	option = {
		name = murders_at_court.2002.a
		add_piety = minor_piety_gain
	}

	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		every_courtier = {
			custom = murder_at_court_movement_restricted_courtiers
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}


#An important courtier is found dead
#by Linnéa Thimrén
murders_at_court.2001 = {
	type = character_event
	title = murders_at_court.2001.t
	desc = murders_at_court.2001.desc
	theme = death
	override_background = {
		reference = corridor_day
	}
	left_portrait = scope:victim

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_2001 }
		scope:story = {
			var:escalation >= 1
		}
		any_courtier = {
			basic_is_available_ai = yes
			NOT = { is_heir_of = root }
			OR = {
				is_of_major_interest_to_root_trigger = yes
				is_of_minor_interest_to_root_trigger = yes
			}
			save_temporary_scope_as = courtier_check
			NOT = {
				scope:story = {
					var:murderer = {
						this = scope:courtier_check
					}
				}
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_2001
			years = 10
		}
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
		add_character_flag = { #To block spam about the death
			flag = sent_relevant_death_event
			days = 3
		}
		random_courtier = {
			limit = {
				basic_is_available_ai = yes
				NOT = { is_heir_of = root }
				OR = {
					is_of_major_interest_to_root_trigger = yes
					is_of_minor_interest_to_root_trigger = yes
				}
				NOT = { this = scope:murderer }
			}
			save_scope_as = victim
			show_as_tooltip = {
				override_death_effect = { death_reason = death_murder }
			}
		}
		hidden_effect = {
			unknown_murder_effect = {
				VICTIM = scope:victim
				MURDERER = scope:murderer
				REASON = death_murder
			}
			scope:murderer = {
				random_secret = {
					limit = {
						secret_type = secret_murder
						secret_target = scope:victim
					}
					set_variable = {
						name = story_cycle_murder
						value = yes
					}
				}
			}
		}
		
		play_music_cue = "mx_cue_murder"
	}

	option = {
		name = murders_at_court.1001.a
		add_piety = minor_piety_gain
	}

	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		every_courtier = {
			custom = murder_at_court_movement_restricted_courtiers
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}

#Your heir is found dead
#by Linnéa Thimrén
murders_at_court.2002 = {
	type = character_event
	title = murders_at_court.2002.t
	desc = murders_at_court.2002.desc
	theme = death
	override_background = {
		reference = study
	}
	left_portrait = scope:heir

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_2002 }
		scope:story.var:murderer = {
			NOT = { is_player_heir_of = root }
		}
		player_heir = {
			basic_is_available_ai = yes
		}
		#Only triggers late in the story
		scope:story.var:escalation >= 4
	}

	weight_multiplier = {
		base = 1
		modifier = { #More likely to trigger later in story cycle
			add = -0.5
			scope:story.var:escalation <= 3
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_2002
			years = 10
		}
		play_music_cue = "mx_cue_succession"
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
		add_character_flag = { #To block spam about the death
			flag = sent_relevant_death_event
			days = 3
		}
		player_heir = {
			save_scope_as = heir
			show_as_tooltip = {
				override_death_effect = { death_reason = death_murder }
			}
		}
		hidden_effect = {
			unknown_murder_effect = {
				VICTIM = scope:heir
				MURDERER = scope:murderer
				REASON = death_murder
			}
			scope:murderer = {
				random_secret = {
					limit = {
						secret_type = secret_murder
						secret_target = scope:heir
					}
					set_variable = {
						name = story_cycle_murder
						value = yes
					}
				}
			}
		}
	}

	option = {
		name = murders_at_court.2002.a
		add_piety = minor_piety_gain
	}

	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		every_courtier = {
			custom = murder_at_court_movement_restricted_courtiers
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}


#You got your calloused ass killed
#by Linnéa Thimrén
murders_at_court.2003 = {
	type = character_event
	title = murders_at_court.2003.t
	desc = murders_at_court.2003.desc
	theme = death
	left_portrait = scope:murderer

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_2003 }
		#Only triggers late in the story
		scope:story.var:escalation >= 5
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_2003
			years = 10
		}
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
		#To continue the story in the right way
		player_heir = {
			add_character_flag = {
				flag = murders_at_court_story_cycle_killed_predecessor
				days = 3
			}
		}
	}

	option = {
		name = murders_at_court.2003.a
		show_as_tooltip = {
			override_death_effect = { death_reason = death_murder }
		}
		hidden_effect = {
			unknown_murder_effect = {
				VICTIM = root
				MURDERER = scope:murderer
				REASON = death_murder
			}
		}
	}
}


#Someone in the line of succession is killed - murderer is one of your heirs
#by Linnéa Thimrén
scripted_trigger murders_at_court_2101_victim_trigger = {
	basic_is_available_ai = yes
	NOT = { this = scope:story.var:murderer }
	save_temporary_scope_as = potential_victim
	root = {
		player_heir_position = {
			target = scope:potential_victim
			value <= 2 #One of first 3 heirs (one less because the murderer will try to murder upwards)
		}
	}	
	target_is_liege_or_above = root
}

murders_at_court.2101 = {
	type = character_event
	title = murders_at_court.2101.t
	desc = {
		desc = murders_at_court.2101.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					is_close_or_extended_family_of = scope:other_heir
				}
				desc = murders_at_court.2101.desc_family
			}
			desc = murders_at_court.2101.desc
		}
	}
	theme = death
	left_portrait = scope:other_heir

	trigger = {
		#This event can only be triggered if the murderer is one of your first 4 player heirs
		scope:story = {
			story_owner = {
				player_heir_position = {
					target = scope:story.var:murderer
					value <= 3 #one of the 4 first player heirs
				}
			}
		}
		NOT = { has_character_flag = had_event_murders_at_court_2101 }
		dynasty = {
			any_dynasty_member = {
				murders_at_court_2101_victim_trigger = yes
			}
		}

	}

	weight_multiplier = {
		base = 1
		modifier = { #More likely to trigger later in story cycle
			add = -0.5
			scope:story.var:escalation <= 3
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_2101
			years = 10
		}
		play_music_cue = "mx_cue_murder"
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}

		dynasty = {
			every_dynasty_member = {
				limit = { murders_at_court_2101_victim_trigger = yes }
				add_to_temporary_list = potential_victims
			}
		}

		random_in_list = {
			list = potential_victims
			#Tries to find someone closer to the throne
			limit = {
				save_temporary_scope_as = potential_victim
				root = {
					player_heir_position = {
						target = scope:story.var:murderer
						value = 3
					}
					player_heir_position = {
						target = scope:potential_victim
						value <= 2
					}
				}	
			}
			alternative_limit = {
				save_temporary_scope_as = potential_victim
				root = {
					player_heir_position = {
						target = scope:story.var:murderer
						value = 2
					}
					player_heir_position = {
						target = scope:potential_victim
						value <= 1
					}
				}
			}
			alternative_limit = {
				save_temporary_scope_as = potential_victim
				root = {
					player_heir_position = {
						target = scope:story.var:murderer
						value = 1
					}
					player_heir_position = {
						target = scope:potential_victim
						value = 0
					}
				}
			}
			alternative_limit = {
				always = yes
			}
			save_scope_as = other_heir
			show_as_tooltip = {
				override_death_effect = { death_reason = death_murder }
			}
		}

		add_character_flag = {
			flag = sent_relevant_death_event
			days = 3
		}
		hidden_effect = {
			unknown_murder_effect = {
				VICTIM = scope:other_heir
				MURDERER = scope:murderer
				REASON = death_murder
			}
			scope:murderer = {
				random_secret = {
					limit = {
						secret_type = secret_murder
						secret_target = scope:other_heir
					}
					set_variable = {
						name = story_cycle_murder
						value = yes
					}
				}
			}
		}
	}

	option = {
		name = murders_at_court.1001.a
		add_piety = minor_piety_gain
	}

	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		every_courtier = {
			custom = murder_at_court_movement_restricted_courtiers
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}


#A body without eyes is found - murderer is a witch
#by Linnéa Thimrén
murders_at_court.2201 = {
	type = character_event
	title = murders_at_court.2201.t
	desc = murders_at_court.2201.desc
	theme = death

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_2201 }
		scope:story = {
			var:murderer = {
				is_witch_trigger = yes
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_2201
			years = 10
		}
		scope:story = {
			change_variable = {
				name = escalation
				add = 1
			}
			var:murderer = {
				save_scope_as = murderer
			}
		}
	}

	option = {
		name = murders_at_court.1001.a
		add_piety = minor_piety_gain
	}
	option = { #Limit the movement of everyone with access to the court
		name = murders_at_court.1001.b
		custom_tooltip = murders_at_court.1001.b.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:movement_restricted }
			}
		}
		scope:story = {
			set_variable = {
				name = movement_restricted
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		every_courtier = {
			custom = murder_at_court_movement_restricted_courtiers
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
		add_character_modifier = {
			modifier = restricted_movement_vassal_opinion
			years = 5
		}
	}

	option = { #Double the guards
		name = murders_at_court.1001.c
		custom_tooltip = murders_at_court.1001.c.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:guards_doubled }
			}
		}
		scope:story = {
			set_variable = {
				name = guards_doubled
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Plead for clues and help
		name = murders_at_court.1001.d
		custom_tooltip = murders_at_court.1001.d.tt
		trigger = {
			scope:story = {
				NOT = { exists = var:asked_for_help }
			}
		}
		scope:story = {
			set_variable = {
				name = asked_for_help
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
		add_prestige = medium_prestige_loss
	}

	option = { #Investigate it yourself!
		name = murders_at_court.1001.e
		custom_tooltip = murders_at_court.1001.e.tt
		trigger = {
			intrigue >= high_skill_rating
			scope:story = {
				NOT = { exists = var:personal_investigation }
			}
		}
		skill = intrigue
		scope:story = {
			set_variable = {
				name = personal_investigation
				value = 1
			}
			change_variable = {
				name = escalation
				add = 1
			}
		}
	}
}


###############################
## WATSON EVENTS
## by Linnéa Thimrén
###############################

#Watson comes by your court
#by Linnéa Thimrén
murders_at_court.5001 = {
	type = character_event
	title = murders_at_court.5001.t
	desc = murders_at_court.5001.desc
	theme = death
	left_portrait = scope:watson

	trigger = {
		NOT = { has_character_flag = had_event_murders_at_court_5001 }
		scope:story = {
			var:escalation >= 1
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_murders_at_court_5001
			years = 10
		}
		hidden_effect = {
			create_character = {
				location = root.capital_province
				template = detective_template
				save_scope_as = watson
			}
			scope:watson = {
				add_character_modifier = {
					modifier = studies_murders_modifier
					years = 10
				}
			}
			add_visiting_courtier = scope:watson
		}
	}

	option = { #Recruit
		name = murders_at_court.5001.a
		add_courtier = scope:watson
		reverse_add_opinion = {
			modifier = grateful_opinion
			target = scope:watson
			opinion = 40
		}
		scope:story = {
			set_variable = {
				name = watson
				value = scope:watson
			}
		}
	}

	option = { #Dismiss
		name = murders_at_court.5001.c
		scope:watson = {
			select_and_move_to_pool_effect = yes
		}
		reverse_add_opinion = {
			modifier = disappointed_opinion
			target = scope:watson
			opinion = -40
		}
	}
}



###############################
## INHERITED THE STORY
## by Linnéa Thimrén
###############################

##########
# By the death of the owner

#The heir was not the murderer (probably knows who the killer is by know)
murders_at_court.8001 = {
	type = character_event
	title = murders_at_court.8001.t
	desc = murders_at_court.8001.desc
	theme = death
	left_portrait = scope:story_owner

	option = {
		name = murders_at_court.8001.a
		scope:story = {
			make_story_owner = root
		}
	}
}

#The murderer was the heir, so this event is for the murderer
murders_at_court.8002 = {
	type = character_event
	title = murders_at_court.8001.t
	desc = murders_at_court.8002.desc
	theme = death
	left_portrait = scope:story_owner

	option = {
		name = murders_at_court.8002.a
		hidden_effect = {
			scope:story = {
				end_story = yes
			}
		}
	}
}

#The last owner died of unrelated reasons - congratulations you inherited the murders!
murders_at_court.8003 = {
	type = character_event
	title = murders_at_court.8003.t
	desc = murders_at_court.8003.desc
	theme = death
	left_portrait = scope:predecessor

	option = {
		name = murders_at_court.8003.a
	}
}


###############################
###############################
## RESOLUTION EVENTS
###############################
###############################

#The murderer warns you away. Will you confront them?
#by Linnéa Thimrén
murders_at_court.9001 = {
	type = character_event
	title = murders_at_court.9001.t
	desc = {
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						exists = scope:watson
					}
					desc = murders_at_court.9001.desc_opening_watson
				}
				desc = murders_at_court.9001.desc_opening
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					player_heir = {
						this = scope:story.var:murderer
					}
				}
				desc = murders_at_court.9001.desc_heir
			}
			triggered_desc = {
				trigger = {
					any_relation = {
						type = rival
						this = scope:story.var:murderer
					}
				}
				desc = murders_at_court.9001.desc_rival
			}
			triggered_desc = {
				trigger = {
					any_courtier = {
						this = scope:story.var:murderer
						is_witch_trigger = yes
					}
				}
				desc = murders_at_court.9001.desc_witch
			}
			triggered_desc = {
				trigger = {
					any_courtier = {
						this = scope:story.var:murderer
						is_cannibal_trigger = yes
					}
				}
				desc = murders_at_court.9001.desc_cannibal
			}
			triggered_desc = {
				trigger = {
					scope:murderer = { is_vassal_of = root }
				}
				desc = murders_at_court.9001.desc_vassal
			}
			desc = murders_at_court.9001.desc_fallback
		}
		desc = murders_at_court.9001.desc_ending
	}
	theme = death
	override_background = {
		reference = sitting_room
	}
	left_portrait = {
		character = root
		animation = worry
	}

	immediate = {
		scope:story = {
			var:murderer = {
				save_scope_as = murderer
			}
			if = {
				limit = {
					exists = var:watson
				}
				var:watson = {
					save_scope_as = watson
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						exists = scope:watson
					}
					OR = {
						any_courtier = {
							is_physically_able_adult = yes
							NOR = {
								this = scope:murderer
								this = scope:watson
							}
						}
						any_vassal = {
							is_physically_able_adult = yes
							NOR = {
								this = scope:murderer
								this = scope:watson
							}
						}
					}
				}
				random = {
					chance = 25
					random_list = {
						20 = {
							trigger = {
								any_courtier = {
									is_physically_able_adult = yes
									NOR = {
										this = scope:murderer
										this = scope:watson
									}
								}
							}
							random_courtier = {
								limit = {
									is_physically_able_adult = yes
									NOR = {
										this = scope:murderer
										this = scope:watson
									}
								}
								save_scope_as = murderer
							}
						}
						10 = {
							trigger = {
								any_vassal = {
									is_physically_able_adult = yes
									NOR = {
										this = scope:murderer
										this = scope:watson
									}
								}
							}
							random_vassal = {
								limit = {
									is_physically_able_adult = yes
									NOR = {
										this = scope:murderer
										this = scope:watson
									}
								}
								save_scope_as = murderer
							}
						}
					}
				}
			}
		}
	}

	option = { #Confront them!
		name = murders_at_court.9001.a
		custom_tooltip = murders_at_court.9001.a.tt
		hidden_effect = {
			random_list = {
				10 = {
					trigger = {
						scope:story.var:murderer = {
							this = scope:murderer
							is_courtier_of = root
						}
					}
					trigger_event = {
						id = murders_at_court.9041 #They escape
						days = { 7 14 }
					}
				}
				20 = {
					trigger_event = {
						id = murders_at_court.9099 #Confrontation event
						days = { 7 14 }
					}
				}
			}
		}
	}

	option = { #Do nothing
		name = murders_at_court.9001.b
		flavor = murders_at_court.9001.b.tt
		hidden_effect = {
			scope:story = {
				end_story = yes
			}
			random = { #It has consequences
				chance = 75
				trigger_event = {
					id = murders_at_court.9002
					days = { 20 40 }
				}
			}
		}
	}
	option = { #Watson, what's up?!
		name = murders_at_court.9001.c
		trigger = {
			exists = scope:watson
		}
		flavor = murders_at_court.9001.c.tt
		save_scope_value_as = {
			name = came_from_letter_event
			value = yes
		}
		trigger_event = {
			id = murders_at_court.9004
			days = { 7 14 }
		}
	}
}

#You did nothing, now someone important dies!!
#by Linnéa Thimrén
murders_at_court.9002 = {
	type = character_event
	title = murders_at_court.9002.t
	desc = murders_at_court.9002.desc
	theme = death
	left_portrait = scope:the_one_to_kill

	trigger = {
		scope:murderer = { is_alive = yes }
		OR = { #Do we have someone we can kill?
			AND = {
				exists = primary_heir
				primary_heir = {
					NOT = { this = scope:murderer }
				}
			}
			any_spouse = {
				NOT = { this = scope:murderer }
			}
			any_relation = {
				type = lover
				NOT = { this = scope:murderer }
			}
		}
	}

	on_trigger_fail = {
		if = {
			limit = {
				scope:murderer = { is_alive = yes }

			}
			#No one else to kill? We kill you!
			trigger_event = murders_at_court.2003
		}
	}

	immediate = {
		hidden_effect = {
			random_list = {
				10 = {
					trigger = {
						exists = primary_heir
						primary_heir = {
							NOT = { this = scope:murderer }
						}
					}
					primary_heir = { save_scope_as = the_one_to_kill }
				}
				10 = {
					trigger = {
						any_spouse = {
							NOT = { this = scope:murderer }
						}
					}
					if = {
						limit = {
							exists = primary_spouse
							primary_spouse = {
								NOT = { this = scope:murderer }
							}
						}
						primary_spouse = { save_scope_as = the_one_to_kill }
					}
					else = {
						random_spouse = {
							limit = {
								NOT = { this = scope:murderer }
							}
							save_scope_as = the_one_to_kill
						}
					}
				}
				10 = {
					trigger = {
						any_relation = {
							type = lover
							NOT = { this = scope:murderer }
						}
					}
					random_relation = {
						type = lover
						limit = {
							NOT = { this = scope:murderer }
							has_relation_soulmate = root
						}
						alternative_limit = {
							NOT = { this = scope:murderer }
						}
						save_scope_as = the_one_to_kill
					}
				}
			}
		}
		#To actually commit the murder, and show it in a neat way
		show_as_tooltip = {
			scope:the_one_to_kill = {
				override_death_effect = { death_reason = death_murder }
			}
		}
		add_character_flag = {
			flag = sent_relevant_death_event
			days = 3
		}
		hidden_effect = {
			unknown_murder_effect = {
				VICTIM = scope:the_one_to_kill
				MURDERER = scope:murderer
				REASON = death_murder
			}
			scope:murderer = {
				random_secret = {
					limit = {
						secret_type = secret_murder
						secret_target = scope:the_one_to_kill
					}
					set_variable = {
						name = story_cycle_murder
						value = yes
					}
				}
			}
		}
	}

	option = { #Aw darn it! Me doing nothing had consequences...
		name = murders_at_court.9002.a
		
	}
}


#You catch the murderer red-handed!
#by Linnéa Thimrén
murders_at_court.9004 = {
	type = character_event
	title = murders_at_court.9004.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:came_from_letter_event
				}
				desc = murders_at_court.9004.desc_letter_event
			}
			desc = murders_at_court.9004.desc
		}
		desc = murders_at_court.9004.desc_ending
	}
	theme = death
	override_background = {
		reference = sitting_room
	}
	left_portrait = {
		character = scope:murderer
		animation = paranoia
	}
	right_portrait = {
		character = scope:victim
		animation = fear
	}
	lower_right_portrait = scope:watson

	trigger = {
		exists = scope:story.var:watson
	}

	immediate = {
		scope:story = {
			var:murderer = {
				save_scope_as = murderer
			}
			var:watson = {
				save_scope_as = watson
			}
		}
		if = {
			limit = {
				any_courtier = {
					NOR = {
						this = scope:murderer
						this = scope:watson
					}
				}
			}
			random_courtier = {
				limit = {
					NOR = {
						this = scope:murderer
						this = scope:watson
					}
				}
				save_scope_as = victim
			}
		
			play_music_cue = "mx_cue_negative"
		
		}

		#Reveal all the secrets
		scope:murderer = {
			if = {
				limit = {
					any_secret = {
						secret_type = secret_murder
						exists = var:story_cycle_murder
					}
				}
				every_secret = {
					limit = {
						secret_type = secret_murder
						exists = var:story_cycle_murder
					}
					expose_secret = root
				}
			}
		}
	}

	option = { #Expose secrets and imprison
		name = murders_at_court.9003.a
		show_as_tooltip = { #To give the right tooltip since the secrets haven't been exposed yet– i.e. no crime
			imprison = {
				target = scope:murderer
				type = house_arrest
			}
		}
		hidden_effect = {
			rightfully_imprison_character_effect = {
				TARGET = scope:murderer
				IMPRISONER = root
			}
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_honor = 0.75
			}
		}
	}

	option = { #Expose secrets and kill them
		name = murders_at_court.9003.b
		add_character_flag = { #To block spam about the death
			flag = sent_relevant_death_event
			days = 3
		}
		scope:murderer = {
			override_death_killer_effect = { death_reason = death_execution killer = root }
		}
		execute_opinion_effect = { VICTIM = scope:murderer EXECUTIONER = root }
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.75
			}
		}
	}

	option = { #Let them go
		name = murders_at_court.9003.c
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.5
			}
		}
	}

	after = {
		hidden_effect = {
			scope:story = {
				end_story = yes
			}
		}
	}
}


#They have escaped
#by Linnéa Thimrén
murders_at_court.9041 = {
	type = character_event
	title = murders_at_court.9041.t
	desc = {
		desc = murders_at_court.9041.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					any_courtier = {
						this = scope:story.var:murderer
						is_witch_trigger = yes
					}
				}
				desc = murders_at_court.9041.desc_witch
			}
			triggered_desc = {
				trigger = {
					any_courtier = {
						this = scope:story.var:murderer
						is_cannibal_trigger = yes
					}
				}
				desc = murders_at_court.9041.desc_cannibal
			}
		}
		desc = murders_at_court.9041.desc
	}
	theme = death
	left_portrait = {
		character = scope:murderer
		animation = schadenfreude
	}

	trigger = {
		scope:story = { #So that they can leave your court
			var:murderer = {
				is_courtier_of = root
			}
		}
	}

	immediate = {
		scope:story = {
			var:murderer = {
				save_scope_as = murderer
			}
		}
		remove_courtier_or_guest = scope:murderer

		#Reveal all the secrets
		scope:murderer = {
			if = {
				limit = {
					any_secret = {
						secret_type = secret_murder
						exists = var:story_cycle_murder
					}
				}
				every_secret = {
					limit = {
						secret_type = secret_murder
						exists = var:story_cycle_murder
					}
					reveal_to = root
				}
			}
		}
	}

	option = { #Expose secrets
		name = murders_at_court.9041.a
		scope:murderer = {
			if = {
				limit = {
					any_secret = {
						secret_type = secret_murder
						exists = var:story_cycle_murder
					}
				}
				every_secret = {
					limit = {
						secret_type = secret_murder
						exists = var:story_cycle_murder
					}
					expose_secret = root
				}
			}
		}
	}

	option = { #Just let them go...
		name = murders_at_court.9041.b

	}

	after = {
		hidden_effect = {
			scope:story = {
				end_story = yes
			}
		}
	}
}


#Confrontation event
#by Linnéa Thimrén
murders_at_court.9099 = {
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { scope:story.var:murderer = scope:murderer }
				}
				desc = murders_at_court.9099.t_wrong
			}
			triggered_desc = {
				trigger = {
					player_heir = {
						this = scope:story.var:murderer
					}
				}
				desc = murders_at_court.9003.t
			}
			triggered_desc = {
				trigger = {
					any_courtier = {
						this = scope:story.var:murderer
						is_witch_trigger = yes
					}
				}
				desc = murders_at_court.9021.t
			}
			triggered_desc = {
				trigger = {
					any_courtier = {
						this = scope:story.var:murderer
						is_cannibal_trigger = yes
					}
				}
				desc = murders_at_court.9031.t
			}
			desc = murders_at_court.9099.t
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { scope:story.var:murderer = scope:murderer }
				}
				desc = murders_at_court.9099.desc_wrong
			}
			desc = {
				first_valid = {
					triggered_desc = {
						trigger = {
							any_courtier = {
								this = scope:story.var:murderer
								is_witch_trigger = yes
							}
						}
						desc = murders_at_court.9021.desc
					}
					triggered_desc = {
						trigger = {
							any_courtier = {
								this = scope:story.var:murderer
								is_cannibal_trigger = yes
							}
						}
						desc = murders_at_court.9031.desc
					}
					desc = murders_at_court.9099.desc_nothing
				}
				desc = murders_at_court.9099.desc
			}
		}
	}
	theme = death
	left_portrait = {
		character = scope:murderer
		triggered_animation = {
			trigger = {
				scope:story.var:murderer = scope:murderer
			}
			animation = schadenfreude
		}
		triggered_animation = {
			trigger = {
				NOT = { scope:story.var:murderer = scope:murderer }
			}
			animation = disbelief
		}
	}

	immediate = {
		if = {
			limit = {
				scope:story.var:murderer = scope:murderer
			}
			#Expose all the secrets
			scope:murderer = {
				if = {
					limit = {
						any_secret = {
							secret_type = secret_murder
							exists = var:story_cycle_murder
						}
					}
					every_secret = {
						limit = {
							secret_type = secret_murder
							exists = var:story_cycle_murder
						}
						expose_secret = root
					}
				}
			}
		}
	}

	option = { #Expose secrets and imprison
		name = murders_at_court.9003.a
		trigger = {
			scope:story.var:murderer = scope:murderer
		}
		show_as_tooltip = { #To give the right tooltip since the secrets haven't been exposed yet– i.e. no crime
			imprison = {
				target = scope:murderer
				type = house_arrest
			}
		}
		hidden_effect = {
			rightfully_imprison_character_effect = {
				TARGET = scope:murderer
				IMPRISONER = root
			}
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_honor = 0.75
			}
		}
	}

	option = { #Expose secrets and kill them
		name = murders_at_court.9003.b
		trigger = {
			scope:story.var:murderer = scope:murderer
		}
		add_character_flag = { #To block spam about the death
			flag = sent_relevant_death_event
			days = 3
		}
		execute_opinion_effect = { VICTIM = scope:murderer EXECUTIONER = root }
		scope:murderer = {
			override_death_killer_effect = { death_reason = death_execution killer = root }
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_vengefulness = 0.75
			}
		}
	}

	option = { #Let them go
		name = murders_at_court.9003.c
		trigger = {
			scope:story.var:murderer = scope:murderer
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_compassion = 0.5
			}
		}
	}

	option = { #Join them
		name = murders_at_court.9003.d
		trigger = {
			scope:story.var:murderer = scope:murderer
		}

		if = { #Mold their personality a bit
			limit = {
				NOT = { has_trait = sadistic }
				number_of_personality_traits < personality_trait_limit
			}
			add_trait = sadistic
		}
		else_if = {
			limit = {
				has_trait = compassionate
			}
			remove_trait = compassionate
		}
		if = {
			limit = {
				has_relation_rival = scope:murderer
			}
			remove_relation_rival = scope:murderer
			add_stress = medium_stress_gain
		}
		else_if = {
			limit = {
				can_set_relation_friend_trigger = { CHARACTER = scope:murderer }
			}
			set_relation_friend = { reason = friend_deviant_fun target = scope:murderer }
		}
		else = {
			scope:murderer = {
				add_opinion = {
					target = root
					modifier = friendliness_opinion
					opinion = 40
				}
			}
		}
		stress_impact = {
			compassionate = massive_stress_impact_gain
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_trait = sadistic
			}
		}
	}

	option = { #Accused the wrong person...
		name = murders_at_court.9003.e
		trigger = {
			NOT = { scope:story.var:murderer = scope:murderer }
		}
		scope:murderer = {
			add_opinion = {
				target = root
				modifier = insult_opinion
				opinion = -20
			}
		}
		hidden_effect = {
			trigger_event = {
				id = murders_at_court.9002
				days = { 20 40 }
			}
		}
	}

	after = {
		hidden_effect = {
			scope:story = {
				end_story = yes
			}
		}
	}
}

########################
########################
## MAINTENANCE EVENT
########################
########################


#The murderer left court
#by Linnéa Thimrén
murders_at_court.9989 = {
	type = character_event
	title = murders_at_court.9999.t
	desc = {
		desc = murders_at_court.9999.desc_opening
		desc = murders_at_court.9989.desc
	}
	theme = death
	left_portrait = scope:murderer
	
	trigger = {
		scope:story.var:murderer = {
			NOT = { is_courtier_of = scope:story.story_owner }
		}
	}

	immediate = {
		scope:story = {
			var:murderer = {
				save_scope_as = murderer
			}
		}
	}

	option = {
		name = murders_at_court.9989.a
		hidden_effect = {
			scope:story = {
				end_story = yes
			}
		}
	}
}


#The murderer is dead
#by Linnéa Thimrén
murders_at_court.9999 = {
	type = character_event
	title = murders_at_court.9999.t
	desc = {
		desc = murders_at_court.9999.desc_opening
		desc = murders_at_court.9999.desc
	}
	theme = death
	override_background = {
		reference = sitting_room
	}
	left_portrait = scope:murderer
	
	trigger = {
		scope:story.var:murderer = {
			is_alive = no
		}
	}

	immediate = {
		scope:story = {
			var:murderer = {
				save_scope_as = murderer
			}
		}
	}

	option = {
		name = murders_at_court.9999.a
		hidden_effect = {
			scope:story = {
				end_story = yes
			}
		}
	}
}
