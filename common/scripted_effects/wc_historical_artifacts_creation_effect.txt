create_artifact_terenas_crown_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes
	
	# Create the artifact
	create_artifact = {	
		name = terenas_crown_name
		description = terenas_crown_desc
		type = helmet
		visuals = terenas_crown
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 364.08.08
			recipient = character:63146 #Lordain Menethil
			location = title:c_lordaeron.title_province # Lordaeron
		}
		modifier = terenas_crown
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = terenas_crown
			value = yes
		}
		add_artifact_title_history = {
			target = title:k_lordaeron
			date = 364.08.08
		}
		save_scope_as = epic
	}
}
create_artifact_frostmourne_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = frostmourne_name
		description = frostmourne_desc
		type = sword
		template = frostmourne_template
		visuals = frostmourne
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = frostmourne_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = no_damage value = yes }
		set_variable = frostmourne
		set_variable = { name = frostmourne_level value = 0 }
	}
}
create_artifact_bite_of_the_bleeding_hollow_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = bite_of_the_bleeding_hollow_name
		description = bite_of_the_bleeding_hollow_desc
		type = axe
		template = bite_of_the_bleeding_hollow_template
		visuals = bite_of_the_bleeding_hollow
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_daelins_saber_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = daelins_saber_name
		description = daelins_saber_desc
		type = axe
		template = daelins_saber_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_the_black_hand_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = the_black_hand_name
		description = the_black_hand_desc
		type = axe
		template = the_black_hand_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_lions_fang_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = lions_fang_name
		description = lions_fang_desc
		type = axe
		template = lions_fang_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_zerat_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = zerat_name
		description = zerat_desc
		type = axe
		template = zerat_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_frostfathom_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = frostfathom_name
		description = frostfathom_desc
		type = axe
		template = frostfathom_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_mithros_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = mithros_name
		description = mithros_desc
		type = axe
		template = mithros_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_troggbane_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = troggbane_name
		description = troggbane_desc
		type = axe
		template = troggbane_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_felomelorn_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = felomelorn_name
		description = felomelorn_desc
		type = axe
		template = felomelorn_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = felomelorn_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_twin_blades_of_azzinoth_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = twin_blades_of_azzinoth_name
		description = twin_blades_of_azzinoth_desc
		type = axe
		template = twin_blades_of_azzinoth_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = twin_blades_of_azzinoth_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_trolkalar_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = trolkalar_name
		description = trolkalar_desc
		type = axe
		template = trolkalar_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = trolkalar_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_ironfoe_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = ironfoe_name
		description = ironfoe_desc
		type = axe
		template = ironfoe_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = ironfoe_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_fearbreaker_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = fearbreaker_name
		description = fearbreaker_desc
		type = axe
		template = fearbreaker_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_doomsaw_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = doomsaw_name
		description = doomsaw_desc
		type = axe
		template = doomsaw_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_nekana_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = nekanan_name
		description = nekana_desc
		type = axe
		template = nekana_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_blade_of_zuljin_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = blade_of_zuljin_name
		description = blade_of_zuljin_desc
		type = axe
		template = blade_of_zuljin_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_lights_vengeance_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = lights_vengeance_name
		description = lights_vengeance_desc
		type = axe
		template = lights_vengeance_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}
create_artifact_might_of_menethil_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = might_of_menethil_name
		description = might_of_menethil_desc
		type = axe
		template = might_of_menethil_template
		visuals = test
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = test_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = bite_of_the_bleeding_hollow value = yes }
	}
}