##################################################
# INFO
# Schemes used by specific contracts.
#
##################################################

#Used by laamp_cultural_minority_contract and laamp_religious_minority_contract
#Open Dialogue
protect_minority_vassal_contract_diplomacy_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = protect_minority_vassal_contract_diplomacy_scheme_desc_general
	success_desc = protect_minority_vassal_contract_diplomacy_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t3_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		scope:owner = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 5
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		protect_minority_vassal_contract_diplomacy_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}

	on_hud_click  = { protect_minority_vassal_contract_diplomacy_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			protect_minority_vassal_contract_diplomacy_scheme_prep_effect = yes
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
}

#Intimidation Tactics
protect_minority_vassal_contract_martial_scheme = {
	# Basic Setup
	skill = martial
	desc = protect_minority_vassal_contract_martial_scheme_desc_general
	success_desc = protect_minority_vassal_contract_martial_scheme_desc_success
	icon = martial
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t3_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		scope:owner = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }
	
	# Base Chances
	base_success_chance = {
		base = 5
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		protect_minority_vassal_contract_martial_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}

	on_hud_click  = { protect_minority_vassal_contract_martial_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			protect_minority_vassal_contract_martial_scheme_prep_effect = yes
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = martial_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
}

#Find Leverage
protect_minority_vassal_contract_intrigue_scheme = {
	# Basic Setup
	skill = intrigue
	desc = protect_minority_vassal_contract_intrigue_scheme_desc_general
	success_desc = protect_minority_vassal_contract_intrigue_scheme_desc_success
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t3_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		scope:owner = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 5
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		protect_minority_vassal_contract_intrigue_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { protect_minority_vassal_contract_intrigue_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			protect_minority_vassal_contract_intrigue_scheme_prep_effect = yes
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = intrigue_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
}

#Legal Loopholes
protect_minority_vassal_contract_learning_scheme = {
	# Basic Setup
	skill = learning
	desc = protect_minority_vassal_contract_learning_scheme_desc_general
	success_desc = protect_minority_vassal_contract_learning_scheme_desc_success
	icon = learning
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t3_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		scope:owner = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 5
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		protect_minority_vassal_contract_learning_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}

	on_hud_click  = { protect_minority_vassal_contract_learning_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			protect_minority_vassal_contract_learning_scheme_prep_effect = yes
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = learning_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
}

#Prison Break
laamp_prison_break_scheme = {
	# Basic Setup
	skill = intrigue
	desc = laamp_prison_break_scheme_desc_general
	success_desc = laamp_prison_break_scheme_desc_success
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t3_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		scope:owner = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	# Agents
	starting_agent_slots = {}
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
		ai_agent_join_chance_basic_suite_modifier = yes
		ai_agent_join_chance_hostile_grievous_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }
	agent_groups_target_character_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 5
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_prison_break_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_prison_break_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_prison_break_scheme_prep_effect = yes
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = intrigue_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
}

## Help Council Task
laamp_help_find_secrets_scheme = {
	# Basic Setup
	skill = intrigue
	desc = laamp_help_find_secrets_scheme_desc_general
	success_desc = laamp_help_find_secrets_scheme_desc_success
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = 1
	success_chance_growth_per_skill_point = t3_scgpsp_value
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		scope:owner = {
			government_has_flag = government_is_landless_adventurer
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
		ai_agent_join_chance_basic_suite_modifier = yes
		ai_agent_join_chance_hostile_grievous_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }
	agent_groups_target_character_perspective = { courtiers vassals }

	# Base Chances
	base_success_chance = {
		base = 5
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_help_find_secrets_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}

	on_hud_click  = { laamp_help_find_secrets_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_help_find_secrets_scheme_prep_effect = yes
		}
	}
	on_monthly = {
		save_scope_as = scheme		
		task_contract = {
			task_contract_employer = {
				liege = {
					save_scope_as = councillor_liege
				}
			}
		}
		scheme_target_character = {
			save_scope_as = target_character
		}
		scheme_owner = {
			save_scope_as = councillor
			if = {
				limit = {
					scope:target_character = {
						spymaster_task_find_secrets_court_has_major_secrets_trigger = yes
					}
				}
				trigger_event = laamp_extra_contract_schemes.0021
			}
			else_if = {
				limit = {
					scope:target_character = {
						spymaster_task_find_secrets_court_has_minor_secrets_trigger = yes
					}
				}
				trigger_event = laamp_extra_contract_schemes.0020
			}
			else_if = {
				random = {
					chance = {
						value = 5
						add = scope:scheme.scheme_success_chance
					}
					trigger_event = laamp_extra_contract_schemes.0022
					save_scope_as = event_happening
				}
			}
		}
		if = {
			limit = {
				NOT = { exists = scope:event_happening }
			}
			fire_generic_contract_scheme_on_going_events_effect = yes
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = intrigue_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}