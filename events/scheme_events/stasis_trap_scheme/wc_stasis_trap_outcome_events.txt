namespace = stasis_trap_outcome

##################################
# MAINTENANCE EVENTS 0000 - 0099
##################################

stasis_trap_outcome.0001 = {
	hidden = yes
	immediate = {
		add_character_flag = { #Only resolve one stasis trap in the same day
			flag = is_in_event_stasis_trap_outcome_0001
			days = 1
		}
		trigger_event = {
			on_action = stasis_trap_setup
		}
	}
}

#################
# METHOD SELECTION EVENTS
# 1000-1999
#################

######################
# Trapped Residence 
######################
stasis_trap_outcome.1001 = {
	type = character_event
	title = stasis_trap_outcome.1001.t
	desc = {
		desc = stasis_trap_outcome.1001.desc
	}
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = personality_coward
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	weight_multiplier = {
		base = 1
	}

	immediate = {
		save_scope_value_as = {
			name = stasis_trap_method
			value = flag:trapped_residence
		}
		
		scope:target.court_owner.capital_province.barony = {
			save_scope_as = court_location
		}

		hostile_scheme_outcome_roll_setup_effect = yes
	}

	option = {
		name = stasis_trap_outcome.1001.a
		remove_short_term_gold = minor_gold_value
		stasis_trap_outcome_roll_effect = yes
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = stasis_trap_outcome.1001.b
		custom_tooltip = do_not_execute_stasis_trap_tooltip

		dont_excecute_scheme_effect = yes

		ai_chance = {
			base = 0
		}
	}
}

#####################################
# SUCCESS OUTCOMES 2001 - 2999
#####################################

#######################
# Trapped Residence
#######################
stasis_trap_outcome.2001 = {
	type = character_event
	title = stasis_trap_outcome.1001.t
	desc = {
		desc = stasis_trap_outcome.2001.desc

		first_valid = {
			# If the Scheme Owner is known:
			triggered_desc = {
				trigger = { 
					exists = scope:scheme_discovered
				}
				desc = stasis_trap_outcome.2001.owner_is_known
			}
			desc = stasis_trap_outcome.2001.no_awareness
		}
	}
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = fear
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	
	trigger = {
		scope:stasis_trap_method = flag:trapped_residence
	}

	immediate = {
		stasis_trap_success_effect = yes
	}

	option = {
		name = stasis_trap_outcome.2001.a
		play_music_cue = "mx_cue_prison"
		successful_stasis_trap_outcome_event_option_effect = yes
	}
}

#################################
# FAILURE OUTCOMES 4000 - 4999
#################################
stasis_trap_outcome.4001 = {
	type = character_event
	title = stasis_trap_outcome.1001.t
	desc = {
		desc = stasis_trap_outcome.4001.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:scheme_discovered
				}
				desc = stasis_trap_outcome.4001.owner_discovered
			}
			desc = stasis_trap_outcome.4001.owner_secret
		}
	}
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = rage
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	
	trigger = {
		scope:stasis_trap_method = flag:trapped_residence
	}

	immediate = {
		stasis_trap_failure_effect = yes
	}

	option = { # Abandon scheme
		name = stasis_trap_outcome.4001.a
		abandon_scheme_effect = yes

		ai_chance = {
			base = 100
		}
	}

	option = { # Try again!
		name = stasis_trap_outcome.4001.b
		restart_scheme_effect = yes

		ai_chance = {
			base = 10
			modifier = {
				add = 200
				has_trait = stubborn
			}
		}
	}
}

########################################
# TARGET SUCCESS NOTIFICATIONS
########################################

#I have been stunned!
stasis_trap_outcome.5001 = {
	type = character_event
	title = stasis_trap_outcome.5001.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:scheme_discovered
				}
				desc = stasis_trap_outcome.5001.opening.b
			}
			triggered_desc = {
				trigger = {
					NOT = {
						exists = scope:scheme_discovered
					}
				}
				desc = stasis_trap_outcome.5001.opening.a
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:stasis_trap_method = flag:trapped_residence
				}
				desc = stasis_trap_outcome.5001.trapped_residence
			}
		}
	}
	theme = intrigue
	left_portrait = {
		character = scope:left_portrait
		triggered_animation = {
			trigger = {
				exists = scope:scheme_discovered
			}
			animation = scheme
		}
		triggered_animation = {
			trigger = {
				NOT = { exists = scope:scheme_discovered }
			}
			animation = fear
		}
	}

	immediate = {
		show_as_tooltip = {
			stun_character_effect = {
				TARGET = scope:target
				STUNNER = scope:owner
			}
		}

		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = {
				save_scope_as = left_portrait
			}
		}
		else = {
			scope:target = {
				save_scope_as = left_portrait
			}
		}
	}

	option = {
		name = stasis_trap_outcome.5001.a
		trigger = {
			exists = scope:scheme_discovered
		}
		play_music_cue = "mx_cue_stress"
		hostile_scheme_opinion_effect = {
			VICTIM = scope:target
			ATTACKER = scope:owner
			SCHEME = stasis_trap_scheme
		}
	}

	option = {
		name = stasis_trap_outcome.5001.a
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		play_music_cue = "mx_cue_stress"
	}
}

###################################
# TARGET FAILURE NOTIFICATIONS
###################################

#I was almost stunned
stasis_trap_outcome.5002 = {
	type = character_event
	title = stasis_trap_outcome.5002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:stasis_trap_method = flag:trapped_residence
				}
				desc = stasis_trap_outcome.5002.trapped_residence
			}
			desc = stasis_trap_outcome.5002.fallback
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:scheme_discovered
				}
				desc = stasis_trap_outcome.5002.owner_known
			}
			desc = stasis_trap_outcome.5002.owner_not_known
		}
	}
	theme = intrigue
	left_portrait = {
		character = scope:left_portrait
		triggered_animation = {
			trigger = {
				exists = scope:scheme_discovered
			}
			animation = scheme
		}
		triggered_animation = {
			trigger = {
				NOT = { exists = scope:scheme_discovered }
			}
			animation = fear
		}
	}

	immediate = {
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = {
				save_scope_as = left_portrait
			}
		}
		else = {
			scope:target = {
				save_scope_as = left_portrait
			}
		}
	}

	option = {
		name = stasis_trap_outcome.5002.a
		trigger = {
			exists = scope:scheme_discovered
		}
		add_opinion = {
			target = scope:owner
			modifier = attempted_stasis_trapion_opinion
		}
		add_character_modifier = {
			modifier = watchful_modifier
			days = watchful_modifier_duration
		}
	}

	option = {
		name = stasis_trap_outcome.5002.b
		trigger = {
			NOT = { exists = scope:scheme_discovered }
		}
		add_character_modifier = {
			modifier = watchful_modifier
			days = watchful_modifier_duration
		}
	}
}

stasis_trap_outcome.5003 = {
	type = character_event
	title = stasis_trap_outcome.5003.t
	desc = stasis_trap_outcome.5003.desc
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = anger
	}

	option = {
		name = stasis_trap_outcome.5003.a
	}
}
