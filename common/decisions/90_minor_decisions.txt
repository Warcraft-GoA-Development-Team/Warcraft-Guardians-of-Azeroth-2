hire_physician_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	
	sort_order = 81

	desc = hire_physician_decision_desc
	selection_tooltip = hire_physician_decision_tooltip

	ai_check_interval = 60

	is_shown = {
		is_ruler = yes
	}

	cooldown = { days = 365 }

	is_valid_showing_failures_only = {
		is_imprisoned = no
	}

	effect = {
		hidden_effect = {
			add_character_flag = {
				flag = health_3001_hire_physician_decision_text
				days = 20
			}
		}

		trigger_event = {
			id = health.3001
			days = 14
		}
		custom_tooltip = hire_physician_decision_effect_tooltip
	}
	
	ai_potential = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		gold > low_skill_court_physician_cost
		is_at_war = no
		NOT = {
			employs_court_position = court_physician_court_position
		}
	}

	ai_will_do = {
		base = 100
	}
}

gain_weight_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"

	desc = gain_weight_decision_desc
	selection_tooltip = gain_weight_decision_tooltip

	ai_check_interval = 0

	is_shown = {
		OR = {
			has_character_modifier = malnourished_modifier
			current_weight < -50
		}
		NOT = { has_character_modifier = gaining_weight_modifier }
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		NOT = { is_incapable_trigger = yes }
	}

	effect = {
		add_character_modifier = {
			modifier = gaining_weight_modifier
		}

		trigger_event = { #To give faster, and steadier, results
			id = health.5004
			days = 90
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

stop_gain_weight_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_activity.dds"

	desc = stop_gain_weight_decision_desc
	selection_tooltip = stop_gain_weight_decision_tooltip

	ai_check_interval = 0

	is_shown = {
		has_character_modifier = gaining_weight_modifier
	}

	effect = {
		remove_character_modifier = gaining_weight_modifier
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

lose_weight_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_activity.dds"

	desc = lose_weight_decision_desc
	selection_tooltip = lose_weight_decision_tooltip

	ai_check_interval = 0

	is_shown = {
		OR = {
			has_character_modifier = obese_modifier
			current_weight > 50
		}
		NOT = { has_character_modifier = losing_weight_modifier }
	}

	is_valid_showing_failures_only = {
		is_imprisoned = no
		NOT = { is_incapable_trigger = yes }
	}

	effect = {
		stress_impact = {
			gluttonous = medium_stress_impact_gain
		}
		add_character_modifier = {
			modifier = losing_weight_modifier
		}

		trigger_event = { #To give faster results
			id = health.5005
			days = 180
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

stop_lose_weight_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"

	desc = stop_lose_weight_decision_desc
	selection_tooltip = stop_lose_weight_decision_tooltip

	ai_check_interval = 0

	is_shown = {
		has_character_modifier = losing_weight_modifier
	}

	effect = {
		remove_character_modifier = losing_weight_modifier
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

commit_suicide_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_variable = mourning_parent }
				desc = commit_suicide_decision_desc_parent
			}
			triggered_desc = {
				trigger = { has_variable = mourning_soulmate }
				desc = commit_suicide_decision_desc_soulmate
			}
			triggered_desc = {
				trigger = { has_trait = lunatic }
				desc = commit_suicide_decision_desc_lunatic
			}
			triggered_desc = {
				trigger = { has_trait = depressed }
				desc = commit_suicide_decision_desc_depressed
			}
			triggered_desc = {
				trigger = { has_trait = cancer }
				desc = commit_suicide_decision_desc_cancer
			}
			triggered_desc = {
				trigger = { has_trait = leper }
				desc = commit_suicide_decision_desc_leper
			}
			triggered_desc = {
				trigger = { has_variable = messy_divorce }
				desc = commit_suicide_decision_desc_divorce
			}
			triggered_desc = {
				trigger = { has_variable = rank_demoted }
				desc = commit_suicide_decision_desc_demoted
			}
			triggered_desc = {
				trigger = { has_variable = mourning_friend }
				desc = commit_suicide_decision_desc_friend
			}
			triggered_desc = {
				trigger = { has_trait = great_pox }
				desc = commit_suicide_decision_desc_great_pox
			}
			triggered_desc = {
				trigger = { has_trait = incapable }
				desc = commit_suicide_decision_desc_incapable
			}
			triggered_desc = {
				trigger = { stress >= extremely_high_stress }
				desc = commit_suicide_decision_desc_stressed
			}
			triggered_desc = {
				trigger = { 
					has_trait = witch 
					faith = { has_doctrine_parameter = witchcraft_illegal }
				}
				desc = commit_suicide_decision_desc_witch
			}
			triggered_desc = {
				trigger = { 
					has_trait = cannibal
					NOT = { 
						faith = { has_doctrine_parameter = cannibalism_legal }
					}
				}
				desc = commit_suicide_decision_desc_cannibal
			}
			triggered_desc = {
				trigger = { 
					has_trait = sodomite
					faith = { has_doctrine_parameter = homosexuality_illegal }
				}
				desc = commit_suicide_decision_desc_sodomite
			}
			triggered_desc = {
				trigger = { 
					has_trait = deviant
					faith = { has_doctrine_parameter = deviancy_illegal }
				}
				desc = commit_suicide_decision_desc_deviant
			}
			triggered_desc = {
				trigger = { 
					OR = {
						has_trait = adulterer
						has_trait = fornicator
					}
					OR = {
						AND = {
							faith = { has_doctrine_parameter = adultery_female_crime }
							is_female = yes
						}
						AND = {
							faith = { has_doctrine_parameter = adultery_male_crime }
							is_male = yes
						}
					}
				}
				desc = commit_suicide_decision_desc_criminal
			}
		}
	}
	selection_tooltip = commit_suicide_decision_tooltip
	

	ai_check_interval = 500

	cooldown = { days = 1825 }

	is_shown = {
		is_adult = yes
		NOT = { can_execute_decision = initiate_consolamentum_decision }
		OR = {
			has_trait = depressed
			has_trait = incapable
			has_trait = cancer
			has_trait = leper
			has_trait = great_pox
			has_trait = lunatic
			has_character_flag = make_suicide_available
			stress >= extremely_high_stress
			AND = { #You have a criminal trait and you are stressed
				stress >= very_high_stress
				OR = {
					AND = {
						has_trait = witch
						faith = { has_doctrine_parameter = witchcraft_illegal }
					}
					AND = {
						has_trait = cannibal
						NOT = {
							faith = { has_doctrine_parameter = cannibalism_legal }
						}
					}
					AND = {
						has_trait = sodomite
						faith = { has_doctrine_parameter = homosexuality_illegal }
					}
					AND = {
						has_trait = deviant
						faith = { has_doctrine_parameter = deviancy_illegal }
					}
					AND = {
						OR = {
							has_trait = adulterer
							has_trait = fornicator
						}
						OR = {
							AND = {
								faith = { has_doctrine_parameter = adultery_female_crime }
								is_female = yes
							}
							AND = {
								faith = { has_doctrine_parameter = adultery_male_crime }
								is_male = yes
							}
						}
					}
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		not = { exists = involved_activity }
		is_imprisoned = no
		is_commanding_army = no
	}

	effect = {
		show_as_tooltip = {
			committed_suicide_effect = yes
		}
		
		custom_tooltip = commit_suicide_decision_effect_tooltip
		trigger_event = {
			on_action = commit_suicide
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0
		modifier = {
			add = 30
			has_trait = depressed
		}
		modifier = {
			add = 25
			is_incapable_trigger = yes
		}
		modifier = {
			add = 10
			has_trait = cancer
		}
		modifier = {
			add = 10
			has_trait = leper
		}
		modifier = {
			add = 10
			has_trait = great_pox
		}
		modifier = {
			add = 10
			has_trait = lunatic
		}
		modifier = {
			add = 20
			has_character_flag = make_suicide_available
		}
	}
}

secede_from_empire_decision = { #by Sean Hughes
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = secede_from_empire_decision_desc
	selection_tooltip = secede_from_empire_decision_tooltip
	major = yes

	ai_check_interval = 12

	is_shown = {
		liege = {
			highest_held_title_tier = tier_empire
			NOT = { this = root }
		}
		OR = {
			liege = { debt_level >= 7 } # Over 25 years in debt
			liege = {
				any_character_war = {
					primary_attacker = prev
					war_days >= 9125 # Offensive war lasting over 25 years.
				}
			}	
		}
	}

	is_valid = {
		OR = {
			custom_description = {
				liege = { debt_level >= 7 } # Over 25 years in debt
				subject = liege
				object = root
				text = secede_from_empire_decision_trigger_debt
			}
			custom_description = {		
				liege = {
					any_character_war = {
						primary_attacker = prev
						war_days >= 9125 # Offensive war lasting over 25 years.
					}
				}
				subject = liege
				object = root
				text = secede_from_empire_decision_trigger_war
			}
		}
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		# Liege loses debt proportionally to how much realm_size they will lose when you go independent.
		custom_tooltip = secede_from_empire_decision_effect_tooltip
		hidden_effect = {
			liege = {
				save_scope_as = liege
				save_scope_value_as = {
					name = debt_cleared
					value = {
						value = gold 						# Example: I am 1000 gold in debt, so we start with -1000
						multiply = root.sub_realm_size 		# The seceeding vassal has a realm size of 25...
						divide = scope:liege.realm_size 			# ...while the top liege has a realm size of 100, scaling the value to -250
						multiply = -1.1 	
					}
				}
				send_interface_toast = {
					title = secede_from_empire_decision_notification
					left_icon = root

					custom_tooltip = secede_from_empire_decision_notification_tt
					add_gold = scope:debt_cleared
				}
			}
		}

		# Go independent
		create_title_and_vassal_change = {
			type = independency 
			save_scope_as = change
		}
		becomes_independent = {
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
		
		debug_log = "Empire Vassal Secession:"
		debug_log_scopes = no
		scope:liege = { debug_log_scopes = no }
		scope:debt_cleared = { debug_log_scopes = no }
	}
	
	ai_potential = {
		liege = { debt_level >= 5 } # More than 5 years in debt
		trigger_if = {
			limit = {
				is_rightful_liege_of_trigger = {
					LIEGE = liege
					VASSAL = root
				}
			}
			is_powerful_vassal = yes # The strongest vassals go first
			highest_held_title_tier >= tier_county # Counts should never break away from their rightful liege, though.
		}
		trigger_else = {
			liege = { is_ai = yes }

			# Slightly different from the rightful liege check, this looks to see if I hold any land at all that De Jure belongs to my liege's empire(s).
			NOT = {	
				any_held_title = {
					tier = tier_county
					exists = empire.holder
					empire.holder = root.liege
				}
			}
		}
	}

	ai_will_do = {
		base = -40

		# Realm Modifiers
		compare_modifier = {
			value = sub_realm_size
			multiplier = 1
		}

		modifier = {
			add = 50
			NOT = {
				is_rightful_liege_of_trigger = {
					LIEGE = liege
					VASSAL = root
				}
			}
		}

		modifier = {
			# Kings are more likely to seceede
			add = 25
			highest_held_title_tier = tier_kingdom
		}

		# Warcraft
		# modifier = {
			# add = -35
			# # Electors in the HRE are far less likely to seceede.
			# liege.primary_title = title:e_hre
			# title:e_hre = {
				# has_title_law = princely_elective_succession_law
				# any_elector = {
					# this = root
				# }
			# }
		# }
		
		# Warcraft
		# modifier = {
			# add = -60 
			# # Satraps of the Mongol Empire should (almost) never seceede.
			# liege.primary_title = title:e_mongolia  
		# }

		# 'Soft' Modifiers, e.g., Opinion and Personality
		ai_value_modifier = {
			ai_greed = 0.35
			ai_boldness = 0.35
		}

		opinion_modifier = {
			opinion_target = liege
			who = root
			multiplier = -0.15
		}

		# Faith and Culture Factors
		modifier = {
			factor = 1.2
			NOT = { culture = { has_same_culture_heritage = root.liege.culture }}
		}

		modifier = {
			factor = 1.1
			faith = {		
				faith_hostility_level = {
					target = root.liege.faith
					value = faith_astray_level
				}
			}
		}

		modifier = {
			factor = 1.3
			faith = {		
				faith_hostility_level = {
					target = root.liege.faith
					value = faith_hostile_level
				}
			}
		}

		modifier = {
			factor = 1.5
			faith = {		
				faith_hostility_level = {
					target = root.liege.faith
					value = faith_evil_level
				}
			}
		}
	}	
}

pet_dog_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"

	desc = pet_dog_decision_desc
	selection_tooltip = pet_dog_decision_tooltip

	ai_check_interval = 120

	cooldown = { days = 1825 }

	is_shown = {
		any_owned_story = {
			story_type = story_cycle_pet_dog
			exists = story_owner.var:story_cycle_dog_name
		}
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		custom_tooltip = pet_decision_effect_tooltip

		trigger_event = {
			on_action = story_cycle_dog_pet_decision_on_actions
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress > 10
		}
	}
}

pet_cat_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"

	desc = pet_cat_decision_desc
	selection_tooltip = pet_cat_decision_tooltip

	ai_check_interval = 120

	cooldown = { days = 1825 }

	is_shown = {
		any_owned_story = {
			story_type = story_cycle_pet_cat
			exists = story_owner.var:story_cycle_cat_name
		}
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		custom_tooltip = pet_decision_effect_tooltip

		trigger_event = {
			on_action = story_cycle_cat_pet_decision_on_actions
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress > 10
		}
	}
}

#DECISIONS TO "USE" YOUR STRESS COPING TRAITS TO LOSE STRESS

stress_loss_drunkard_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_drunkard_decision_desc
	selection_tooltip = stress_loss_drunkard_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = drunkard
	}

	is_valid_showing_failures_only = {
		is_available = yes
		NOT = { has_character_modifier = court_no_wine_modifier }
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			add_prestige = medium_prestige_loss
		}

		trigger_event = {
			on_action = stress_loss_drunkard
		}
	}
	
	ai_potential = {
		has_trait = drunkard
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_hashishiyah_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_hashishiyah_decision_desc
	selection_tooltip = stress_loss_hashishiyah_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = hashishiyah
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			add_character_modifier = {
				modifier = stress_hashish_stupor
				years = 2
			}
		}

		trigger_event = {
			on_action = stress_loss_hashishiyah
		}
	}
	
	ai_potential = {
		has_trait = hashishiyah
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_rakish_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	desc = {
		desc = stress_loss_rakish_decision_desc
		desc = {
			first_valid = {
				triggered_desc = {
					trigger = {
						is_female = yes
					}
					desc = stress_loss_rakish_decision_desc_woman_ending
				}
				desc = stress_loss_rakish_decision_desc_man_ending
			}
		}
	}
	selection_tooltip = stress_loss_rakish_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = rakish
	}

	is_valid_showing_failures_only = {
		is_available = yes
		short_term_gold >= minor_gold_value
	}

	effect = {
		show_as_tooltip = {
			remove_short_term_gold = minor_gold_value
		}
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip
		custom_tooltip = stress_threshold.1011.rakish.tt


		#So that stress_trait_coping_decisions.2002 can trigger in yearly events too
		save_scope_value_as = {
			name = from_stress_loss_decision
			value = yes
		}

		trigger_event = {
			on_action = stress_loss_rakish
		}
	}
	
	ai_potential = {
		has_trait = rakish
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_reclusive_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	desc = stress_loss_reclusive_decision_desc
	selection_tooltip = stress_loss_reclusive_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = reclusive
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			add_prestige = medium_prestige_loss
		}

		trigger_event = {
			on_action = stress_loss_reclusive
		}
	}
	
	ai_potential = {
		has_trait = reclusive
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_irritable_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_realm.dds"
	desc = stress_loss_irritable_decision_desc
	selection_tooltip = stress_loss_irritable_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = irritable
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			random_list = {
				50 = {
					custom_tooltip = stress_loss_irritable_decision_effect_tooltip
				}
				50 = {
					trigger = {
						any_vassal = {
							count >= 1
						}
					}
					add_character_modifier = {
						modifier = irritating_everyone_modifier
						years = 1
					}
				}
				50 = {
					trigger = {
						any_vassal = {
							count < 1
						}
					}
					add_character_modifier = {
						modifier = irritating_everyone_courtier_modifier
						years = 1
					}
				}
			}
		}

		trigger_event = {
			on_action = stress_loss_irritable
		}
	}
	
	ai_potential = {
		has_trait = irritable
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_flagellant_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	desc = stress_loss_flagellant_decision_desc
	selection_tooltip = stress_loss_flagellant_decision_tooltip

	ai_check_interval = 120

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = flagellant
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		
		custom_tooltip = stress_loss_flaggelant_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			increase_wounds_effect = { REASON = whipping }
		}

		trigger_event = {
			on_action = stress_loss_flagellant
		}
	}
	
	ai_potential = {
		has_trait = flagellant
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_profligate_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_profligate_decision_desc
	selection_tooltip = stress_loss_profligate_decision_tooltip

	ai_check_interval = 120

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = profligate
	}

	is_valid_showing_failures_only = {
		is_available = yes
		short_term_gold >= medium_gold_value
	}

	effect = {
		
		show_as_tooltip = { #The effect is actually applied in the event itself
			remove_short_term_gold = medium_gold_value
		}
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip


		trigger_event = {
			on_action = stress_loss_profligate
		}
	}
	
	ai_potential = {
		has_trait = profligate
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_improvident_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_improvident_decision_desc
	selection_tooltip = stress_loss_improvident_decision_tooltip

	ai_check_interval = 120

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = improvident
	}

	is_valid_showing_failures_only = {
		is_available = yes
		short_term_gold >= medium_gold_value
	}

	effect = {
		
		show_as_tooltip = { #The effect is actually applied in the event itself
			remove_short_term_gold = medium_gold_value
		}
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip


		trigger_event = {
			on_action = stress_loss_improvident
		}
	}
	
	ai_potential = {
		has_trait = improvident
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_contrite_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_contrite_decision_desc
	selection_tooltip = stress_loss_contrite_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = contrite
	}

	is_valid_showing_failures_only = {
		is_available = yes
		NOT = { has_character_modifier = stress_disturbing_confession }
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			if = {
				limit = {
					any_secret = {
						can_be_exposed_by = root
					}
				}
				custom_tooltip = stress_loss_contrite_decision_expose_random_secret
			}
			else = {
				add_character_modifier = {
					modifier = stress_disturbing_confession
					years = 2
				}
			}
		}

		trigger_event = {
			on_action = stress_loss_contrite
		}
	}
	
	ai_potential = {
		has_trait = contrite
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_comfort_eater_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_comfort_eater_decision_desc
	selection_tooltip = stress_loss_comfort_eater_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = comfort_eater
	}

	is_valid_showing_failures_only = {
		is_available = yes
		short_term_gold >= medium_gold_value
	}

	effect = {
		
		show_as_tooltip = { #The effect is actually applied in the event itself
			remove_short_term_gold = medium_gold_value
		}
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip


		trigger_event = {
			on_action = stress_loss_comfort_eater
		}
	}
	
	ai_potential = {
		has_trait = comfort_eater
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_inappetetic_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_inappetetic_decision_desc
	selection_tooltip = stress_loss_inappetetic_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = inappetetic
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			inappetetic_advance_starvation_effect = yes
		}

		trigger_event = {
			on_action = stress_loss_inappetetic
		}
	}
	
	ai_potential = {
		has_trait = inappetetic
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 50
		}
	}
}

stress_loss_journaller_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_journaller_decision_desc
	selection_tooltip = stress_loss_journaller_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = journaller
	}

	is_valid_showing_failures_only = {
		is_available = yes
		NOT = { has_character_modifier = stress_busy_writing }
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			add_character_modifier = {
				modifier = stress_busy_writing
				years = 1
			}
		}

		trigger_event = {
			on_action = stress_loss_journaller
		}
	}
	
	ai_potential = {
		has_trait = journaller
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 10
		}
	}
}

stress_loss_confider_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	desc = stress_loss_confider_decision_desc
	selection_tooltip = stress_loss_confider_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = confider
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			every_courtier = {
				custom = all_courtiers_except_confidant
				limit = {
					NOT = {
						any_relation = {
							type = friend
							has_relation_flag = {
								target = root
								relation = friend
								flag = has_been_confided_in
							}
						}
					}
				}
				add_opinion = {
					target = root
					modifier = envy_opinion
					opinion = -10
				}
			}
			if = {
				limit = {
					any_relation = {
						type = friend
						has_relation_flag = {
							target = root
							relation = friend
							flag = has_been_confided_in
						}
					}
				}
				random_relation = {
					type = friend
					limit = {
						has_relation_flag = {
							target = root
							relation = friend
							flag = has_been_confided_in
						}
					}
					add_opinion = {
						target = root
						modifier = friendliness_opinion
						opinion = 5
					}
				}
			}
		}

		trigger_event = {
			on_action = stress_loss_confider
		}
	}
	
	ai_potential = {
		has_trait = confider
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 10
		}
	}
}

stress_loss_athletic_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_activity.dds"
	desc = stress_loss_athletic_decision_desc
	selection_tooltip = stress_loss_athletic_decision_tooltip

	ai_check_interval = 36

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = athletic
	}

	is_valid_showing_failures_only = {
		is_available = yes
		NOT = { has_trait = infirm }
		NOT = { has_character_modifier = stress_smelling_of_sweat }
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			add_character_modifier = {
				modifier = stress_smelling_of_sweat
				years = 1
			}
		}

		trigger_event = {
			on_action = stress_loss_athletic
		}
	}
	
	ai_potential = {
		has_trait = athletic
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 100
			stress >= 10
		}
	}
}

hire_travel_leader_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
	
	sort_order = 81

	desc = hire_travel_leader_decision_desc
	selection_tooltip = hire_travel_leader_decision_effect_tooltip

	ai_check_interval = 60

	is_shown = {
		exists = primary_title 
		primary_title.tier >= tier_county
	}

	cooldown = { days = 365 }

	is_valid_showing_failures_only = {
		is_imprisoned = no
	}

	effect = {
		trigger_event = {
			id = travel_events.1010
			days = 14
		}
		custom_tooltip = hire_travel_leader_decision_effect_tooltip
	}
	
	ai_potential = {
		highest_held_title_tier > tier_barony
		is_landed = yes
		gold > low_skill_court_physician_cost
		is_at_war = no
	}

	ai_will_do = {
		base = 100
	}
}
