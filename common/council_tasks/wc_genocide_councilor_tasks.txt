task_purge_population = {
	position = councillor_marshal

	task_type = task_type_county
	county_target = realm
	ai_county_target = realm
	task_progress = task_progress_value
	task_current_value = scope:councillor_liege.marshal_purge_population_current_progress
	task_max_value = marshal_purge_population_threshold
	highlight_own_realm = yes
	restart_on_finish = no

	effect_desc = {
		desc = task_purge_population_effect_desc
		triggered_desc = {
			trigger = {
				scope:councillor_liege = { can_corrupt_trigger = yes }
			}
			desc = task_purge_population_effect_corrupt_desc
		}
		triggered_desc = {
			trigger = { scope:councillor_liege = { government_has_flag = government_dark_frenzy_from_conversions } }
			desc = task_dark_frenzy_gain
		}
		triggered_desc = {
			trigger = {
				scope:councillor_liege = {
					any_vassal = {
						has_vassal_stance = minority
					}
				}
			}
			desc = minority_disapproves_genocide_tooltip
		}

		desc = {
			desc = council_task_possible_side_effects
			# Corrupt
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = yes
					}
					scope:councillor ?= {
						martial < high_skill_rating
					}
				}
				desc = council_task_cursed_lands
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = yes
					}
					scope:councillor ?= {
						martial < high_skill_rating
					}
				}
				desc = council_task_marauders
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = yes

						cp:councillor_court_chaplain ?= {
							learning > mediocre_skill_rating
						}
					}
					scope:councillor ?= {
						martial >= high_skill_rating
					}
				}
				desc = council_task_devotion_demonstration
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = yes
					}
					scope:councillor ?= {
						martial >= high_skill_rating
					}
				}
				desc = council_task_harness_energy
			}

			# Cleanse
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial < high_skill_rating
					}
					scope:county ?= {
						has_county_modifier = ongoing_cleansing_modifier
					}
				}
				desc = council_task_champion_challenge
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial < high_skill_rating
					}
					scope:county ?= {
						has_county_modifier = ongoing_cleansing_modifier
					}
				}
				desc = council_task_wild_energy
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial >= high_skill_rating
					}
					scope:county ?= {
						has_county_modifier = ongoing_cleansing_modifier
					}
				}
				desc = council_task_army_spawn
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial >= high_skill_rating
					}
					scope:county ?= {
						has_county_modifier = ongoing_cleansing_modifier
					}
				}
				desc = council_task_large_raid
			}

			# Purge
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial < high_skill_rating
					}
					OR = {
						NOT = {
							exists = scope:county
						}
						scope:county ?= {
							NOT = {
								has_county_modifier = ongoing_cleansing_modifier
							}
						}
					}
				}
				desc = council_task_neighboring_unrest
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial < high_skill_rating
					}
					OR = {
						NOT = {
							exists = scope:county
						}
						scope:county ?= {
							NOT = {
								has_county_modifier = ongoing_cleansing_modifier
							}
						}
					}
				}
				desc = council_task_emigration
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial >= high_skill_rating
					}
					OR = {
						NOT = {
							exists = scope:county
						}
						scope:county ?= {
							NOT = {
								has_county_modifier = ongoing_cleansing_modifier
							}
						}
					}
				}
				desc = council_task_friendly_champion
			}
			triggered_desc = {
				trigger = {
					scope:councillor_liege ?= {
						can_corrupt_trigger = no
					}
					scope:councillor ?= {
						martial >= high_skill_rating
					}
					OR = {
						NOT = {
							exists = scope:county
						}
						scope:county ?= {
							NOT = {
								has_county_modifier = ongoing_cleansing_modifier
							}
						}
					}
				}
				desc = council_task_found_supplies
			}
		}
	}

	progress = {
		value = 0
		add = {
			value = marshal_purge_population_base_total
			desc = INCREASE_CONTROL_BASE
		}

		add = {
			value = marshal_purge_population_skill_bonus
			desc = SCALED_COUNCILLOR_MARTIAL_VALUE
		}

		# Relation Bonuses/Penalties
		if = { # Friend
			limit = {
				scope:councillor_liege = {
					has_relation_friend = scope:councillor
					NOT = { has_relation_best_friend = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_friend_bonus
				desc = COUNCILLOR_IS_YOUR_FRIEND
			}
		}
		if = { # Best Friend
			limit = {
				scope:councillor_liege = {
					has_relation_best_friend = scope:councillor
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_best_friend_bonus
				desc = COUNCILLOR_IS_YOUR_BEST_FRIEND
			}
		}
		if = { # Rival
			limit = {
				scope:councillor_liege = {
					has_relation_rival = scope:councillor
					NOT = { has_relation_nemesis = scope:councillor }
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_rival_bonus
				desc = COUNCILLOR_IS_YOUR_RIVAL
			}
		}
		if = { # Nemesis
			limit = {
				scope:councillor_liege = {
					has_relation_nemesis = scope:councillor
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_nemesis_bonus
				desc = COUNCILLOR_IS_YOUR_NEMESIS
			}
		}

		#Partially completed bonuses
		if = { # Same culture
			limit = {
				scope:county = {
					culture = scope:councillor_liege.culture
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_same_culture_bonus
				desc = COUNTY_IS_YOUR_CULTURE
			}
		}
		if = { # Same faith
			limit = {
				scope:county = {
					faith = scope:councillor_liege.faith

					NOT = {
						has_variable = false_convert
					}
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_same_faith_bonus
				desc = COUNTY_IS_YOUR_FAITH
			}
		}
		if = { # Has corruption modifier
			limit = {
				scope:councillor_liege = {
					can_corrupt_trigger = yes
				}
				scope:county = {
					has_beneficial_corruption_this_province_trigger = yes
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_already_corrupted_bonus
				DESC = COUNTY_ALREADY_CORRUPTED
			}
		}

		# bonus for army strength when armies are unraised
		if = {
			limit = {
				scope:councillor_liege = { has_raised_armies = no }
			}

			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_unraised_army_bonus
				desc = GENOCIDE_ARMY_STRENGTH_BONUS
			}
		}

		# Sacrificed cleanse speed bonus
		if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = sacrificed_cleansing_targets_modifier
				}
			}

			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_sacrifice_bonus
				desc = GENOCIDE_SACRIFICE_BONUS
			}
		}

		# Local champion purge speed bonus
		if = {
			limit = {
				scope:councillor_liege = {
					has_character_modifier = genocide_local_champion_modifier
				}
			}

			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_champion_bonus
				desc = GENOCIDE_CHAMPION_BONUS
			}
		}

		# Fervor bonus
		if = {
			limit = {
				scope:county = {
					allow_genocide_this_province_religion_trigger = { CHARACTER = scope:councillor_liege }
				}
			}
			add = {
				value = scope:councillor.marshal_purge_population_monthly_increase_fervor_penalty
				DESC = MARSHAL_GENOCIDE_FERVOR_IMPACT
			}
		}

		# Development reduces the speed. Should be the last non-multiply modifier applied to avoid negative values
		if = {
			limit = {
				exists = scope:county
				scope:county = {
					development_level > 0
				}
			}
			add = {
				value = scope:county.marshal_purge_population_monthly_increase_development_penalty
				desc = STEWARD_PROMOTE_CULTURE_DEVELOPMENT_PENALTY
			}
		}

		if = {
			limit = {
				exists = scope:county
				scope:county = {
					OR = {
						allow_genocide_this_province_culture_trigger = { CHARACTER = scope:councillor_liege }
						allow_genocide_this_province_religion_trigger = { CHARACTER = scope:councillor_liege }
					}
					NOT = {
						marshal_purge_population_game_rule_mult = 1
					}
				}
			}
			multiply = {
				value = marshal_purge_population_game_rule_mult
				desc = FROM_CONVERSION_SPEED_GAME_RULE
			}
		}
	}

	potential_county = {
		scope:county = {
			trigger_if = {
				limit = {
					NOT = {
						county_controller = holder
					}
				}

				county_controller = {
					OR = {
						is_liege_or_above_of = scope:county.holder
						is_vassal_or_below_of = scope:county.holder
					}
				}
			}
			trigger_if = {
				limit = {
					scope:councillor_liege = {
						can_corrupt_trigger = yes
					}
				}

				allow_corrupt_this_province_trigger = yes
			}
			trigger_else_if = {
				limit = {
					allow_cleanse_this_province_trigger = yes
				}
				always = yes
			}
			trigger_else = {
				OR = {
					allow_genocide_this_province_trigger = yes
				}
			}
		}
	}

	on_start_task_county = {
		scope:county = {
			if = {
				limit = {
					allow_corrupt_this_province_trigger = yes
				}

				add_county_modifier = ongoing_corruption_modifier
			}
			else_if = {
				limit = {
					allow_cleanse_this_province_trigger = yes
				}

				add_county_modifier = ongoing_cleansing_modifier
			}
			else = {
				add_county_modifier = ongoing_genocide_modifier
			}
		}
	}

	on_cancel_task_county = {
		scope:county = {
			remove_genocide_modifiers = yes
		}
	}

	on_finish_task_county = {
		scope:county = {
			set_variable = {
				name = finished_genocide
			}
			if = {
				limit = {
					has_county_modifier = ongoing_corruption_modifier
				}

				scope:councillor_liege = {
					trigger_event = genocide_task.2001
				}
			}
			else_if = {
				limit = {
					has_county_modifier = ongoing_cleansing_modifier
				}

				scope:councillor_liege = {
					trigger_event = genocide_task.2101
				}
			}
			else = {
				scope:councillor_liege = {
					trigger_event = genocide_task.2201
				}
			}
		}

		scope:councillor = {
			start_default_task = yes
		}
	}

	on_monthly_county = {
		if = {
			limit = {
				NOT = {
					scope:county ?= {
						has_variable = purge_population_current_progress
					}
				}
			}

			scope:county = {
				set_variable = {
					name = purge_population_current_progress
					value = 0
				}
			}
		}

		scope:county = {
			change_variable = {
				name = purge_population_current_progress
				add = marshal_purge_population_total
			}
		}


		scope:councillor_liege = { # monthly_on_action doesn't work
			trigger_event = {
				on_action = task_purge_population_side_effects
			}
		}
	}

	ai_target_score = {
		value = 20

		if = {
			limit = {
				scope:councillor_liege = {
					can_corrupt_trigger = yes
				}
				scope:county = {
					has_beneficial_corruption_this_province_trigger = no
				}
			}

			add = 100
		}

		if = {
			limit = { # Only factor in opinion if genocide, not cleanse or corrupt
				scope:councillor_liege = {
					can_corrupt_trigger = no
				}
				scope:county = {
					allow_cleanse_this_province_trigger = no
				}
			}
			scope:councillor_liege = { # Only genocide if bad opinion of holder
				add = {
					value = "opinion(scope:county.holder)"
					multiply = -1
				}
			}
		}

		if = {
			limit = { # AI shouldn't genocide parent/child culture
				scope:county = {
					allow_genocide_this_province_parent_culture_trigger = no
				}
			}

			multiply = 0
		}
	}

	ai_will_do = {
		value = 0

		if = {
			limit = {
				scope:councillor = {
					is_performing_council_task = task_purge_population
				}
			}
			add = 10000 # Always keep going if this is already chosen
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					can_corrupt_trigger = yes
				}
			}
			add = 1000
		}
		else_if = {
			limit = {
				scope:councillor_liege = {
					any_sub_realm_county = {
						allow_cleanse_this_province_trigger = yes
					}
				}
			}
			add = 1000
		}
		else = {
			add = {
				value = ai_zeal
			}
			add = {
				value = ai_greed
			}
			add = {
				value = ai_compassion
				multiply = -1
			}
			add = {
				value = ai_honor
				multiply = -1
			}
		}

		if = {
			# Don't do this too often
			limit = {
				scope:councillor_liege = {
					has_character_flag = no_ai_genocide
				}
			}
			multiply = 0
		}
	}

}
# task_relocate_population = {
#
# }