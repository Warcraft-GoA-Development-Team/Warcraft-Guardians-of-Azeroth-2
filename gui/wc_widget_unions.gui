widget = {
	name = "wc_widget_unions"
	parentanchor = top|right
	layer = windows_layer
	# So it's not possible to click county behind the interface
	alwaystransparent = no
	filter_mouse = all

	#using = Window_Size_MainTab
	size = { 655 100% }

	visible = "[GetVariableSystem.HasValue( 'right_window_open', 'pol_factions' )]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
		on_start = "[GetVariableSystem.Set( 'right_window_open', 'pol_factions' )]"

	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'none' ) )]"
		on_start = "[GetVariableSystem.Clear( 'renaming_open' )]"

		# To prevent clearing variables when you open the Decisions tab after the Unions tab
		on_start = "[GetScriptedGui('clear_gui_union_variables').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
	}
	
	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }

		using = Window_Background

		widget = {
			size = { 100% 100% }

			# using = Window_Decoration_Thin

			vbox = {
				using = Window_Margins
				
				

				scrollbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					visible = "[And(GetPlayer.MakeScope.Var('gui_this_union_name').IsSet, Not(EqualTo_string(GetPlayer.MakeScope.Var('gui_this_union_name').GetFlagName, 'empty_union')))]"
					datacontext = "[GetPlayer.MakeScope.Var('gui_union')]"

					scrollbar_vertical = {
						using = Scrollbar_Vertical_White
					}
					blockoverride "scrollbox_background_fade"
					{
					}
					blockoverride "scrollbox_background"
					{
					}
					blockoverride "scrollbox_content"
					{
						header_with_picture = {
							layoutpolicy_horizontal = expanding
							size = { 0 120 }
							blockoverride "header_text"
							{
								text = "UNIONS_WINDOW_TITLE"
							}
							
							blockoverride "illustration_texture" {
								texture = "gfx/interface/illustrations/window_headers/header_pol_factions.dds"
								alpha = 0.3
								modify_texture = {
									texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
									blend_mode = alphamultiply
								}
							}
							
							blockoverride "button_close"
							{
								onclick = "[GetVariableSystem.Clear( 'right_window_open' )]"
							}
						}
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin_top = 10
							spacing = 15

							background = {
								texture = "gfx/interface/illustrations/event_scenes/wc_horde_vs_human.dds"
								margin = { -5 0 }
								fittype = end
								alpha = 0.4
								framesize = { 1200 848 }

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
									blend_mode = alphamultiply
								}
							}
							
							# LEADER
							vbox = {
								layoutpolicy_horizontal = expanding
								widget = {
									size = { 550 28 }
									parentanchor = left
									dropdown_menu_standard = {
										parentanchor = left
										blockoverride "dropdown_properties"
										{
											datamodel = "[GetGlobalList('all_unions')]"
											onselectionchanged = "[GetScriptedGui('save_union_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('union_flag',MakeScopeFlag(GetPlayer.MakeScope.Var('pre_chosen_union').GetFlagName)).End)]"
										}
										blockoverride "dropdown_size"
										{
											size = { 200 32 }
										}
										blockoverride "dropdown_list_maxsize"
										{
											maximumsize = { 192 250 }
										}
										blockoverride "dropdown_active_item_properties"
										{
											text = "choose_a_union_gui_button"
											default_format = "#medium;color:{0.5,0.5,0.5,1}"
											color = { 0.098 0.153 0.204 1 }
										}
										blockoverride "dropdown_item_properties"
										{
											text = "[Localize(Concatenate('union_',Concatenate(Scope.Var('this_union').GetFlagName, '_name')))]"
											onmousehierarchyenter = "[GetScriptedGui('preselected_union_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('chosen_union', MakeScopeFlag(Scope.Var('this_union').GetFlagName)).End)]"
										}
										blockoverride "dropdown_list_properties"
										{
											#onmousehierarchyleave = ""
										}
									}
									text_label_center = {
										parentanchor = hcenter
										text = "CV_LEADER"
									}
								}
								
								widget = {
									size = { 550 120 }
									
									widget = {
										visible = "[GetPlayer.MakeScope.Var('gui_this_union_name').IsSet]"
										size = { 110 110 }
										datacontext = "[GetPlayer]"
										icon = {
											visible = "[EqualTo_string(Character.MakeScope.Var('gui_this_union_name').GetFlagName, 'alliance')]"
											position = { 30 5 }
											size = { 110 110 }
											texture = "gfx/interface/icons/decisions/alliance_union.dds"
											alpha = 0.6
										}
										icon = {
											visible = "[EqualTo_string(Character.MakeScope.Var('gui_this_union_name').GetFlagName, 'horde')]"
											position = { 30 5 }
											size = { 110 110 }
											texture = "gfx/interface/icons/decisions/horde_union.dds"
											alpha = 0.6
										}
										icon = {
											visible = "[EqualTo_string(Character.MakeScope.Var('gui_this_union_name').GetFlagName, 'illidari_forces')]"
											position = { 30 5 }
											size = { 110 110 }
											texture = "gfx/interface/icons/decisions/illidari_union.dds"
											alpha = 0.6
										}
										icon = {
											visible = "[EqualTo_string(Character.MakeScope.Var('gui_this_union_name').GetFlagName, 'dragon_forces')]"
											position = { 30 5 }
											size = { 110 110 }
											texture = "gfx/interface/icons/decisions/dragonflights_union.dds"
											alpha = 0.6
										}
										icon = {
											visible = "[EqualTo_string(Character.MakeScope.Var('gui_this_union_name').GetFlagName, 'scourge_forces')]"
											position = { 30 5 }
											size = { 110 110 }
											texture = "gfx/interface/icons/decisions/scourge_union.dds"
											alpha = 0.6
										}
										icon = {
											visible = "[EqualTo_string(Character.MakeScope.Var('gui_this_union_name').GetFlagName, 'axis_of_awful')]"
											position = { 30 5 }
											size = { 110 110 }
											texture = "gfx/interface/icons/decisions/axisawful_union.dds"
											alpha = 0.6
										}
										icon = {
											visible = "[EqualTo_string(Character.MakeScope.Var('gui_this_union_name').GetFlagName, 'custom')]"
											position = { 30 5 }
											size = { 110 110 }
											texture = "gfx/interface/icons/decisions/custom_union.dds"
											alpha = 0.6
										}
									}
									portrait_head = {
										datacontext = "[GetPlayer.MakeScope.Var('gui_this_union_leader').GetCharacter]"
										parentanchor = hcenter
										blockoverride "portrait_button"
										{
											using = tooltip_ne
										}
										blockoverride "glow_visible"
										{
											visible = no
										}
									}
								}
								text_label_center = {
									text = "PF_HEIR"
								}
								scrollarea = {
									background = {
										texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
										spriteType = Corneredtiled
										spriteborder = { 5 5 }
										texture_density = 2
										margin_right = 5
									}
									layoutpolicy_horizontal = expanding
									minimumsize = { 30 160 }
									scrollbarpolicy_vertical = always_off
									scrollbarpolicy_horizontal = as_needed
									scrollbar_horizontal = {
										using = Scrollbar_Horizontal
									}
									scrollwidget = {
										hbox = {
											name = "people_grid"
											datamodel = "[GetPlayer.MakeScope.GetList('gui_candidates')]"
											#spacing = 10
											item = {
												flowcontainer = {
													direction = vertical
													datacontext = "[Scope.GetCharacter]"
													text_single = {
														visible = "[Character.IsAlive]"
														parentanchor = hcenter
														max_width = 80
														text = "gui_candidate_score_value"
														tooltip = "[Scope.GetScriptValueDesc( 'gui_union_leader_condidate_score' )|1]"
													}
													portrait_head_small = {
														blockoverride "portrait_button"
														{
															using = tooltip_ne
														}
														blockoverride "glow_visible"
														{
															visible = no
														}
														blockoverride "coa"
														{
														}
														blockoverride "opinion_box"
														{
														}
													}
													flowcontainer = {
														visible = "[And(Character.IsAlive, And(GetPlayer.MakeScope.Var('this_union').IsSet, EqualTo_string(GetPlayer.MakeScope.Var('gui_this_union_name').GetFlagName, GetPlayer.MakeScope.Var('this_union').GetFlagName)))]"
														button_standard = {
															size = { 42 20 }
															datacontext = "[GetScriptedGui('invest_fund_prestige')]"
															enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('my_candidate', Character.MakeScope).End)]"
															onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('my_candidate', Character.MakeScope).End)]"
															raw_text = "@prestige_icon!"
															tooltip = "union_fund_prestige"
															using = tooltip_se
														}
														button_standard = {
															size = { 42 20 }
															datacontext = "[GetScriptedGui('invest_fund_gold')]"
															enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('my_candidate', Character.MakeScope).End)]"
															onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('my_candidate', Character.MakeScope).End)]"
															raw_text = "@gold_icon!"
															tooltip = "union_fund_gold"
															using = tooltip_se
														}
													}
												}
											}
										}
									}
								}
							}
							widget = {
								size = { 500 40 }

								progressbar_standard_transparent = {#LessThanOrEqualTo_CFixedPoint
									name = "centr_progressbar_left"
									visible = "[LessThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)0')]"
									alwaystransparent = yes
									parentanchor = left
									position = { 3 4 }
									size = { 50% 32 }
									min = 0
									max = 100
									value = "[Multiply_float( FixedPointToFloat( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue ), '(float)-1')]"
									direction = horizontal
									progresstexture = "gfx/interface/progressbars/progress_standard_te.dds"
									noprogresstexture = "gfx/interface/progressbars/progress_overlay.dds"
									spriteborder = { 6 3 }
									mirror = horizontal
								}
								progressbar_standard_transparent = {#GreaterThan_CFixedPoint
									name = "centr_progressbar_right"
									visible = "[GreaterThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)0')]"
									alwaystransparent = yes
									parentanchor = right
									position = { -3 4 }
									size = { 50% 32 }
									min = 0
									max = 100
									value = "[FixedPointToFloat( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue )]"
									direction = horizontal
									progresstexture = "gfx/interface/progressbars/progress_standard_te.dds"
									noprogresstexture = "gfx/interface/progressbars/progress_overlay.dds"
									spriteborder = { 6 3 }
								}
								widget = {
									size = { 100% 100% }
									icon = {
										size = { 100% 100% }
										texture = "gfx/interface/progressbars/centr_bar_frame.dds"
									}
									text_single = {
										text = "union_decentralization"
										parentanchor = left|bottom
										position = { 0 10 }
										fontsize_min = 3
										using = Font_Type_Standard
									}
									text_single = {
										raw_text = "centralization_score_per_year"
										parentanchor = hcenter|bottom
										position = { 0 10 }
										fontsize_min = 3
										using = Font_Type_Standard
										tooltip = "[GetPlayer.MakeScope.Var('gui_this_union_leader').GetScriptValueDesc( 'centralization_influencce_value' )|1]"
									}
									text_single = {
										text = "union_centralization"
										parentanchor = right|bottom
										position = { 0 10 }
										fontsize_min = 3
										using = Font_Type_Standard
									}
								}
								hbox = {
									position = { 0 -9 }
									parentanchor = hcenter
									spacing = 42
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_100_neg_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[LessThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-100')]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_75_neg_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[And(GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-100'), LessThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-75'))]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_50_neg_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[And(GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-75'), LessThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-50'))]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_25_neg_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[And(GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-50'), LessThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-25'))]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_0_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[And(GreaterThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)-25'), LessThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)25'))]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_25_pos_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[And(GreaterThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)25'), LessThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)50'))]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_50_pos_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[And(GreaterThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)50'), LessThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)75'))]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_75_pos_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[And(GreaterThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)75'), LessThan_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)100'))]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
									widget = {
										size = { 19 45 }
										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/progressbars/centr_bulb1.dds"
											tooltip = "union_centr_100_pos_tooltip"
											using = tooltip_sw
										}
										icon = {
											visible = "[GreaterThanOrEqualTo_CFixedPoint( GetPlayer.MakeScope.Var('gui_union').Var('centralization_value').GetValue, '(CFixedPoint)100')]"
											size = { 19 45 }
											texture = "gfx/interface/progressbars/centr_bulb2.dds"
										}
									}
								}
							}

							# DESC
							vbox = {
								layoutpolicy_horizontal = expanding
								spacing = 10

								background = {
									using = Background_Area_With_Header
								}
								### Union title
								hbox = {
									spacing = 5
									ignoreinvisible = no
									#margin_left = 34
									margin_top = 5

									text_single = {
										text = "PF_UNION_TITLE"
									}
									# If you want the renaming back, this. You should also uncomment some custom locs like GetAllianceName, and edit other locs a little bit (check custom union for the example)
									#button_edit_text = {
									#	datacontext = "[GetScriptedGui('open_union_rename')]"
									#	visible = "[ScriptedGui.IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('union_flag', MakeScopeFlag(GetPlayer.MakeScope.Var('gui_this_union_name').GetFlagName)).End)]"
									#	enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('union_flag', MakeScopeFlag(GetPlayer.MakeScope.Var('gui_this_union_name').GetFlagName)).End)]"
									#	onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('union_flag', MakeScopeFlag(GetPlayer.MakeScope.Var('gui_this_union_name').GetFlagName)).End)]"
									#	tooltip = "PF_EDIT_UNION_NAME"
									#}
								}

								### Union desc
								widget = {
									size = { 500 125 } # Increase this if you make more than 5 features for a faction

									text_single = {
										position = { 0 0 }
										text = "UN_UNION_FEATURES"
									}
									text_single = {
										position = { 0 25 }
										max_width = 490
										multiline = yes
										text = "[Localize(Concatenate('union_',Concatenate(GetPlayer.MakeScope.Var('gui_this_union_name').GetFlagName, '_features')))]"
									}
								}
								text_multi = {
									margin = { 0 10 }
									text = "PF_UNION_DESC"
									autoresize = yes
									max_width = 500
									default_format = "#weak"
									align = center
								}
							}

							# SOLDIERS
							text_label_center = {
								text = "CV_UNION_SOLDIERS"
							}
							
							# Alliance decisions
							hbox = {
								spacing = 10
								button_decision_entry_this_union = {
									name = "join_alliance"
									blockoverride "decision_key" {
										datacontext = "[GetDecisionWithKey('join_universal_union')]"
									}
								}
								
								button_decision_entry_this_union = {
									name = "leave_alliance"
									visible = "[And(GetPlayer.MakeScope.Var('this_union').IsSet, EqualTo_string(GetPlayer.MakeScope.Var('gui_this_union_name').GetFlagName, GetPlayer.MakeScope.Var('this_union').GetFlagName))]"
									blockoverride "decision_key" {
										datacontext = "[GetDecisionWithKey('leave_universal_union')]"
									}
								}
							}
							
							# MEMBER LIST
							vbox_character_row_item = {
								name = "union_members"
								spacing = 5
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding
								
								blockoverride "portrait_datamodel" {
									datamodel = "[GetPlayer.MakeScope.Var('gui_union').GetList('union_members')]"
								}
								
								blockoverride "gridbox" {
									fixedgridbox = {
										flipdirection = yes
										addcolumn = 85
										addrow = 90
										
										# Warcraft
										block "horizontal_slots"
										{
											datamodel_wrap = 7
										}

										block "gridbox_slots"
										{
											maxverticalslots = 1
										}

										block "portrait_datamodel" {
											datamodel = "[CharacterWindow.GetParents]"
										}

										item = {
											container = {
												datacontext = "[Scope.GetCharacter]"
												
												portrait_head_small = {
													blockoverride "portrait_button"
													{
														using = tooltip_ne
													}
													blockoverride "glow_visible"
													{
														visible = no
													}
												}
											}
										}
									}
								}
								
								blockoverride "gridbox_slots" {}
								blockoverride "horizontal_slots" {
									datamodel_wrap = 6
								}

								blockoverride "header_text"
								{
									text = "CV_MEMBERS"
								}

								blockoverride "expand_button" {}
							}
						}
					}
				}
			}
		}
	}
}