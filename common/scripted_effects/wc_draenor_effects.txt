add_dark_rift_effect = {
	title:b_dark_portal.title_province = {
		add_building = dark_portal_01
	}
}
destroy_dark_portal_effect = {
	save_scope_as = portal_destroyer
	
	add_to_global_variable_list = { name = available_unique_events target = flag:reopens_dark_portal }
	
	#add_prestige = massive_prestige_gain
	add_dark_rift_effect = yes
	
	# Sends notification
	every_player = {
		limit = { get_news_from_region_trigger = { REGION = world_eastern_kingdoms } }
		trigger_event = WCDRA.5
	}
}
reopen_dark_portal_effect = {
	remove_list_global_variable = { name = available_unique_events target = flag:reopens_dark_portal }
	
	title:c_dark_portal.holder.top_liege = { save_scope_as = portal_reopener }
	
	every_player = {
		limit = { get_news_from_region_trigger = { REGION = world_eastern_kingdoms } }
		trigger_event = {
			id = WCDRA.25
			days = 15
		}
	}
}

join_draenor_expedition_effect = {
	hidden_effect = { set_location = title:c_dark_portal.title_province }
	custom_description = {
		text = join_draenor_expedition_tooltip
		
		object = scope:activity
		
		#scope:activity = {
		#	invite_character_to_activity = prev
		#	accept_invitation_for_character = prev
		#}
		add_to_activity_without_travel = scope:activity
	}
}
# Used to simulate Draenor battles
beyond_dark_portal_find_leader_effect = {
	scope:activity = {
		clear_draenor_lists_effect = yes
	}
}
# Make all participants to roll
draenor_group_battle_roll_effect = {
	# There may be many participants so show only your chances
	show_as_tooltip = {
		draenor_solo_battle_roll_effect = { RISK = $RISK$ }
	}
	hidden_effect = {
		scope:activity = {
			every_attending_character = {
				limit = { is_alive = yes }
				draenor_solo_battle_roll_effect = { RISK = $RISK$ }
			}
		}
	}
}
# Personal roll for chances
draenor_solo_battle_roll_effect = {
	
	# Bad things chances
	random_list = {
		1 = {
			modifier = { add = nothing_chance_value }
			nothing_chance_modifiers = yes
			
			# Risk
			modifier = {
				factor = {
					value = 1
					divide = $RISK$
				}
			}
			# Martial of Leader
			modifier = {
				exists = scope:host
				factor = {
					value = 0
					scope:host = { add = martial_hypothetical_impact_value }
				}
			}
			scope:activity = { activity_special_type_progression_more_tiny = yes } #var:activity_special_type_progression
		}
		1 = {
			modifier = { add = wounded_chance_value }
			
			trigger = { can_be_wounded_trigger = yes }
			wounded_chance_modifiers = yes
			
			increase_wounds_effect = { REASON = fight }
			scope:activity = { add_to_variable_list = { name = draenor_wounded target = prev } activity_special_type_progression_super_tiny = yes }
		}
		1 = {
			modifier = { add = maimed_chance_value }
			
			trigger = { can_be_maimed_trigger = yes }
			maimed_chance_modifiers = yes
			
			maimed_in_battle_effect = yes
			scope:activity = { add_to_variable_list = { name = draenor_wounded target = prev } }
		}
		1 = {
			modifier = { add = killed_chance_value }
			
			killed_chance_modifiers = yes
			
			override_death_effect = { death_reason = death_battle }
			scope:activity = { add_to_variable_list = { name = draenor_killed target = prev } }
		}
	}
}
clear_draenor_lists_effect = {
	clear_variable_list = draenor_wounded
	clear_variable_list = draenor_killed
}
create_outland_effect = {
	if = {
		limit = { dark_portal_is_opened_trigger = yes }
		add_dark_rift_effect = yes
	}
	title:b_dark_portal.title_province = {
		add_province_modifier = { modifier = closed_from_another_side years = 20 }
	}
	
	# Ner'zhul caught to become the Lich King
	title:b_dark_portal = {
		trigger_event = { id = WCCSC.1 days = 7 }
	}
	
	scope:activity = {
		every_in_list = {
			variable = summoned_rulers
			
			add_to_list = outland_related
			
			every_close_family_member = {
				add_to_list = outland_related
			}
		}
	}
	every_player = {
		limit = { get_news_from_region_trigger = { REGION = world_eastern_kingdoms } }
		add_to_list = outland_related
	}
	
	every_in_list = {
		list = outland_related
		limit = {
			is_ai = no
		}
		trigger_event = WCDRA.1040
	}
}
add_reward_prestige_bdp_effect = {
	scope:activity = {
		if = {
			limit = {
				var:activity_special_type_progression >= 75
			}
			prev = { add_prestige = 5000 }
		}
		else_if = {
			limit = { 
				var:activity_special_type_progression < 75
				var:activity_special_type_progression >= 50
			}
			prev = { add_prestige = 3000 }
		}
		else_if = {
			limit = { 
				var:activity_special_type_progression < 50
				var:activity_special_type_progression >= 25
			}
			prev = { add_prestige = 1500 }
		}
		else = {
			prev = { add_prestige = 750 }
		}
	}
}

add_reward_dynasty_bdp_effect = {
	if = {
		limit = {
			var:activity_special_type_progression >= 75
		}
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 3000
		}
	}
	else_if = {
		limit = { 
			var:activity_special_type_progression < 75
			var:activity_special_type_progression >= 50
		}
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 1500
		}
	}
	else_if = {
		limit = { 
			var:activity_special_type_progression < 50
			var:activity_special_type_progression >= 25
		}
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 1000
		}
	}
	else = {
		every_in_list = {
			variable = dynasties_for_renown_reward
			add_dynasty_prestige = 500
		}
	}
}