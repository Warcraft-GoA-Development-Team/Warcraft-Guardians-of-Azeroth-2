make_an_heir_agp = {
	create_character = {
		employer = root
		template = agp_heir_character
		save_scope_as = newchar
	}
	general_heir_agp_effects = yes
}

make_an_heir_selected_one_agp = {
	var:heir_agp = {
		save_scope_as = newchar
	}
	#if the selected heir is homeless, we create a new house for him
	if = {
		limit = {
			scope:newchar = { is_lowborn = yes }
		}
		scope:newchar = {
			create_character = {
				employer = root
				age = 50
				gender = male
				random_traits = yes
				save_scope_as = faza
				dynasty = generate
			}
			scope:faza = {
				# Warcraft
				trigger_race_giving_no_gene_effect = yes			#Assigns race trait

				set_age = { value = scope:newchar.age add = 20 }
			}
			scope:faza = { death = natural }
			set_father = scope:faza
			set_house = scope:faza.house
		}
	}
	general_heir_agp_effects = yes
}

make_an_heir_hof_agp = {
	if = {
		limit = { exists = primary_title.current_heir }
		primary_title.current_heir = {
			save_scope_as = newchar
		}
		#if the selected heir is homeless, we create a new house for him
		scope:newchar = {
			if = {
				limit = {
					is_lowborn = yes
				}
				create_character = {
					employer = root
					age = 50
					gender = male
					random_traits = yes
					save_scope_as = faza
					dynasty = generate
				}
				scope:faza = {
					# Warcraft
					trigger_race_giving_no_gene_effect = yes			#Assigns race trait

					set_age = { value = scope:newchar.age add = 20 }
				}
				scope:faza = { death = natural }
				set_father = scope:faza
				set_house = scope:faza.house
			}
			if = {
				limit = { is_landed = yes }
				every_held_title = {
					limit = { tier >= tier_county }
					save_scope_value_as = {
						name = heir_titles_exist
						value = yes
					}
					scope:newchar = {
						add_to_variable_list = {
							name = heir_titles
							target = prev
						}
					}
				}
				every_vassal = {
					scope:newchar = {
						add_to_variable_list = {
							name = heir_vassals
							target = prev
						}
					}
				}
				if = {
					limit = { exists = player_heir }
					player_heir = { save_scope_as = new_ruler_of_heir_titles }
					set_variable = {
						name = new_ruler_of_heir_titles
						value = scope:new_ruler_of_heir_titles
						days = 5
					}
				}
				else_if = {
					limit = {
						root = {
							any_child = {
								is_ruler = no
							}
							NOT = {
								any_child = {
									is_ruler = yes
								}
							}
						}
					}
					root = {
						random_child = {
							limit = { is_ruler = no }
							save_scope_as = new_ruler_of_heir_titles
						}
						set_variable = {
							name = new_ruler_of_heir_titles
							value = scope:new_ruler_of_heir_titles
							days = 5
						}
					}
				}
			}
		}
	}
	else = {
		create_character = {
			employer = root
			template = agp_heir_character
			save_scope_as = newchar
		}
	}
	general_heir_agp_effects = yes
}

general_heir_agp_effects = {
	scope:newchar = {
		house = { save_scope_as = house_of_newchar }
		add_character_flag = { flag = agp_inheritance days = 5 }
	}

	#give the house to the that person so that the house is not deleted from the database
	create_character = {
		employer = root
		age = { 62 98 }
		gender = male
		random_traits = yes
		save_scope_as = char
		dynasty = generate
	}
	scope:char = { set_house = scope:house_of_newchar }

	#change the house for our heir so that in the origins tab everything is shown normal
	scope:newchar = {
		set_variable = {
			name = useless_person
			value = scope:char
			days = 5
		}
		set_variable = {
			name = house_of_newchar
			value = scope:house_of_newchar
			days = 5
		}
		set_variable = {
			name = agp_main_title
			value = prev.primary_title
			days = 5
		}
		
		set_house = root.house
		hidden_effect = {
			add_prestige = { 300 600 }
			add_piety = { 200 400 }
		}
	}

	#Save our titles to list, because i couldnt make it work even with primogeniture
	every_held_title = {
		scope:newchar = {
			add_to_variable_list = {
				name = root_titles
				target = prev
			}
		}
	}

	#save our government type so that the successor will be ok
	if = {
		limit = {
			has_government = republic_government
		}
		scope:newchar = { add_character_flag = { flag = temp_rep_gov days = 3 } }
	}
	else_if = {
		limit = {
			has_government = theocracy_government
		}
		scope:newchar = { add_character_flag = { flag = temp_theoc_gov days = 3 } }
	}

	#save the inheritance type so that the successor will be ok
	if = {
		limit = {
			has_realm_law = city_succession_law
		}
		scope:newchar = { add_character_flag = { flag = temp_law_city days = 3 } }
		
	}
	else_if = {
		limit = {
			has_realm_law = bishop_theocratic_succession_law
		}
		scope:newchar = { add_character_flag = { flag = temp_law_bish days = 3 } }
	}

	#make inheritance this way so wen can pass gold, maa and a make appearance of the death window
	if = {
		limit = {
			faith = {
				religious_head = root
				has_doctrine = doctrine_spiritual_head
				has_doctrine = doctrine_theocracy_temporal
			}
		}
		faith = {
			every_faith_ruler = {
				limit = {
					has_government = theocracy_government
				}
				faith = { add_to_variable_list = { name = theocrat_rulers target = prev } }
			}
		}
		faith = {
			scope:newchar = { set_variable = { name = that_faith value = prev days = 5 } }
			remove_doctrine = doctrine_theocracy_temporal
			add_doctrine = doctrine_theocracy_lay_clergy
			remove_doctrine = doctrine_spiritual_head
			add_doctrine = doctrine_no_head
		}
	}
	
	change_government = feudal_government
	add_realm_law_skip_effects = single_heir_succession_law
	set_designated_heir = scope:newchar

	#return the government, the heir returns to the dynasty, remove the useless person in on action
}
onaction_returning_how_it_should_be_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_variable = that_faith
			}
			var:that_faith = {
				remove_doctrine = doctrine_theocracy_lay_clergy
				add_doctrine = doctrine_theocracy_temporal
				remove_doctrine = doctrine_no_head
				add_doctrine = doctrine_spiritual_head
		
				every_in_list = {
					variable = theocrat_rulers
					if = {
						limit = {
							is_alive = yes
							is_ruler = yes
						}
						change_government = theocracy_government
					}
				}
				clear_variable_list = theocrat_rulers
			}
		}

		# This doesnt work for tier-duchy and lower levels............. so i do it again day later
		if = {
			limit = {
				has_character_flag = temp_rep_gov
			}
			change_government = republic_government
		}
		else_if = {
			limit = {
				has_character_flag = temp_theoc_gov
			}
			change_government = theocracy_government
		}

		if = {
			limit = {
				has_character_flag = temp_law_city
			}
			add_realm_law_skip_effects = city_succession_law
		}
		else_if = {
			limit = {
				has_character_flag = temp_law_bish
			}
			add_realm_law_skip_effects = bishop_theocratic_succession_law
		}

		if = {
			limit = {
				any_in_list = {
					variable = root_titles
					NOT = { holder = root }
				}
			}
			create_title_and_vassal_change = {
				type = created
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			every_in_list = {
				variable = root_titles
				limit = { NOT = { holder = root } tier >= tier_county }
				change_title_holder_include_vassals = {
					holder = root
					change = scope:title_change
				}
			}
			resolve_title_and_vassal_change = scope:title_change
			create_title_and_vassal_change = {
				type = created
				save_scope_as = title_change2
				add_claim_on_loss = no
			}
			every_in_list = {
				variable = root_titles
				limit = { NOT = { holder = root } tier = tier_barony }
				change_title_holder_include_vassals = {
					holder = root
					change = scope:title_change2
				}
			}
			resolve_title_and_vassal_change = scope:title_change2
		}
		clear_variable_list = root_titles
		if = {
			limit = { has_variable_list = heir_titles }
			
			if = {
				limit = { has_variable = new_ruler_of_heir_titles var:new_ruler_of_heir_titles = { is_alive = yes } }
				var:new_ruler_of_heir_titles = {
					save_scope_as = new_ruler_of_heir_titles_sc
				}
			}
			else = {
				create_character = {
					employer = root
					template = agp_heir_character
					save_scope_as = new_ruler_of_heir_titles_sc
				}
			}
			create_title_and_vassal_change = {
				type = created
				save_scope_as = title_change3
				add_claim_on_loss = no
			}
			every_in_list = {
				variable = heir_titles
				change_title_holder_include_vassals = {
					holder = scope:new_ruler_of_heir_titles_sc
					change = scope:title_change3
				}
			}
			resolve_title_and_vassal_change = scope:title_change3
			clear_variable_list = heir_titles
		}
		if = {
			limit = { has_variable_list = heir_vassals }
			create_title_and_vassal_change = {
				type = swear_fealty
				save_scope_as = swear_fealty
				add_claim_on_loss = no
			}
			every_in_list = {
				variable = heir_vassals
				limit = { is_ruler = yes highest_held_title_tier >= tier_county NOT = { is_vassal_of = scope:new_ruler_of_heir_titles_sc } }
				change_liege = {
					liege = scope:new_ruler_of_heir_titles_sc
					change = scope:swear_fealty
				}
			}
			resolve_title_and_vassal_change = scope:swear_fealty
			clear_variable_list = heir_vassals
		}
		#Return the dynasty and kill the useless_person in next day, other way we have bad lineage button and bad localization in succesion
		trigger_event = { id = agp_event.5 days = 1 }
	}
}