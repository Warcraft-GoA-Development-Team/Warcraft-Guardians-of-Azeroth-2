window = {
	name = "decisions_view"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	
	# Warcraft
	visible = "[And(IsGameViewOpen('decisions'), Not(GetVariableSystem.HasValue( 'right_window_open', 'pol_factions' )))]"

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		# Warcraft
		on_start = "[GetVariableSystem.Set( 'right_window_open', 'decisions' )]"
		
		# Warcraft
		on_start = "[GetScriptedGui('get_pol_faction_leaders').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		# Warcraft
		on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'decisions' ) )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "DECISIONS_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[DecisionsView.Close]"
					}
				}

				scrollbox = {
					name = "decision_scrollarea"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						texture = "gfx/interface/skinned/illustrations/decisions.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "scrollbox_content"
					{
						name = "decisions_main_container"
						spacing = 15

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								text = "DECISIONS_VIEW_MAJOR_DECISIONS"
							}

							text_single = {
								visible = "[IsDataModelEmpty(DecisionsView.GetDecisions)]"
								text = "DECISIONS_VIEW_MAJOR_NOT_AVAILABLE"
								default_format = "#low;italic"
							}

							vbox = {
								name = "major_decisions"
								datamodel = "[DecisionsView.GetDecisions]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								item = {
									button_decision_entry = {
										datacontext = "[DecisionsViewItem.GetDecision]"
										visible = "[Decision.IsMajor]"
										layoutpolicy_horizontal = expanding
										size = { -1 55 }

										blockoverride "size_illustration" {
											size = { 250 53 }
										}

										onclick = "[DecisionsViewItem.OnSelect]"
										onclick = "[PdxGuiTriggerAllAnimations('decisions_detail_refresh')]"
										down = "[DecisionsViewItem.IsSelected]"

										blockoverride "default_format" {
											default_format = "#medium"
										}
									}
								}
							}

						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						vbox = {
							name = "decisions_container"
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								text = "DECISIONS_VIEW_DECISIONS"
							}

							vbox = {
								name = "regular_decisions"
								datamodel = "[DecisionsView.GetDecisions]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								item = {
									button_decision_entry = {
										datacontext = "[DecisionsViewItem.GetDecision]"
										visible = "[Not(Decision.IsMajor)]"
										layoutpolicy_horizontal = expanding

										onclick = "[DecisionsViewItem.OnSelect]"
										onclick = "[PdxGuiTriggerAllAnimations('decisions_detail_refresh')]"
										down = "[DecisionsViewItem.IsSelected]"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


 types Decisions
 {
 	type button_decision_entry = button_standard {
 		size = { 300 45 }
 		tooltip = SHOW_DECISION_TOOLTIP

 		highlight_icon = {
 			name = "icon"
 			position = { 5 5 }
 			size = { 40 40 }
 			texture = "[Decision.GetIcon]"
 			visible = no
 		}

		widget = {
 			scissor = yes
 			parentanchor = right|top

 			block "size_illustration" {
 				size = { 250 43 }
 			}

 			icon = {
 				name = "illustration"
 				parentanchor = right|top
 				size = { 250 100 }

 				mirror = horizontal
 				texture = "[Decision.GetPicture]"
 				alpha = 0.7

 				visible = "[Decision.IsPossibleForPlayer]"

 				using = Mask_Rough_Edges

 				modify_texture = {
 					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
 					blend_mode = alphamultiply
 				}
 			}

 			highlight_icon = {
 				parentanchor = right|top
 				size = { 250 100 }

 				mirror = horizontal
 				texture = "[Decision.GetPicture]"
 				alpha = 0.7

 				visible = "[Not(Decision.IsPossibleForPlayer)]"

 				effectname = "GreyedOut"

 				tintcolor = { 0.6 0.6 0.6 0.7 }

 				using = Mask_Rough_Edges

 				modify_texture = {
 					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
 					blend_mode = alphamultiply
 				}
 			}
 		}

 		hbox = {
 			margin = { 20 0 }
 			margin_right = 10

 			text_single = {
 				layoutpolicy_horizontal = growing
 				name = "title"
 				text = "[Decision.GetTitleForPlayer]"
 				visible = "[Decision.IsPossibleForPlayer]"
 				default_format = "#clickable"
 				align = nobaseline
 			}

 			text_single = {
 				layoutpolicy_horizontal = growing
 				name = "title2"
 				text = "[Decision.GetTitleForPlayer]"
 				visible = "[Not(Decision.IsPossibleForPlayer)]"
 				block "default_format" {
 					default_format = "#low"
 				}
 				align = nobaseline
 			}

 			highlight_icon = {
 				size = { 30 30 }
 				name = "not_possible"
 				texture = "gfx/interface/icons/symbols/icon_cross.dds"
 				visible = "[Not(Decision.IsPossibleForPlayer)]"
 			}
 		}
 	}
 }
 
types Court
{
	type button_court = button_standard {
		size = { 300 45 }
		tooltip = SHOW_DECISION_TOOLTIP

		highlight_icon = {
			name = "icon"
			position = { 5 5 }
			size = { 40 40 }
			texture = "[Decision.GetIcon]"
			visible = no
		}

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 43 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
					blend_mode = alphamultiply
					alpha = 1
					mirror = horizontal

				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
					blend_mode = alphamultiply
					alpha = 0.5
					mirror = horizontal

				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 20 0 }
			margin_right = 10

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				block "default_format" {
					default_format = "#low"
				}
				align = nobaseline
			}

			highlight_icon = {
				size = { 30 30 }
				name = "not_possible"
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
			}
		}
	}
}