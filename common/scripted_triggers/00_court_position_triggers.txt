# Grants a random unfilled court position based on skills and traits using CANDIDATE - ROOT is ruler
any_court_position_available_trigger = {
	OR = {
		NOT = { employs_court_position = royal_architect_court_position }
		NOT = { employs_court_position = seneschal_court_position }
		NOT = { employs_court_position = court_tutor_court_position }
		NOT = { employs_court_position = high_almoner_court_position }
		NOT = { employs_court_position = court_physician_court_position }
		NOT = { employs_court_position = antiquarian_court_position }
		NOT = { employs_court_position = master_of_horse_court_position }
		AND = {
			$CANDIDATE$ = {
				can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = ROOT }
			}
			NOT = { employs_court_position = bodyguard_court_position }
		}
		AND = {
			$CANDIDATE$ = {
				can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = ROOT }
			}
			NOT = { employs_court_position = champion_court_position }
		}
		NOT = { employs_court_position = master_of_hunt_court_position }
		NOT = { employs_court_position = court_poet_court_position }
		NOT = { employs_court_position = court_musician_court_position }
		NOT = { employs_court_position = cupbearer_court_position }
		AND = {
			is_female = yes
			$CANDIDATE$ = { is_female = yes }
			NOT = { employs_court_position = lady_in_waiting_court_position }
		}
		AND = {
			culture = { has_cultural_parameter = can_appoint_chief_eunuch }
			$CANDIDATE$ = { has_trait = eunuch }
			NOT = { employs_court_position = chief_eunuch_court_position }
		}
		AND = {
			culture = { has_cultural_parameter = can_appoint_court_gardener }
			NOT = { employs_court_position = court_gardener_court_position }
		}
	}
}

# Used in the trigger for court positions to make sure that they don't already have a "job"
# If a court position is considered a full time job, the character cannot hold another similar position
court_position_does_not_already_have_a_job_trigger = {
	custom_tooltip = {
		text = does_not_have_a_full_time_job
		NOR = {
			has_court_position = court_tutor_court_position
			has_court_position = food_taster_court_position
			has_court_position = seneschal_court_position
			has_court_position = cupbearer_court_position
			has_court_position = antiquarian_court_position
			has_court_position = lady_in_waiting_court_position
			has_court_position = court_jester_court_position
			has_court_position = court_poet_court_position
			has_court_position = court_musician_court_position
			has_court_position = bodyguard_court_position
			has_court_position = executioner_court_position
			has_court_position = court_gardener_court_position
			has_court_position = travel_leader_court_position
			has_court_position = wet_nurse_court_position
			is_councillor = yes
		}
	}
}

# IMPORTANT: This should be used before most instances of appoint_court_position - CU
# Checks that you can employ a specific character to a specific court position at a given moment. This prevents errors from randomly trying to already hire the holder of that court position in some cases.
# Trigger should be used in the scope of the hiring liege
# $COURT_POS$ is the position to which you want to appoint a character
# $CHAR$ is the character you wish to appoint
can_appoint_char_to_court_position = {
	save_temporary_scope_as = hiring_liege
	can_employ_court_position_type = $COURT_POS$
	$CHAR$ = {
		NOT = { this = scope:hiring_liege }
		NOT = { has_court_position = $COURT_POS$ }
		can_be_employed_as = $COURT_POS$	
	}
}

has_diplomacy_court_position = {
	OR = {
		has_court_position = court_poet_court_position
		has_court_position = court_musician_court_position
		has_court_position = cupbearer_court_position
		has_court_position = lady_in_waiting_court_position
	}
}

has_martial_court_position = {
	OR = {
		has_court_position = master_of_horse_court_position
		has_court_position = bodyguard_court_position
		has_court_position = champion_court_position
		has_court_position = master_of_hunt_court_position
	}
}

has_stewardship_court_position = {
	OR = {
		has_court_position = royal_architect_court_position
		has_court_position = seneschal_court_position
		has_court_position = court_gardener_court_position
	}
}

has_intrigue_court_position = {
	has_court_position = chief_eunuch_court_position
}

has_learning_court_position = {
	OR = {
		has_court_position = court_tutor_court_position
		has_court_position = high_almoner_court_position
		has_court_position = court_physician_court_position
		has_court_position = antiquarian_court_position
	}
}

court_position_stewardship_trigger = { # Is courtier suited to stewardship positions?
	OR = {
		has_education_stewardship_trigger = yes 
		has_trait = diligent
		stewardship >= medium_skill_rating
	}
}

court_position_martial_trigger = {
	OR = {
		has_education_martial_trigger = yes
		number_of_commander_traits > 0
		has_trait = brave
		prowess >= mediocre_skill_rating
		has_trait = viking
		has_trait = varangian
		has_trait = berserker
		has_trait = shieldmaiden
		has_trait = lifestyle_blademaster
	}
	can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = $EMPLOYER$ }
}

court_position_learning_trigger = { # Is courtier suited to learning positions?
	OR = {
		has_education_learning_trigger = yes
		has_trait = devoted
	}
}

court_position_lady_in_waiting_trigger = {
	liege = { can_employ_court_position_type = lady_in_waiting_court_position }
	is_female = yes
	is_courtier_of = liege
	court_position_does_not_already_have_a_job_trigger = yes
}

court_position_eunuch_trigger = {
	liege = { can_employ_court_position_type = chief_eunuch_court_position }
	has_trait = eunuch
}

court_position_emissary_trigger = {
	liege = { can_employ_court_position_type = cultural_emissary_court_position }
	diplomacy >= 8
}

# Warcraft
court_position_qadi_trigger = {
	always = no
	#liege = { can_employ_court_position_type = chief_qadi_court_position }
	#has_religion = religion:islam_religion
	#has_trait = education_learning
	#trigger_if = {
	#	limit = {
	#		liege.faith = { has_doctrine = doctrine_gender_male_dominated }
	#	}
	#	is_male = yes
	#}
	#trigger_if = {
	#	limit = {
	#		liege.faith = { has_doctrine = doctrine_gender_female_dominated }
	#	}
	#	is_female = yes
	#}
}				

court_position_garuda_trigger = {
	always = no
	#liege = { can_employ_court_position_type = garuda_court_position }
	#is_knight = yes
	#can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = liege }
}

court_position_swans_trigger = {
	always = no
	#liege = { can_employ_court_position_type = keeper_of_swans_court_position }
	#is_vassal_of = liege
}

court_position_travel_leader_trigger = {
	liege = { can_employ_court_position_type = travel_leader_court_position }
	is_vassal_of = liege
}

court_position_wet_nurse_trigger = {
	liege = { can_employ_court_position_type = wet_nurse_court_position }
	is_female = yes
	is_courtier_of = liege
}
