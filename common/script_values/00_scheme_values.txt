###################
# SCHEME VALUES	#
###################
# Determines the scheme progress loss when declining to execute it at full progress
decline_execution_setback = -3
major_decline_execution_setback = -5

# Failed scheme setback values
scheme_failed_outcome_setback_value = -7

#Scheme progress changes
scheme_progress_gain = 1
scheme_progress_loss = -1

# Scheme power
minor_positive_scheme_power = 2
medium_positive_scheme_power = 5
major_positive_scheme_power = 10
minor_negative_scheme_power = -2
medium_negative_scheme_power = -5
major_negative_scheme_power = -10

# Secrecy changes
minor_secrecy_loss = -0.05
medium_secrecy_loss = -0.1
major_secrecy_loss  = -0.15
minor_secrecy_gain = 0.05
medium_secrecy_gain = 0.1
major_secrecy_gain = 0.15

#Discovery Chances
hostile_scheme_own_court_discovery_chance = {
	value = 2
	if = {
		limit = {
			exists = cp:councillor_spymaster
			NOT = { scope:target = cp:councillor_spymaster }
		}
		subtract = {
			value = cp:councillor_spymaster.intrigue
			multiply = 0.01
		}
	}
}

#Watchful Modifier
watchful_modifier_duration = 730


# EVENT COOLDOWN FOR VARIOUS SCHEMES
default_scheme_event_cooldown_duration_value = 730
spy_scheme_event_cooldown_time = 365

# BRIBES
bribe_value = {
	value = 50
	if = {
		limit = {
			scope:recipient.ai_greed > 0
		}
		add = {
			value = scope:recipient.ai_greed
			divide = 4
		}
	}
	
	if = {
		limit = {
			scope:recipient = { is_landed = yes }
			scope:recipient.primary_title.tier < tier_duchy
		}
		multiply = 2
	}
	else_if = {
		limit = {
			scope:recipient.primary_title.tier >= tier_duchy
		}
		multiply = 3
	}
	
	if = {
		limit = {
			scope:recipient = {
				liege = scope:actor
				is_theocratic_lessee = yes
			}
			scope:actor.primary_title.tier < tier_duchy
		}
		multiply = 2
	}
	else_if = {
		limit = {
			scope:recipient = {
				liege = scope:actor
				is_theocratic_lessee = yes
			}
			scope:actor.primary_title.tier >= tier_duchy
		}
		multiply = 3
	}
	
	if = {
		limit = {
			scope:actor = {
				exists = dynasty
				dynasty = {
					has_dynasty_perk = guile_legacy_2
				}
			}
		}
		multiply = 0.5
	}
	
	if = {
		limit = {
			scope:recipient = {
				OR = {
					AND = {
						is_landed = yes
						government_has_flag = government_is_tribal
					}
					AND = {
						is_landed = no
						exists = liege
						liege = {
							government_has_flag = government_is_tribal
						}
					}
					AND = {
						is_landed = no
						exists = host
						host = {
							government_has_flag = government_is_tribal
						}
					}
				}
			}
		}
		multiply = 0.25
		min = 5
	}

	# Discount from BP2 imaginary friend story cycle ending
	if = {
		limit = {
			scope:actor = { has_character_modifier = imaginary_friend_mad_modifier }
		}
		multiply = 0.5
		min = 5
	}
}

#GIFTS
gift_value = {
	value = 50
	if = {
		limit = {
			scope:recipient.ai_greed > 0
		}
		add = {
			value = scope:recipient.ai_greed
			divide = 4
		}
	}
	
	if = {
		limit = {
			scope:recipient = { is_landed = yes }
			scope:recipient.primary_title.tier < tier_duchy
		}
		multiply = 2
	}
	else_if = {
		limit = {
			scope:recipient.primary_title.tier >= tier_duchy
		}
		multiply = 3
	}
	
	if = {
		limit = {
			scope:recipient = {
				liege = scope:actor
				is_theocratic_lessee = yes
			}
			scope:actor.primary_title.tier < tier_duchy
		}
		multiply = 2
	}
	else_if = {
		limit = {
			scope:recipient = {
				liege = scope:actor
				is_theocratic_lessee = yes
			}
			scope:actor.primary_title.tier >= tier_duchy
		}
		multiply = 3
	}
	
	if = {
		limit = {
			scope:actor = {
				exists = dynasty
				dynasty = {
					has_dynasty_perk = fp1_adventure_legacy_2
				}
			}
		}
		multiply = 0.5
	}
	
	if = {
		limit = {
			scope:recipient = {
				OR = {
					AND = {
						is_landed = yes
						government_has_flag = government_is_tribal
					}
					AND = {
						is_landed = no
						exists = liege
						liege = {
							government_has_flag = government_is_tribal
						}
					}
					AND = {
						is_landed = no
						exists = host
						host = {
							government_has_flag = government_is_tribal
						}
					}
				}
			}
		}
		multiply = 0.25
		min = 5
	}
}

bribe_acceptance_value = {
	value = 10
	if = {
		limit = {
			root.ai_greed > 0
		}
		add = root.ai_greed
	}
	divide = 5
	ceiling = yes
	multiply = 5
}

sway_opinion_increase_per_success = 25
sway_max_value = 100

# Claim Throne values
claim_throne_discovered_prestige_loss = {
	value = major_prestige_loss
}
claim_throne_discovered_failure_prestige_loss = {
	value = medium_prestige_loss
}

# Vengeful Trait Scheme Success Chance Modifier
vengeful_scheme_success_chance_modifier = 15

court_scheme_max_compatability_value = {
	value = 30
	if = {
		limit = {
			culture = {
				has_cultural_parameter = ai_romance_scheme_increase
			}
		}
		add = 70
	}
}
