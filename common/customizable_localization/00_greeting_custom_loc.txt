
#GREETINGS MY LOVER
GreetingToLover = {
	type = character

	text = {
		trigger = {
			scope:second = {
				object_of_importance_exist_trigger = {
					LOVER = root
				}
			}
		}
		localization_key = greeting_lover_object
	}

	text = {
		localization_key = greeting_lover_fallback
	}
}

#GREETINGS MY LIEGE
GreetingToLiege = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 20
			}
		}
		localization_key = greeting_liege_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -40
			}
		}
		localization_key = greeting_liege_negative
	}

	text = {
		localization_key = greeting_liege_fallback
	}
}

GreetingToLiegePositive = {
	type = character

	text = {
		localization_key = greeting_liege_liked
	}
}

GreetingToLiegeNegative = {
	type = character

	text = {
		localization_key = greeting_liege_dislike
	}
}


#GREETINGS MY VASSAL
GreetingToVassal = {
	type = character

	text = {
		trigger = {
			OR = {
				AND = {
					is_close_or_extended_family_of = scope:second
					opinion = {
						target = scope:second
						value >= 10
					}	
				}
				opinion = {
					target = scope:second
					value >= 30
				}	
			}

		}
		localization_key = greeting_vassal_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -40
			}
		}
		localization_key = greeting_vassal_negative
	}

	text = {
		localization_key = greeting_vassal_fallback
	}
}

GreetingToVassalPositive = {
	type = character

	text = {
		trigger = {
			is_close_or_extended_family_of = scope:second
		}
		localization_key = greeting_vassal_relative_liked
	}

	text = {
		localization_key = greeting_vassal_liked
	}
}

GreetingToVassalNegative = {
	type = character

	text = {
		localization_key = greeting_vassal_dislike
	}
}



#GREETINGS MY CLOSE_RELATIVE
GreetingToFamily = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 40
			}
		}
		localization_key = greeting_family_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -20
			}
		}
		localization_key = greeting_family_negative
	}

	text = {
		localization_key = greeting_family_fallback
	}
}

GreetingToFamilyPositive = {
	type = character

	text = {
		localization_key = greeting_family_liked
	}
}

GreetingToFamilyNegative = {
	type = character

	text = {
		localization_key = greeting_family_fallback
	}
}


#GREETINGS FOREIGN RULER
GreetingToForeignRuler = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 40
			}
		}
		localization_key = greeting_foreign_ruler_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -20
			}
		}
		localization_key = greeting_foreign_ruler_negative
	}

	text = {
		localization_key = greeting_foreign_ruler
	}
}

GreetingToForeignRulerPositive = {
	type = character

	text = {
		localization_key = greeting_foreign_ruler_positive
	}
}

GreetingToForeignRulerNegative = {
	type = character

	text = {
		localization_key = greeting_foreign_ruler_negative
	}
}


#GENERIC GREETING
GreetingToGeneric = {
	type = character

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value >= 40
			}
		}
		localization_key = greeting_generic_positive
	}

	text = {
		trigger = {
			opinion = {
				target = scope:second
				value <= -40
			}
		}
		localization_key = greeting_generic_negative
	}

	text = {
		localization_key = greeting_generic
	}
}

GreetingToGenericPositive = {
	type = character

	text = {
		localization_key = greeting_generic_positive
	}	
}

GreetingToGenericNegative = {
	type = character
	
	text = {
		localization_key = greeting_generic_negative
	}
}


#APPROPRIATE GREETING
# ROOT is the character doing the greeting, scope:second is the character being greeted.
AppropriateGreeting = {
	type = character

	text = {
		trigger = { has_relation_lover = scope:second }
		localization_key = greeting_appropriate_lover
	}

	text = {
		trigger = { is_vassal_of = scope:second }
		localization_key = greeting_appropriate_liege
	}

	text = {
		trigger = {
			scope:second = { is_vassal_of = root }
		}
		localization_key = greeting_appropriate_vassal
	}

	text = {
		trigger = {
			OR = {
				is_close_or_extended_family_of = scope:second
				has_relation_friend = scope:second
			}
		}
		localization_key = greeting_appropriate_family
	}

	text = {
		trigger = {
			scope:second = { is_independent_ruler = yes }
			NOT = { top_liege = scope:second.top_liege }
		}
		localization_key = greeting_appropriate_foreign_ruler
	}

	text = {
		localization_key = greeting_appropriate_fallback
	}
}

AppropriateGreetingPositive = {
	type = character

	text = {
		trigger = { has_relation_lover = scope:second }
		localization_key = greeting_appropriate_lover
	}

	text = {
		trigger = { is_vassal_of = scope:second }
		localization_key = greeting_appropriate_positive_liege
	}

	text = {
		trigger = {
			scope:second = { is_vassal_of = root }
		}
		localization_key = greeting_appropriate_positive_vassal
	}

	text = {
		trigger = {
			is_close_or_extended_family_of = scope:second
		}
		localization_key = greeting_appropriate_positive_family
	}

	text = {
		trigger = {
			scope:second = { is_independent_ruler = yes }
			NOT = { top_liege = scope:second.top_liege }
		}
		localization_key = greeting_appropriate_positive_foreign_ruler
	}

	text = {
		localization_key = greeting_appropriate_positive_fallback
	}
}

AppropriateGreetingNegative = {
	type = character


	text = {
		trigger = { is_vassal_of = scope:second }
		localization_key = greeting_appropriate_negative_liege
	}

	text = {
		trigger = {
			scope:second = { is_vassal_of = root }
		}
		localization_key = greeting_appropriate_negative_vassal
	}

	text = {
		trigger = {
			is_close_or_extended_family_of = scope:second
		}
		localization_key = greeting_appropriate_negative_family
	}

	text = {
		trigger = {
			scope:second = { is_independent_ruler = yes }
			NOT = { top_liege = scope:second.top_liege }
		}
		localization_key = greeting_appropriate_negative_foreign_ruler
	}

	text = {
		localization_key = greeting_appropriate_negative_fallback
	}
}


# Can be called after an appropriate greeting to add character and flavor to the address.
AppropriateSupplimentaryGreeting = {
	type = character

	text = {
		trigger = {
			NOT = {
				target_is_liege_or_above = scope:second
			}
			opinion = {
				target = scope:second
				value <= -10
			}
		}
		localization_key = greeting_supplimentary.negative
	}

	text = {
		trigger = {
			OR = {
				target_is_liege_or_above = scope:second
				opinion = {
					target = scope:second
					value > -10
				}
			}
		}
		localization_key = greeting_supplimentary.positive
	}
}

NegativeSupplimentaryGreeting = {
	type = character
	random_valid = yes

	# Warcraft
	text = { # Your misdeeds are told from Quel'thalas to Stranglethorn.
		trigger = {
			# Must be in Western or Northern Europe
			location = {
				OR = {
					geographical_region = world_eastern_kingdoms
					geographical_region = world_south_seas
				}
			}
		}
		localization_key =  greeting_supplimentary.negative.tales
	}
	text = { # Your misdeeds are told from Winterspring to Tanaris.
		trigger = {
			location = {
				geographical_region = world_kalimdor
			}
		}
		localization_key =  greeting_supplimentary.negative.kalimdor_tales
	}
	text = { # Your misdeeds are told from Krasarang to Kun-Lai.
		trigger = {
			location = {
				geographical_region = world_pandaria
			}
		}
		localization_key =  greeting_supplimentary.negative.pandaria_tales
	}
	text = { # Your misdeeds are told from Sholazar to the Howling Fjord.
		trigger = {
			location = {
				geographical_region = world_northrend
			}
		}
		localization_key =  greeting_supplimentary.negative.northrend_tales
	}

	# Warcraft
	text = { # Your low character is the subject of Tortollan stories.
		trigger = {
			always = yes
		}
		localization_key =  greeting_supplimentary.negative.greek
	}	

	text = { # May your humors rot in your living body.
		localization_key =  greeting_supplimentary.negative.insult.1
	}	

	text = { # May your years be short and miserable.
		localization_key =  greeting_supplimentary.negative.insult.2
	}	

	text = { # May wisdom ever elude you.
		trigger = {
			scope:second = {
				learning < high_skill_rating
			}
		}
		localization_key = greeting_supplimentary.negative.insult.3
	}	

	text = { # Damn your seventh grandfather.
		trigger = {
			like_islam_religion_trigger = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_muslim.1
	}	

	text = { # May you be sewn up alive in the belly of a dead camel.
		trigger = {
			like_islam_religion_trigger = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_muslim.2
	}	

	# Warcraft

	text = { # You child of a mangy dog.
		trigger = {
			like_islam_religion_trigger = yes
		}
		localization_key =  greeting_supplimentary.negative.insult_muslim.4
	}	
}

PositiveSupplimentaryGreeting = {
	type = character

	random_valid = yes

	text = { # Blessings upon you and your House.
		localization_key =  greeting_supplimentary.positive.flattery.1
	}	

	text = { # Your wisdom and mercy are legendary.
		trigger = {
			scope:second = {
				NOR = {
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.2
	}	

	text = { # Peace be with you.
		trigger = {
			scope:second = {
				NOR = {
					has_trait = vengeful
					has_trait = wrathful
					faith = {

						# Warcraft
						has_doctrine_tenet_warmonger_trigger = yes
						has_doctrine_tenet_human_sacrifice_trigger = yes

					}
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.3
	}	

	text = { # May you live in harmony and contentment.
		trigger = {
			scope:second = {
				NOR = {
					has_trait = ambitious
					has_trait = arrogant
					has_trait = sadistic
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.4
	}

	text = { # Your ruthlessness is enviable.
		trigger = {
			scope:second = {
				OR = {
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.5
	}

	text = { # Your great appetites are renowned throughout the world.
		trigger = {
			scope:second = {
				OR = {
					has_trait = gluttonous
					has_trait = greedy
					has_trait = ambitious
				}
			}
		}
		localization_key =  greeting_supplimentary.positive.flattery.6
	}
}
