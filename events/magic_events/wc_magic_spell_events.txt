namespace = wc_magic_spell_events

wc_magic_spell_events.0001 = {
    title = wc_magic_spell_events.0001.title
    desc = wc_magic_spell_events.0001.desc
    theme = order

    left_portrait = {
        character = root
    }

    right_portrait = {
        character = scope:ice_caster
        animation = disapproval
    }

    immediate = {
        remove_character_modifier = wc_frost_armor_modifier
        add_trait = ice_block
    }

    option = {
        name = wc_magic_spell_events.0001.a

        trigger_event = {
            id = wc_magic_spell_events.0002
            months = 6
        }
    }
}

wc_magic_spell_events.0002 = {
    hidden = yes
    immediate = {
        remove_trait = ice_block
    }
}

wc_magic_spell_events.1001 = {
    hidden = yes
    immediate = {
        remove_trait = polymorph
        add_prowess_skill = {
            value = scope:polymorph_prowess
            multiply = -1
        }
    }
}

wc_magic_spell_events.2001 = {
    type = character_event
    title = wc_magic_spell_events.2001.title
    desc = wc_magic_spell_events.2001.desc
    theme = order

    left_portrait = {
        character = root
        animation = toast
    }

    option = {
        name = wc_magic_spell_events.2001.a

        custom_tooltip = wc_magic_spell_events.2001.a.tt
        set_variable = {
            name = selected_refreshment
            value = flag:food
        }
    }

    option = {
        name = wc_magic_spell_events.2001.b

        custom_tooltip = wc_magic_spell_events.2001.b.tt
        set_variable = {
            name = selected_refreshment
            value = flag:drink
        }
    }
}

wc_magic_spell_events.2101 = {
    type = activity_event
    title = wc_magic_spell_events.2101.title
    desc = wc_magic_spell_events.2101.desc
    theme = feast_activity
    override_icon = {
        reference = "gfx/interface/icons/icon_order_magic.dds"
    }

    left_portrait = {
        character = root
        animation = toast_goblet
    }

    immediate = {
        remove_character_modifier = wc_conjure_feast_modifier
        if = {
            limit = {
                has_variable = conjure_feast_duration
            }
            var:conjure_feast_duration = {
                save_scope_as = duration
            }
            remove_variable = conjure_feast_duration
        }
        else = {
            save_scope_value_as = {
                name = duration
                value = wc_spell_conjure_refreshment_duration_days_value
            }
        }
        scope:activity = {
            set_variable = {
                name = duration
                value = scope:duration
            }
        }
    }

    option = {
        name = wc_magic_spell_events.2101.a

        custom_tooltip = wc_magic_spell_events.2101.a.tt
        scope:activity = {
            set_variable = {
                name = selected_refreshment
                value = flag:food
            }
            hidden_effect = {
                every_attending_character = {
                    add_character_modifier = {
                        modifier = wc_conjure_food_modifier
                        days = wc_current_spell_duration
                    }
                }
            }
        }
    }

    option = {
        name = wc_magic_spell_events.2101.b

        custom_tooltip = wc_magic_spell_events.2101.b.tt
        scope:activity = {
            set_variable = {
                name = selected_refreshment
                value = flag:drink
            }
            hidden_effect = {
                every_attending_character = {
                    add_character_modifier = {
                        modifier = wc_conjure_drink_modifier
                        days = wc_current_spell_duration
                    }
                }
            }
        }
    }

    after = {
        trigger_event = feast.7002
    }
}

wc_magic_spell_events.3001 = {
    hidden = yes

    trigger = {
        has_character_flag = chronomancy_active
        OR = {
            has_variable_list = chronomancy_trait_list
            has_variable_list = chronomancy_modifier_list
        }
    }

    immediate = {
        save_scope_as = chronomancer
        every_character_trait = {
            limit = {
                NOT = {
                    has_trait_category = lifestyle
                }
            }
            save_scope_as = this_trait
            root = {
                remove_trait = scope:this_trait
            }
        }
        every_in_list = {
            variable = chronomancy_trait_list
            save_scope_as = this_trait
            root = {
                add_trait = scope:this_trait
            }
        }
        clear_variable_list = chronomancy_trait_list

        set_local_variable = { name = modifier_counter value = 0 }

        while = {
            limit = {
                variable_list_size = {
                    name = chronomancy_modifier_list
                    value > local_var:modifier_counter
                }
            }

            ordered_in_list = {
                variable = chronomancy_modifier_list
                position = local_var:modifier_counter
                save_scope_as = modifier
            }
            ordered_in_list = {
                variable = chronomancy_modifier_duration_list
                position = local_var:modifier_counter
                save_scope_as = duration
            }

            every_spell_modifier_effect = { EFFECT = chronomancy_restore_modifier_effect }

            change_local_variable = {
                name = modifier_counter
                add = 1
            }
        }

        send_interface_toast = {
            title = chronomancy.toast
            desc = chronomancy.toast.desc
            left_icon = root
        }

        clear_variable_list = chronomancy_modifier_list
        clear_variable_list = chronomancy_modifier_duration_list
        remove_character_flag = chronomancy_active
    }
}

# Salvation Events by Dione

# You are saved by Salvation
wc_magic_spell_events.4000 = {
    type = character_event
    theme = light
    override_background = {
		reference = bp1_bonfire
	}
    title = wc_magic_spell_events.4000.title
    desc = {
        desc = wc_magic_spell_events.4000.desc
        first_valid = { # How did I die?
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_childbirth
                }
                desc = wc_magic_spell_events.4000.desc.death_childbirth
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_duel
                }
                desc = wc_magic_spell_events.4000.desc.death_duel
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_execution
                }
                desc = wc_magic_spell_events.4000.desc.death_execution
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_dungeon
                }
                desc = wc_magic_spell_events.4000.desc.death_dungeon
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_battle
                }
                desc = wc_magic_spell_events.4000.desc.death_battle
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_stress
                }
                desc = wc_magic_spell_events.4000.desc.death_stress
            }
            triggered_desc = {
                trigger = {
                    OR = {
                        target_has_magic_illness_trigger = yes
                        target_has_illness_trigger = yes
                        target_has_major_illness_trigger = yes
                        target_has_injury_trigger = yes 
                        target_has_major_injury_trigger = yes
                        target_has_magic_injury_trigger = yes
                        scope:death_reason = flag:death_wounds
                    }
                }
                desc = wc_magic_spell_events.4000.desc.death_illness
            }
            desc = wc_magic_spell_events.4000.desc.death_none
        }
        first_valid = { # Acknowledge the caster if they are alive
            triggered_desc = {
                trigger = {
                    scope:salvation_caster ?= {
                        is_alive = yes 
                    }
                }
                desc = wc_magic_spell_events.4000.desc.caster_alive
            }
            desc = wc_magic_spell_events.4000.desc.caster_dead
        }
        desc = wc_magic_spell_events.4000.desc.middle
        first_valid = { # Do you believe in the light or not?
            triggered_desc = {
                trigger = {
                    faith = { has_doctrine = doctrine_light_magic_approved }
                }
                desc = wc_magic_spell_events.4000.desc.light_idolised
            }
            triggered_desc = {
                trigger = {
                    faith = { has_doctrine = doctrine_light_magic_accepted }
                }
                desc = wc_magic_spell_events.4000.desc.light_ok
            }
            triggered_desc = {
                trigger = {
                    faith = { has_doctrine = doctrine_light_magic_ignored }
                }
                desc = wc_magic_spell_events.4000.desc.nonbeliever
            }
            triggered_desc = {
                trigger = {
                    OR = {
                        faith = { has_doctrine = doctrine_light_magic_shunned }
                        faith = { has_doctrine = doctrine_light_magic_crime }
                    }
                }
                desc = wc_magic_spell_events.4000.desc.bad
            }
            desc = wc_magic_spell_events.4000.desc.none
        }
    }

    immediate = {
        var:salvation_caster = {
            save_scope_as = salvation_caster
        }
    }

    lower_center_portrait = {
        character = scope:salvation_caster
        animation = idle
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    option = {
        name = wc_magic_spell_events.4000.a
        proc_salvation_effect = yes

        if = {
            limit = { # Don't double notify
                exists = scope:killer 
                NOT = { scope:killer = scope:salvation_caster }
            }
            scope:killer = {
                root = { save_scope_as = saved_character }
                trigger_event = {
                    id = wc_magic_spell_events.4002
                    days = { 2 5 }
                }
            }
        }

        if = {
            limit = {
                scope:salvation_caster = { is_alive = yes }
            }
            scope:salvation_caster = {
                root = { save_scope_as = saved_character }
                trigger_event = {
                    id = wc_magic_spell_events.4001
                    days = { 2 5 }
                }
            }
        }

        ai_chance = {
            base = 100
        }
    }

    option = {
        name = wc_magic_spell_events.4000.b
        if = {
			limit = { exists = scope:killer }
			death = { death_reason = death_salvation_killer killer = scope:killer }
		}
		else = {
			death = { death_reason = death_salvation }
		}

        if = {
            limit = {
                scope:salvation_caster = { is_alive = yes }
            }
            scope:salvation_caster = {
                root = { save_scope_as = saved_character }
                trigger_event = {
                    id = wc_magic_spell_events.4003
                    days = { 2 5 }
                }
            }
        }

        ai_chance = {
            base = 25
        }
    }
}

# You saved someone with Salvation
wc_magic_spell_events.4001 = {
    title = wc_magic_spell_events.4000.title
    desc = wc_magic_spell_events.4001.desc
    type = character_event
    theme = light

    immediate = {
        show_as_tooltip = {
            root = { save_scope_as = salvation_caster }
            scope:saved_character = {
                proc_salvation_effect = yes
            }
        }
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.4001.a
    }
}

# Someone you tried to kill was saved by Salvation
wc_magic_spell_events.4002 = {
    title = wc_magic_spell_events.4000.title
    desc = wc_magic_spell_events.4002.desc
    type = character_event
    theme = light

    immediate = {
        stress_impact = {
            base = major_stress_impact_gain
        }
        show_as_tooltip = {
            root = { save_scope_as = killer }
            scope:saved_character = {
                proc_salvation_effect = yes
            }
        }
    }

    left_portrait = {
        character = root
        animation = anger
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.4002.a
    }
}

# You saved someone with Salvation, but they chose to die anyways
wc_magic_spell_events.4003 = {
    title = wc_magic_spell_events.4000.title
    desc = wc_magic_spell_events.4003.desc
    type = character_event
    theme = light

    immediate = {
        stress_impact = {
            base = medium_stress_impact_gain
        }
        show_as_tooltip = {
            scope:saved_character = {
                if = {
                    limit = { exists = scope:killer }
                    death = { death_reason = death_salvation_killer killer = scope:killer }
                }
                else = {
                    death = { death_reason = death_salvation }
                }
            }
        }
    }

    left_portrait = {
        character = root
        animation = sadness
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.4003.a
    }
}

# You are saved by Salvation, but you were undead
wc_magic_spell_events.4004 = {
    title = wc_magic_spell_events.4000.title
    desc = wc_magic_spell_events.4004.desc
    type = character_event
    theme = light

    immediate = {
        remove_trait = being_undead
        proc_salvation_effect = yes
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    lower_center_portrait = {
        character = scope:salvation_caster
        animation = idle
    }

    option = {
        name = {
            text = {
                first_valid = {
                    triggered_desc = {
                        trigger = {
                            OR = {
                                has_trait = paranoid
                                faith = { has_doctrine = doctrine_light_magic_shunned }
                                faith = { has_doctrine = doctrine_light_magic_crime }
                                culture = { has_same_culture_heritage = culture:scourge }
                            }
                        }
                        desc = wc_magic_spell_events.4004.a_sus
                    }
                    desc = wc_magic_spell_events.4004.a
                }
            }
        }

        if = {
            limit = {
                OR = {
                    has_trait = paranoid
                    faith = { has_doctrine = doctrine_light_magic_shunned }
                    faith = { has_doctrine = doctrine_light_magic_crime }
                    culture = { has_same_culture_heritage = culture:scourge }
                }
            }
            stress_impact = {
                base = medium_stress_impact_gain
            }
        }
    }
}

# You saved someone with Salvation, but they were undead
wc_magic_spell_events.4005 = {
    title = wc_magic_spell_events.4000.title
    desc = wc_magic_spell_events.4005.desc
    type = character_event
    theme = light

    immediate = {
        show_as_tooltip = {
            root = { save_scope_as = salvation_caster }
            scope:saved_character = {
                remove_trait = being_undead
                proc_salvation_effect = yes
            }
        }
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.4005.a
    }
}

wc_magic_spell_events.4010 = {
    hidden = yes
    trigger = {
        has_trait = incapable
    }
    immediate = {
        remove_trait = incapable
    }
}