##################################################
# #Activities (General)

activity_recurring_character_weight_modifier = {
	modifier = {
		has_relation_activity_recurrer = root
		add = $VALUE$
	}
}

##################################################
# #Tournament

tournament_pas_darmes_culture_tradition_modifier = {
	#modifier = {
	#    culture = { has_cultural_tradition = tradition_chanson_de_geste }
	#    factor = 2
	#}
	modifier = {
	    culture = { has_cultural_tradition = tradition_chivalry }
	    factor = 2
	}
	modifier = {
	    culture = { has_cultural_tradition = tradition_martial_admiration }
	    factor = 2
	}
	modifier = {
	    culture = { has_cultural_tradition = tradition_fp1_performative_honour }
	    factor = 2
	}
	modifier = {
		culture = { has_cultural_pillar = ethos_bellicose }
	    factor = 1.5
	}
}

tournament_duelists_modifier = {
	modifier = {
		add = 5
		culture = { has_cultural_pillar = ethos_bellicose }
	}
	modifier = {
		add = 5
		has_trait = wrathful
	}
	modifier = {
		add = 5
		has_trait = arrogant
	}
	modifier = {
		add = 5
		has_trait = irritable
	}
	modifier = {
		add = 5
		has_trait = brave
	}
	modifier = {
		add = -5
		has_trait = calm
	}
	modifier = {
		add = -5
		has_trait = humble
	}
	modifier = {
		add = -5
		has_trait = craven
	}
}

tournament_horse_contest_trait_pivotal_modifier = {
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_joust
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = horse
			value > 0
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_joust
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = horse
			value >= 25
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_joust
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = horse
			value >= 50
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_joust
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = horse
			value >= 75
		}
		add = 2.5
	}
}

tournament_foot_contest_trait_pivotal_modifier = {
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_duel
				has_current_phase = tournament_phase_wrestling
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = foot
			value > 0
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_duel
				has_current_phase = tournament_phase_wrestling
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = foot
			value >= 25
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_duel
				has_current_phase = tournament_phase_wrestling
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = foot
			value >= 50
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_duel
				has_current_phase = tournament_phase_wrestling
				has_current_phase = tournament_phase_melee
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = foot
			value >= 75
		}
		add = 2.5
	}
}

tournament_wit_contest_trait_pivotal_modifier = {
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_recital
				has_current_phase = tournament_phase_board_game
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = wit
			value > 0
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_recital
				has_current_phase = tournament_phase_board_game
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = wit
			value >= 25
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_recital
				has_current_phase = tournament_phase_board_game
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = wit
			value >= 50
		}
		add = 2.5
	}
	modifier = {
		involved_activity = {
			OR = {
				has_current_phase = tournament_phase_recital
				has_current_phase = tournament_phase_board_game
			}
		}
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = wit
			value >= 75
		}
		add = 2.5
	}
}

tournament_bow_contest_trait_pivotal_modifier = {
	modifier = {
		involved_activity = { has_current_phase = tournament_phase_archery }
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = bow
			value > 0
		}
		add = 2.5
	}
	modifier = {
		involved_activity = { has_current_phase = tournament_phase_archery }
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = bow
			value >= 25
		}
		add = 2.5
	}
	modifier = {
		involved_activity = { has_current_phase = tournament_phase_archery }
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = bow
			value >= 50
		}
		add = 2.5
	}
	modifier = {
		involved_activity = { has_current_phase = tournament_phase_archery }
		has_trait = tourney_participant
		has_trait_xp = {
			trait = tourney_participant
			track = bow
			value >= 75
		}
		add = 2.5
	}
}

# Modifiers for who should win a contest
tournament_contest_winner_determiner_modifier = {
	# PtV is biggest contributor
	modifier = {
		add = {
			value = var:progress_to_victory
			multiply = 2
		}
	}
	# Aptitude helps a bit
	modifier = {
		add = {
			value = var:contest_aptitude
			divide = 3
		}
	}
	# If this char has highest PtV, more likely to win
	modifier = {
		NOT = {
			scope:activity = {
				any_guest_subset = {
					name = qualified
					phase = tournament_phase_$CONTEST$
					NOR = {
						$CHAR$ ?= this
						scope:contest_winner ?= this
						scope:second_place ?= this
						scope:third_place ?= this
					}
					exists = var:progress_to_victory
					var:progress_to_victory > $CHAR$.var:progress_to_victory
				}
			}
		}
		factor = 10
	}
	# If no one has at least half PtV of this character, they win
	modifier = {
		NOT = {
			scope:activity = {
				any_guest_subset = {
					name = qualified
					phase = tournament_phase_$CONTEST$
					NOR = {
						$CHAR$ ?= this
						scope:contest_winner ?= this
						scope:second_place ?= this
						scope:third_place ?= this
					}
					exists = var:progress_to_victory
					var:progress_to_victory > $CHAR$.progress_to_victory_fetch_half_value
				}
			}
		}
		add = 1000
	}
}

wedding_similiar_family_member_modifier = {
	modifier = {
		add = 25
		sex_same_as = scope:my_family_relative
	}
	modifier = {
		add = 25
		highest_held_title_tier = scope:my_family_relative.highest_held_title_tier
	}
	modifier = { # Great-grandchildren
		add = 50
		scope:my_family_relative = { is_great_grandchild_of = scope:my_family_spouse }
		is_great_grandchild_of = scope:other_family_spouse
	}
	modifier = { # Grandchildren
		add = 50
		scope:my_family_relative = { is_grandchild_of = scope:my_family_spouse }
		is_grandchild_of = scope:other_family_spouse
	}
	modifier = { # Children
		add = 50
		scope:my_family_relative = { is_child_of = scope:my_family_spouse }
		is_child_of = scope:other_family_spouse
	}
	modifier = { # Niblings
		add = 50
		scope:my_family_relative = { is_cousin_of = scope:my_family_spouse }
		is_cousin_of = scope:other_family_spouse
	}
	modifier = { # Niblings
		add = 50
		scope:my_family_relative = { is_nibling_of = scope:my_family_spouse }
		is_nibling_of = scope:other_family_spouse
	}
	modifier = { # Aunts/Uncles
		add = 50
		scope:my_family_relative = { is_uncle_or_aunt_of = scope:my_family_spouse }
		is_uncle_or_aunt_of = scope:other_family_spouse
	}
	modifier = { # Siblings
		add = 50
		scope:my_family_relative = { is_sibling_of = scope:my_family_spouse }
		is_sibling_of = scope:other_family_spouse
	}
	modifier = { # Parents
		add = 50
		scope:my_family_relative = { is_parent_of = scope:my_family_spouse }
		is_parent_of = scope:other_family_spouse
	}
	modifier = { # Grandparents
		add = 50
		scope:my_family_relative = { is_grandparent_of = scope:my_family_spouse }
		is_grandparent_of = scope:other_family_spouse
	}
	modifier = { # Great-grandparents
		add = 50
		scope:my_family_relative = { is_great_grandparent_of = scope:my_family_spouse }
		is_great_grandparent_of = scope:other_family_spouse
	}
	modifier = {
		add = 50
		age >= scope:my_family_relative.age_minus_5
		age < scope:my_family_relative.age_plus_5
	}
	modifier = {
		add = 25
		age >= scope:my_family_relative.age_minus_10 
		age < scope:my_family_relative.age_plus_10 
	}
	modifier = {
		add = 25
		trait_compatibility = {
			target = scope:my_family_relative
			value >= low_positive_trait_compatibility
		}
	}
	modifier = {
		add = 25
		trait_compatibility = {
			target = scope:my_family_relative
			value >= medium_positive_trait_compatibility
		}
	}
	modifier = {
		add = 25
		trait_compatibility = {
			target = scope:my_family_relative
			value >= high_positive_trait_compatibility
		}
	}
	opinion_modifier = {
		opinion_target = scope:my_family_relative
		multiplier = 0.5
	}
}

wedding_family_member_compatibility_modifier = {
	modifier = {
		add = 25
		sex_same_as = scope:my_family_relative
	}
	modifier = {
		add = 25
		highest_held_title_tier = scope:my_family_relative.highest_held_title_tier
	}
	modifier = { # Great-grandchildren
		add = 50
		scope:my_family_relative = { is_great_grandchild_of = scope:my_family_spouse }
		is_great_grandchild_of = scope:my_family_spouse
	}
	modifier = { # Grandchildren
		add = 50
		scope:my_family_relative = { is_grandchild_of = scope:my_family_spouse }
		is_grandchild_of = scope:my_family_spouse
	}
	modifier = { # Children
		add = 50
		scope:my_family_relative = { is_child_of = scope:my_family_spouse }
		is_child_of = scope:my_family_spouse
	}
	modifier = { # Cousin
		add = 50
		scope:my_family_relative = { is_cousin_of = scope:my_family_spouse }
		is_cousin_of = scope:my_family_spouse
	}
	modifier = { # Niblings
		add = 50
		scope:my_family_relative = { is_nibling_of = scope:my_family_spouse }
		is_nibling_of = scope:my_family_spouse
	}
	modifier = { # Aunts/Uncles
		add = 50
		scope:my_family_relative = { is_uncle_or_aunt_of = scope:my_family_spouse }
		is_uncle_or_aunt_of = scope:my_family_spouse
	}
	modifier = { # Siblings
		add = 50
		scope:my_family_relative = { is_sibling_of = scope:my_family_spouse }
		is_sibling_of = scope:my_family_spouse
	}
	modifier = { # Parents
		add = 50
		scope:my_family_relative = { is_parent_of = scope:my_family_spouse }
		is_parent_of = scope:my_family_spouse
	}
	modifier = { # Grandparents
		add = 50
		scope:my_family_relative = { is_grandparent_of = scope:my_family_spouse }
		is_grandparent_of = scope:my_family_spouse
	}
	modifier = { # Great-grandparents
		add = 50
		scope:my_family_relative = { is_great_grandparent_of = scope:my_family_spouse }
		is_great_grandparent_of = scope:my_family_spouse
	}
	modifier = { # Close
		add = 50
		OR = {
			is_child_of = scope:my_family_relative
			is_parent_of = scope:my_family_relative
			is_sibling_of = scope:my_family_relative
		}
	}
	modifier = {
		add = 50
		age >= scope:my_family_relative.age_minus_5
		age < scope:my_family_relative.age_plus_5
	}
	modifier = {
		add = 25
		age >= scope:my_family_relative.age_minus_10
		age < scope:my_family_relative.age_plus_10 
	}
	modifier = {
		add = 25
		trait_compatibility = {
			target = scope:my_family_relative
			value >= low_positive_trait_compatibility
		}
	}
	modifier = {
		add = 25
		trait_compatibility = {
			target = scope:my_family_relative
			value >= medium_positive_trait_compatibility
		}
	}
	modifier = {
		add = 25
		trait_compatibility = {
			target = scope:my_family_relative
			value >= high_positive_trait_compatibility
		}
	}
	opinion_modifier = {
		opinion_target = scope:my_family_relative
		multiplier = 0.5
	}
}

tournament_team_captain_modifier = {
	modifier = {
		add = {
			value = 0
			if = {
				limit = { exists = var:contest_aptitude }
				add = var:contest_aptitude
			}
			else = { add = 10 }
			if = {
				limit = { is_playable_character = yes }
				multiply = {
					value = {
						add = primary_title.tier
						multiply = 20
					}
				}
			}
			if = {
				limit = { is_ai = no }
				multiply = 2
			}
		}
	}
}
