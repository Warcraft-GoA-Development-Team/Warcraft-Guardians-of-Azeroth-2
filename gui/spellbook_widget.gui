window = {
    name = "widget_spellbook"
    position = { 0 10 }
    parentanchor = center
    allow_outside = yes
    layer = top
    visible = "[GetVariableSystem.HasValue( 'spellbook_window', 'yes' )]"

    size = { 750 1050 }
    using = Window_Background
    using = Window_Decoration_Spike

    state = {
        name = _show
        using = Animation_FadeIn_Standard
        using = Sound_WindowShow_Standard
        on_start = "[GetScriptedGui( 'update_current_spell_class_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
        on_start = "[GetScriptedGui( 'open_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
        on_start = "[GetVariableSystem.Set( 'spellbook_view', 'spells_view' )]"
    }

    state = {
        name = _hide
        using = Animation_FadeOut_Quick
        using = Sound_WindowHide_Standard
    }

    vbox = {
        using = Window_Margins

        # Headers
        header_pattern_interaction = {
            layoutpolicy_horizontal = expanding

            blockoverride "header_text"
            {
                text = "SPELLBOOK_HEADER_TEXT"
            }

            blockoverride "button_close"
            {
                onclick = "[GetVariableSystem.Clear( 'spellbook_window' )]"
                onclick = "[GetVariableSystem.Clear('spell_province_window')]"
                onclick = "[GetVariableSystem.Clear( 'current_spell_selected' )]"
                onclick = "[GetVariableSystem.Clear( 'current_magic_selected' )]"
                onclick = "[GetVariableSystem.Clear( 'current_spell_rank' )]"
                onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
            }
        }

        vbox = {
            layoutpolicy_horizontal = expanding
            margin = { 15 0 }
            spacing = 10
            visible = "[GetVariableSystem.HasValue( 'spellbook_view', 'spells_view' )]"

            vbox = {
                hbox = {
                    spacing = 20
                    button_select_arrow = {
                        size = { 30 30 }
                        mirror = horizontal
                        enabled = "[Not(ObjectsEqual(PlayerGetVar('spellbook_index').GetValue, '(CFixedPoint)0'))]"
                        onclick = "[GetScriptedGui( 'subtract_spellbook_index_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                        onclick = "[GetScriptedGui( 'update_current_spell_class_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                        onclick = "[GetVariableSystem.Set( 'current_magic_selected', PlayerGetVar('current_spell_class').GetFlagName )]"
                    }
                    icon = {
                        size = { 75 75 }
                        texture = "[GetCultureInnovationType(Concatenate(PlayerGetVar('current_spell_class').GetFlagName, '_magic')).GetIcon]"
                    }
                    button_select_arrow = {
                        size = { 30 30 }
                        enabled = "[Not(ObjectsEqual(PlayerGetVar('spellbook_index').GetValue, '(CFixedPoint)9'))]"
                        onclick = "[GetScriptedGui( 'add_spellbook_index_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                        onclick = "[GetScriptedGui( 'update_current_spell_class_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    }
                }
                header_text = {
                    fontsize = 30
                    text = "[Localize(Concatenate(Concatenate('game_concept_wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_lifestyle'))]"
                }
            }
            divider_light = {
                layoutpolicy_horizontal = expanding
            }
        }

        # Spell Display Box
        vbox = {
            layoutpolicy_vertical = expanding
            visible = "[GetVariableSystem.HasValue( 'spellbook_view', 'spells_view' )]"
            scrollbox = {
                size = { 660 650 }
                layoutpolicy_horizontal = expanding
                layoutpolicy_vertical = expanding

                background = {
                    texture = "[GetCultureInnovationType(Concatenate(PlayerGetVar('current_spell_class').GetFlagName, '_magic_bg')).GetIcon]"
                    fittype = centercrop
                    alpha = 0.2
                    framesize = { 600 700 }
                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
                        blend_mode = alphamultiply
                        alpha =1
                    }
                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                        blend_mode = alphamultiply
                        alpha = 1
                    }
                }
                blockoverride "scrollbox_background" {}
                blockoverride "scrollbox_margins" {
                    margin_top = 10
                    margin_bottom = 15
                    margin_right = 10
                }
                blockoverride "scrollbox_content" {
                    dynamicgridbox = {
                        datamodel_wrap = 2
                        flipdirection = yes

                        datamodel = "[GetGlobalList(Concatenate(PlayerGetVar('current_spell_class').GetFlagName, '_spells'))]"
                        item = {
                            container = {
                                button_standard_clean = {
                                    hbox = {
                                        visible = "[GetScriptedGui('can_select_spell_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End)]"
                                        tooltipwidget = {
                                            widget_spell_breakdown_tooltip = {}
                                        }
                                    }

                                    position = { 10 10 }
                                    minimumsize = { 300 200 }
                                    background = {
                                        using = Background_Area
                                    }

                                    # Spell Info
                                    vbox = {
                                        hbox = {
                                            # Name
                                            text_single = {
                                                default_format = "#high"
                                                fontsize = 20
                                                text = "[Localize(Concatenate('game_concept_wc_spell_', Scope.GetFlagName))]"
                                                background = {
                                                    texture ="gfx/interface/colors/black.dds"
                                                    alpha = 0.4
                                                    margin = { 50% 0}
                                                    modify_texture = {
                                                        texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                                        blend_mode = alphamultiply
                                                    }
                                                }
                                            }
                                        }
                                        divider_light = {
                                            layoutpolicy_horizontal = expanding
                                            modify_texture = {
                                                texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                                blend_mode = alphamultiply
                                            }
                                        }
                                        text_multi = {
                                            parentanchor = left
                                            autoresize = yes
                                            max_width = 250
                                            align = center
                                            fontsize = 14
                                            text = "[Localize(Concatenate('game_concept_wc_spell_', Concatenate(Scope.GetFlagName, '_desc')))]"
                                            background = {
                                                texture ="gfx/interface/colors/black.dds"
                                                alpha = 0.2
                                                margin = { 50% 0}
                                                modify_texture = {
                                                    texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                                    blend_mode = alphamultiply

                                                }
                                            }
                                        }

                                        # Mana Cost
                                        hbox = {
                                            tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate('wc_spell_', Concatenate(Scope.GetFlagName, '_cost_mana_value')))]"
                                            spacing = 5
                                            icon = {
                                                texture = "gfx/interface/icons/currencies/icon_full_mana_crystal.dds"
                                                size = { 30 30 }
                                            }
                                            text_single = {
                                                fontsize = 18
                                                text = "[GetPlayer.MakeScope.ScriptValue(Concatenate('wc_spell_', Concatenate(Scope.GetFlagName, '_cost_mana_value')))]"
                                            }
                                        }
                                    }
                                    onclick = "[GetVariableSystem.Set( 'current_spell_selected', Scope.GetFlagName )]"
                                    down = "[GetVariableSystem.HasValue( 'current_spell_selected', Scope.GetFlagName )]"
                                    onclick = "[GetScriptedGui( 'set_current_spell_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End))]"
                                    enabled = "[GetScriptedGui('can_select_spell_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End)]"
                                    tooltip = "[GetScriptedGui('can_select_spell_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End)]"
                                }
                            }
                        }
                    }
                }
            }
        }
        # Effects Area
        vbox = {
            visible = "[GetVariableSystem.HasValue( 'spellbook_view', 'effects_view' )]"
            spacing = 15

            layoutpolicy_vertical = expanding
            hbox = {
                layoutpolicy_horizontal = expanding
                widget = { # Select target widget
                    size = { 250 500 }
                    layoutpolicy_horizontal = expanding
                    visible = "[And(Not(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet), Not(GetScriptedGui('has_targets_list_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)))]"

                    hbox = {
                        visible = "[GetScriptedGui('spell_target_is_province_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                        button_standard = {
                            visible = "[Not(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet)]"
                            size = { 200 40 }
                            text_single = {
                                position = { 0 -2 }
                                parentanchor = center
                                text = "CHOOSE_TITLE_TEXT"
                            }
                            onclick = "[GetScriptedGui('get_titles_list_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                            onclick = "[GetScriptedGui('select_province_start_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                            onclick = "[GetVariableSystem.Set('spell_province_window', 'yes')]"
                        }
                    }
                    hbox = {
                        button_standard = {
                            size = { 200 40 }
                            visible = "[GetScriptedGui('spell_target_is_province_list_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

                            text = "ADD_NEW_TARGET"
                            tooltip = "[GetScriptedGui('can_add_more_targets_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                            enabled = "[GetScriptedGui('can_add_more_targets_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                            icon = {
                                parentanchor = center
                                position = { -75 0 }
                                size = { 30 30 }
                                texture = "gfx/interface/icons/symbols/icon_plus.dds"
                            }
                            onclick = "[GetScriptedGui('get_titles_list_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                            onclick = "[GetScriptedGui('select_province_start_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                            onclick = "[GetVariableSystem.Set('spell_province_window', 'yes')]"
                        }
                    }
                    hbox = {
                        visible = "[GetScriptedGui('spell_target_is_army_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                        button_standard = {
                            visible = "[Not(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet)]"
                            size = { 200 40 }
                            text_single = {
                                position = { 0 -2 }
                                parentanchor = center
                                text = "CHOOSE_ARMY_TEXT"
                            }
                            onclick = "[GetScriptedGui( 'create_armies_list_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                            onclick = "[GetScriptedGui('select_province_start_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                            onclick = "[GetVariableSystem.Set('spell_province_window', 'yes')]"
                        }
                    }
                }
                vbox = { # Target portrait view
                    name = "target_portrait_box"
                    vbox = {
                        name = "target_portrait_box_single_char"
                        visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_province_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                        datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Title]"

                        portrait_body_large = {
                            datacontext = "[Title.GetHolder]"
                            size = { 300 200 }

                            blockoverride "portrait_texture" {
                                portrait_texture = "[Character.GetAnimatedPortrait('environment_body', 'camera_lifestyles', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
                                position = { 0 150 }
                            }
                            blockoverride "mask" {
                                mask = "gfx/portraits/portrait_mask_torso.dds"
                            }
                            blockoverride "opinion_box"
                            {}
                            blockoverride "portrait_icons"
                            {}
                            blockoverride "coa"
                            {}
                        }
                    }
                    vbox = {
                        name = "target_portrait_box_single_title"
                        visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_character_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"

                        portrait_body_large = {
                            datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Char]"
                            size = { 300 200 }

                            blockoverride "portrait_texture" {
                                portrait_texture = "[Character.GetAnimatedPortrait('environment_body', 'camera_lifestyles', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
                                position = { 0 150 }
                            }
                            blockoverride "mask" {
                                mask = "gfx/portraits/portrait_mask_torso.dds"
                            }
                            blockoverride "opinion_box"
                            {}
                            blockoverride "portrait_icons"
                            {}
                            blockoverride "coa"
                            {}
                        }
                    }
                    vbox = {
                        name = "target_portrait_box_single_army"
                        visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_army_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                        datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Army]"

                        portrait_body_large = {
                            datacontext = "[Army.GetCommander]"
                            size = { 300 200 }

                            blockoverride "portrait_texture" {
                                portrait_texture = "[Character.GetAnimatedPortrait('environment_body', 'camera_lifestyles', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
                                position = { 0 150 }
                            }
                            blockoverride "mask" {
                                mask = "gfx/portraits/portrait_mask_torso.dds"
                            }
                            blockoverride "opinion_box"
                            {}
                            blockoverride "portrait_icons"
                            {}
                            blockoverride "coa"
                            {}
                        }
                    }
                    scrollbox = {
                        visible = "[And(GetScriptedGui( 'player_has_targets_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui('spell_target_is_province_list_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"

                        size = { 660 590 }
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                        scrollbarpolicy_horizontal = as_needed
                        scrollbar_horizontal = {
                            using = Scrollbar_Horizontal
                        }
                        blockoverride "scrollbox_margins" {}
                        blockoverride "scrollbox_background" {}
                        blockoverride "scrollbox_background_fade" {}
                        blockoverride "scrollbox_content"
                        {
                            vbox = {
                                name = "target_portrait_box_multi_title"
                                layoutpolicy_horizontal = expanding
                                spacing = 10
                                hbox  = {
                                    datamodel = "[GetPlayer.MakeScope.GetList( 'spell_targets_list' )]"
                                    layoutpolicy_horizontal = expanding
                                    item = {
                                        vbox = {
                                            layoutpolicy_horizontal = expanding
                                            layoutpolicy_vertical = expanding
                                            margin = { 15 10 }
                                            background = {
                                                using = Background_Area
                                                modify_texture = {
                                                    texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
                                                    blend_mode = alphamultiply
                                                    alpha = 0.5
                                                }
                                            }
                                            vbox = {
                                                spacing = 5
                                                margin = { 5 0 }
                                                datacontext = "[Scope.Title.GetHolder]"
                                                button_standard = {
                                                    raw_text = "[Scope.Title.GetNameNoTooltip]"
                                                    tooltip = "CLICK_TO_REMOVE_TT"
                                                    onclick = "[GetScriptedGui('set_target_or_add_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Title.MakeScope).End)]"
                                                }
                                                text_single = {
                                                    layoutpolicy_horizontal = expanding
                                                    default_format = "#T"
                                                    align = center
                                                    raw_text = "[Character.GetShortUIName]"
                                                }

                                                text_single = {
                                                    name = "your_county"
                                                    visible = "[ObjectsEqual( Character.Self, GetPlayer )]"
                                                    layoutpolicy_horizontal = expanding
                                                    text = "HOLDING_VIEW_YOUR_COUNTY"
                                                    margin_left = 2
                                                    margin_bottom = 4
                                                    using = Font_Size_Small
                                                }

                                                text_single = {
                                                    name = "top_realm_county"
                                                    visible = "[Character.IsOtherLiegeOrAbove( GetPlayer )]"
                                                    layoutpolicy_horizontal = expanding
                                                    text = "HOLDING_VIEW_TOP_REALM_COUNTY"
                                                    margin_left = 5
                                                    margin_bottom = 4
                                                    using = Font_Size_Small
                                                }

                                                text_single = {
                                                    name = "foreign_county"
                                                    visible = "[Not(Or(ObjectsEqual( Character.Self, GetPlayer ),Character.IsOtherLiegeOrAbove( GetPlayer )))]"
                                                    layoutpolicy_horizontal = expanding
                                                    text = "MAGIC_VIEW_FOREIGN_COUNTY"
                                                    margin_left = 5
                                                    margin_bottom = 4
                                                    using = Font_Size_Small
                                                }
                                            }
                                            vbox = {
                                                name = "county_stats"
                                                layoutpolicy_horizontal = expanding
                                                margin = { 0 10 }
                                                spacing = 5

                                                hbox = {
                                                    layoutpolicy_horizontal = expanding
                                                    datacontext = "[Scope.Title.GetProvince.GetCounty]"

                                                    text_single = {
                                                        layoutpolicy_horizontal = expanding
                                                        raw_text = "[control|E]:"
                                                    }

                                                    text_single = {
                                                        raw_text = "[County.GetControlLevel]"
                                                        default_format = "#high"

                                                        background = {
                                                            visible = "[LessThan_CFixedPoint(County.GetControl, '(CFixedPoint)100')]"
                                                            margin = { 5 0 }
                                                            using = Status_Bad
                                                        }

                                                        tooltipwidget = {
                                                            county_control_tooltip_container = {}
                                                        }
                                                    }
                                                }

                                                hbox = {
                                                    layoutpolicy_horizontal = expanding
                                                    datacontext = "[Scope.Title.GetProvince.GetCounty]"
                                                    visible = "[County.GetCount.GetGovernment.IsAffectedByDevelopment]"
                                                    text_single = {
                                                        layoutpolicy_horizontal = expanding
                                                        raw_text = "[development|E]:"
                                                    }

                                                    text_single = {
                                                        raw_text = "[County.GetDevelopmentLevel]"
                                                        default_format = "#high"

                                                        tooltipwidget = {
                                                            county_development_tooltip_container = {}
                                                        }
                                                    }
                                                }

                                                hbox = {
                                                    layoutpolicy_horizontal = expanding
                                                    text_single = {
                                                        text = "HOLDER_MR_TEXT"
                                                        layoutpolicy_horizontal = expanding
                                                        default_format = "#clickable"
                                                    }

                                                    text_single = {
                                                        default_format = "#high"
                                                        raw_text = "[Scope.Title.GetHolder.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                                                        tooltip = "[Scope.Title.GetHolder.MakeScope.GetScriptValueDesc(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                                                    }
                                                }

                                                portrait_body = {
                                                    datacontext = "[Scope.Title.GetHolder]"
                                                    size = { 100 300 }
                                                    blockoverride "portrait_texture" {
                                                        portrait_texture = "[Character.GetAnimatedPortrait('environment_body', 'camera_lifestyles', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
                                                        position = { 0 30 }
                                                    }
                                                    blockoverride "mask" {
                                                        mask = "gfx/portraits/portrait_mask_body.dds"

                                                    }
                                                    blockoverride "opinion_box"
                                                    {}
                                                    blockoverride "portrait_icons"
                                                    {}
                                                    blockoverride "coa"
                                                    {}

                                                }
                                            }

                                        }

                                    }
                                }
                                button_standard = {
                                    size = { 200 40 }
                                    visible = "[GetScriptedGui('spell_target_is_province_list_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

                                    text = "ADD_NEW_TARGET"
                                    tooltip = "[GetScriptedGui('can_add_more_targets_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

                                    enabled = "[GetScriptedGui('can_add_more_targets_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                                    icon = {
                                        parentanchor = center
                                        position = { -75 0 }
                                        size = { 30 30 }
                                        texture = "gfx/interface/icons/symbols/icon_plus.dds"
                                    }
                                    onclick = "[GetScriptedGui('get_titles_list_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                                    onclick = "[GetScriptedGui('select_province_start_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                                    onclick = "[GetVariableSystem.Set('spell_province_window', 'yes')]"
                                }
                            }
                        }

                    }

                }

                vbox = { # For Single Targets only
                    name = "target_info_box"
                    visible = "[Not(GetScriptedGui('has_targets_list_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                    scrollbox = {
                        size = { 250 500 }
                        visible = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet]"
                        blockoverride "scrollbox_background" {}
                        blockoverride "scrollbox_background_fade" {}
                        blockoverride "scrollbox_content"
                        {
                            vbox = {
                                layoutpolicy_vertical = expanding
                                name = "target_info_box"
                                vbox = {
                                    spacing = 15
                                    name = "target_info_box_single_char"
                                    visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_character_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                                    text_single = {
                                        raw_text = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Char.GetShortUIName]"
                                        default_format = "#T"
                                    }
                                    text_single = {
                                        text = "CURRENT_MR_TEXT"
                                        default_format = "#clickable"
                                        tooltip = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).GetScriptValueDesc(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                                    }
                                }
                                vbox = {
                                    spacing = 15
                                    name = "target_info_box_single_title"
                                    datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Title]"
                                    visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_province_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                                    vbox = {
                                        spacing = 15
                                        vbox = {
                                            coa_title_small = { }
                                            layoutpolicy_horizontal = expanding

                                            text_single = {
                                                default_format = "#T"
                                                align = center
                                                raw_text = "[Title.GetNameNoTooltip]"
                                            }
                                        }

                                        vbox = {
                                            spacing = 5
                                            datacontext = "[Title.GetHolder]"
                                            vbox = {
                                                spacing = 5
                                                text_single = {
                                                    layoutpolicy_horizontal = expanding
                                                    default_format = "#T"
                                                    align = center
                                                    raw_text = "[Character.GetShortUIName]"
                                                }

                                                text_single = {
                                                    name = "your_county"
                                                    visible = "[ObjectsEqual( Character.Self, GetPlayer )]"
                                                    layoutpolicy_horizontal = expanding
                                                    text = "HOLDING_VIEW_YOUR_COUNTY"
                                                    margin_left = 2
                                                    margin_bottom = 4
                                                    using = Font_Size_Small
                                                }

                                                text_single = {
                                                    name = "top_realm_county"
                                                    visible = "[Character.IsOtherLiegeOrAbove( GetPlayer )]"
                                                    layoutpolicy_horizontal = expanding
                                                    text = "HOLDING_VIEW_TOP_REALM_COUNTY"
                                                    margin_left = 5
                                                    margin_bottom = 4
                                                    using = Font_Size_Small
                                                }

                                                text_single = {
                                                    name = "foreign_county"
                                                    visible = "[Not(Or(ObjectsEqual( Character.Self, GetPlayer ),Character.IsOtherLiegeOrAbove( GetPlayer )))]"
                                                    layoutpolicy_horizontal = expanding
                                                    text = "MAGIC_VIEW_FOREIGN_COUNTY"
                                                    margin_left = 5
                                                    margin_bottom = 4
                                                    using = Font_Size_Small
                                                }
                                            }
                                        }
                                        vbox = {
                                            name = "county_stats"
                                            layoutpolicy_horizontal = expanding

                                            hbox = {
                                                layoutpolicy_horizontal = expanding
                                                datacontext = "[Title.GetProvince.GetCounty]"

                                                text_single = {
                                                    layoutpolicy_horizontal = expanding
                                                    raw_text = "[control|E]:"
                                                }

                                                text_single = {
                                                    raw_text = "[County.GetControlLevel]"
                                                    default_format = "#high"

                                                    background = {
                                                        visible = "[LessThan_CFixedPoint(County.GetControl, '(CFixedPoint)100')]"
                                                        margin = { 5 0 }
                                                        using = Status_Bad
                                                    }

                                                    tooltipwidget = {
                                                        county_control_tooltip_container = {}
                                                    }
                                                }
                                            }

                                            hbox = {
                                                layoutpolicy_horizontal = expanding
                                                datacontext = "[Title.GetProvince.GetCounty]"
                                                visible = "[County.GetCount.GetGovernment.IsAffectedByDevelopment]"

                                                text_single = {
                                                    layoutpolicy_horizontal = expanding
                                                    raw_text = "[development|E]:"
                                                }

                                                text_single = {
                                                    raw_text = "[County.GetDevelopmentLevel]"
                                                    default_format = "#high"

                                                    tooltipwidget = {
                                                        county_development_tooltip_container = {}
                                                    }
                                                }

                                            }
                                            hbox = {
                                                layoutpolicy_horizontal = expanding
                                                text_single = {
                                                    text = "HOLDER_MR_TEXT"
                                                    layoutpolicy_horizontal = expanding
                                                    default_format = "#clickable"
                                                }

                                                text_single = {
                                                    default_format = "#high"
                                                    raw_text = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Title.GetHolder.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                                                    tooltip = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Title.GetHolder.MakeScope.GetScriptValueDesc(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                                                }
                                            }

                                        }
                                        hbox = {
                                            margin_top = 10
                                            button_standard = {
                                                text_single = {
                                                    position = { 0 -2 }
                                                    parentanchor = center
                                                    text = "CHANGE_TITLE_TEXT"
                                                    visible = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet]"
                                                }
                                                onclick = "[GetScriptedGui('get_titles_list_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                                                onclick = "[GetScriptedGui('select_province_start_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                                                onclick = "[GetVariableSystem.Set('spell_province_window', 'yes')]"
                                            }
                                        }
                                    }
                                }
                                vbox = {
                                    spacing = 15
                                    name = "target_info_box_single_army"
                                    layoutpolicy_vertical = expanding
                                    visible = "[And(GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet, GetScriptedGui('spell_target_is_army_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End))]"
                                    datacontext = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).Army]"
                                    vbox = {
                                        spacing = 5
                                        soldiers_and_quality_small = {
                                            datacontext = "[Army.GetComposition]"
                                        }
                                        text_single = {
                                            name = "army_name"
                                            raw_text = "[Army.GetName]"
                                            layoutpolicy_horizontal = expanding
                                            default_format = "#high"
                                            using = Font_Size_Medium
                                            align = center
                                        }
                                        hbox = {
                                            margin_top = 10
                                            button_standard = {
                                                text_single = {
                                                    position = { 0 -2 }
                                                    parentanchor = center
                                                    text = "CHANGE_ARMY_TEXT"
                                                    visible = "[GetPlayer.MakeScope.Var( 'spell_recipient' ).IsSet]"
                                                }
                                                onclick = "[GetScriptedGui( 'create_armies_list_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                                                onclick = "[GetScriptedGui('select_province_start_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                                                onclick = "[GetVariableSystem.Set('spell_province_window', 'yes')]"
                                            }
                                        }
                                    }
                                    vbox = {
                                        spacing = 5
                                        layoutpolicy_horizontal = expanding
                                        datacontext = "[Army.GetCommander]"
                                        text_single = {
                                            default_format = "#V"
                                            raw_text = "[Character.GetShortUIName]"
                                        }
                                        hbox = {
                                            layoutpolicy_horizontal = expanding
                                            text_single = {
                                                layoutpolicy_horizontal = expanding
                                                text = "COMMANDER_ADVANTAGE_TEXT"
                                            }
                                            text_single = {
                                                default_format = "#clickable"
                                                tooltip = "[Character.GetCommanderAdvantageDesc]"
                                                raw_text = "[Character.GetCommanderAdvantage]"
                                            }
                                        }
                                        hbox = {
                                            layoutpolicy_horizontal = expanding
                                            text_single = {
                                                layoutpolicy_horizontal = expanding
                                                text = "COMMANDER_MR_LABEL"
                                            }
                                            text_single = {
                                                default_format = "#clickable"
                                                tooltip = "[Army.GetCommander.MakeScope.GetScriptValueDesc(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                                                raw_text = "[Army.GetCommander.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                                            }
                                        }
                                        hbox = {
                                            layoutpolicy_horizontal = expanding
                                            text_single = {
                                                layoutpolicy_horizontal = expanding
                                                raw_text = "[prowess|E]:"
                                            }
                                            text_single = {
                                                default_format = "#clickable"
                                                tooltip = "[Character.GetProwessBreakdown]"
                                                raw_text = "[Character.GetProwess]"
                                            }
                                        }
                                    }
                                }
                            }
                            background = {
                                using = Background_Area_Dark
                                alpha = 0.5
                            }
                        }
                    }

                }
            }

            hbox = {

                name = "effects_box"
                layoutpolicy_horizontal = expanding
                layoutpolicy_vertical = expanding
                vbox = {
                    name = "effects_on_target"
                    datacontext = "[GetPlayer.MakeScope.Char]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding

                    background = {
                        using = Background_Area_With_Header
                    }

                    text_single = {
                        text = "SPELL_EFFECTS"
                        align = center
                        layoutpolicy_horizontal = expanding
                        margin = { 15 4 }
                    }

                    hbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding

                        margin_top = 5
                        spacing = 5
                        margin_left = 6


                        scrollbox = {
                            layoutpolicy_horizontal = expanding
                            layoutpolicy_vertical = expanding
                            size = { 650 200 }
                            blockoverride "scrollbox_background" {}
                            blockoverride "scrollbox_background_fade" {}
                            blockoverride "scrollbox_content"
                            {
                                layoutpolicy_horizontal = expanding
                                text_multi = {
                                    max_width = 625
                                    name = "effects_info"
                                    autoresize = yes
                                    layoutpolicy_horizontal = expanding
                                    layoutpolicy_vertical = expanding
                                    text = "[GetScriptedGui( 'spell_tooltip_sgui' ).ExecuteTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('tooltip_target', GetPlayer.MakeScope).End)]"
                                }
                            }
                        }

                        expand = {}
                    }
                }
            }
        }

        # Cast Spell Area
        hbox = {
            margin = { 15 0 }
            layoutpolicy_horizontal = expanding

            vbox = {
                spacing = 15
                visible = "[GetScriptedGui('does_spell_have_ranks_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                text_single = {
                    text = "SPELL_RANK_TEXT"
                }
                hbox = {
                    margin_bottom = 5
                    spacing = 5
                    button_icon_custom = {
                        name = "rank_1_button"
                        size = { 30 30 }
                        texture = "gfx/interface/icons/currencies/icon_stat_mana_crystal.dds"
                        modify_texture = {
                            texture = "gfx/interface/colors/black.dds"
                            alpha = 1
                            blend_mode = overlay
                            visible = "[And(GetPlayer.MakeScope.Var('current_spell_rank').IsSet, GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.Var('current_spell_rank').GetValue, '(CFixedPoint)1'))]"
                        }
                        onclick = "[GetScriptedGui('set_spell_rank_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function', MakeScopeFlag('rank_1')).End)]"
                    }
                    button_icon_custom = {
                        name = "rank_2_button"
                        size = { 30 30 }
                        texture = "gfx/interface/icons/currencies/icon_stat_mana_crystal.dds"
                        modify_texture = {
                            texture = "gfx/interface/colors/black.dds"
                            alpha = 1
                            blend_mode = overlay
                            visible = "[And(GetPlayer.MakeScope.Var('current_spell_rank').IsSet, GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.Var('current_spell_rank').GetValue, '(CFixedPoint)2'))]"
                        }
                        onclick = "[GetScriptedGui('set_spell_rank_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function', MakeScopeFlag('rank_2')).End)]"
                        enabled = "[GetScriptedGui('has_unlocked_spell_rank_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('spell_rank', MakeScopeFlag('rank_2')).End)]"

                    }
                    button_icon_custom = {
                        name = "rank_3_button"
                        size = { 30 30 }
                        texture = "gfx/interface/icons/currencies/icon_stat_mana_crystal.dds"
                        modify_texture = {
                            texture = "gfx/interface/colors/black.dds"
                            alpha = 1
                            blend_mode = overlay
                            visible = "[And(GetPlayer.MakeScope.Var('current_spell_rank').IsSet, GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.Var('current_spell_rank').GetValue, '(CFixedPoint)3'))]"
                        }
                        onclick = "[GetScriptedGui('set_spell_rank_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function', MakeScopeFlag('rank_3')).End)]"
                        enabled = "[GetScriptedGui('has_unlocked_spell_rank_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('spell_rank', MakeScopeFlag('rank_3')).End)]"
                    }
                }
            }
            hbox = {

                button_normal = {
                    gfxtype = framedbuttongfx
                    effectname = "NoHighlight"
                    upframe = 1
                    downframe = 2
                    overframe = 1
                    disableframe = 1

                    size = { 300 80 }
                    texture = "gfx/interface/bookmarks/start_buttons/bm_867_adventurers.dds"

                    modify_texture = {
                        texture = "gfx/interface/bookmarks/start_buttons/bm_867_carolingians.dds"
                        alpha = 0.5
                        blend_mode = overlay
                    }

                    modify_texture = {
                        texture = "gfx/interface/colors/red.dds"
                        alpha = 0.2
                        blend_mode = overlay
                    }
                    modify_texture = {
                        texture = "gfx/interface/buttons/button_fancy_overlay.dds"
                        blend_mode = overlay
                    }

                    modify_texture = {
                        name = "glow"
                        texture = "gfx/interface/buttons/button_fancy_glow.dds"
                        blend_mode = colordodge
                        alpha = 0

                        spriteborder = { 20 0 }
                        spritetype = corneredStretched
                    }

                    modify_texture = {
                        texture = "gfx/interface/component_masks/mask_center_shimmer.dds"
                        blend_mode = mask
                    }

                    modify_texture = {
                        name = "shimmer"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                        rotate_uv = 0
                    }

                    modify_texture = {
                        name = "shimmer_2"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                        rotate_uv = 0
                    }

                    modify_texture = {
                        name = "shimmer_3"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                    }

                    modify_texture = {
                        name = "shimmer_4"
                        texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
                        blend_mode = colordodge
                        spriteType = corneredTiled
                    }

                    state = {
                        trigger_on_create = yes
                        name = a
                        next = b
                        duration = 0

                        modify_texture = {
                            name = "shimmer"
                            translate_uv = { -0.1 0 }
                            alpha = 0.1
                            rotate_uv = 0
                        }

                        modify_texture = {
                            name = "shimmer_2"
                            translate_uv = { 0.1 0 }
                            alpha = 0.3
                            rotate_uv = 0
                        }

                        modify_texture = {
                            name = "shimmer_3"
                            translate_uv = { 1 0 }
                            alpha = 0.1
                        }

                        modify_texture = {
                            name = "shimmer_4"
                            translate_uv = { -1 0 }
                            alpha = 0.5
                        }
                    }

                    state = {
                        name = b
                        next = c
                        duration = 10

                        modify_texture = {
                            name = "shimmer"
                            translate_uv = { 0.1 0 }
                            alpha = 0.3
                            rotate_uv = 180
                        }

                        modify_texture = {
                            name = "shimmer_2"
                            translate_uv = { -0.1 0 }
                            alpha = 0.1
                            rotate_uv = -180
                        }

                        modify_texture = {
                            name = "shimmer_3"
                            translate_uv = { 0 0 }
                            alpha = 0.5
                        }

                        modify_texture = {
                            name = "shimmer_4"
                            translate_uv = { 0 0 }
                            alpha = 0.1
                        }
                    }

                    state = {
                        name = c
                        next = a
                        duration = 10

                        modify_texture = {
                            name = "shimmer"
                            translate_uv = { -0.1 0 }
                            alpha = 0.1
                            rotate_uv = 360
                        }

                        modify_texture = {
                            name = "shimmer_2"
                            translate_uv = { 0.1 0 }
                            alpha = 0.3
                            rotate_uv = -360
                        }

                        modify_texture = {
                            name = "shimmer_3"
                            translate_uv = { -1 0 }
                            alpha = 0.1
                        }

                        modify_texture = {
                            name = "shimmer_4"
                            translate_uv = { 1 0 }
                            alpha = 0.5
                        }
                    }

                    state = {
                        name = _mouse_hierarchy_enter

                        modify_texture = {
                            name = "glow"
                            alpha = 1
                        }
                    }

                    state = {
                        name = _mouse_hierarchy_leave
                        duration = 0.2
                        using = Animation_Curve_Default

                        modify_texture = {
                            name = "glow"
                            alpha = 0
                        }
                    }

                    state = {
                        name = _mouse_press
                        duration = 0
                        using = Animation_Curve_Default

                        modify_texture = {
                            name = "glow"
                            alpha = 0
                        }
                    }
                    tooltip = "[GetScriptedGui('can_cast_spell_sgui').IsValidTooltip( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                    enabled = "[GetScriptedGui('can_cast_spell_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                    onclick = "[GetScriptedGui( 'cast_spell_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    onclick = "[GetVariableSystem.Clear( 'current_spell_selected' )]"
                    onclick = "[GetVariableSystem.Clear( 'current_magic_selected' )]"
                    onclick = "[GetVariableSystem.Clear('spell_province_window')]"

                    onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                    onclick = "[GetVariableSystem.Clear( 'spellbook_window' )]"
                    onclick = "[GetVariableSystem.Clear( 'current_spell_selected' )]"
                    onclick = "[GetVariableSystem.Clear( 'current_magic_selected' )]"
                    onclick = "[GetVariableSystem.Clear( 'current_spell_rank' )]"
                    onclick = "[GetScriptedGui( 'close_spellbook_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"

                    text_single = {
                        parentanchor = center
                        text = "CAST_SPELL_TEXT"
                        align = nobaseline
                        using = Font_Size_Big
                        default_format = "#high;bold;glow_color:{0,0,0,1}"
                        background = {
                            texture ="gfx/interface/colors/black.dds"
                            alpha = 0.2
                            margin = { 50% 0}
                            modify_texture = {
                                texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                blend_mode = alphamultiply

                            }
                        }

                    }

                    icon = {
                        size = { 300 80 }
                        texture = "gfx/interface/bookmarks/start_buttons/start_frame.dds"
                    }
                }

            }
            # Spirit / deCAY
            vbox = {
                spacing = 5
                visible = "[GetScriptedGui('is_spell_elemental_sgui').IsValid( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"

                text_single = {
                    text = "ELEMENTAL_TYPE_TEXT"
                }

                hbox = {
                    spacing = 5
                    margin_bottom = 3
                    # Spirit
                    button_standard = {
                        size = { 80 50 }
                        text_single = {
                            position = { 20 22 }
                            text = "magic_gui_spirit"
                            default_format = "#clickable"
                        }
                        text_single = {
                            position = { 28 0 }
                            text = "[Localize(Concatenate(Concatenate('game_concept_wc_', PlayerGetVar('current_spell_class').GetFlagName), '_spirit_icon_gc'))]"
                        }
                        tooltip = "[wc_elemental_magic_spirit|E]"
                        onclick = "[GetScriptedGui('set_spirit_decay_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function',  MakeScopeFlag('spirit')).End)]"
                        down = "[And(PlayerHasVar('elemental_type'), ObjectsEqual(PlayerGetVar('elemental_type').GetFlagName, 'spirit'))]"
                    }

                    # Decay
                    button_standard = {
                        tooltip = "[wc_elemental_magic_decay|E]"
                        size = { 80 50 }
                        text_single = {
                            position = { 20 22 }
                            text = "magic_gui_decay"
                            default_format = "#clickable"
                        }
                        text_single = {
                            position = { 28 0 }
                            text = "[Localize(Concatenate(Concatenate('game_concept_wc_', PlayerGetVar('current_spell_class').GetFlagName), '_decay_icon_gc'))]"
                        }
                        onclick = "[GetScriptedGui('set_spirit_decay_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('function',  MakeScopeFlag('decay')).End)]"
                        down = "[And(PlayerHasVar('elemental_type'), ObjectsEqual(PlayerGetVar('elemental_type').GetFlagName, 'decay'))]"
                    }
                }
            }
            background = {
                using = Background_Area
                modify_texture = {
                    texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
                    blend_mode = alphamultiply
                    alpha = 0.8
                }
            }
        }

        # Tabs
        hbox = {
            layoutpolicy_horizontal = expanding
            vbox = {
                layoutpolicy_horizontal = expanding
                button_tab = {
                    name = "spells_button"
                    text = "SPELLS_BUTTON"
                    layoutpolicy_horizontal = expanding
                    mirror = vertical
                    onclick = "[GetVariableSystem.Set( 'spellbook_view', 'spells_view' )]"
                    down = "[GetVariableSystem.HasValue( 'spellbook_view', 'spells_view' )]"
                }


            }
            vbox = {
                layoutpolicy_horizontal = expanding
                button_tab = {
                    name = "effects_button"
                    text = "SPELL_EFFECTS"
                    mirror = vertical
                    layoutpolicy_horizontal = expanding
                    onclick = "[GetVariableSystem.Set( 'spellbook_view', 'effects_view' )]"
                    down = "[GetVariableSystem.HasValue( 'spellbook_view', 'effects_view' )]"
                    enabled = "[PlayerHasVar('current_spell_name')]"
                    hbox = {
                        visible = "[Not(PlayerHasVar('current_spell_name'))]"
                        tooltip = "CHOOSE_SPELL_TEXT"
                    }
                }
            }
        }


    }
}

# Kinda like Grant titles window
window = {
    name = "province_selection_window"
    parentanchor = vcenter|right
    position = { -15 5 }
    size = { 550 960 }
    movable = no
    layer = middle

    using = Window_Background
    using = Window_Decoration_Spike

    visible = "[GetVariableSystem.HasValue('spell_province_window', 'yes')]"

    state = {
        name = _show
        using = Animation_FadeIn_Quick
        using = Sound_WindowShow_Standard
    }

    state = {
        name = _hide
        using = Animation_FadeOut_Quick
        using = Sound_WindowHide_Standard
        on_start = "[GetScriptedGui('open_spellbook_lite_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
    }

    vbox = {
        using = Window_Margins

        header_pattern_interaction = {
            layoutpolicy_horizontal = expanding

            blockoverride "header_text"
            {
                text = "SPELL_TARGET_TEXT"
            }

            blockoverride "button_close"
            {
                onclick = "[GetVariableSystem.Clear('spell_province_window')]"
            }

        }
        banner_with_portrait = {
            name = "portrait_and_info"
            layoutpolicy_horizontal = expanding
            blockoverride "banner_with_portrait_text"
            {
                text = "SPELL_TARGET_GENERIC_TEXT"
                margin_bottom = 75
            }

            hbox = {
                visible = "[Or(GetScriptedGui( 'spell_target_is_province_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui( 'spell_target_is_province_list_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                margin_bottom = 10
                margin_left = 20
                layoutpolicy_horizontal = expanding
                button_checkbox_label = {
                    layoutpolicy_horizontal = expanding
                    onclick = "[GetScriptedGui('toggle_titles_list_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                    onclick = "[GetScriptedGui('get_titles_list_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
                    blockoverride "text"
                    {
                        text = "SPELL_DIRECTLY_HELD"
                    }
                    blockoverride "checkbox"
                    {
                        checked = "[GetPlayer.MakeScope.Var('direct_only').IsSet]"
                    }
                }
            }

            blockoverride "portrait"
            {
                portrait_head = {
                    datacontext = "[GetPlayer.MakeScope.Var('original_recipient').Char]"

                    blockoverride "portrait_transformation"
                    {
                        portrait_scale = { -1 1 }
                        portrait_offset = { 1 0 }
                    }
                }
            }

        }
        spacer = {
            size = { 0 10 }
        }
        scrollbox = {
            name = "titles_list"
            visible = "[Or(GetScriptedGui( 'spell_target_is_province_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui( 'spell_target_is_province_list_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
            layoutpolicy_horizontal = expanding
            layoutpolicy_vertical = expanding
            blockoverride "scrollbox_empty"
            {
                visible = "[IsDataModelEmpty(GetPlayer.MakeScope.GetList( 'target_titles' ))]"
                text = "SPELL_NO_TITLES"
            }

            blockoverride "scrollbox_content"
            {
                vbox_list_spell_titles_selection = {
                    layoutpolicy_horizontal = expanding
                }
            }
        }
        scrollbox = {
            name = "armies_list"
            visible = "[GetScriptedGui( 'spell_target_is_army_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
            layoutpolicy_horizontal = expanding
            layoutpolicy_vertical = expanding
            blockoverride "scrollbox_empty"
            {
                visible = "[IsDataModelEmpty(GetPlayer.MakeScope.GetList( 'target_armies' ))]"
                text = "SPELL_NO_ARMIES"
            }
            blockoverride "scrollbox_content"
            {
                vbox_list_spell_armies_selection = {
                    layoutpolicy_horizontal = expanding
                }
            }
        }
        spacer = {
            size = { 0 10 }
        }
    }
}


# Sidebar
widget = {
    name = "wc_widget_magic"
    parentanchor = top|right
    layer = windows_layer
    # So it's not possible to click county behind the interface
    alwaystransparent = no
    filter_mouse = all

    using = Window_Size_MainTab
    #size = { 655 100% }

    visible = "[GetVariableSystem.HasValue( 'right_window_open', 'widget_magic' )]"

    state = {
        name = _show
        using = Animation_FadeIn_Quick
        using = Sound_WindowShow_Standard
        using = Window_Position_MainTab
        on_start = "[GetVariableSystem.Set( 'right_window_open', 'widget_magic' )]"
        on_start = "[GetVariableSystem.Set( 'magic_tab_view', 'spells_view' )]"
        on_start = "[GetScriptedGui( 'init_spells_sgui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
    }

    state = {
        name = _hide
        using = Animation_FadeOut_Quick
        using = Sound_WindowHide_Standard
        using = Window_Position_MainTab_Hide

        on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'none' ) )]"
        on_start = "[GetVariableSystem.Clear( 'renaming_open' )]"
    }

    margin_widget = {
        size = { 100% 100% }
        margin = { 0 26 }

        using = Window_Background

        widget = {
            size = { 100% 100% }

            # using = Window_Decoration_Thin

            vbox = {
                using = Window_Margins

                scrollbox = {
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    scrollbar_vertical = {
                        using = Scrollbar_Vertical_White
                    }
                    blockoverride "scrollbox_background_fade"
                    {
                    }
                    blockoverride "scrollbox_background"
                    {
                    }
                    blockoverride "scrollbox_content"
                    {
                        spacing = 20
                        header_with_picture = {
                            layoutpolicy_horizontal = expanding
                            size = { 0 120 }
                            blockoverride "header_text"
                            {
                                text = "MAGIC_WINDOW_TITLE"
                            }

                            blockoverride "illustration_texture" {
                                texture = "gfx/interface/illustrations/window_headers/magic.dds"
                                alpha = 0.2
                                modify_texture = {
                                    texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
                                    blend_mode = alphamultiply
                                }
                            }

                            button_standard = {
                                parentanchor = center
                                position = { 0 20 }
                                text = "OPEN_SPELLBOOK_TEXT"
                                down = "[GetVariableSystem.HasValue( 'spellbook_window', 'yes' )]"
                                onclick = "[ToggleGameView( 'character_finder' )]"
                                onclick = "[GetVariableSystem.Set( 'character_finder_magic', 'yes' )]"
                            }

                            blockoverride "button_close"
                            {
                                onclick = "[GetVariableSystem.Clear( 'right_window_open' )]"
                            }
                        }
                        # Tabs
                        hbox = {
                            layoutpolicy_horizontal = expanding
                            vbox = {
                                layoutpolicy_horizontal = expanding
                                button_tab = {
                                    name = "spells_button"
                                    text = "SPELLS_BUTTON"
                                    layoutpolicy_horizontal = expanding
                                    onclick = "[GetVariableSystem.Set( 'magic_tab_view', 'spells_view' )]"
                                    down = "[GetVariableSystem.HasValue( 'magic_tab_view', 'spells_view' )]"
                                }

                            }
                            vbox = {
                                layoutpolicy_horizontal = expanding
                                button_tab = {
                                    name = "statisics_button"
                                    text = "STATISTICS_TEXT"
                                    layoutpolicy_horizontal = expanding
                                    onclick = "[GetVariableSystem.Set( 'magic_tab_view', 'stats_view' )]"
                                    down = "[GetVariableSystem.HasValue( 'magic_tab_view', 'stats_view' )]"
                                }
                            }
                            vbox = {
                                layoutpolicy_horizontal = expanding
                                button_tab = {
                                    name = "monitor_button"
                                    text = "MONITOR_TEXT"
                                    layoutpolicy_horizontal = expanding
                                    onclick = "[GetVariableSystem.Set( 'magic_tab_view', 'monitor_view' )]"
                                    down = "[GetVariableSystem.HasValue( 'magic_tab_view', 'monitor_view' )]"
                                }
                            }
                        }

                        vbox = { # Spells Tab
                            visible = "[GetVariableSystem.HasValue( 'magic_tab_view', 'spells_view' )]"
                            spacing = 20
                            text_label_center = {
                                text = "CURRENT_SPELL_TEXT"
                                fontsize = 20
                                default_format = "#high"
                            }
                            margin_right = 15
                            # Current casting spells
                            vbox = {
                                name = "current_spells"
                                layoutpolicy_horizontal = expanding
                                spacing = 10

                                text_label_center = {
                                    text = "CURRENT_CASTING_SPELLS_TEXT"
                                }

                                text_single = {
                                    text = "NO_CAST_SPELLS_TEXT"
                                    default_format = "#italic"
                                    visible = "[Not(PlayerGuiValid('wc_is_casting_spells_sgui'))]"
                                }

                                dynamicgridbox = {
                                    visible = "[PlayerGuiValid('wc_is_casting_spells_sgui')]"
                                    datamodel = "[GetPlayer.MakeScope.GetList( 'current_spells_casting' )]"
                                    allow_outside = yes
                                    item = {
                                        widget = {
                                            size = { 525 175 }
                                            allow_outside = yes
                                            background = {
                                                using = Background_Area
                                            }
                                            hbox = {
                                                margin_right = 15
                                                margin_left = 15
                                                layoutpolicy_vertical = expanding
                                                layoutpolicy_horizontal = expanding
                                                spacing = 30
                                                button_normal = {
                                                    name = "spell_button"
                                                    size = { 120 120 }

                                                    icon = {
                                                        texture = "[GetCultureInnovationType(Concatenate(PlayerGetVar(Concatenate(Scope.GetFlagName, '_class')).GetFlagName, '_magic')).GetIcon]"
                                                        size = { 100% 100% }
                                                    }

                                                    progresspie = {
                                                        name = "progress"
                                                        size = { 120 120 }
                                                        texture = "gfx/interface/progressbars/action_progress_thin.dds"
                                                        framesize = { 128 128 }
                                                        frame = 2
                                                        widgetanchor = top|hcenter
                                                        parentanchor = top|hcenter
                                                        value = "[Multiply_float(FixedPointToFloat(GetPlayer.MakeScope.Var(Concatenate(Scope.GetFlagName, '_progress_percent')).GetValue), '(float)0.01')]"
                                                        min = 0
                                                        max = 1
                                                    }
                                                }
                                                hbox = {
                                                    layoutpolicy_horizontal = expanding
                                                    spacing = 5
                                                    vbox = {
                                                        layoutpolicy_horizontal = expanding
                                                        spacing = 30
                                                        vbox = {
                                                            spacing = 5
                                                            text_single = {
                                                                fontsize = 20
                                                                align = nobaseline
                                                                default_format = "#bold"
                                                                text = "[Localize(Concatenate('game_concept_wc_spell_', Scope.GetFlagName))]"

                                                                tooltipwidget = {
                                                                    widget_spell_breakdown_tooltip = {}
                                                                }
                                                            }

                                                            text_single = {
                                                                text = "DAYS_UNTIL_FINISH"
                                                            }
                                                        }

                                                        button_standard = {
                                                            text = "CANCEL_CAST_BUTTON"
                                                            onclick = "[GetScriptedGui( 'cancel_cast_sgui' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'spell', MakeScopeFlag(Scope.GetFlagName)).End)]"
                                                        }
                                                    }

                                                    vbox = {
                                                        spacing = 10
                                                        layoutpolicy_horizontal = expanding
                                                        text_single = {
                                                            text = "SPELL_TARGETS_TEXT"
                                                        }
                                                        # Single Target - Character
                                                        hbox = {
                                                            layoutpolicy_horizontal = expanding
                                                            visible = "[ObjectsEqual('character', PlayerGetVar(Concatenate(Scope.GetFlagName, '_target_type')).GetFlagName)]"
                                                            portrait_head_small = {
                                                                datacontext = "[PlayerGetVar(Concatenate(Scope.GetFlagName, '_recipient')).Char]"
                                                                blockoverride "opinion_box"
                                                                {}
                                                                blockoverride "portrait_icons"
                                                                {}
                                                            }
                                                        }
                                                        # Single Target - Title
                                                        hbox = {
                                                            layoutpolicy_horizontal = expanding
                                                            visible = "[ObjectsEqual('title', PlayerGetVar(Concatenate(Scope.GetFlagName, '_target_type')).GetFlagName)]"
                                                            coa_title_small = {
                                                                datacontext = "[PlayerGetVar(Concatenate(Scope.GetFlagName, '_recipient')).Title]"
                                                            }
                                                        }
                                                        # Single Target - Army
                                                        hbox = {
                                                            layoutpolicy_horizontal = expanding
                                                            visible = "[ObjectsEqual('army', PlayerGetVar(Concatenate(Scope.GetFlagName, '_target_type')).GetFlagName)]"
                                                            datacontext = "[PlayerGetVar(Concatenate(Scope.GetFlagName, '_recipient')).Army]"
                                                            vbox = {
                                                                spacing = 5
                                                                portrait_head_small = {
                                                                    datacontext = "[Army.GetCommander]"
                                                                    blockoverride "opinion_box"
                                                                    {}
                                                                    blockoverride "portrait_icons"
                                                                    {}
                                                                }
                                                                text_single = {
                                                                    name = "army_name"
                                                                    raw_text = "[Army.GetName]"
                                                                    default_format = "#high"
                                                                }
                                                            }
                                                        }
                                                        # Multi Target - Title
                                                        hbox = {
                                                            layoutpolicy_horizontal = expanding
                                                            visible = "[ObjectsEqual('title_list', PlayerGetVar(Concatenate(Scope.GetFlagName, '_target_type')).GetFlagName)]"
                                                            dynamicgridbox = {
                                                                datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_targets_list'))]"
                                                                datamodel_wrap = 3
                                                                flipdirection = yes
                                                                item = {
                                                                    coa_title_small = {
                                                                        datacontext = "[Scope.Title]"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        # Multi Target - Character
                                                        hbox = {
                                                            layoutpolicy_horizontal = expanding
                                                            visible = "[ObjectsEqual('character_list', PlayerGetVar(Concatenate(Scope.GetFlagName, '_target_type')).GetFlagName)]"
                                                            dynamicgridbox = {
                                                                datamodel = "[GetPlayer.MakeScope.GetList(Concatenate(Scope.GetFlagName, '_targets_list'))]"
                                                                datamodel_wrap = 3
                                                                flipdirection = yes
                                                                item = {
                                                                    portrait_head_small = {
                                                                        datacontext = "[Scope.Char]"
                                                                        blockoverride "opinion_box"
                                                                        {}
                                                                        blockoverride "portrait_icons"
                                                                        {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }

                                                }

                                            }

                                        }
                                    }
                                }
                            }

                            # Currrent spells on cooldown
                            vbox = {
                                name = "current_spells_cd"
                                layoutpolicy_horizontal = expanding
                                spacing = 10

                                text_label_center = {
                                    text = "CURRENT_CD_SPELLS_TEXT"
                                }

                                text_single = {
                                    text = "NO_CD_SPELLS_TEXT"
                                    default_format = "#italic"
                                    visible = "[Not(PlayerGuiValid('wc_has_cd_spells_sgui'))]"
                                }

                                dynamicgridbox = {
                                    visible = "[PlayerGuiValid('wc_has_cd_spells_sgui')]"
                                    datamodel = "[GetPlayer.MakeScope.GetList( 'spells_cd' )]"
                                    item = {
                                        widget = {
                                            size = { 525 75 }
                                            background = {
                                                using = Background_Area
                                            }
                                            layoutpolicy_horizontal = expanding
                                            hbox = {
                                                layoutpolicy_vertical = expanding
                                                layoutpolicy_horizontal = expanding
                                                spacing = 30
                                                hbox = {
                                                    layoutpolicy_horizontal = expanding
                                                    spacing = 5
                                                    vbox = {
                                                        layoutpolicy_horizontal = expanding
                                                        text_single = {
                                                            fontsize = 20
                                                            align = nobaseline
                                                            default_format = "#bold"
                                                            text = "[Localize(Concatenate('game_concept_wc_spell_', Scope.GetFlagName))]"

                                                            tooltipwidget = {
                                                                widget_spell_breakdown_tooltip = {}
                                                            }
                                                        }

                                                        text_single = {
                                                            text = "DAYS_UNTIL_OFF_CD"
                                                        }
                                                    }
                                                }
                                            }
                                            divider_light = {
                                                layoutpolicy_horizontal = expanding
                                                modify_texture = {
                                                    texture = "gfx/interface/component_masks/mask_fade_circle.dds"
                                                    blend_mode = alphamultiply
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        vbox = { # Stats Tab
                            visible = "[GetVariableSystem.HasValue( 'magic_tab_view', 'stats_view' )]"
                            spacing = 20
                            vbox = {
                                spacing = 10
                                text_label_center = {
                                    text = "MAGIC_RESISTANCE_TEXT"
                                    fontsize = 20
                                    default_format = "#high"
                                }
                                dynamicgridbox = {
                                    flipdirection = yes
                                    datamodel_wrap = 2
                                    datamodel = "[GetPlayer.MakeScope.GetList('spell_types')]"
                                    item = {
                                        container = {
                                            background = {
                                                texture = "[GetCultureInnovationType(Concatenate(Scope.GetFlagName, '_magic_bg')).GetIcon]"
                                                fittype = centercrop
                                                alpha = 0.1
                                                framesize = { 500 1500 }
                                                modify_texture = {
                                                    texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
                                                    blend_mode = alphamultiply
                                                    alpha = 1
                                                }
                                            }
                                            button_standard_clean = {
                                                size = { 250 75 }
                                                text = "MAGIC_RESISTANCE_SCOPE_TEXT"
                                                text_single = { # BAD MR
                                                    parentanchor = center
                                                    position = { 0 5 }
                                                    fontsize = 24
                                                    text = "[GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value'))]"
                                                    default_format = "#low;color_red"
                                                    visible = "[LessThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_bad_value'))]"
                                                }
                                                text_single = { # DECENT MR
                                                    parentanchor = center
                                                    position = { 0 5 }
                                                    fontsize = 24
                                                    text = "[GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value'))]"
                                                    default_format = "#low;color_light_red"
                                                    visible = "[And(GreaterThan_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_bad_value')), LessThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_decent_value')))]"
                                                }
                                                text_single = { # GOOD MR
                                                    parentanchor = center
                                                    position = { 0 5 }
                                                    fontsize = 24
                                                    text = "[GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value'))]"
                                                    default_format = "#low;color_yellow"
                                                    visible = "[And(GreaterThan_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_decent_value')), LessThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_good_value')))]"
                                                }
                                                text_single = { # GR8 MR
                                                    parentanchor = center
                                                    position = { 0 5 }
                                                    fontsize = 24
                                                    text = "[GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value'))]"
                                                    default_format = "#low;color_green"
                                                    visible = "[And(GreaterThan_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_good_value')), LessThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_great_value')))]"
                                                }
                                                text_single = { # EXCELENT MR
                                                    parentanchor = center
                                                    position = { 0 5 }
                                                    fontsize = 24
                                                    text = "[GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value'))]"
                                                    default_format = "#low;color_dark_green"
                                                    visible = "[GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value')), GetPlayer.MakeScope.ScriptValue('wc_magic_resistance_excellent_value'))]"
                                                }
                                                tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate(Concatenate('wc_', Scope.GetFlagName), '_magic_resistance_value'))]"
                                            }
                                        }
                                    }
                                }
                            }
                            vbox = {
                                layoutpolicy_horizontal = expanding
                                margin = { 50 0 }
                                spacing = 10
                                text_label_center = {
                                    text = "STATISTICS_TEXT"
                                    fontsize = 20
                                    default_format = "#high"
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding
                                    name = "known_spells"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "KNOWN_SPELLS_TEXT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        fontsize = 16
                                        text = "[PlayerGetVar('known_spells_count').GetValue]"
                                        default_format = "#underline"
                                        tooltipwidget = {
                                            known_spells_tooltip = {}
                                        }
                                    }
                                    text_single = {
                                        text = "NONE_TEXT"
                                        visible = "[Not(PlayerHasVar('known_spells_count'))]"
                                    }
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding
                                    name = "casts_completed"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "CASTS_COMPLETED_TEXT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        fontsize = 16
                                        text = "[PlayerGetVar('casts_completed').GetValue]"
                                        visible = "[PlayerHasVar('casts_completed')]"
                                    }
                                    text_single = {
                                        text = "NONE_TEXT"
                                        visible = "[Not(PlayerHasVar('casts_completed'))]"
                                    }
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding
                                    name = "top_casted_class"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "MOST_CASTED_SPELL_CLASS_TEXT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        fontsize = 16
                                        text = "[Localize(Concatenate('game_concept_wc_spell_school_', PlayerGetVar('first_place_spell_class').GetFlagName))]"
                                        visible = "[PlayerHasVar('first_place_spell_class')]"
                                    }
                                    text_single = {
                                        text = "NONE_TEXT"
                                        visible = "[Not(PlayerHasVar('first_place_spell_class'))]"
                                    }
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding
                                    name = "top_casted_class_cnt"
                                    visible = "[PlayerHasVar('first_place_spell_class_count')]"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "MOST_CASTED_SPELL_CLASS_COUNT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        fontsize = 16
                                        text = "[PlayerGetVar('first_place_spell_class_count').GetValue]"
                                    }
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding

                                    name = "top_casted_spell"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "MOST_CASTED_SPELL_TEXT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        datacontext = "[PlayerGetVar('top_casted_spell')]"
                                        fontsize = 16
                                        text = "[Localize(Concatenate('game_concept_wc_spell_',PlayerGetVar('top_casted_spell').GetFlagName))]"
                                        visible = "[PlayerHasVar('top_casted_spell')]"
                                        default_format = "#underline"
                                        tooltipwidget = {
                                            widget_spell_breakdown_tooltip = {
                                            }
                                        }
                                    }
                                    text_single = {
                                        text = "NONE_TEXT"
                                        visible = "[Not(PlayerHasVar('top_casted_spell'))]"
                                    }
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding
                                    name = "top_casted_spell_cnt"
                                    visible = "[PlayerHasVar('top_casted_spell_cast_count')]"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "MOST_CASTED_SPELL_COUNT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        fontsize = 16
                                        text = "[PlayerGetVar('top_casted_spell_cast_count').GetValue]"
                                    }
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding

                                    name = "last_spell_casted"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "LAST_SPELL_CASTED_TEXT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        datacontext = "[PlayerGetVar('last_spell_casted')]"
                                        fontsize = 16
                                        text = "[Localize(Concatenate('game_concept_wc_spell_',PlayerGetVar('last_spell_casted').GetFlagName))]"
                                        visible = "[PlayerHasVar('last_spell_casted')]"
                                        default_format = "#underline"
                                        tooltipwidget = {
                                            widget_spell_breakdown_tooltip = {
                                            }
                                        }
                                    }
                                    text_single = {
                                        text = "NONE_TEXT"
                                        visible = "[Not(PlayerHasVar('last_spell_casted'))]"
                                    }
                                }

                                hbox = {
                                    layoutpolicy_horizontal = expanding
                                    name = "last_spell_casted_class"
                                    visible = "[PlayerHasVar('last_spell_casted_class')]"
                                    text_single = {
                                        layoutpolicy_horizontal = expanding
                                        text = "LAST_SPELL_CASTED_CLASS_TEXT"
                                        fontsize = 16
                                    }
                                    text_single = {
                                        fontsize = 16
                                        text = "[Localize(Concatenate('game_concept_wc_spell_school_',PlayerGetVar('last_spell_casted_class').GetFlagName))]"
                                        visible = "[PlayerHasVar('last_spell_casted_class')]"
                                    }
                                }
                            }

                        }
                        vbox = { # Monitoring Tab
                            visible = "[GetVariableSystem.HasValue( 'magic_tab_view', 'monitor_view' )]"
                            spacing = 20
                            text_label_center = {
                                text = "MONITORING_TEXT"
                                fontsize = 20
                                default_format = "#high"
                            }

                            text_single = {
                                text = "NO_MONITORING_TEXT"
                                default_format = "#italic"
                                visible = "[Not(PlayerGuiValid('wc_has_monitor_sgui'))]"
                            }

                            # Backdraft
                            vbox = {
                                layoutpolicy_horizontal = expanding
                                visible = "[PlayerGuiValid('wc_monitoring_backdraft_sgui')]"
                                text_label_center = {
                                    text = "game_concept_wc_spell_backdraft"
                                }
                                spacing = 10
                                dynamicgridbox = {
                                    datamodel = "[GetPlayer.MakeScope.GetList( 'backdraft_observer_list' )]"
                                    datamodel_wrap = 3
                                    flipdirection = yes
                                    item = {
                                        margin_widget = {
                                            size = { 175 120 }
                                            margin = { 15 20 }
                                            background = {
                                                using = Background_Area
                                            }
                                            coa_title_small = {
                                                position = { 0 -10 }
                                                parentanchor = center
                                                datacontext = "[Scope.Title]"
                                            }
                                            text_single = {
                                                position = { 0 30 }
                                                max_width = 150
                                                parentanchor = center
                                                text = "[Scope.Title.GetName]"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
types spellbooktypes {
    type vbox_list_spell_titles_selection = vbox {
        name = "titles_grid"
        layoutpolicy_horizontal = expanding
        spacing = 3
        datamodel = "[GetPlayer.MakeScope.GetList( 'target_titles' )]"

        item = {
            widget = {
                name = "title_list_item"
                layoutpolicy_horizontal = expanding
                size = { 0 45 }
                datacontext = "[Scope.Title]"
                button_standard = {
                    size = { 425 45 }
                    name = "title_button"

                    coa_title_tiny_crown = {
                        position = { 0 -8 }
                    }
                    tooltipwidget = {
                        using = LandedTitleTooltip
                    }
                    down = "[GetScriptedGui( 'is_selected_target_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Title.MakeScope).End)]"
                    onclick = "[GetScriptedGui('set_target_or_add_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Title.MakeScope).End)]"
                    enabled = "[GetScriptedGui( 'is_spell_target_valid_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Title.MakeScope).End)]"
                }

                hbox = {
                    margin_left = 45
                    margin_right = 5

                    text_single = {
                        name = "text"
                        default_format = "#V"
                        layoutpolicy_horizontal = expanding
                        raw_text = "[Scope.Title.GetNameNoTooltip]"
                    }
                }
            }
        }

    }
    type vbox_list_spell_armies_selection = vbox {
        name = "armies_grid"
        layoutpolicy_horizontal = expanding
        spacing = 20
        datamodel = "[GetPlayer.MakeScope.GetList( 'target_armies' )]"
        item = {
            vbox = {
                visible = "[Army.GetCommander.IsValid]"
                spacing = 15
                name = "army_list_item"
                layoutpolicy_horizontal = expanding
                size = { 0 45 }
                datacontext = "[Scope.Army]"
                button_standard = {
                    size = { 425 45 }
                    name = "army_button"
                    raw_text = "[Army.GetNameNoTooltip]"
                    tooltip = "CLICK_TO_SELECT_TT"
                    down = "[GetScriptedGui( 'is_selected_target_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Army.MakeScope).End)]"
                    onclick = "[GetScriptedGui('set_target_or_add_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Army.MakeScope).End)]"
                    enabled = "[GetScriptedGui( 'is_spell_target_valid_sgui' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope( 'target', Scope.Army.MakeScope).End)]"
                }

                portrait_head = {
                    datacontext = "[Army.GetOwner]"
                    blockoverride "opinion_box"
                    {}
                    blockoverride "portrait_icons"
                    {}
                }

                vbox = {
                    spacing = 5
                    layoutpolicy_horizontal = expanding
                    text_single = {
                        text = "ARMY_OWNER_TEXT"
                    }
                    soldiers_and_quality_big = {
                        datacontext = "[Army.GetComposition]"
                    }
                }

                hbox = {
                    visible = "[Army.GetCommander.IsValid]"
                    layoutpolicy_horizontal = expanding
                    vbox = {
                        text_multi = {
                            layoutpolicy_horizontal = expanding
                            size = { 275 25 }
                            parentanchor = center
                            raw_text = "ARMY_COMMANDER_TEXT"
                        }
                        text_multi = {
                            layoutpolicy_horizontal = expanding
                            parentanchor = center
                            size = { 275 25 }
                            raw_text = "COMMANDER_MR_TEXT"
                            default_format = "#clickable"
                            tooltip = "[Army.GetCommander.MakeScope.GetScriptValueDesc(Concatenate(Concatenate('wc_', PlayerGetVar('current_spell_class').GetFlagName), '_magic_resistance_value'))]"
                        }
                    }
                    portrait_head_small = {
                        datacontext = "[Army.GetCommander]"
                        blockoverride "opinion_box"
                        {}
                        blockoverride "portrait_icons"
                        {}
                    }
                }
            }
        }
    }
}
