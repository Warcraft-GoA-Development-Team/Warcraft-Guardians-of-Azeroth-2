namespace = pandaria_unification

### Unify Pandaria Decision ###
# By Juke
pandaria_unification.0001 = { # Mogu Empire Restored!
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0001.t
	desc = {
		desc = pandaria_unification.0001.desc.intro
		first_valid = {
			# Mogu
			triggered_desc = {
				trigger = { 
					culture = { has_cultural_pillar = heritage_mogu }  
				}
				desc = pandaria_unification.0001.desc.mogu
			}
			# Others
			desc = pandaria_unification.0001.desc.neutral
		}
	}
	theme = realm
	override_background = wc_throne_of_thunder

	immediate = {
		title:e_pandaria_empire.holder = { save_scope_as = scoped_emperor }
		play_music_cue = wc_mogu_theme_cue
		character:lineofthunderking1 = { save_scope_as = thunderking }
		scope:scoped_emperor = {
			set_nickname_effect = { NICKNAME = nick_the_restorer }
		}
	}

	left_portrait = {
		character = scope:scoped_emperor
		animation = celebrate_hammer
	}
	right_portrait = {
		character = scope:thunderking
		animation = personality_honorable
	}

	option = {
		name = {
			# Mogu/New Emperor
			trigger = {
				culture = {
					has_cultural_pillar = heritage_mogu
				}
			}
			text = pandaria_unification.0001.mogu
		}
		name = {
			# Others
			trigger = {
				NOT = { 
					culture = {
						has_cultural_pillar = heritage_mogu
					}
				}
			}
			text = pandaria_unification.0001.neutral
		}
	}
}
pandaria_unification.0002 = { # Pandaren Empire Reunites!
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0002.t
	desc = pandaria_unification.0002.desc
	theme = realm
	override_background = bp1_courtyard_indian

	immediate = {
		title:e_pandaria_empire.holder = { save_scope_as = scoped_emperor }
		#character: = { save_scope_as = lastemperor } # TBD: Add last Pandaren Emperor
		play_music_cue = "mx_cue_epic_sacral_moment"
		scope:scoped_emperor = {
			set_nickname_effect = { NICKNAME = nick_the_restorer }
		}
	}

	left_portrait = {
		character = scope:scoped_emperor
		animation = personality_honorable
	}

	option = {
		name = {
			# Pandaren/New Emperor
			trigger = {
				culture = {
					has_cultural_pillar = heritage_pandaren
				}
			}
			text = pandaria_unification.0002.pandaren
		}
		name = {
			# Grumpy Mogu
			trigger = {
				culture = {
					has_cultural_pillar = heritage_mogu
				}
			}
			text = pandaria_unification.0002.mogu
		}
		name = {
			# Others
			trigger = {
				NOR = { 
					culture = {
						has_cultural_pillar = heritage_pandaren
					}
					culture = {
						has_cultural_pillar = heritage_mogu
					}
				}
			}
			text = pandaria_unification.0002.neutral
		}
	}
}
pandaria_unification.0003 = { # Generic Pandaria Reunification
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0003.t
	desc = pandaria_unification.0003.desc
	theme = realm
	override_background = bp1_courtyard_indian

	immediate = {
		title:e_pandaria_empire.holder = { save_scope_as = scoped_emperor }
		play_music_cue = "mx_cue_epic_sacral_moment"
		scope:scoped_emperor = {
			set_nickname_effect = { NICKNAME = nick_the_great }
		}
	}

	left_portrait = {
		character = scope:scoped_emperor
		animation = personality_honorable
	}

	option = {
		name = {
			# New Emperor
			trigger = {
				culture = scope:scoped_emperor.culture
			}
			text = pandaria_unification.0003.positive
		}
		name = {
			# Others
			trigger = {
				NOT = { 
					culture = scope:scoped_emperor.culture
				}
			}
			text = pandaria_unification.0003.neutral
		}
	}
}
pandaria_unification.0004 = { # Mogu Empire Restored under Thunder King!
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0004.t
	desc = {
		desc = pandaria_unification.0004.desc.intro
		# Mogu
		triggered_desc = {
			trigger = { 
                culture = { has_cultural_pillar = heritage_mogu }  
			}
			desc = pandaria_unification.0004.desc.mogu
		}
		# Others
		triggered_desc = {
			trigger = { 
				NOT = { culture = { has_cultural_pillar = heritage_mogu } }
			}
			desc = pandaria_unification.0004.desc.neutral
		}
	}
	theme = realm
	override_background = wc_throne_of_thunder

	immediate = {
		title:e_pandaria_empire.holder = { save_scope_as = scoped_emperor }
		play_music_cue = wc_mogu_theme_cue
	}

	left_portrait = {
		character = scope:scoped_emperor
		animation = personality_bold
	}

	option = {
		name = {
			# Mogu/New Emperor
			trigger = {
				culture = {
					has_cultural_pillar = heritage_mogu
				}
			}
			text = pandaria_unification.0004.mogu
		}
		name = {
			# Others
			trigger = {
				NOT = { 
					culture = {
						has_cultural_pillar = heritage_mogu
					}
				}
			}
			text = pandaria_unification.0004.neutral
		}
	}
}


### Resurrect Lei Shen Decision ###
# By Juke
pandaria_unification.0100 = { # The Resurrection of Lei Shen - Reviver meets with Zandalari Prophet
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0100.t
	desc = pandaria_unification.0100.desc
	theme = realm
	override_background = bp1_bonfire

	immediate = {
		save_scope_as = reviver
		create_character = {
			template = prophet_khar_zul_template
			save_scope_as = prophet
			location = root.location
		}
		character:lineofthunderking1 = {
			save_scope_as = lei_shen_old
		}
	}

	left_portrait = {
		character = ROOT
		animation = personality_honorable
	}

	right_portrait = {
		character = scope:prophet
		animation = spymaster
	}
	
	lower_center_portrait = {
		character = scope:lei_shen_old
	}

	option = {
		name = pandaria_unification.0100.a
		custom_tooltip = pandaria_unification.0100.a.tt
		
		# Resurrect the Thunder King
		create_character = {
			template = lei_shen_template
			save_scope_as = lei_shen
			location = root.location
		}
	
		trigger_event = pandaria_unification.0102
	}
}
pandaria_unification.0101 = { # The Rising Storm - Lei Shen Court Setup + Buffs
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0101.t
	desc = pandaria_unification.0101.desc
	theme = realm
	override_background = wc_throne_of_thunder

	immediate = {
		lei_shen_create_court_effect = yes
		save_scope_as = lei_shen
	}
	
	lower_left_portrait = {
		character = scope:jin_rokh_the_breaker
	}
	lower_right_portrait = {
		character = scope:warlord_kao
	}
	lower_center_portrait = {
		character = scope:iron_qon
	}

	left_portrait = {
		character = ROOT
		animation = war_over_win
	}

	right_portrait = {
		character = scope:reviver
		animation = personality_honorable
	}

	option = {
		name = pandaria_unification.0101.a
		
		# Send demands of Subjugation
		custom_tooltip = pandaria_unification.0101.a.tt
		hidden_effect = {
			every_independent_ruler = {
				limit = {
					is_ai = yes
					is_landed = yes
					in_diplomatic_range = scope:lei_shen
					OR = {
						culture = { has_cultural_pillar = heritage_mogu }
						faith = faith:thunder_king
					}
					highest_held_title_tier >= tier_county
					highest_held_title_tier <= tier_kingdom
					NOR = {
						is_at_war_with = scope:lei_shen
						this = scope:lei_shen
					}
				}
				trigger_event = {
					id = pandaria_unification.2001
					days = { 3 12 }
				}
			}
		}
	}
	
	after = {
		# Notification
		every_player = { # News Event
			limit = {
				is_landed = yes
			}
			trigger_event = {
				id = pandaria_unification.0103
				days = 5
			}
		}
	}
}
pandaria_unification.0102 = { # Thunder quakes the Skies - Reviver swears fealty to Lei Shen
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0102.t
	desc = pandaria_unification.0102.desc
	theme = realm
	override_background = wc_throne_of_thunder

	immediate = {
		save_scope_as = reviver
		scope:lei_shen = {
			save_scope_as = lei_shen
			set_variable = {
				name = reviver
				value = ROOT
			}
		}
	}

	left_portrait = {
		character = ROOT
		animation = celebrate_mace
	}

	right_portrait = {
		character = scope:lei_shen
		animation = war_over_win
	}

	option = {
		name = pandaria_unification.0102.a
		scope:lei_shen = {
			lei_shen_effect = yes
		}
		set_player_character = scope:lei_shen
		ai_chance = {
			base = 0
		}
	}

	option = {
		name = pandaria_unification.0102.b
		custom_tooltip = pandaria_unification.0102.warning.tt
		scope:lei_shen = {
			lei_shen_effect = yes
		}
	}
	after = {
		scope:lei_shen = {	# Lei Shen Setup
			create_story = story_thunder_king
		}
		scope:reviver = {
			send_interface_toast = {
				title = pandaria_unification.0101.toast.tt
				left_icon = scope:lei_shen
				add_trait = being_order
			}
		}
	}
}
pandaria_unification.0103 = { # The Thunder King Comes - News Event of Lei Shens Revival
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0103.t
	desc = {
		first_valid = {
			# Mogu
			triggered_desc = {
				trigger = { 
					culture = { has_cultural_pillar = heritage_mogu }  
				}
				desc = pandaria_unification.0103.desc.mogu
			}
			# Trolls
			triggered_desc = {
				trigger = { 
					culture = { has_cultural_pillar = heritage_zulite }  
				}
				desc = pandaria_unification.0103.desc.troll
			}
			# Others
			desc = pandaria_unification.0103.desc.neutral
		}
	}
	theme = realm
	override_background = wc_throne_of_thunder

	immediate = {
		play_music_cue = wc_mogu_theme_cue
		scope:lei_shen = { save_scope_as = lei_shen }
	}

	left_portrait = {
		character = scope:lei_shen
		animation = war_over_win
	}

	right_portrait = {
		character ?= scope:reviver
		animation = celebrate_mace
	}

	option = {
		name = {
			# Mogu
			trigger = {
				culture = {
					has_cultural_pillar = heritage_mogu
				}
			}
			text = pandaria_unification.0103.a.mogu
		}
		name = {
			# Trolls/New Emperor
			trigger = {
				culture = {
					has_cultural_pillar = heritage_zulite
				}
			}
			text = pandaria_unification.0103.a.troll
		}
		name = {
			# Others
			trigger = {
				NOR = { 
					culture = {
						has_cultural_pillar = heritage_mogu
					}
					culture = {
						has_cultural_pillar = heritage_zulite
					}
				}
			}
			text = pandaria_unification.0103.a
		}
	}
}
pandaria_unification.0104 = { # Hidden Event that gives AI troops and gold periodically
	hidden = yes
	immediate = {
		if = {
			limit = {
				is_ai = yes
				current_military_strength < 10000
			}
			lei_shen_spawn_more_troops_ai_effect = yes
		}
		
		if = {
			limit = {
				gold < -800
				is_ai = yes
			}
			add_gold = 2000
		}
		else_if = {
			limit = {
				gold < 300
				is_ai = yes
			}
			add_gold = 1000
		}
	}
}
scripted_trigger title_in_pandaria_empire_trigger = {
	OR = {
		empire = title:e_kun_lai
		empire = title:e_yulin
		empire = title:e_banshan
		#empire = title:e_shekmag # We dont really want him invading the Mantid
		empire = title:e_pandaria_empire
	}
}
scripted_trigger lei_shen_can_war_trigger = { # Can Lei Shen invade this guy?
	# Is independent Ruler (duh, cant invade otherwise)
	is_independent_ruler = yes
	# Not our ancient allies the Zandalari (Though he can still declare war on them normally, they're just not part of his scripted invasions)
	NOR = {
		has_title = title:e_zandalari
		has_title = title:e_empire_of_zul
		is_at_war_with = scope:lei_shen
		is_allied_to = scope:lei_shen
	}
	save_temporary_scope_as = possible_enemy
	scope:lei_shen = {
		can_declare_war = {
			casus_belli = mongol_invasion_war
			defender = scope:possible_enemy
			target_titles = { scope:possible_target.kingdom }
		}
	}
	# He wont invade someone with bigger dudes
	scope:lei_shen.current_military_strength > scope:possible_enemy.current_military_strength
}
pandaria_unification.0105 = { # Hidden Event for AI Thunder King war declaration
	hidden = yes

	trigger = {
		#has_trait = thunder_king
		is_ai = yes
		NOT = { # Pandaria not united
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:create_pandaria_decision
			}
		}
	}

	immediate = {
		debug_log = "thunder_king_log - Invasion Event fired"
		save_scope_as = lei_shen
		
		# Juke note: This if clause is an absolutely vile abomination. No terror wrought by the old gods could ever possibly compare to the terrifying stupidity of these 100 lines of code. May the Titans have mercy upon ye who enter here, presumably to fix some fucked up little problem with Lei Shen invading Outland or something
		# Basically, to make Lei Shen more aggressive, this checks for a random nearby county's holder (or top liege if not independent) to be a valid war target. If they are, Lei Shen will invade the de jure kingdom
		if = {
			limit = {
				scope:lei_shen = {
					is_at_war = no
					any_character_to_title_neighboring_county = {
						title_in_pandaria_empire_trigger = yes
						save_temporary_scope_as = possible_target
						OR = {
							AND = {
								holder = {
									is_independent_ruler = no
								}
								holder.top_liege = {
									lei_shen_can_war_trigger = yes
								}
							}
							holder = {
								is_independent_ruler = yes
								lei_shen_can_war_trigger = yes
							}
						}
					}
				}
			}
			debug_log = "thunder_king_log - Invasion Succeeded Check"
			scope:lei_shen = {
				random_character_to_title_neighboring_county = {
					limit = {
						title_in_pandaria_empire_trigger = yes
						save_temporary_scope_as = possible_target
						OR = {
							AND = {
								holder = {
									is_independent_ruler = no
								}
								holder.top_liege = {
									lei_shen_can_war_trigger = yes
								}
							}
							holder = {
								is_independent_ruler = yes
								lei_shen_can_war_trigger = yes
							}
						}
					}
					save_scope_as = newtarget
					if = {
						limit = {
							holder = {
								is_independent_ruler = no
							}
						}
						holder.top_liege = { save_scope_as = newenemy }
						debug_log = "thunder_king_log - Invasion Target found"
					}
					else = {
						holder = { save_scope_as = newenemy }
						debug_log = "thunder_king_log - Invasion Target found"
					}
					
					weight = { # Weighting
						base = 100
						modifier = { # Consolidating Kun-Lai takes priority
							empire = title:e_kun_lai
							factor = 1.5
						}
						modifier = { # Krasarang Wilds arent terribly important
							empire = title:e_yulin
							factor = 0.8
						}
						modifier = { # The lands beyond the Serpent's Spine are very unimportant
							empire = title:e_shekmag
							factor = 0.1
						}
						modifier = { # Tribals in general are much less important
							holder = { has_government = tribal_government }
							factor = 0.5
						}
						modifier = { # Challenge the Mantid last
							empire = title:e_shekmag
							holder.culture = { has_cultural_pillar = heritage_aqir }
							factor = 0.01
						}
						modifier = { # ...unless they cross the wall!
							NOT = { empire = title:e_shekmag }
							OR = {
								holder = {
									is_independent_ruler = no
									top_liege = {
										has_title = title:e_shekmag
										culture = { has_cultural_pillar = heritage_aqir }
									}
								}
								holder = {
									is_independent_ruler = yes
									has_title = title:e_shekmag
									culture = { has_cultural_pillar = heritage_aqir }
								}
							}
							factor = 2
						}
					}
				}
				# Finally, declare the war
				if = {
					limit = {
						can_declare_war = {
							casus_belli = mongol_invasion_war
							defender = scope:newenemy
							target_titles = { scope:newtarget.kingdom }
						}
					}
					start_war = {
						cb = mongol_invasion_war
						target = scope:newenemy
						target_title = scope:newtarget.kingdom
					}
					debug_log = "thunder_king_log - Invasion begun!"
				}
			}
		}
	}

}
pandaria_unification.0106 = { # Hidden Event for AI Thunder King to claim Pandaria if someone else has it
	hidden = yes

	trigger = {
		#has_trait = thunder_king
		is_ai = yes
		NOT = { has_title = title:e_pandaria_empire }
		title:e_pandaria_empire.holder ?= {
			NOT = { this = ROOT }
		}
	}

	immediate = {
		debug_log = "thunder_king_log - Trying to claim Pandaria Title"
		save_scope_as = lei_shen
		
		# Juke note: This if clause is an absolutely vile abomination. No terror wrought by the old gods could ever possibly compare to the terrifying stupidity of these 100 lines of code. May the Titans have mercy upon ye who enter here, presumably to fix some fucked up little problem with Lei Shen invading Outland or something
		# Basically, to make Lei Shen more aggressive, this checks for a random nearby county's holder (or top liege if not independent) to be a valid war target. If they are, Lei Shen will invade the de jure kingdom
		add_pressed_claim = title:e_pandaria_empire
		if = {
			limit = {
				can_declare_war = {
					casus_belli = claim_cb
					defender = title:e_pandaria_empire.holder
					target_titles = { title:e_pandaria_empire }
				}
				scope:lei_shen = {
					is_at_war = no
				}
			}
			start_war = {
				cb = claim_cb
				target = title:e_pandaria_empire.holder
				target_title = title:e_pandaria_empire
			}
			debug_log = "thunder_king_log - Claiming Pandaria Title!"
		}
		else = {
			trigger_event = { # Try again soon
				id = pandaria_unification.0106
				months = { 3 6 }
			}
		}
	}

}

pandaria_unification.0200 = { # The Death of Lei Shen - News Event of Lei Shens death
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0200.t
	desc = pandaria_unification.0200.desc
	theme = realm
	override_background = wc_throne_of_thunder

	immediate = {
		play_music_cue = "wc_mogu_theme_cue"
	}

	left_portrait = {
		character = scope:lei_shen
		#animation = war_over_win
	}

	option = {
		name = {
			# Mogu
			trigger = {
				culture = {
					has_cultural_pillar = heritage_mogu
				}
			}
			text = pandaria_unification.0200.a.mogu
		}
		name = {
			# Others
			trigger = {
				NOT = { 
					culture = {
						has_cultural_pillar = heritage_mogu
					}
				}
			}
			text = pandaria_unification.0200.a
		}
	}
}

### Resurrect Lei Shen - Zandalari Version ###
# By Juke
pandaria_unification.0300 = { # Zandalari perform ritual to revive Lei Shen
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0300.t
	desc = pandaria_unification.0300.desc
	theme = realm
	override_background = bp1_bonfire

	immediate = {
		save_scope_as = reviver
		
		if = {
			limit = {
				exists = cp:councillor_court_chaplain
			}
			cp:councillor_court_chaplain = {
				save_scope_as = prophet
			}
		}
		else = {
			create_character = {
				template = prophet_khar_zul_template
				save_scope_as = prophet
				location = root.location
			}
		}
		character:lineofthunderking1 = {
			save_scope_as = lei_shen_old
		}
	}

	left_portrait = {
		character = ROOT
		animation = personality_honorable
	}

	right_portrait = {
		character = scope:prophet
		animation = spymaster
	}
	
	lower_center_portrait = {
		character = scope:lei_shen_old
	}

	option = {
		name = pandaria_unification.0300.a
		custom_tooltip = pandaria_unification.0100.a.tt
		
		# Resurrect the Thunder King
		create_character = {
			template = lei_shen_template
			save_scope_as = lei_shen
			location = root.location
		}
	
		trigger_event = pandaria_unification.0301
	}
}
pandaria_unification.0301 = { # Thunder quakes the Skies - Zandalari talk to Thunder King
	type = character_event
	content_source = dlc_GOA
	title = pandaria_unification.0301.t
	desc = pandaria_unification.0301.desc
	theme = realm
	override_background = wc_throne_of_thunder

	immediate = {
		save_scope_as = reviver
		scope:lei_shen = {
			save_scope_as = lei_shen
			set_variable = {
				name = reviver
				value = ROOT
			}
		}
	}

	left_portrait = {
		character = ROOT
		animation = celebrate_mace
	}

	right_portrait = {
		character = scope:lei_shen
		animation = war_over_win
	}

	option = {
		name = pandaria_unification.0301.a
		scope:lei_shen = {
			lei_shen_zandalari_effect = yes
		}
		set_player_character = scope:lei_shen
		ai_chance = {
			base = 0
		}
	}

	option = {
		name = pandaria_unification.0301.b
		scope:lei_shen = {
			lei_shen_zandalari_effect = yes
		}
	}
	after = {
		scope:lei_shen = {	# Lei Shen Setup
			create_story = story_thunder_king
		}
	}
}

### Resurrect Lei Shen - Randomly Spawned Thunder King
pandaria_unification.0400 = {
	scope = none
	hidden = yes

	trigger = {
		NOR = { # Dont Summon Lei Shen if theres any powerful Mogu player or one that controls Isle of Thunder
			any_player = {
				culture = { has_cultural_pillar = heritage_mogu }
				highest_held_title_tier = tier_empire
			}
			any_player = {
				culture = { has_cultural_pillar = heritage_mogu }
				completely_controls = title:d_lei_shen
			}
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:revive_lei_shen_decision
			}
		}
	}

	immediate = {
		debug_log = "thunder_king_log - Spawning Thunder King"
		debug_log_date = yes
		if = {
			limit = {
				title:e_pandaria_empire.holder ?= {
					culture = { has_cultural_pillar = heritage_mogu }
					is_ai = yes
				}
			}
			title:e_pandaria_empire.holder = {
				trigger_event = pandaria_unification.0402
			}
		}
		else_if = {
			limit = {
				title:e_zandalari.holder ?= {
					culture = { has_cultural_pillar = heritage_zulite }
					OR = {
						has_religion = religion:titanic_group
						has_religion = religion:loa_group
					}
					is_ai = yes
				}
			}
			title:e_zandalari.holder = {
				trigger_event = pandaria_unification.0401
			}
		}
		else_if = {
			limit = {
				title:c_lei_gong.holder.top_liege ?= {
					culture = { has_cultural_pillar = heritage_mogu }
					is_ai = yes
				}
			}
			title:c_lei_gong.holder.top_liege = {
				trigger_event = pandaria_unification.0402
			}
		}
		else_if = {
			limit = {
				title:c_lei_gong.holder = {
					culture = { has_cultural_pillar = heritage_mogu }
					is_ai = yes
				}
			}
			title:c_lei_gong.holder = {
				trigger_event = pandaria_unification.0402
			}
		}
		else_if = {
			limit = {
				any_independent_ruler = {
					culture = { has_cultural_pillar = heritage_mogu }
					is_ai = yes
					capital_county.kingdom = title:k_lei_dao
				}
			}
			random_independent_ruler = {
				limit = {
					culture = { has_cultural_pillar = heritage_mogu }
					is_ai = yes
					capital_county.kingdom = title:k_lei_dao
				}
				trigger_event = pandaria_unification.0402
				weight = {
					base = 1
					modifier = {
						add = 99
						highest_held_title_tier = tier_empire
					}
				}
			}
		}
		else_if = {
			limit = {
				any_independent_ruler = {
					culture = { has_cultural_pillar = heritage_mogu }
					is_ai = yes
					capital_county = {
						title_province = { geographical_region = world_pandaria } 
					}
				}
			}
			random_independent_ruler = {
				limit = {
					culture = { has_cultural_pillar = heritage_mogu }
					is_ai = yes
					capital_county = {
						title_province = { geographical_region = world_pandaria } 
					}
				}
				trigger_event = pandaria_unification.0402
				weight = {
					base = 1
					modifier = {
						add = 99
						highest_held_title_tier = tier_empire
					}
				}
			}
		}
		else = {
			debug_log = "thunder_king_log - Couldnt find a reviver"
		}
	}
}
pandaria_unification.0401 = { # Hidden Event - AI Zandalari randomly revive Lei Shen
	hidden = yes

	immediate = {
		debug_log = "thunder_king_log - Reviver found (Zandalar)"
		save_scope_as = reviver
		add_prestige_level = 1
		
		hidden_effect = {
			# Can only happen once
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:revive_lei_shen_decision
			}
			
			# Upgrade Throne of Thunder for AI
			if = {
				limit = {
					NOT = {
						province:1229 = { has_building_or_higher = throne_of_thunder_03 }
					}
					is_ai = yes
				}
				province:1229 = {
					if = {
						limit = {
							has_building = throne_of_thunder_01
						}
						remove_building = throne_of_thunder_01
					}
					else_if = {
						limit = {
							has_building = throne_of_thunder_02
						}
						remove_building = throne_of_thunder_02
					}
					add_special_building = throne_of_thunder_03
				}
			}
		}
		
		trigger_event = pandaria_unification.0300
	}
}
pandaria_unification.0402 = { # Hidden Event - AI Mogu randomly revives Lei Shen
	hidden = yes

	immediate = {
		debug_log = "thunder_king_log - Reviver found (Mogu)"
		save_scope_as = reviver
		add_prestige_level = 1
		
		hidden_effect = {
			# Can only happen once
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:revive_lei_shen_decision
			}
			
			# Upgrade Throne of Thunder for AI
			if = {
				limit = {
					NOT = {
						province:1229 = { has_building_or_higher = throne_of_thunder_03 }
					}
					is_ai = yes
				}
				province:1229 = {
					if = {
						limit = {
							has_building = throne_of_thunder_01
						}
						remove_building = throne_of_thunder_01
					}
					else_if = {
						limit = {
							has_building = throne_of_thunder_02
						}
						remove_building = throne_of_thunder_02
					}
					add_special_building = throne_of_thunder_03
				}
			}
		
			# Trigger the Event
			trigger_event = pandaria_unification.0100
		}
	}
}


### Thunder King demands Subjugation ###
# Adapted From vanilla mongol subjugation events
# (mongol_invasion.2001-2003)
# By Juke
pandaria_unification.2001 = {
	type = letter_event
	opening = pandaria_unification.2001.opening
	desc = pandaria_unification.2001.desc
	sender = {
		character = scope:lei_shen
		animation = personality_bold
	}

	trigger = {
		NOT = { is_at_war_with = scope:lei_shen }
		NOT = { root = scope:lei_shen }
	}

	immediate = {
		save_scope_as = demand_recipient
	}

	option = { # Submit
		name = pandaria_unification.2001.a
		custom_tooltip = pandaria_unification.2001.a.tt
		scope:lei_shen = {
			add_opinion = {
				modifier = became_vassal
				target = scope:demand_recipient
				opinion = 20
			}
		}
		hidden_effect = {
			scope:lei_shen = {
				trigger_event = pandaria_unification.2002
			}
		}
		ai_chance = {
			base = 1000
			# More likely if you're just a count
			modifier = {
				factor = 3
				highest_held_title_tier = tier_county
			}
			# More likely if you're a duke
			modifier = {
				factor = 2
				highest_held_title_tier = tier_duchy
			}
			# Unlikely if you're Arrogant
			modifier = {
				factor = 0.8
				has_trait = arrogant
			}
			# Likely if you're a Craven
			modifier = {
				factor = 1.2
				has_trait = craven
			}
			# Likely if you're Loyal
			modifier = {
				factor = 1.2
				has_trait = loyal
			}
			# Lower chance if you're decently large
			modifier = {
				factor = 0.5
				realm_size >= 35 # Poland-sized
			}
			# Lower chance of accepting if you're large
			modifier = {
				factor = 0.2
				realm_size >= 70
			}
			# Lower chance if you're not Shenic
			modifier = {
				factor = 0.1
				NOT = {
					has_religion = religion:titanic_group
				}
			}
		}
	}

	option = { # Resist
		name = pandaria_unification.2001.b
		custom_tooltip = pandaria_unification.2001.b.tt
		scope:lei_shen = {
			add_opinion = {
				modifier = insult_opinion
				target = scope:demand_recipient
				opinion = -100
			}
		}
		add_internal_flag = dangerous
		hidden_effect = {
			scope:lei_shen = {
				trigger_event = pandaria_unification.2003
			}
		}
		ai_chance = {
			base = 100
		}
		stress_impact = {
			base = medium_stress_gain
		}
	}
}
# Subjugation accepted
pandaria_unification.2002 = {
	type = letter_event
	opening = pandaria_unification.2002.opening
	desc = pandaria_unification.2002.desc
	sender = scope:demand_recipient

	immediate = {
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = title_change
			add_claim_on_loss = no
		}
		scope:demand_recipient = {
			change_liege = {
				liege = root
				change = scope:title_change
			}
		}
		resolve_title_and_vassal_change = scope:title_change

		debug_log = "Someone accepted Thunder King subjugation"
		debug_log_scopes = yes
	}

	option = { # Wise choice
		name = pandaria_unification.2002.a
	}
}
# Subjugation refused
pandaria_unification.2003 = {
	type = letter_event
	opening = pandaria_unification.2003.opening
	desc = pandaria_unification.2003.desc
	sender = {
		character = scope:demand_recipient
		animation = personality_bold
	}

	immediate = {
		hidden_effect = {
			scope:demand_recipient.primary_title = {
				save_scope_as = target_title
			}
		}

		debug_log = "Someone refused Thunder King subjugation"
		debug_log_scopes = yes
	}

	option = { # FOOLS!
		name = pandaria_unification.2003.a
		add_pressed_claim = scope:demand_recipient.primary_title
	}
}