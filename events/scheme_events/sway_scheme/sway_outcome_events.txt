#Events handling Sway outcomes

namespace = sway_outcome

#Note: Outcome events for the Sway scheme are unusual. The default is simply a notification for success or failure

################################
# Standard outcomes
# 0000-0999
################################

#Standard success
	#by Petter Vilberg
sway_outcome.0001 = {
	hidden = yes

	immediate = {
		send_interface_message = {
			type = sway_good_message
			title = sway_sway_success_message
			left_icon = scope:target
			scope:target = {
				add_opinion = {
					target = scope:owner
					modifier = scheme_sway_opinion
					opinion = sway_opinion_increase_per_success
				}
			}
			sway_end_effect = yes
		}
	}
}

#Standard failure
	#by Petter Vilberg
sway_outcome.0002 = {
	hidden = yes

	immediate = {
		send_interface_message = {
			type = sway_bad_message
			title = sway_sway_failed_message
			left_icon = scope:target
			stress_impact = {
				gregarious = minor_stress_impact_gain
			}
			sway_end_effect = yes
		}
	}
}


#################################
# Positive Outcomes
# 1000-1999
#################################

#Diplomacy Duel to get an extra bonus
	#by Petter Vilberg
sway_outcome.1001 = {
	type = character_event
	title = sway_outcome.1001.t
	desc = sway_outcome.1001.desc
	theme = sway_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	override_background = {
		trigger = { is_travelling_not_at_activity = yes }
		reference = terrain_travel
	}
	override_background = {
		trigger = { is_travelling_at_activity = yes }
		reference = ep2_activity
	}
	
	trigger = {
		NOT = {
			has_character_flag = had_event_sway_outcome_1001
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_sway_outcome_1001
			years = 5
		}
	}

	option = {
		name = sway_outcome.1001.a
		duel = {
			target = scope:target
			skill = diplomacy

			20 = {
				compare_modifier = {
					value = scope:duel_value
				}
				desc = sway_outcome.1001.a.success
				send_interface_toast = {
					left_icon = scope:target
					title = sway_outcome.1001.a.success

					add_prestige = minor_prestige_gain
					scope:target = {
						add_opinion = {
							target = scope:owner
							modifier = scheme_sway_opinion
							opinion = 50
						}
					}
				}
			}
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				desc = sway_outcome.1001.a.failure
				send_interface_toast = {
					left_icon = scope:target
					title = sway_outcome.1001.a.failure

					add_prestige = minor_prestige_loss
				}
			}
		}
		sway_end_effect = yes
	}

	option = {
		name = sway_outcome.1001.b
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = scheme_sway_opinion
				opinion = 30
			}
		}
		sway_end_effect = yes
	}
}

#Learning Duel to get an extra bonus
	#by Petter Vilberg
sway_outcome.1002 = {
	type = character_event
	title = sway_outcome.1002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { faith = scope:target.faith }
				desc = sway_outcome.1002.same_faith
			}
			desc = sway_outcome.1002.other_faith
		}
	}
	theme = sway_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	override_background = {
		trigger = { scope:target = { is_travelling = yes } }
		reference = terrain_travel
	}
	
	trigger = {
		NOT = {
			has_character_flag = had_event_sway_outcome_1002
		}
	}

	weight_multiplier = {
		base = 0
		compare_modifier = {
			value = learning
			multiplier = 0.1
		}
		modifier = {
			add = 2
			scope:target = {
				is_landed = yes
				government_has_flag = government_is_theocracy
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_sway_outcome_1002
			years = 5
		}
	}

	option = {
		name = sway_outcome.1002.a
		duel = {
			target = scope:target
			skill = learning

			20 = {
				compare_modifier = {
					value = scope:duel_value
					min = -18
					max = 20
				}
				desc = sway_outcome.1001.a.success
				send_interface_toast = {
					left_icon = scope:target
					title = sway_outcome.1001.a.success

					add_prestige = minor_prestige_gain
					scope:target = {
						add_opinion = {
							target = scope:owner
							modifier = scheme_sway_opinion
							opinion = 50
						}
					}
				}
			}
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
					min = -18
					max = 20
				}
				desc = sway_outcome.1001.a.failure
				send_interface_toast = {
					left_icon = scope:target
					title = sway_outcome.1001.a.failure

					add_prestige = minor_prestige_loss
				}
			}
		}
		sway_end_effect = yes
	}

	option = {
		name = sway_outcome.1002.b
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = scheme_sway_opinion
				opinion = 30
			}
		}
		sway_end_effect = yes
	}
}


#They're warming up to me, can I take it further?
	#by Linnéa Thimrén
sway_outcome.1003 = {
	type = character_event
	title = sway_outcome.1003.t
	desc = sway_outcome.1003.desc
	theme = sway_scheme
	left_portrait = scope:target
	right_portrait = scope:friend
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	override_background = {
		trigger = { is_travelling_not_at_activity = yes }
		reference = terrain_travel
	}
	override_background = {
		trigger = { is_travelling_at_activity = yes }
		reference = ep2_activity
	}
	
	trigger = {
		NOT = {
			has_character_flag = had_event_sway_outcome_1003
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_sway_outcome_1003
			years = 5
		}
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = scheme_sway_opinion
				opinion = 30
			}
		}
		if = {
			limit = {
				any_relation = {
					type = friend
					diplomacy > root.diplomacy
				}
			}
			random_relation = {
				type = friend
				limit = {
					diplomacy > root.diplomacy
				}
				save_scope_as = friend
			}
		}
	}

	option = { #Gamble!
		name = sway_outcome.1003.a
		duel = {
			target = scope:target
			skill = diplomacy

			30 = {
				compare_modifier = {
					value = scope:duel_value
				}
				desc = sway_outcome.1003.a.success
				send_interface_toast = {
					left_icon = scope:target
					title = sway_outcome.1003.a.success

					scope:target = {
						add_opinion = {
							target = scope:owner
							modifier = scheme_sway_opinion
							opinion = 20
						}
					}
				}
			}
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -1
				}
				desc = sway_outcome.1003.a.failure
				send_interface_toast = {
					left_icon = scope:target
					title = sway_outcome.1003.a.failure

					scope:target = {
						add_opinion = {
							target = scope:owner
							modifier = scheme_sway_opinion
							opinion = -10
						}
					}
				}
			}
		}
	}

	option = { #Gamble! Friend helps you out!
		name = sway_outcome.1003.a_friend
		trigger = {
			exists = scope:friend
		}
		scope:friend = {
			duel = {
				target = scope:target
				skill = diplomacy

				40 = {
					compare_modifier = {
						value = scope:duel_value
					}
					desc = sway_outcome.1003.a.success
					send_interface_toast = {
						left_icon = scope:target
						title = sway_outcome.1003.a.success

						scope:target = {
							add_opinion = {
								target = scope:owner
								modifier = scheme_sway_opinion
								opinion = 15
							}
						}
					}
				}
				20 = {
					compare_modifier = {
						value = scope:duel_value
						multiplier = -1
					}
					desc = sway_outcome.1003.a.failure
					send_interface_toast = {
						left_icon = scope:target
						title = sway_outcome.1003.a.failure

						scope:target = {
							add_opinion = {
								target = scope:owner
								modifier = scheme_sway_opinion
								opinion = -10
							}
						}
					}
				}
			}
		}
	}

	option = { #Safe route
		name = sway_outcome.1003.b
		
	}

	after = {
		sway_end_effect = yes
	}
}




#################################
# Negative Outcomes
# 2000-2999
#################################

#Diplomatic misunderstanding
	#by Petter Vilberg
sway_outcome.2001 = {
	type = character_event
	title = sway_outcome.2001.t
	desc = {
		desc = sway_outcome.2001.opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:target = {
						OR = {
							is_of_major_interest_to_root_trigger = yes
							is_of_minor_interest_to_root_trigger = yes
						}
						NOT = {
							has_relation_rival = root
						}
					}
				}
				desc = sway_outcome.2001.not_interested_relation
			}
			triggered_desc = {
				trigger = {
					scope:target = {
						possibly_interested_in_character_trigger = {
							CHARACTER = root
						}
					}
				}
				desc = sway_outcome.2001.not_interested_romantically
			}
			random_valid = {
				desc = sway_outcome.2001.not_interested_horses
				desc = sway_outcome.2001.not_interested_toll_exemptions
				desc = sway_outcome.2001.not_interested_friend
				triggered_desc = {
					trigger = {
						like_christianity_religion_trigger = yes
						scope:target = { like_christianity_religion_trigger = yes }
					}
					desc = sway_outcome.2001.not_interested_relics
				}
			}
		}
		desc = sway_outcome.2001.end
	}
	theme = sway_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	override_background = {
		trigger = { is_travelling_not_at_activity = yes }
		reference = terrain_travel
	}
	override_background = {
		trigger = { is_travelling_at_activity = yes }
		reference = ep2_activity
	}
	
	trigger = {
		NOT = {
			has_character_flag = had_event_sway_outcome_2001
		}
		NOR = {
			has_relation_lover = scope:target
			has_relation_friend = scope:target
			any_consort = {
				this = scope:target
			}
			AND = {
				exists = betrothed
				betrothed = scope:target
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_sway_outcome_2001
			years = 5
		}
	}

	option = {
		name = sway_outcome.2001.a
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = sway_blocker_opinion
				opinion = -10
			}
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}


#They think you're plotting against them
	#by Linnéa Thimrén
sway_outcome.2002 = {
	type = character_event
	title = sway_outcome.2002.t
	desc = sway_outcome.2002.desc
	theme = sway_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	override_background = {
		trigger = { is_travelling_not_at_activity = yes }
		reference = terrain_travel
	}
	override_background = {
		trigger = { is_travelling_at_activity = yes }
		reference = ep2_activity
	}
	
	trigger = {
		NOT = {
			has_character_flag = had_event_sway_outcome_2002
		}
	}

	weight_multiplier = {
		base = 0.75
		modifier = {
			add = 0.75
			has_trait = paranoid
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_event_sway_outcome_2002
			years = 5
		}
	}

	option = {
		name = sway_outcome.2002.a
		scope:target = {
			add_opinion = {
				target = scope:owner
				modifier = sway_blocker_opinion
				opinion = -10
			}
			add_character_modifier = {
				modifier = more_vigilant_recistance_modifier
				years = 5
			}
		}
		scope:scheme = {
			end_scheme = yes
		}
	}
}
