wc_learn_spell_effect = {
	if = {
		limit = {
			is_unknown_spell_trigger = {
				SPELL_NAME = flag:$SPELL$
			}
		}
		add_to_variable_list = {
			name = known_spells
			target = flag:$SPELL$
		}
		add_to_variable_list = {
			name = known_rank_1_spells
			target = flag:$SPELL$
		}
	}
}

learn_spell_rank_effect = {
	add_to_variable_list = {
		name = known_rank_$RANK$_spells
		target = $SPELL$
	}
	if = { limit = { flag:$TYPE$ = flag:none }} # Suppress parameter error
}

# change_elemental_favour_effect = {
# 	if = {
# 		limit = {
# 			has_variable = wc_$TYPE$_favour_variable
# 		} 
# 		# nothing
# 	}
# 	else = {
# 		set_variable = {
# 			name = wc_$TYPE$_favour_variable
# 			value = wc_$TYPE$_favour_current_value
# 		}
# 	}
# 	change_variable = {
# 		name = wc_$TYPE$_favour_variable
# 		$CHANGE$ = $VALUE$
# 	}
# 	# TODO : recalculate traits / secrets 
	
# }
show_spell_tt_effect = { # this is for tooltips ! 
	spell_execute = { EFFECT = cast_$SPELL$_effect }
	change_elemental_dispoition_spell_effect = { TYPE = $TYPE$ SPELL = $SPELL$ }
	if = { limit = { $RANK$ = 2 } } # error suppression
}

execute_scoped_spell_effect = {
	if = { limit = { NOT = { has_variable = current_spell_rank } } set_variable = { name = current_spell_rank value = 1 }  }
	switch = { # For non elementals, put type as none
		trigger = $SPELL$
		flag:summon_fire_elemental = { $EFFECT$ = { SPELL = summon_fire_elemental RANK = var:current_spell_rank TYPE = elemental_fire } }
	}
}

change_elemental_dispoition_spell_effect = {
	if = {
		limit = { # Change elemental disposition
			spell_is_elemental_trigger = { SPELL_NAME = flag:$SPELL$ }
		}

		#elemental_favour_modifier_for_culture = { ELEMENT = $ELEMENT$ VARIABLE = elemental_favour_change }
		save_scope_value_as = {
			name = elemental_favour_change
			value = {
				add = wc_spell_$SPELL$_cost_mana_value
				multiply = 0.3
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						exists = var:$SPELL$_type
						var:$SPELL$_type = flag:spirit
					}
					AND = {
						exists = var:elemental_type 
						NOT = { exists = var:$SPELL$_type }
						var:elemental_type = flag:spirit
					}
				}
			}
			
			wc_change_amount_element_favour_effect = {
				ELEMENT = $TYPE$
				CHANGE = add
				AMOUNT = scope:elemental_favour_change
			}
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						exists = var:$SPELL$_type
						var:$SPELL$_type = flag:decay
					}
					AND = {
						exists = var:elemental_type 
						NOT = { exists = var:$SPELL$_type }
						var:elemental_type = flag:decay
					}
				}
			}
			wc_change_amount_element_favour_effect = {
				ELEMENT = $TYPE$
				CHANGE = subtract
				AMOUNT = scope:elemental_favour_change
			}
		}
	}
}

remove_spell_coolown = {
	remove_variable = flag:$SPELL$_remaining_cd
}

start_spell_casting_effect = {
	wc_change_mana_by_value_effect = { # Remove mana
		CHANGE = subtract
		VALUE = wc_spell_$SPELL$_cost_mana_value
	}

	# Save Variables so when the event triggers they wont be lost
	set_variable = {
		name = $SPELL$_rank
		value = $RANK$
	}

	if = {
		limit = {
			exists = var:spell_recipient
		}
		set_variable = { 
			name = $SPELL$_recipient
			value = var:spell_recipient
		}
	}

	else_if = {
		limit = {
			has_variable_list = spell_targets_list
		}
		every_in_list = {
			variable = spell_targets_list
			save_scope_as = new_target
			add_to_variable_list = {
				name = $SPELL$_targets_list
				target = scope:new_target
			}
		}
	}

	if = {
		limit = { has_variable = elemental_type }
		set_variable = {
			name = $SPELL$_type
			value = var:elemental_type
		}
	}

	set_variable = {
		name = $SPELL$_progress
		value = 0
	}

	set_variable = {
		name = $SPELL$_progress_percent
		value = 0
	}

	set_variable = {
		name = $SPELL$_progress_remaning
		value = wc_spell_$SPELL$_cast_time_value
	}

	if = { # start the loop if its not on already
		limit = {
			NOT = { exists = var:spell_loop_on }
		}
		trigger_event = { on_action = wc_on_spell_progression days = 1 }
	}

	add_to_variable_list = { # add to loop
		name = current_spells_casting
		target = flag:$SPELL$
	}

	if = {
		limit = {
			spell_is_helpful_trigger = {
				SPELL_NAME = flag:$SPELL$
			}
		}

		if = {
			limit = { 
				exists = var:spell_recipient
				NOT = { this = var:spell_recipient }
			}
			var:spell_recipient = {
				add_opinion = { modifier = wc_casted_helpful_spell target = root }
			}
		}
		else_if = {
			limit = {
				has_variable_list = spell_targets_list
			}
			every_in_list = {
				variable = spell_targets_list
				save_scope_as = new_target
				if = {
					limit = {
						NOT = { scope:new_target = root }
					}
					scope:new_target = {
						add_opinion = { modifier = wc_casted_helpful_spell target = root }
					}
				}
			}
		}

	}

	if = {
		limit = {
			spell_is_harmful_trigger = {
				SPELL_NAME = flag:$SPELL$
			}
		}

		if = {
			limit = { 
				exists = var:spell_recipient
				NOT = { this = var:spell_recipient }
			}
			var:spell_recipient = {
				add_opinion = { modifier = wc_casted_harmful_spell target = root }
			}
		}
		
		else_if = {
			limit = {
				has_variable_list = spell_targets_list
			}
			every_in_list = {
				variable = spell_targets_list
				save_scope_as = new_target
				if = {
					limit = {
						NOT = { scope:new_target = root }
					}
					scope:new_target = {
						add_opinion = { modifier = wc_casted_harmful_spell target = root }
					}
				}
				
			}
		}
	}

	remove_variable = elemental_type
	if = { limit = { flag:$TYPE$ = flag:poop } }
}

add_spell_progression_effect = {
	if = {
		limit = {
			var:$SPELL$_progress < wc_spell_$SPELL$_cast_time_value
		}
		change_variable = {
			name = $SPELL$_progress
			add = 1
		}
		change_variable = {
			name = $SPELL$_progress_remaning
			add = -1
		}
		set_variable = {
			name = $SPELL$_progress_percent
			value = {
				add = var:$SPELL$_progress
				divide = wc_spell_$SPELL$_cast_time_value
				multiply = 100
			}
		}
	}
	else = {
		remove_list_variable = {
			name = current_spells_casting
			target = flag:$SPELL$
		}

		# actually cast
		spell_execute = { EFFECT = cast_$SPELL$_effect }

		#put the spell on cooldown
		add_character_flag = {
			flag = flag:$SPELL$_cd
			days = wc_spell_$SPELL$_cooldown_value
		}
		change_elemental_dispoition_spell_effect = { TYPE = $TYPE$ SPELL = $SPELL$ }

		clear_variable_list = $SPELL$_targets_list
		remove_variable = $SPELL$
		remove_variable = $SPELL$_progress
		remove_variable = $SPELL$_progress_remaining
	}
	if = { limit = { $RANK$ = 2 } } # error suppression
}

spell_execute = {
	$EFFECT$ = yes
}