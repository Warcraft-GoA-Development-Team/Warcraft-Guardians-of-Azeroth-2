init_order_spells_effect = {
    add_to_global_variable_list = { name = order_spells target = flag:polymorph }
    add_to_global_variable_list = { name = order_spells target = flag:conjure_refreshment }
    add_to_global_variable_list = { name = order_spells target = flag:counterspell }
    add_to_global_variable_list = { name = order_spells target = flag:scry }
    add_to_global_variable_list = { name = order_spells target = flag:spellsteal }
    add_to_global_variable_list = { name = order_spells target = flag:haste }
    add_to_global_variable_list = { name = order_spells target = flag:chronomancy }
    
    # Fire
    add_to_global_variable_list = { name = order_spells target = flag:scorch }
    add_to_global_variable_list = { name = order_spells target = flag:fire_shield }
    add_to_global_variable_list = { name = order_spells target = flag:pyroblast }
    add_to_global_variable_list = { name = order_spells target = flag:flamestrike }

    # Frost
    add_to_global_variable_list = { name = order_spells target = flag:frostbolt }
    add_to_global_variable_list = { name = order_spells target = flag:frost_nova }
    add_to_global_variable_list = { name = order_spells target = flag:frost_armor }
    add_to_global_variable_list = { name = order_spells target = flag:blizzard }

    # Both
    add_to_global_variable_list = { name = order_spells target = flag:frostfire_bolt }
}

cast_polymorph_effect = {
    if = {
        limit = { exists = var:polymorph_recipient }
        var:polymorph_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:polymorph
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_trait = polymorph
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_polymorph_duration_days_value
                }
            }

            save_scope_value_as = {
                name = spell_dodge_chance
                value = wc_order_magic_resistance_dodge_value
            }

            random_list = {
                80 = {
                    add_trait = polymorph
                    save_scope_value_as = {
                        name = polymorph_prowess
                        value = {
                            value = prowess
                            subtract = 1
                            multiply = -1
                        }
                    }
                    trigger_event = {
                        id = wc_magic_spell_events.1001
                        days = wc_current_spell_duration
                    }
                    hidden_effect = {
                        add_prowess_skill = {
                            value = scope:polymorph_prowess
                        }
                        root = {
                            send_interface_toast = {
                                title = wc_spell_hit
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_polymorph_hit_tt
                            }
                        }
                    }
                }
                20 = {
                    custom_tooltip = wc_polymorph_resist_tt
                    modifier = {
                        is_alive = yes
                        add = scope:spell_dodge_chance
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_dodged
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_polymorph_dodge
                            }
                        }
                    }
                }
            }
        }
    }
}

cast_counterspell_effect = {
    if = {
        limit = { exists = var:counterspell_recipient }
        var:counterspell_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:counterspell
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_character_modifier = wc_counterspell_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_counterspell_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_counterspell_modifier
                days = wc_current_spell_duration
            }
        }
    }
}

cast_spellsteal_effect = {
    if = {
        limit = { exists = var:spellsteal_recipient }
        var:spellsteal_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:spellsteal
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        random_list = {
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_summon_fire_elemental_modifier }
                spellsteal_move_modifier_effect = { SPELL = summon_fire_elemental MODIFIER = wc_summon_fire_elemental_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_empowered_fire_elemental_modifier }
                spellsteal_move_modifier_effect = { SPELL = summon_fire_elemental MODIFIER = wc_empowered_fire_elemental_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_animate_rage_modifier }
                spellsteal_move_modifier_effect = { SPELL = none MODIFIER = wc_animate_rage_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_backdraft_proc }
                spellsteal_move_modifier_effect = { SPELL = backdraft MODIFIER = wc_backdraft_proc }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_flame_wall_good_modifier }
                spellsteal_move_modifier_effect = { SPELL = flame_wall MODIFIER = wc_flame_wall_good_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_pyromania_modifier }
                spellsteal_move_modifier_effect = { SPELL = none MODIFIER = wc_pyromania_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_cauterized_wound_modifier }
                spellsteal_move_modifier_effect = { SPELL = cauterize_wound MODIFIER = wc_cauterized_wound_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_counterspell_modifier }
                spellsteal_move_modifier_effect = { SPELL = counterspell MODIFIER = wc_counterspell_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_scry_modifier }
                spellsteal_move_modifier_effect = { SPELL = scry MODIFIER = wc_scry_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_haste_modifier }
                spellsteal_move_modifier_effect = { SPELL = haste MODIFIER = wc_haste_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_conjure_food_modifier }
                spellsteal_move_modifier_effect = { SPELL = conjure_refreshment MODIFIER = wc_conjure_food_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_conjure_drink_modifier }
                spellsteal_move_modifier_effect = { SPELL = conjure_refreshment MODIFIER = wc_conjure_drink_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_conjure_feast_modifier }
                spellsteal_move_modifier_effect = { SPELL = conjure_refreshment MODIFIER = wc_conjure_feast_modifier }
            }
        }
    }
}

spellsteal_move_modifier_effect = {
    remove_character_modifier = $MODIFIER$
    root = {
        if = {
            limit = {
                flag:$SPELL$ = flag:none
            }
            add_character_modifier = $MODIFIER$
        }
        else = {
            add_character_modifier = {
                modifier = $MODIFIER$
                days = wc_spell_$SPELL$_duration_days_value
            }
        }
    }
}

cast_scry_effect = {
    if = {
        limit = { exists = var:scry_recipient }
        var:scry_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:scry
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_character_modifier = wc_scry_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_scry_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_scry_modifier
                days = wc_current_spell_duration
            }
        }
    }
}

cast_haste_effect = {
    if = {
        limit = { exists = var:haste_recipient }
        var:haste_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:haste
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                scope:this_recipient = root
                NOT = {
                    has_character_modifier = wc_haste_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_haste_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_haste_modifier
                days = wc_current_spell_duration
            }
        }
        else_if = {
            limit = {
                NOT = {
                    has_character_modifier = wc_slow_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_haste_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_slow_modifier
                days = wc_current_spell_duration
            }
        }
    }
}

cast_conjure_refreshment_effect = {
    if = {
        limit = { exists = var:conjure_refreshment_recipient }
        var:conjure_refreshment_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:conjure_refreshment
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                root = {
                    OR = {
                        AND = {
                            has_variable = conjure_refreshment_rank
                            var:conjure_refreshment_rank < 3
                        }
                        AND = {
                            has_variable = current_spell_rank
                            NOT = { has_variable = conjure_refreshment_rank }
                            var:current_spell_rank < 3
                        }
                    }
                    OR = {
                        NOT = {
                            has_variable = selected_refreshment
                        }
                        var:selected_refreshment = flag:food
                    }
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_conjure_refreshment_duration_days_value
                }
            }
            hidden_effect = {
                add_character_modifier = {
                    modifier = wc_conjure_food_modifier
                    days = wc_current_spell_duration
                }
            }

            if = {
                limit = {
                    root = {
                        OR = {
                            AND = {
                                has_variable = conjure_refreshment_rank
                                var:conjure_refreshment_rank = 2
                            }
                            AND = {
                                has_variable = current_spell_rank
                                NOT = { has_variable = conjure_refreshment_rank }
                                var:current_spell_rank = 2
                            }
                        }
                    }
                }

                custom_tooltip = conjure_refreshment_tt2

                hidden_effect = {
                    every_courtier_or_guest = {
                        add_character_modifier = {
                            modifier = wc_conjure_food_modifier
                            days = wc_current_spell_duration
                        }
                    }
                }
            }
            else = {
                custom_tooltip = conjure_refreshment_tt1
            }
        }
        else_if = {
            limit = {
                root = {
                    OR = {
                        AND = {
                            has_variable = conjure_refreshment_rank
                            var:conjure_refreshment_rank < 3
                        }
                        AND = {
                            has_variable = current_spell_rank
                            NOT = { has_variable = conjure_refreshment_rank }
                            var:current_spell_rank < 3
                        }
                    }
                    var:selected_refreshment = flag:drink
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_conjure_refreshment_duration_days_value
                }
            }
            hidden_effect = {
                add_character_modifier = {
                    modifier = wc_conjure_drink_modifier
                    days = wc_current_spell_duration
                }
            }
            if = {
                limit = {
                    root = {
                        OR = {
                            AND = {
                                has_variable = conjure_refreshment_rank
                                var:conjure_refreshment_rank = 2
                            }
                            AND = {
                                has_variable = current_spell_rank
                                NOT = { has_variable = conjure_refreshment_rank }
                                var:current_spell_rank = 2
                            }
                        }
                    }
                }

                custom_tooltip = conjure_refreshment_tt2

                hidden_effect = {
                    every_courtier_or_guest = {
                        add_character_modifier = {
                            modifier = wc_conjure_drink_modifier
                            days = wc_current_spell_duration
                        }
                    }
                }
            }
            else = {
                custom_tooltip = conjure_refreshment_tt1
            }
        }
        else_if = {
            limit = {
                root = {
                    OR = {
                        AND = {
                            has_variable = conjure_refreshment_rank
                            var:conjure_refreshment_rank = 3
                        }
                        AND = {
                            has_variable = current_spell_rank
                            NOT = { has_variable = conjure_refreshment_rank }
                            var:current_spell_rank = 3
                        }
                    }
                }
            }

            custom_tooltip = conjure_refreshment_tt3

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_conjure_refreshment_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_conjure_feast_modifier
            }
            set_variable = {
                name = conjure_feast_duration
                value = scope:duration
            }
        }
    }
}

cast_chronomancy_effect = {
    if = {
        limit = { exists = var:chronomancy_recipient }
        var:chronomancy_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:chronomancy
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_character_flag = chronomancy
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_chronomancy_duration_days_value
                }
            }

            chronomancy_store_modifier_effect = { MODIFIER = wc_conjure_feast_modifier SPELL = conjure_refreshment }
            chronomancy_store_modifier_effect = { MODIFIER = wc_conjure_drink_modifier SPELL = conjure_refreshment }
            chronomancy_store_modifier_effect = { MODIFIER = wc_conjure_food_modifier SPELL = conjure_refreshment }
            chronomancy_store_modifier_effect = { MODIFIER = wc_haste_modifier SPELL = haste }
            chronomancy_store_modifier_effect = { MODIFIER = wc_scry_modifier SPELL = scry }
            chronomancy_store_modifier_effect = { MODIFIER = wc_counterspell_modifier SPELL = counterspell }
            chronomancy_store_modifier_effect = { MODIFIER = wc_cauterized_wound_modifier SPELL = cauterize_wound }
            chronomancy_store_modifier_effect = { MODIFIER = wc_flame_wall_good_modifier SPELL = flame_wall }
            chronomancy_store_modifier_effect = { MODIFIER = wc_backdraft_proc SPELL = backdraft }
            chronomancy_store_modifier_effect = { MODIFIER = wc_empowered_fire_elemental_modifier SPELL = summon_fire_elemental }
            chronomancy_store_modifier_effect = { MODIFIER = wc_summon_fire_elemental_modifier SPELL = summon_fire_elemental }

            every_character_trait = {
                limit = {
                    NOT = {
                        has_trait_category = lifestyle
                    }
                }
                save_scope_as = this_trait
                scope:this_recipient = {
                    add_to_variable_list = {
                        name = chronomancy_trait_list
                        target = scope:this_trait
                    }
                }
            }
            trigger_event = {
                id = wc_magic_spell_events.3001
                days = wc_current_spell_minus_one_duration
            }
            add_character_flag = {
                flag = chronomancy_active
                days = wc_current_spell_duration
            }
        }
    }
}

chronomancy_store_modifier_effect = {
    if = {
        limit = {
            has_character_modifier = $MODIFIER$
        }
        add_to_variable_list = {
            name = chronomancy_modifier_list
            target = flag:$MODIFIER$
        }
        add_to_variable_list = {
            name = chronomancy_modifier_duration_list
            target = wc_spell_$SPELL$_duration_days_value
        }
    }
}

chronomancy_restore_modifier_effect = {
    remove_character_modifier = $MODIFIER$
    add_character_modifier = {
        modifier = $MODIFIER$
        days = wc_current_spell_duration
    }
}

apply_character_blizzard_effect = {
    add_character_modifier = {
        modifier = wc_blizzard_character_modifier
    }

    trigger_event = {
        on_action = wc_blizzard_removal_pulse
        months = 1
    }
}

cast_scorch_effect = {
    if = {
        limit = { exists = var:scorch_recipient }
        var:scorch_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:scorch
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = { # cannot do a random knight because tooltip and effect will differ.
            limit = {
                NOT = { has_trait = burned_3 }
            }
            save_scope_value_as = {
                name = spell_dodge_chance
                value = wc_order_magic_resistance_dodge_value
            }
            random_list = {
                80 = {
                    burned_target_frostbite_modifier = { TARGET = this CHANGE = add }
                    add_or_increase_burned_effect = yes
                    add_opinion = {
                        modifier = wc_burned_me
                        target = root
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_hit
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_scorch_hit_tt
                            }
                        }
                    }
                }
                20 = {
                    custom_tooltip = wc_scorch_resist_tt
                    modifier = {
                        is_alive = yes
                        add = scope:spell_dodge_chance
                    }
                    burned_target_frostbite_modifier = { TARGET = this CHANGE = subtract }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_dodged
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_scorch_dodge
                            }
                        }
                    }
                }
            }
        }
    }
}

cast_pyroblast_effect = {
    if = {
        limit = { exists = var:pyroblast_recipient }
        var:pyroblast_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:pyroblast
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }
    if = {
        limit = {
            exists = scope:this_recipient
            OR = {
                any_war_enemy = {
                    any_army = {
                        exists = army_commander
                        army_commander = scope:this_recipient.army_commander
                    }
                }
            }
        }
        scope:this_recipient.army_commander = {
            if = {
                limit = {
                    NOT = {
                        has_trait = burned_3
                    }
                }

                save_scope_value_as = {
                    name = spell_dodge_chance
                    value = wc_order_magic_resistance_dodge_value
                }
                random_list = {
                    100 = {
                        burned_target_frostbite_modifier = { TARGET = this CHANGE = add }
                        add_or_increase_burned_effect = yes
                        add_opinion = {
                            modifier = wc_burned_me
                            target = root
                        }
                        hidden_effect = {
                            save_temporary_scope_as = dodger
                            root = {
                                send_interface_toast = {
                                    title = wc_spell_hit
                                    left_icon = prev
                                    right_icon = root
                                    custom_tooltip = wc_pyroblast_hit_tt
                                }
                            }
                        }
                    }
                    20 = {
                        custom_tooltip = wc_pyroblast_resist_tt
                        modifier = {
                            is_alive = yes
                            add = scope:spell_dodge_chance
                        }
                        burned_target_frostbite_modifier = { TARGET = this CHANGE = subtract }
                        hidden_effect = {
                            save_temporary_scope_as = dodger
                            root = {
                                send_interface_toast = {
                                    title = wc_spell_dodged
                                    left_icon = prev
                                    right_icon = root
                                    custom_tooltip = wc_pyroblast_dodge
                                }
                            }
                        }
                    }
                }
            }
        }

        custom_tooltip = {
            text = wc_spell_pyroblast_knights_tt
            scope:this_recipient.army_owner = {
                every_knight = {
                    limit = {
                        exists = knight_army
                        knight_army = scope:this_recipient
                    }

                    if = {
                        limit = {
                            NOT = {
                                has_trait = burned_3
                            }
                        }

                        save_scope_value_as = {
                            name = spell_dodge_chance
                            value = wc_order_magic_resistance_dodge_value
                        }
                        random_list = {
                            100 = {
                                burned_target_frostbite_modifier = { TARGET = this CHANGE = add }
                                add_or_increase_burned_effect = yes
                                add_opinion = {
                                    modifier = wc_burned_me
                                    target = root
                                }
                                hidden_effect = {
                                    save_temporary_scope_as = dodger
                                    root = {
                                        send_interface_toast = {
                                            title = wc_spell_hit
                                            left_icon = prev
                                            right_icon = root
                                            custom_tooltip = wc_pyroblast_hit_tt
                                        }
                                    }
                                }
                            }
                            20 = {
                                custom_tooltip = wc_pyroblast_resist_tt
                                modifier = {
                                    is_alive = yes
                                    add = scope:spell_dodge_chance
                                }
                                burned_target_frostbite_modifier = { TARGET = this CHANGE = subtract }
                                hidden_effect = {
                                    save_temporary_scope_as = dodger
                                    root = {
                                        send_interface_toast = {
                                            title = wc_spell_dodged
                                            left_icon = prev
                                            right_icon = root
                                            custom_tooltip = wc_pyroblast_dodge
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

cast_flamestrike_effect = {
    if = {
        limit = { exists = var:flamestrike_recipient }
        var:flamestrike_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:flamestrike
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }

    if = {
        limit = {
            exists = scope:this_recipient
        }
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_flamestrike_duration_days_value
            }
        }
        scope:this_recipient = {
            hidden_effect = {
                root = {
                    send_interface_toast = {
                        title = wc_spell_hit
                        left_icon = scope:this_recipient.holder
                        right_icon = root
                        custom_tooltip = wc_flamestrike_hit_tt
                    }
                }
            }

            custom_tooltip = {
                text = wc_spell_flamestrike_counties_tt
                set_local_variable = { name = flamestrike_count value = 0 }
                while = {
                    limit = { always = yes }
                    count = 10

                    change_local_variable = {
                        name = flamestrike_count
                        add = 1
                    }

                    every_de_jure_county = {
                        add_county_modifier = {
                            modifier = wc_flamestrike_modifier
                            days = wc_current_spell_duration
                        }
                    }
                }
            }
        }
    }
}

cast_fire_shield_effect = {
    if = {
        limit = { exists = var:fire_shield_recipient }
        var:fire_shield_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:fire_shield
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }

    if = {
        limit = {
            exists = scope:this_recipient
        }
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_fire_shield_duration_days_value
            }
        }
        scope:this_recipient = {
            add_character_modifier = {
                modifier = wc_fire_shield_modifier
                days = wc_current_spell_duration
            }
        }
    }

    if = {
        limit = {
            has_variable = fire_shield_secondary_target
        }
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_fire_shield_duration_days_value
            }
        }
        var:fire_shield_secondary_target = {
            add_character_modifier = {
                modifier = wc_fire_shield_modifier
                days = wc_current_spell_duration
            }
        }
        remove_variable = fire_shield_secondary_target
    }

    if = {
        limit = {
            has_perk = order_magic_tree_4_perk_7
        }
        custom_tooltip = wc_twin_flame_effect_tt
    }
}

fire_shield_set_relations = {
    every_relation = {
        type = $RELATION$
        limit = {
            NOT = {
                has_character_modifier = wc_fire_shield_modifier
            }
        }
        add_to_list = $RELATION$s
    }

    every_in_list = {
        list = $RELATION$s
        save_scope_as = $RELATION$

        if = {
            limit = {
                NOT = {
                    root = {
                        has_variable = $RELATION$1
                    }
                }
            }
            root = {
                set_variable = {
                    name = $RELATION$1
                    value = scope:$RELATION$
                }
            }
        }
        else_if = {
            limit = {
                NOT = {
                    root = {
                        has_variable = $RELATION$2
                    }
                }
            }
            root = {
                set_variable = {
                    name = $RELATION$2
                    value = scope:$RELATION$
                }
            }
        }
        else_if = {
            limit = {
                NOT = {
                    root = {
                        has_variable = $RELATION$3
                    }
                }
            }
            root = {
                set_variable = {
                    name = $RELATION$3
                    value = scope:$RELATION$
                }
            }
        }

        remove_from_list = $RELATION$s
    }
}

cast_frostfire_bolt_effect = {
    if = {
        limit = { exists = var:frostfire_bolt_recipient }
        var:frostfire_bolt_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:frostfire_bolt
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }
    root = {
        save_temporary_scope_value_as = {
            name = duration
            value = wc_spell_frostfire_bolt_duration_days_value
        }
    }
    # need to determine good or bad
    if = {
        limit = {
            exists = scope:this_recipient
            OR = {
                any_war_ally = {
                    any_army = {
                        army_commander = scope:this_recipient.army_commander
                    }
                }
                scope:this_recipient.army_commander = { target_is_liege_or_above = root }
                scope:this_recipient.army_commander = root
                scope:this_recipient.army_owner = { target_is_liege_or_above = root }
                scope:this_recipient.army_owner = root
            }
        }
        scope:this_recipient.army_commander = {
            add_character_modifier = {
                modifier = wc_frostfire_bolt_good_modifier
                days = wc_current_spell_duration
            }
            if = {
                limit = {
                    NOT = {
                        scope:this_recipient.army_commander = root
                    }
                }
                add_opinion = { modifier = wc_casted_helpful_spell target = root }
            }
        }
        scope:this_recipient = {
            custom_tooltip = wc_frostfire_bolt_tt
            set_variable = {
                name = frostfire_bolt_remainder
                value = scope:this_recipient.army_commander
                days = wc_current_spell_duration
            }
        }
    }
    else_if = {
        limit = {
            exists = scope:this_recipient
            any_war_enemy = {
                any_army = {
                    army_commander = scope:this_recipient.army_commander
                }
            }
        }
        scope:this_recipient.army_commander = {
            add_character_modifier = {
                modifier = wc_frostfire_bolt_bad_modifier
                days = wc_current_spell_duration
            }
            add_opinion = { modifier = wc_casted_harmful_spell target = root }
        }
        scope:this_recipient = {
            custom_tooltip = wc_frostfire_bolt_tt
            set_variable = {
                name = frostfire_bolt_remainder
                value = scope:this_recipient.army_commander
                days = wc_current_spell_duration
            }
        }
    }
}

cast_frostbolt_effect = {
    if = {
        limit = { exists = var:frostbolt_recipient }
        var:frostbolt_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:frostbolt
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_frostbolt_duration_days_value
            }
        }
        add_character_modifier = {
            modifier = wc_frostbolt_modifier
            days = wc_current_spell_duration
        }
        if = { # cannot do a random knight because tooltip and effect will differ.
            limit = {
                NOT = { has_trait = frostbite_3 }
            }
            save_scope_value_as = {
                name = spell_dodge_chance
                value = wc_order_magic_resistance_dodge_value
            }
            random_list = {
                20 = {
                    frostbite_target_burned_modifier = { TARGET = this CHANGE = add }
                    modifier = {
                        has_character_modifier = wc_frost_nova_modifier
                        add = 80
                    }
                    custom_tooltip = wc_frostbolt_frost_nova_tt
                    add_or_increase_frostbite_effect = yes
                    add_opinion = {
                        modifier = wc_frostbit_me
                        target = root
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_hit
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_frostbolt_hit_tt
                            }
                        }
                    }
                }
                80 = {
                    frostbite_target_burned_modifier = { TARGET = var:casted_recipient CHANGE = subtract }
                    custom_tooltip = wc_frostbolt_resist_tt
                    modifier = {
                        has_character_modifier = wc_frost_nova_modifier
                        add = -80
                    }
                    modifier = {
                        is_alive = yes
                        add = scope:spell_dodge_chance
                    }
                }
            }
        }
    }
}

cast_frost_nova_effect = {
    if = {
        limit = { exists = var:frost_nova_recipient }
        var:frost_nova_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:frost_nova
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }
    if = {
        limit = {
            exists = scope:this_recipient
            any_war_enemy = {
                any_army = {
                    army_commander = scope:this_recipient.army_commander
                }
            }
        }
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_frost_nova_duration_days_value
            }
        }
        scope:this_recipient.army_commander = {
            add_character_modifier = {
                modifier = wc_frost_nova_modifier
                days = wc_current_spell_duration
            }
        }
        scope:this_recipient = {
            custom_tooltip = wc_frost_nova_tt
            set_variable = {
                name = frost_nova_remainder
                value = scope:this_recipient.army_commander
                days = wc_current_spell_duration
            }
        }
    }
}

cast_frost_armor_effect = {
    if = {
        limit = { exists = var:frost_armor_recipient }
        var:frost_armor_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:frost_armor
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }

    if = {
        limit = {
            exists = scope:this_recipient
        }

        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_frost_armor_duration_days_value
            }
        }
        scope:this_recipient = {
            add_character_modifier = {
                modifier = wc_frost_armor_modifier
                days = wc_current_spell_duration
            }
        }
    }
}

cast_blizzard_effect = {
    if = {
        limit = { exists = var:blizzard_recipient }
        var:blizzard_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:blizzard
            exists = global_var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }

    if = {
        limit = {
            exists = scope:this_recipient
        }
        scope:this_recipient = {

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_blizzard_duration_days_value
                }
            }
            hidden_effect = {
                root = {
                    send_interface_toast = {
                        title = wc_spell_hit
                        left_icon = scope:this_recipient.holder
                        right_icon = root
                        custom_tooltip = wc_blizzard_hit_tt
                    }
                }
            }

            custom_tooltip = {
                text = wc_spell_blizzard_counties_tt
                every_in_de_jure_hierarchy = {
                    if = {
                        limit = {
                            tier = tier_county
                        }
                        add_county_modifier = {
                            modifier = wc_blizzard_county_modifier
                            days = wc_current_spell_duration
                        }

                        trigger_event = {
                            on_action = wc_blizzard_county_pulse
                            months = 1
                        }
                    }
                    else_if = {
                        limit = {
                            tier = tier_barony
                        }
                        title_province = {
                            every_character_in_location = {
                                limit = {
                                    NOT = {
                                        has_character_modifier = wc_blizzard_character_modifier
                                    }
                                }
                                apply_character_blizzard_effect = yes
                            }
                        }
                    }
                }
            }
        }
    }
}