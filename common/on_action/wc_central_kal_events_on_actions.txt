#Earth Mother Faith Blessing/Punishment Event Chain
on_character_faith_change = {
	on_actions = {
		wc_earth_faith_on_character_faith_change
		quilboar_faith_change_blood_shards
	}
}
wc_earth_faith_on_character_faith_change = {
	first_valid = {
		cen_kal.1045
		cen_kal.1048
	}
}

on_game_start_after_lobby = {
	on_actions = { 
		quilboar_add_blood_shards_trait_all_chars
		tauren_add_random_braves
	} 
}

on_birth_child = { on_actions = { quilboar_add_blood_shards_trait } }

#Central Kalimdor Random Event Triggers
yearly_playable_pulse = {
	on_actions = {
		wc_cen_kal_yearly_playable_pulse
	}
}

on_death = {
	on_actions = {
		quilboar_pass_flag_modifiers
	}
}

random_yearly_playable_pulse = {
	on_actions = {
		goblin_depot_flag_updates
		goblin_depot_operation_events
	}
}

wc_cen_kal_yearly_playable_pulse = {
	events = {
		cen_kal.1051 #Yearly cost of quilboar blood stones search
		cen_kal.1059 #Yearly cost of quilboar blood stones ritual
	}
}

central_kal_events.1 = {
	trigger = {
		capital_province ?= {
			OR = {
				geographical_region = world_kalimdor_central_barrens
				geographical_region = world_kalimdor_central_dustwallow
				geographical_region = world_kalimdor_central_mulgore
				geographical_region = world_kalimdor_central_stonetalon
				geographical_region = world_kalimdor_south_feralas
				geographical_region = world_kalimdor_central_desolace
				geographical_region = world_kalimdor_south_thousand_needles
				geographical_region = world_kalimdor_central_durotar
			}
		}
	}
	random_events = {
		1 = cen_kal.1010
		1 = cen_kal.1025
		1 = cen_kal.1053
		1 = cen_kal.1085 #Wailing Caverns
	}
}
earth_mother_events.1 = {
	trigger = {
		OR = {
			AND = {
				faith = faith:earth_mother_worship
				AND = {
					NOR = {
						has_trait = arrogant
						has_trait = deceitful
						has_trait = cynical
						has_trait = sadistic
						has_trait = excommunicated
						has_trait = torturer
						has_trait = flagellant
						has_trait = callous
						has_trait = arbitrary
						has_character_modifier = broke_truce
						has_trait = wc_tauren_EM
						has_trait = wc_tauren_EM_NEG
					}
					OR = { 
						has_trait = brave
						has_trait = calm
						has_trait = just
						has_trait = compassionate
					}
					age > 45
				}
			}
			AND = {
				faith = faith:agamaggan_worship
				OR = {
					is_available_adult = yes
					is_available_ai_adult = yes
				}
			}
		}
	}
	events = {
		cen_kal.1040
		cen_kal.1031
	}
}

goblin_depot_under_constr_events = {
	random_events = {
		25 = cen_kal.1002 #Mine success
		40 = cen_kal.1003 #Run with money
		20 = cen_kal.1004 #Explosion camp
		85 = cen_kal.1005 #Goblin coup
		170 = cen_kal.1008 #Nothing happens
	}
}

goblin_depot_operation_events = {
	trigger = { has_character_flag = has_working_depot }
	random_events = {
		500 = cen_kal.1007 #Mine returns
		20 = cen_kal.1004 #Explosion camp
		100 = cen_kal.1005 #Goblin coup
	}
}

quilboar_pass_flag_modifiers = {
	effect = {
		if = {
			limit = { has_character_flag = has_working_bloodstone_foragers }
			player_heir ?= { add_character_flag = has_working_bloodstone_foragers }
		}
		if = {
			limit = { has_variable = blood_shard_count }
			player_heir ?= { 
				set_variable = {
					name = blood_shard_count
					value = root.var:blood_shard_count
				}
				add_character_modifier = wc_quilboar_bloodshards
			}
		}
	}
}

quilboar_faith_change_blood_shards = {
	effect = {
		clear_wc_quilboar_modifier_effect = yes
		remove_character_flag = has_working_bloodstone_foragers
		remove_character_flag = has_active_quilboar_ritual
		remove_character_modifier = wc_quilboar_bloodshards
		if = {
			limit = { faith = faith:agamaggan_worship }
			if = { limit = { NOT = { exists = var:blood_shard_count } } set_variable = { name = blood_shard_count value = 0 } }
			if = { limit = { is_ai = no } add_character_modifier = wc_quilboar_bloodshards }
		}
	}
}

quilboar_add_blood_shards_trait = {
	trigger = {
		faith = faith:agamaggan_worship
	}
	effect = {
		if = { limit = { NOT = { exists = var:blood_shard_count } } set_variable = { name = blood_shard_count value = 0 } }
		if = { limit = { is_ai = no } add_character_modifier = wc_quilboar_bloodshards }
	}
}

quilboar_add_blood_shards_trait_all_chars = {
	effect = {
		faith:agamaggan_worship = {
			every_faith_ruler = {
				set_variable = {
					name = blood_shard_count
					value = 0
				}
				if = { limit = { is_ai = no } add_character_modifier = wc_quilboar_bloodshards }
			}
		}
	}
}

goblin_depot_flag_updates = {
	effect = {
		if = {
			limit = {
				any_held_title = {
					tier = tier_county
					title_province = {
						OR = {
							has_province_modifier = wc_moderated_depot
							has_province_modifier = wc_disabled_depot
							has_province_modifier = wc_overclocked_depot
							has_province_modifier = wc_normal_depot
						}
					}
				}
			}
			#Doesn't have flag, but has control over a depot
			if = {
				limit = { NOT = { has_character_flag = has_working_depot } }
				random_held_title = {
					limit = {
						tier = tier_county
						title_province = {
							OR = {
								has_province_modifier = wc_moderated_depot
								has_province_modifier = wc_disabled_depot
								has_province_modifier = wc_overclocked_depot
								has_province_modifier = wc_normal_depot
							}
						}
					}
					save_scope_as = depot_location
				}
				add_character_flag = has_working_depot	
				set_variable = {
					name = depot_location
					value = scope:depot_location.title_province
				}
				set_variable = {
					name = depot_work_state 
					value = 1
				}
				if = {
					limit = { faith = { has_doctrine = tenet_sanctity_of_nature } }
					set_variable = {
						name = depot_work_state 
						value = 0
					}
				}
			}
			#Has flag, depot location not under their control
			else_if = {
				limit = {
					has_character_flag = has_working_depot
					OR = {
						NOT = { has_variable = depot_location }
						NOT = { var:depot_location.province_owner = root }
					}
				}
				random_held_title = {
					limit = {
						tier = tier_county
						title_province = {
							OR = {
								has_province_modifier = wc_moderated_depot
								has_province_modifier = wc_disabled_depot
								has_province_modifier = wc_overclocked_depot
								has_province_modifier = wc_normal_depot
							}
						}
					}
					save_scope_as = depot_location
				}
				set_variable = {
					name = depot_location
					value = scope:depot_location
				}
			}
			#Has flag but goblin leader is dead
			if = {
				limit = {
					has_character_flag = has_working_depot
					OR = {
						NOT = { exists = var:goblin_prospector }
						var:goblin_prospector = { is_alive = no }
					}
				}
				create_character = {
					location = root.capital_province 
					trait=creature_goblin
					culture=culture:blackwater
					faith=faith:cult_of_wealth
					dynasty=none
					stewardship = { 14 22 }
					age = { 25 35 }
					gender_female_chance = 50
					save_scope_as = goblin_prospector
				}
				set_variable = {
					name = goblin_prospector
					value = scope:goblin_prospector
				}
			}
		}
		else_if = {
			limit = { has_character_flag = has_working_depot }
			remove_character_flag = has_working_depot
			if = { limit = { has_variable = depot_location } remove_variable = depot_location }
			if = { limit = { exists = var:goblin_prospector } remove_variable = depot_location }
		}
	}
}

wailing_caverns_trigger = {
	random_events = {
		125 = cen_kal.1088 #Begin Attack
		25 = cen_kal.1090 #Crisis averted
	}
}

wailing_caverns_trigger_risky = {
	random_events = {
		85 = cen_kal.1088 #Begin Attack
		25 = cen_kal.1090 #Crisis averted
	}
}
#Add totems and brave title to random selection of Tauren who are worthy (From testing this only made 18 tauren braves in TFT bookmark so its quite balanced
tauren_add_random_braves = {
	effect = {
		every_living_character = {
			if = {
				limit = {
					OR = {
						has_trait = brave
						has_trait = calm
						has_trait = just
						has_trait = humble
						has_trait = compassionate
					}
					NOR = {
						has_trait = sadistic
						has_trait = torturer
						has_trait = flagellant
						has_trait = callous
					}
					is_ai = yes
					age >= 30
					prowess >= 12
					is_available_healthy_adult = yes
					culture = { has_cultural_pillar = heritage_tauren }
				}
				add_character_flag = has_totem
				trigger_event = cen_kal.1092
			}
		}
	}
}