GetCourtierTrait = {
	type = character

	#gluttony
	text = {
		trigger = {
			has_character_flag = tour_general_3001_is_delectable
		}
		localization_key = courtier_trait_gluttonous
	}

	#curious ways
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_insanity_trait
		}
		localization_key = courtier_trait_insanity
	}

	#beauty
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_beauty_trait
		}
		localization_key = courtier_trait_beauty
	}

	#intellect
	text = {
		trigger = {
			OR = {
				has_character_flag = tour_general_3001_has_intellect_trait
				has_character_flag = tour_general_3001_has_good_learning
			}
		}
		localization_key = courtier_trait_intellect
	}

	#fitness
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_physique_trait
		}
		localization_key = courtier_trait_insanity
	}

	#martial ability
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_good_martial
		}
		localization_key = courtier_trait_martial
	}

	#diplomatic ways
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_good_diplomacy
		}
		localization_key = courtier_trait_diplomacy
	}

	#lucrative ways
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_good_stewardship
		}
		localization_key = courtier_trait_stewardship
	}

	#furtive ways
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_good_intrigue
		}
		localization_key = courtier_trait_intrigue
	}

	#prowess
	text = {
		trigger = {
			has_character_flag = tour_general_3001_has_good_prowess
		}
		localization_key = courtier_trait_prowess
	}
}

GetMonarchofBeautyGoodBad = {
	type = character
	random_valid = no

	#Bad and Male
	text = {
		trigger = {
			has_conventionally_ugly_trigger = yes
			is_male = yes
		}
		localization_key = monarch_of_beauty_bad_male
	}

	#Bad and Female
	text = {
		trigger = {
			has_conventionally_ugly_trigger = yes
		}
		localization_key = monarch_of_beauty_bad
	}
	
	#Good and Male
	text = {
		trigger = {
			has_conventionally_attractive_trigger = yes
			is_male = yes
		}
		localization_key = monarch_of_beauty_good_male
	}
	
	#Good and Female
	text = {
		trigger = {
			has_conventionally_attractive_trigger = yes
		}
		localization_key = monarch_of_beauty_good
	}
}

GetManeuver = {
	type = character
	random_valid = yes

	text = {
		localization_key = jig_maneuver
	}

	text = {
		localization_key = pivot_maneuver
	}

	text = {
		localization_key = wheelbarrow_maneuver
	}

	text = {
		localization_key = tower_maneuver
	}

	text = {
		localization_key = plunger_maneuver
	}

	text = {
		localization_key = cantilever_maneuver
	}

	text = {
		localization_key = animal_maneuver
	}

	text = {
		localization_key = plough_maneuver
	}

	text = {
		localization_key = hurricane_maneuver
	}

	text = {
		localization_key = dangerous_animal_maneuver
	}

	#text = {
	#	localization_key = venomous_animal_maneuver
	#}

	text = {
		localization_key = knot_maneuver
	}
} 

GetDescriptorManeuver = {
	type = character
	random_valid = yes

	text = {
		localization_key = reverse_maneuver_descriptor
	}

	text = {
		localization_key = double_maneuver_descriptor
	}

	text = {
		localization_key = downward_maneuver_descriptor
	}

	text = {
		localization_key = flying_maneuver_descriptor
	}

	text = {
		localization_key = abridged_maneuver_descriptor
	}

	text = {
		localization_key = lucky_maneuver_descriptor
	}

	text = {
		localization_key = royal_maneuver_descriptor
	}

	text = {
		localization_key = imperial_maneuver_descriptor
	}

	text = {
		localization_key = drunk_maneuver_descriptor
	}

	text = {
		localization_key = holy_maneuver_descriptor
	}
} 

GetContestComplete = {
	type = character

	text = {
		trigger = {
			scope:contest_complete = flag:joust
		}
		localization_key = tournament_phase_joust
	}

	text = {
		trigger = {
			scope:contest_complete = flag:wrestling
		}
		localization_key = tournament_phase_wrestling
	}

	text = {
		trigger = {
			scope:contest_complete = flag:board_game
		}
		localization_key = tournament_phase_board_game
	}

	text = {
		trigger = {
			scope:contest_complete = flag:duel
		}
		localization_key = tournament_phase_duel
	}
}

GetContestPTV = {
	type = character

	text = { # Player not competing
		trigger = {
			is_in_guest_subset = { name = spectator }
		}
		localization_key = locale_window_widget_progress_to_victory_label_passive_not_competing
	}

	text = { # Player occupied in Contest - Joust
		trigger = {
			is_in_guest_subset = { name = qualified }
			involved_activity = { has_current_phase = tournament_phase_joust }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing_joust
	}

	text = { # Player occupied in Contest - Melee
		trigger = {
			is_in_guest_subset = { name = qualified }
			involved_activity = { has_current_phase = tournament_phase_melee }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing
	}

	text = { # Player occupied in Contest - Board Games
		trigger = {
			is_in_guest_subset = { name = qualified }
			involved_activity = { has_current_phase = tournament_phase_board_game }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing_board_games
	}

	text = { # Player occupied in Contest - Recital
		trigger = {
			is_in_guest_subset = { name = qualified }
			involved_activity = { has_current_phase = tournament_phase_recital }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing_recital
	}

	text = { # Player occupied in Contest - Archery
		trigger = {
			is_in_guest_subset = { name = qualified }
			involved_activity = { has_current_phase = tournament_phase_archery }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing_archery
	}

	text = { # Player occupied in Contest - Horse Racing
		trigger = {
			is_in_guest_subset = { name = qualified }
			involved_activity = { has_current_phase = tournament_phase_horse_race }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing_horse_race
	}

	text = { # Player occupied in Contest - Duel
		trigger = {
			is_in_guest_subset = { name = qualified }
			involved_activity = { has_current_phase = tournament_phase_duel }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing_duel
	}

	text = { # Player occupied in Contest - Generic
		trigger = {
			is_in_guest_subset = { name = qualified }
		}
		localization_key = locale_window_widget_progress_to_victory_label_active_competing
	}

	text = { # Player likely to qualify
		trigger = {
			NOT = {
				is_in_guest_subset = { name = spectator }
			}
			exists = var:progress_to_victory
			exists = involved_activity.var:progress_to_victory_threshold
			var:progress_to_victory >= involved_activity.var:progress_to_victory_threshold
		}
		localization_key = locale_window_widget_progress_to_victory_label_passive_competing_qualified
	}

	text = { # Player may qualify
		trigger = {
			NOT = {
				is_in_guest_subset = { name = spectator }
			}
			exists = var:progress_to_victory
			exists = involved_activity.var:progress_to_victory_threshold
			var:progress_to_victory >= 10
			var:progress_to_victory < involved_activity.var:progress_to_victory_threshold
		}
		localization_key = locale_window_widget_progress_to_victory_label_passive_competing_qualifying
	}

	text = { # Player unlikely to qualify
		trigger = {
			NOT = {
				is_in_guest_subset = { name = spectator }
			}
			exists = var:progress_to_victory
			var:progress_to_victory < 10
		}
		localization_key = locale_window_widget_progress_to_victory_label_passive_competing_not_qualified
	}

	text = { # Player not competing
		trigger = {
			is_in_guest_subset = { name = contestant }
			NOT = {
				is_in_guest_subset = { name = qualified }
			}
		}
		localization_key = locale_window_widget_progress_to_victory_label_passive_not_qualified
	}

	text = { #Fallback
		localization_key = locale_window_widget_progress_to_victory_label_idle
	}
}

# Used in combination with the scripted effect () run in the immediate
# In loc, to be used as ROOT.Char.Custom('GetPeriodOfTimeWord')
GetPeriodOfTimeWord = {
	type = character

	text = {
		trigger = {
			var:period_of_time < 7
		}
		localization_key = period_of_time_few_days
	}
	text = {
		trigger = {
			var:period_of_time >= 7
			var:period_of_time < 14
		}
		localization_key = period_of_time_week
	}
	text = {
		trigger = {
			var:period_of_time >= 14
			var:period_of_time < 21
		}
		localization_key = period_of_time_fortnight
	}
	text = {
		trigger = {
			var:period_of_time >= 21
			var:period_of_time < 30
		}
		localization_key = period_of_time_three_weeks
	}
	text = {
		trigger = {
			var:period_of_time >= 30
			var:period_of_time < 60
		}
		localization_key = period_of_time_month
	}
	text = {
		trigger = {
			var:period_of_time >= 60
			var:period_of_time < 90
		}
		localization_key = period_of_time_two_months
	}
	text = {
		trigger = {
			var:period_of_time >= 90
			var:period_of_time < 180
		}
		localization_key = period_of_time_few_months
	}
	text = {
		trigger = {
			var:period_of_time >= 180
			var:period_of_time < 360
		}
		localization_key = period_of_time_half_year
	}
	text = {
		trigger = {
			var:period_of_time >= 360
			var:period_of_time < 720
		}
		localization_key = period_of_time_year
	}
	text = {
		trigger = {
			var:period_of_time >= 720
		}
		localization_key = period_of_time_over_a_year
	}
	text = {
		fallback = yes 
		localization_key = period_of_time_fallback
	}
}

GetMeleeVariant = {
	type = character

	#text = { # German
	#	trigger = {
	#		root.culture = {
	#			OR = {
	#				has_cultural_pillar = heritage_north_germanic
	#				has_cultural_pillar = heritage_central_germanic
	#				has_cultural_pillar = heritage_west_germanic
	#			}
	#		}
	#	}
	#	localization_key = tournament_melee_german
	#}

	text = { #Fallback
		localization_key = tournament_melee_fallback
	}
}

GetWrestlingVariant = {
	type = character

	#text = { # Koshti - Persian
	#	trigger = {
	#		root.culture = {
	#			has_cultural_pillar = heritage_iranian
	#		}
	#	}
	#	localization_key = tournament_wrestling_persian
	#}

	#text = { # Naban - Burmese
	#	trigger = {
	#		root.culture = {
	#			has_cultural_pillar = heritage_burman
	#		}
	#	}
	#	localization_key = tournament_wrestling_burmese
	#}

	#text = { # Ringen - Germanic
	#	trigger = {
	#		root.culture = {
	#			OR = {
	#				has_cultural_pillar = heritage_north_germanic
	#				has_cultural_pillar = heritage_central_germanic
	#				has_cultural_pillar = heritage_west_germanic
	#			}
	#		}
	#	}
	#	localization_key = tournament_wrestling_german
	#}

	#text = { # Malla-yuddha - Indian
	#	trigger = {
	#		root.culture = {
	#			OR = {
	#				has_cultural_pillar = heritage_indo_aryan
	#				has_cultural_pillar = heritage_dravidian
	#			}
	#		}
	#	}
	#	localization_key = tournament_wrestling_indian
	#}

	#text = { # Gidigbo - Yoruba
	#	trigger = {
	#		root.culture = {
	#			has_cultural_pillar = heritage_yoruba
	#		}
	#	}
	#	localization_key = tournament_wrestling_yoruba
	#}

	text = { #Fallback
		localization_key = tournament_wrestling_fallback
	}
}

GetRecitalVariant = {
	type = character

	#text = { # Eisteddfodd - Welsh
	#	trigger = {
	#		root.culture = {
	#			has_cultural_pillar = heritage_brythonic
	#		}
	#	}
	#	localization_key = tournament_recital_welsh
	#}

	text = { #Fallback
		localization_key = tournament_recital_fallback
	}
}
