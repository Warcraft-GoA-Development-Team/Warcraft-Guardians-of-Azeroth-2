set_nickname_effect = {
	if = {
		limit = {
			NAND = { # I cannot already have a bad nickname if the nickname I'm getting is also bad
				has_bad_nickname = yes
				is_bad_nickname = $NICKNAME$
			}
			OR = { # Has no nickname or a bad nickname
				NOT = { has_any_nickname = yes }
				has_bad_nickname = yes
			}
		}
		give_nickname = $NICKNAME$
	}
}

chance_for_random_nickname_effect = {
	random = {
		chance = random_nickname_chance
		#chance = 100 # For testing
		save_scope_value_as = {
			name = toggle_null_result
			value = yes
		}
		assign_random_nickname_effect = yes
	}
}

flag_random_nickname_as_taken_in_batch_effect = {
	save_scope_value_as = {
		name = had_$NICK$
		value = yes
	}
}

assign_random_nickname_effect = {
	if = {
		limit = {
			is_adult = yes
			has_any_nickname = no
			NOT = { government_has_flag = government_is_mercenary }
			NOT = { has_game_rule = random_nickname_frequency_none }
		}
		random_list = {
			100 = {
			trigger = {
				exists = scope:toggle_null_result
			}
				# To make rare nicknames even rarer
			}
			100 = {
				trigger = {
					is_male = yes
					has_trait = stubborn
					has_trait = impatient
				NOR = {
						prestige_level >= 3
					portrait_shared_clothing_contents_trigger = { # They have a chance to be bald normally; it's not weird or tease-worthy
						CULTURE_SCOPE = culture
						CULTURE_FLAG = african
					}
					is_bald_trigger = yes
					exists = scope:had_nick_the_actually_bald
				}
				}
				modifier = {
					prestige_level < 2
					factor = 2
				}
				give_nickname = nick_the_bald_ironic
			# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
			flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bald_ironic }
				trigger_event = lifestyle_nicknames.1000
			}
			10 = {
				trigger = {
					is_male = yes
					age >= 30
					stress >= 100
				NOR = {
					portrait_shared_clothing_contents_trigger = { # They have a chance to be bald normally; it's not weird or tease-worthy
						CULTURE_SCOPE = culture
						CULTURE_FLAG = african
					}
					is_bald_trigger = yes
					exists = scope:had_nick_the_actually_bald
				}
				}
				modifier = {
					add = age
				}
				give_nickname = nick_the_actually_bald
			# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
			flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_actually_bald }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					NOT = { # Warcraft
						has_trait = crusader_king
						#has_title = title:e_mongol_empire
					}
					has_personality_extroverted_trigger = yes
					NOT = {
						any_realm_county = {
							culture = root.culture
						} 
					}
					NOT = {
					primary_title ?= {
							any_past_holder = {
								has_nickname = nick_the_stranger
							}
						}
					}
					is_landed = yes
					NOT = { exists = scope:had_nick_the_stranger }
				}
				modifier = {
					NOT = {
						any_realm_county = {
							culture = {
								cultural_acceptance = { target = root.culture value >= 40 }
							}
						} 
					}
					factor = 2
				}
				give_nickname = nick_the_stranger
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_stranger }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_playable_character = yes
					NOR = {
						any_sub_realm_county = {
							faith = root.faith
						}
						AND = {
							is_independent_ruler = no
							faith = liege.faith
						}
						government_has_flag = government_is_theocracy
						government_has_flag = government_is_landless_adventurer
					}
					NOT = { exists = scope:had_nick_the_faith }
				}
				modifier = {
					has_trait = zealous
					factor = 2
				}
				give_nickname = nick_the_faith
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_faith }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = deceitful
						has_trait = fickle
						has_trait = ambitious
						has_trait = greedy
					}
					NOR = {
						has_trait = shy
						has_trait = calm
					}
					ai_boldness >= 75
					ai_honor < -75
					NOT = { exists = scope:had_nick_troublemaker }
				}
				modifier = {
					ai_honor <= -100
					factor = 2
				}
				give_nickname = nick_troublemaker
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_troublemaker }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait_extroverted_trigger = no
					has_trait_levelheaded_trigger = yes
					OR = {
						has_trait = calm
						has_trait = patient
						has_trait = content
						has_trait = compassionate
					}
					days_of_continuous_peace >= 3650
					NOT = { exists = scope:had_nick_the_peaceful }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						has_trait = calm
						has_trait = patient
						has_trait = content
						has_trait = compassionate
					}
					factor = 2
				}
				give_nickname = nick_the_peaceful
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_peaceful }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					days_of_continuous_peace >= 700
					ai_has_economical_boom_personality = yes
					any_held_title = {
						count >= 4
						tier = tier_county
						title_province = {
							has_ongoing_construction = yes
						}
					}
					NOT = { exists = scope:had_nick_the_builder }
				}
				modifier = {
					any_held_title = {
						count = all
						tier = tier_county
						title_province = {
							has_ongoing_construction = yes
						}
					}
					factor = 2
				}
				give_nickname = nick_the_builder
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_builder }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					has_trait = lazy
					OR = {
						has_trait = drunkard
						has_trait = hashishiyah
					}
					NOT = {
						prestige_level >= 3
					}
					is_bald_trigger = no
					NOT = { exists = scope:had_nick_the_hairy }
				}
				modifier = {
					prestige_level < 2
					factor = 2
				}
				give_nickname = nick_the_hairy
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hairy }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_in_civil_war = yes
					tyranny > 0
					diplomacy <= 8
					NOT = { exists = scope:had_nick_the_unready }
				}
				modifier = {
					diplomacy <= 4
					factor = 2
				}
				give_nickname = nick_the_unready
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_unready }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
						has_trait = ambitious
					}
					is_at_war = yes
					any_character_war = {
						primary_attacker = root
					}
					ai_boldness >= 50
					NOT = { exists = scope:had_nick_the_quarreller }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
						has_trait = ambitious
					}
					factor = 2
				}
				give_nickname = nick_the_quarreller
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_quarreller }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_dominant_trigger = yes
					has_trait = stubborn
					is_at_war = yes
					any_character_war = {
						primary_attacker = root
						OR = {
							using_cb = claimant_faction_war
							using_cb = claim_cb
						}
					}
					NOT = { exists = scope:had_nick_the_determined }
				}
				modifier = {
					ai_boldness >= 50
					factor = 2
				}
				give_nickname = nick_the_determined
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_determined }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
					}
					is_at_war = yes
					any_character_war = {
						primary_attacker = root
						attacker_war_score <= -50
					}
					NOT = { exists = scope:had_nick_the_rash }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
					}
					factor = 2
				}
				give_nickname = nick_the_rash
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_rash }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = arrogant
					OR = {
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
					}
					is_at_war_as_attacker = yes
					NOT = { exists = scope:had_nick_the_hotspur }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
					}
					factor = 2
				}
				give_nickname = nick_the_hotspur
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hotspur }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = deceitful
						has_trait = arbitrary
						has_trait = ambitious
						has_trait = callous
						has_trait = sadistic
						has_trait = disloyal
					}
					any_killed_character = {
						is_close_family_of = root
					}
					NOT = { exists = scope:had_nick_the_traitor }
				}
				modifier = {
					is_at_war_with_liege = yes
					factor = 2
				}
				give_nickname = nick_the_traitor
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_traitor }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					any_killed_character = {
						count >= 10
						death_reason = death_execution
					}
					NOT = { exists = scope:had_nick_the_executioner }
				}
				give_nickname = nick_the_executioner
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_executioner }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					prestige_level >= 5
					piety_level >= 3
					realm_size >= 30
					is_independent_ruler = yes
					NOT = { exists = scope:had_nick_the_great }
				}
				modifier = {
					has_trait = conqueror
					factor = 20
				}
				modifier = {
					piety_level >= 5
					factor = 2
				}
				give_nickname = nick_the_great
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_great }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					religion = { like_christianity_religion_trigger = yes }
					has_trait = faith_warrior
					NOT = { exists = scope:had_nick_the_crusader }
				}
				modifier = {
					has_education_martial_trigger = yes
					factor = 4
				}
				give_nickname = nick_the_crusader
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_crusader }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					martial >= 16
					is_at_war = yes
					any_character_war = {
						primary_attacker = {
							this = root
							current_military_strength >= prev.primary_defender.current_military_strength
						}
						attacker_war_score >= 50
					}
					ai_boldness >= 50
					NOT = { exists = scope:had_nick_the_hammer }
				}
				modifier = {
					has_trait = conqueror
					factor = 10
				}
				modifier = {
					ai_boldness >= 100
					factor = 2
				}
				give_nickname = nick_the_hammer
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hammer }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = brave
					is_in_army = yes
					martial >= 12
					prowess >= 12
					has_trait_submissive_trigger = no
					NOT = { exists = scope:had_nick_the_lionheart }
				}
				modifier = {
					martial >= 16
					prowess >= 16
					factor = 2
				}
				modifier = {
					has_trait = conqueror
					factor = 10
				}
				give_nickname = nick_the_lionheart
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lionheart }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					learning >= 20
					has_personality_dominant_trigger = yes
					has_personality_extroverted_trigger = yes
					NOT = { exists = scope:had_nick_the_turbulent }
				}
				modifier = {
					is_clergy = yes
					factor = 2
				}
				give_nickname = nick_the_turbulent
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_turbulent }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = witch
					NOT = { faith = { has_doctrine = doctrine_witchcraft_accepted } }
					NOT = { exists = scope:had_nick_the_witch }
				}
				modifier = {
					piety_level <= 1
					factor = 2
				}
				give_nickname = nick_the_witch
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_witch }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					piety_level <= 0
					ai_rationality <= -50
					NOT = { exists = scope:had_nick_the_bewitched }
				}
				give_nickname = nick_the_bewitched
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bewitched }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = drunkard
					prestige_level <= 2
					NOT = { exists = scope:had_nick_the_drunkard }
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				give_nickname = nick_the_drunkard
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_drunkard }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = drunkard
					prestige_level <= 2
					faith = { like_norse_religion_trigger = yes }
					NOT = { exists = scope:had_nick_ale_lover }
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				give_nickname = nick_ale_lover
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_ale_lover }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					culture = { has_cultural_tradition = tradition_seafaring }
					location = { is_sea_province = yes }
					NOT = { exists = scope:had_nick_the_navigator }
				}
				modifier = {
					prestige_level >= 1
					factor = 2
				}
				give_nickname = nick_the_navigator
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_navigator }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = poet
					has_trait = gregarious
					NOT = { exists = scope:had_nick_the_troubadour }
				}
				modifier = {
					has_trait_extroverted_trigger = yes
					factor = 2
				}
				give_nickname = nick_the_troubadour
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_troubadour }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = greedy
						has_trait = avaricious
						has_trait = gluttonous
					}
					ai_greed >= 50
					gold >= 200
					NOT = { exists = scope:had_nick_the_greedy }
				}
				modifier = {
					has_trait = greedy
					factor = 2
				}
				give_nickname = nick_the_greedy
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_greedy }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					culture = culture:anglo_saxon
					is_male = yes
					OR = {
						has_trait = greedy
						has_trait = avaricious
						has_trait = gluttonous
					}
					ai_greed >= 50
					gold >= 200
					NOT = { exists = scope:had_nick_pennyfather }
				}
				modifier = {
					has_trait = greedy
					factor = 2
				}
				give_nickname = nick_pennyfather
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_pennyfather }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = comfort_eater
						has_trait = gluttonous
					}
					has_personality_introverted_trigger = no
					faith = { like_norse_religion_trigger = yes }
					NOT = { exists = scope:had_nick_foul_fart }
				}
				modifier = {
					has_personality_extroverted_trigger = yes
					factor = 2
				}
				give_nickname = nick_foul_fart
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_foul_fart }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_submissive_trigger = yes
					has_personality_introverted_trigger = yes
					is_at_war = no
					NOT = { exists = scope:had_nick_the_timid }
				}
				modifier = {
					has_trait = craven
					factor = 2
				}
				give_nickname = nick_the_timid
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_timid }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					prestige_level >= 1
					any_powerful_vassal = {
						count >= 5
					}
					any_powerful_vassal = {
						count = all
						opinion = {
							target = root
							value >= 25
						}
					}
					NOT = { exists = scope:had_nick_the_worthy }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_worthy
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_worthy }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					any_powerful_vassal = {
						count >= 5
					}
					any_powerful_vassal = {
						count = all
						opinion = {
							target = root
							value <= -25
						}
					}
					NOT = { exists = scope:had_nick_the_unworthy }
				}
				modifier = {
					prestige_level <= 0
					factor = 2
				}
				give_nickname = nick_the_unworthy
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_unworthy }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_the_unfaithful }
					num_of_relation_lover >= 1
					any_child = {
						OR = {
							has_trait = bastard
							has_trait = legitimized_bastard
						}
					}
					exists = primary_spouse
					exposed_cheating_on_spouse_trigger = { SPOUSE = primary_spouse }
				}
				give_nickname = nick_the_unfaithful
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_unfaithful }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					any_child = {
						count >= 5
						exists = mother
						mother = {
							is_married = yes
							NOT = {
								is_consort_of = root
							}
						}
					}
					any_child = {
						count = all
						exists = mother
						mother = {
							is_married = yes
							NOT = {
								is_consort_of = root
							}
							add_to_temporary_list = cuckoo
						}
					}
					any_in_list = {
						list = cuckoo
						count >= 5
					}
					NOT = { exists = scope:had_nick_cuckoo }
				}
				give_nickname = nick_cuckoo
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_cuckoo }
				trigger_event = lifestyle_nicknames.1000
			}
			#50 = {
			#	trigger = {
			#		is_male = yes
			#		culture = culture:anglo_saxon
			#		any_child = {
			#			count >= 10
			#		}
			#	}
			#	give_nickname = nick_aurei_testiculi
			#	trigger_event = lifestyle_nicknames.1000
			#}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_the_unchaste }
					num_of_relation_lover >= 1
					any_child = {
						OR = {
							has_trait = bastard
							has_trait = legitimized_bastard
						}
					}
					exists = primary_spouse
					exposed_cheating_on_spouse_trigger = { SPOUSE = primary_spouse }
				}
				give_nickname = nick_the_unchaste
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_unchaste }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					num_of_relation_lover >= 3
					NOT = { exists = scope:had_nick_the_beguiling }
				}
				modifier = {
					OR = {
						has_trait = beauty_good
						has_trait = seducer
						has_trait = rakish
					}
					factor = 2
				}
				give_nickname = nick_the_beguiling
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_beguiling }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_female = yes
					num_of_relation_lover >= 1
					OR = {
						has_trait = lustful
						has_trait = beauty_good
						attraction >= 50
					}
					NOT = { exists = scope:had_nick_the_temptress }
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				give_nickname = nick_the_temptress
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_temptress }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_female = yes
					num_of_relation_lover >= 1
					attraction >= 50
					OR = {
						has_trait = seducer
						has_focus = intrigue_temptation_focus
					}
					NOT = { exists = scope:had_nick_the_seductress }
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				give_nickname = nick_the_seductress
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_seductress }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = lustful
					OR = {
						has_trait = lovers_pox
						has_trait = early_great_pox
						has_trait = great_pox
						has_trait = deviant
					}
					NOT = { exists = scope:had_nick_the_lewd }
				}
				modifier = {
					num_of_relation_lover >= 1
					factor = 2
				}
				give_nickname = nick_the_lewd
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lewd }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					num_of_relation_lover >= 1
					OR = {
						has_trait = lustful
						has_trait = beauty_good
						attraction >= 50
					}
					NOT = { exists = scope:had_nick_the_lecher }
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				give_nickname = nick_the_lecher
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lecher }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					num_of_relation_lover >= 1
					attraction >= 50
					OR = {
						has_trait = seducer
						has_focus = intrigue_temptation_focus
					}
					NOT = { exists = scope:had_nick_the_seducer }
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				give_nickname = nick_the_seducer
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_seducer }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = deceitful
					intrigue >= 16
					NOT = { exists = scope:had_nick_the_trickster }
				}
				modifier = {
					intrigue >= 20
					factor = 2
				}
				give_nickname = nick_the_trickster
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_trickster }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					intrigue >= 10
					martial >= 10
					ai_boldness >= 25
					ai_rationality >= 50
					ai_honor < 0
					NOT = { exists = scope:had_nick_the_fox }
				}
				modifier = {
					stewardship >= 10
					factor = 2
				}
				give_nickname = nick_the_fox
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_fox }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					diplomacy >= 10
					intrigue >= 10
					learning >= 10
					martial >= 10
					stewardship >= 10
					ai_rationality >= 25
					NOT = { exists = scope:had_nick_the_shrewd }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_shrewd
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_shrewd }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_benevolent_trigger = yes
					has_personality_emotional_trigger = yes
					prestige_level >= 2
					piety_level >= 2
					NOT = { exists = scope:had_nick_the_gracious }
				}
				modifier = {
					prestige_level >= 3
					piety_level >= 3
					factor = 2
				}
				give_nickname = nick_the_gracious
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_gracious }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_rationality <= -25
					has_personality_emotional_trigger = yes
					has_personality_extroverted_trigger = yes
					prestige_level <= 1
					NOT = { exists = scope:had_nick_the_silly }
				}
				modifier = {
					ai_rationality <= -75
					factor = 2
				}
				give_nickname = nick_the_silly
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_silly }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_benevolent_trigger = yes
					has_personality_extroverted_trigger = yes
					has_personality_levelheaded_trigger = yes
					NOT = { exists = scope:had_nick_the_affable }
				}
				modifier = {
					ai_compassion >= 100
					factor = 2
				}
				give_nickname = nick_the_affable
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_affable }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = poet
					has_trait = gregarious
					NOT = { exists = scope:had_nick_the_bard }
				}
				modifier = {
					has_trait_extroverted_trigger = yes
					factor = 2
				}
				give_nickname = nick_the_bard
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bard }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_benevolent_trigger = yes
					OR = {
						has_trait = generous
						has_trait = improvident
					}
					tyranny <= 0
					prestige_level >= 2
					NOT = { exists = scope:had_nick_the_generous }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_generous
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_generous }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_greed <= 0
					ai_honor >= 100
					tyranny <= 0
					prestige_level >= 2
					NOT = { exists = scope:had_nick_the_just }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_just
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_just }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					gold >= 1000
					ai_greed >= 100
					NOT = { exists = scope:had_nick_moneybags }
				}
				modifier = {
					gold >= 3000
					factor = 2
				}
				give_nickname = nick_moneybags
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_moneybags }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = poet
					diplomacy >= 10
					NOT = { exists = scope:had_nick_the_poet }
				}
				modifier = {
					prestige_level >= 2
					factor = 2
				}
				give_nickname = nick_the_poet
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_poet }
				trigger_event = lifestyle_nicknames.1000
			}
			500 = {
				trigger = {
					has_personality_dominant_trigger = yes
					is_at_war = yes
					any_character_war = {
						primary_defender = root
						defender_war_score >= 50
					}
					prestige_level >= 2
					NOT = { exists = scope:had_nick_the_ironside }
				}
				modifier = {
					has_trait = unyielding_defender
					factor = 2
				}
				give_nickname = nick_the_ironside
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_ironside }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					has_education_martial_trigger = yes
					ai_boldness >= 50
					any_killed_character = {
						count >= 1
						always = yes
					}
					NOT = { exists = scope:had_nick_the_ruthless }
				}
				modifier = {
					any_killed_character = {
						count >= 3
						always = yes
					}
					factor = 2
				}
				give_nickname = nick_the_ruthless
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_ruthless }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_the_brute }
					has_personality_dominant_trigger = yes
					has_personality_malicious_trigger = yes
					prowess >= 16
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
				}
				give_nickname = nick_the_brute
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_brute }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_the_berserker }
					has_trait = berserker
					prowess >= 16
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
				}
				give_nickname = nick_the_berserker
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_berserker }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_the_bear }
					is_male = yes
					has_personality_dominant_trigger = yes
					has_personality_extroverted_trigger = yes
					prowess >= 12
					martial >= 12
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
				}
				give_nickname = nick_the_bear
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bear }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					ai_boldness >= 50
					OR = {
						has_trait = brave
						has_trait = strong
						has_trait = physique_good
					}
					has_education_martial_trigger = yes
					NOT = { exists = scope:had_nick_the_lion }
				}
				give_nickname = nick_the_lion
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lion }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					martial >= 10
					intrigue >= 10
					OR = {
						has_trait = shrewd
						has_trait = intellect_good
						has_trait = lifestyle_hunter
					}
					NOT = { exists = scope:had_nick_the_wolf }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_wolf
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_wolf }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_extroverted_trigger = yes
					ai_boldness >= 100
					prestige_level >= 2
					NOT = { exists = scope:had_nick_the_bold }
				}
				give_nickname = nick_the_bold
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bold }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_the_brave }
					has_trait = brave
					has_personality_dominant_trigger = yes
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_brave
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_brave }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait_xp = {
						trait = lifestyle_hunter
						track = hunter
						value >= trait_second_level
					}
					NOT = { exists = scope:had_nick_the_hunter }
				}
				modifier = {
					has_trait_xp = {
						trait = lifestyle_hunter
						track = hunter
						value >= trait_third_level
					}
					factor = 2
				}
				give_nickname = nick_the_hunter
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hunter }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_boldness >= 100
					has_personality_dominant_trigger = yes
					has_personality_introverted_trigger = yes
					NOT = { exists = scope:had_nick_the_fearless }
				}
				modifier = {
					stress <= 0
					factor = 2
				}
				give_nickname = nick_the_fearless
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_fearless }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait_xp = {
						trait = lifestyle_hunter
						track = falconer
						value >= trait_second_level
					}
					NOT = { exists = scope:had_nick_the_fowler }
				}
				modifier = {
					has_trait_xp = {
						trait = lifestyle_hunter
						track = falconer
						value >= trait_third_level
					}
					factor = 2
				}
				give_nickname = nick_the_fowler
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_fowler }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = sadistic
						has_trait = torturer
						has_trait = murderer
					}
					any_killed_character = {
						count >= 3
						always = yes
					}
					NOT = { exists = scope:had_nick_the_butcher }
				}
				modifier = {
					any_killed_character = {
						count >= 5
						always = yes
					}
					factor = 2
				}
				give_nickname = nick_the_butcher
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_butcher }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lifestyle_blademaster
						is_knight = yes
						is_in_army = yes
					}
					any_killed_character = {
						count >= 3
						always = yes
					}
					NOT = { exists = scope:had_nick_the_bloody }
				}
				modifier = {
					any_killed_character = {
						count >= 5
						always = yes
					}
					factor = 2
				}
				give_nickname = nick_the_bloody
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bloody }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					intrigue >= 10
					prowess >= 12
					martial >= 12
					has_education_martial_trigger = yes
					NOT = { exists = scope:had_nick_the_hawk }
				}
				modifier = {
					intrigue >= 16
					factor = 2
				}
				give_nickname = nick_the_hawk
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hawk }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = intellect_good
						has_trait = shrewd
						has_trait = theologian
						has_trait = scholar
						learning >= 16
					}
					has_personality_introverted_trigger = yes
					has_personality_levelheaded_trigger = yes
					prestige_level >= 1
					NOT = { exists = scope:had_nick_the_wise }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_wise
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_wise }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_submissive_trigger = yes
					learning >= 16
					num_of_relation_ward >= 2
					NOT = { exists = scope:had_nick_the_sage }
				}
				give_nickname = nick_the_sage
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_sage }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
						has_trait = content
					}
					has_personality_introverted_trigger = yes
					has_personality_submissive_trigger = yes
					NOT = { exists = scope:had_nick_the_silent }
				}
				give_nickname = nick_the_silent
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_silent }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					has_personality_emotional_trigger = yes
					OR = {
						has_trait = deviant
						has_trait = cannibal
						has_trait = lustful
						has_trait = sadistic
					}
					NOT = { exists = scope:had_nick_the_depraved }
				}
				give_nickname = nick_the_depraved
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_depraved }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					OR = {
						any_prisoner = {
							count >= 2
							always = yes
						}
						tyranny > 0
						dread >= 75
					}
					NOT = { exists = scope:had_nick_the_cruel }
				}
				give_nickname = nick_the_cruel
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_cruel }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					OR = {
						has_trait = giant
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
						has_trait = scaly
					}
					OR = {
						tyranny > 0
						dread >= 75
					}
					NOT = { exists = scope:had_nick_the_abominable }
				}
				give_nickname = nick_the_abominable
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_abominable }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						piety_level <= 0
						has_trait = excommunicated
					}
					OR = {
						has_personality_malicious_trigger = yes
						num_sinful_traits >= 1
					}
					NOT = { exists = scope:had_nick_the_wicked }
				}
				modifier = {
					num_sinful_traits >= 2
					factor = 2
				}
				give_nickname = nick_the_wicked
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_wicked }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						piety_level <= 0
						has_trait = excommunicated
					}
					OR = {
						has_personality_malicious_trigger = yes
						num_sinful_traits >= 1
					}
					NOT = { exists = scope:had_nick_the_accursed }
				}
				modifier = {
					num_sinful_traits >= 2
					factor = 2
				}
				give_nickname = nick_the_accursed
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_accursed }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					exists = cp:councillor_court_chaplain
					opinion = {
						target = cp:councillor_court_chaplain
						value <= -30
					}
					OR = {
						num_sinful_traits >= 1
						piety_level <= 0
					}
					NOT = { exists = scope:had_nick_priest_hater }
				}
				modifier = {
					num_sinful_traits >= 2
					factor = 2
				}
				give_nickname = nick_priest_hater
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_priest_hater }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_zeal >= 25
					is_independent_ruler = no
					NOR = {
						religion = liege.religion
						faith = { has_doctrine = doctrine_pluralism_pluralistic }
					}
					NOT = { exists = scope:had_nick_the_heathen }
				}
				give_nickname = nick_the_heathen
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_heathen }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					faith.religion = { like_rf_abrahamic_family_trigger = yes }
					OR = {
						num_sinful_traits >= 2
						piety_level <= 0
						has_trait = excommunicated
					}
					has_personality_malicious_trigger = yes
					NOT = { exists = scope:had_nick_the_devil }
				}
				modifier = {
					num_sinful_traits >= 3
					factor = 2
				}
				give_nickname = nick_the_devil
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_devil }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					faith.religion = { like_rf_abrahamic_family_trigger = yes }
					OR = {
						num_sinful_traits >= 2
						piety_level <= 0
						has_trait = excommunicated
					}
					has_personality_dominant_trigger = yes
					NOT = { exists = scope:had_nick_the_black }
				}
				give_nickname = nick_the_black
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_black }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					piety_level >= 4
					has_personality_submissive_trigger = yes
					num_sinful_traits <= 0
					NOT = { exists = scope:had_nick_the_pious }
				}
				modifier = {
					piety_level >= 5
					factor = 2
				}
				give_nickname = nick_the_pious
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_pious }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					piety_level >= 3
					has_trait = humble
					num_sinful_traits <= 0
					ai_boldness < 0
					NOT = { exists = scope:had_nick_the_humble }
				}
				modifier = {
					piety_level >= 4
					factor = 2
				}
				give_nickname = nick_the_humble
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_humble }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					faith.religion = { like_rf_abrahamic_family_trigger = yes }
					piety_level >= 4
					has_personality_extroverted_trigger = yes
					num_sinful_traits <= 0
					NOT = { exists = scope:had_nick_the_blessed }
				}
				modifier = {
					piety_level >= 5
					factor = 2
				}
				give_nickname = nick_the_blessed
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_blessed }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					faith.religion = { like_rf_abrahamic_family_trigger = yes }
					piety_level >= 3
					has_trait = theologian
					has_trait_extroverted_trigger = no
					num_sinful_traits <= 0
					NOT = { exists = scope:had_nick_the_theologian }
				}
				modifier = {
					piety_level >= 4
					factor = 2
				}
				give_nickname = nick_the_theologian
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_theologian }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					religion = { like_eastern_religion_trigger = yes }
					piety_level >= 4
					has_personality_extroverted_trigger = yes
					num_sinful_traits <= 0
						NOT = { exists = scope:had_nick_the_enlightened }
				}
				modifier = {
					piety_level >= 5
					factor = 2
				}
				give_nickname = nick_the_enlightened
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_enlightened }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						num_virtuous_traits >= 2
						piety_level >= 4
					}
					has_personality_introverted_trigger = yes
					num_sinful_traits <= 0
					NOT = { exists = scope:had_nick_the_holy }
				}
				modifier = {
					piety_level >= 5
					factor = 2
				}
				give_nickname = nick_the_holy
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_holy }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					faith.religion = { like_rf_abrahamic_family_trigger = yes }
					OR = {
						num_virtuous_traits >= 2
						piety_level >= 4
					}
					has_personality_submissive_trigger = yes
					has_personality_extroverted_trigger = yes
					num_sinful_traits <= 0
					NOT = { exists = scope:had_nick_the_confessor }
				}
				modifier = {
					is_independent_ruler = yes
					factor = 2
				}
				give_nickname = nick_the_confessor
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_confessor }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						is_married = no
						can_have_children = no
					}
					OR = {
						has_trait = chaste
						has_trait = celibate
					}
					NOT = { exists = scope:had_nick_the_chaste }
				}
				give_nickname = nick_the_chaste
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_chaste }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					faith = { has_doctrine = doctrine_theocracy_temporal }
					has_personality_levelheaded_trigger = yes
					has_personality_introverted_trigger = yes
					has_personality_submissive_trigger = yes
					piety_level >= 2
					num_sinful_traits <= 0
					NOT = { exists = scope:had_nick_the_monk }
				}
				give_nickname = nick_the_monk
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_monk }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					piety_level >= 2
					has_trait_xp = {
						trait = pilgrim
						value >= trait_second_level
					}
					NOT = { exists = scope:had_nick_the_pilgrim }
				}
				modifier = {
					has_trait_xp = {
						trait = pilgrim
						value >= trait_third_level
					}
					factor = 2
				}
				give_nickname = nick_the_pilgrim
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_pilgrim }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = diligent
					has_trait = ambitious
					is_at_war = no
					NOT = { exists = scope:had_nick_the_able }
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				give_nickname = nick_the_able
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_able }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_compassion >= 100
					has_personality_benevolent_trigger = yes
					has_personality_emotional_trigger = yes
					NOR = {
						any_prisoner = {
							count >= 1
							always = yes
						}
						any_killed_character = {
							count >= 1
							always = yes
						}
					}
					NOT = { exists = scope:had_nick_the_compassionate }
				}
				give_nickname = nick_the_compassionate
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_compassionate }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_levelheaded_trigger = yes
					ai_honor >= 75
					ai_greed <= 0
					NOT = { exists = scope:had_nick_the_noble }
				}
				modifier = {
					prestige_level >= 2
					factor = 2
				}
				give_nickname = nick_the_noble
			# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
			flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_noble }
			trigger_event = lifestyle_nicknames.1000
		}
		100 = {
			trigger = {
				ai_boldness <= 0
				has_personality_emotional_trigger = yes
				has_personality_benevolent_trigger = yes
				NOT = { exists = scope:had_nick_the_gentle }
			}
			give_nickname = nick_the_gentle
			# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
			flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_gentle }
			trigger_event = lifestyle_nicknames.1000
		}
		100 = {
			trigger = {
				has_personality_benevolent_trigger = yes
				prestige_level >= 3
				tyranny <= 0
				NOT = { exists = scope:had_nick_the_good }
			}
			modifier = {
				prestige_level >= 2
				factor = 2
			}
			give_nickname = nick_the_good
			# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
			flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_good }
			trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_compassion >= 75
					has_personality_benevolent_trigger = yes
					has_personality_extroverted_trigger = yes
					NOT = { exists = scope:had_nick_the_kind }
				}
				give_nickname = nick_the_kind
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_kind }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_extroverted_trigger = yes
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					has_trait_malicious_trigger = no
					NOT = { exists = scope:had_nick_the_merry }
				}
				give_nickname = nick_the_merry
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_merry }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_honor >= 100
					has_personality_levelheaded_trigger = yes
					has_personality_benevolent_trigger = yes
					NOT = { exists = scope:had_nick_the_honorable }
				}
				give_nickname = nick_the_honorable
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_honorable }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = loyal
					untrustworthy_trigger = no
					NOT = { exists = scope:had_nick_the_loyal }
				}
				give_nickname = nick_the_loyal
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_loyal }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = honest
					has_trait_malicious_trigger = no
					NOT = { exists = scope:had_nick_the_honest }
				}
				give_nickname = nick_the_honest
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_honest }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_personality_malicious_trigger = yes
						tyranny >= 50
						dread >= 75
					}
					tyranny >= 10
					NOT = { exists = scope:had_nick_the_terrible }
				}
				modifier = {
					tyranny >= 50
					factor = 2
				}
				give_nickname = nick_the_terrible
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_terrible }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_personality_dominant_trigger = yes
						tyranny >= 50
					}
					tyranny >= 10
					NOT = { exists = scope:had_nick_the_tyrant }
				}
				modifier = {
					tyranny >= 30
					factor = 2
				}
				give_nickname = nick_the_tyrant
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_tyrant }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					age >= 60
					NOT = { exists = scope:had_nick_the_old }
				}
				modifier = {
					age >= 80
					factor = 5
				}
				give_nickname = nick_the_old
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_old }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
					}
					has_personality_introverted_trigger = yes
					has_trait_dominant_trigger = no
					NOT = { exists = scope:had_nick_the_shy }
				}
				modifier = {
					has_personality_submissive_trigger = yes
					factor = 2
				}
				give_nickname = nick_the_shy
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_shy }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					prestige_level >= 4
					age <= 23
					NOT = { exists = scope:had_nick_the_young }
				}
				modifier = {
					prestige_level >= 5
					factor = 2
				}
				give_nickname = nick_the_young
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_young }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					OR = {
						has_trait = bastard
						has_trait = legitimized_bastard
						has_trait = bastard_founder
					}
					NOT = { exists = scope:had_nick_the_bastard }
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				give_nickname = nick_the_bastard
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bastard }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_boldness >= 50
					has_personality_extroverted_trigger = yes
					has_personality_dominant_trigger = yes
					prestige_level >= 1
					NOT = { exists = scope:had_nick_the_proud }
				}
				modifier = {
					prestige_level >= 2
					factor = 2
				}
				give_nickname = nick_the_proud
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_proud }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_the_strong }
					OR = {
						has_trait = strong
						has_trait = physique_good
					}
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
				}
				modifier = {
					OR = {
						has_trait = physique_good_2
						has_trait = physique_good_3
					}
					factor = 2
				}
				give_nickname = nick_the_strong
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_strong }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					has_conventionally_attractive_trigger = yes
					NOR = {
						has_trait = disfigured
						has_trait = leper
						has_trait = scaly
						has_trait = beauty_bad
					}
					NOT = { exists = scope:had_nick_the_handsome }
				}
				modifier = {
					OR = {
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					factor = 2
				}
				give_nickname = nick_the_handsome
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_handsome }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_female = yes
					has_conventionally_attractive_trigger = yes
					age <= 40
					NOR = {
						has_trait = disfigured
						has_trait = leper
						has_trait = scaly
						has_trait = beauty_bad
					}
					NOT = { exists = scope:had_nick_the_fair }
				}
				modifier = {
					OR = {
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					factor = 2
				}
				give_nickname = nick_the_fair
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_fair }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					culture = { has_human_heritage_trigger = yes }
					is_female = yes
					has_conventionally_attractive_trigger = yes
					age <= 40
					NOR = {
						has_trait = disfigured
						has_trait = leper
						has_trait = scaly
						has_trait = beauty_bad
					}
					NOT = { exists = scope:had_nick_swan_neck }
				}
				modifier = {
					OR = {
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					factor = 2
				}
				give_nickname = nick_swan_neck
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_swan_neck }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_conventionally_attractive_trigger = yes
						has_trait = lustful
					}
					NOR = {
						has_trait = disfigured
						has_trait = leper
						has_trait = scaly
						has_trait = beauty_bad
					}
					any_targeting_scheme = {
						OR = {
							scheme_type = seduce
							scheme_type = courting
						}
					}
					NOT = { exists = scope:had_nick_the_desired }
				}
				modifier = {
					OR = {
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					factor = 2
				}
				give_nickname = nick_the_desired
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_desired }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = beauty_good
					age <= 40
					NOR = {
						has_trait = disfigured
						has_trait = leper
						has_trait = scaly
						has_trait = beauty_bad
					}
					NOT = { exists = scope:had_nick_the_beautiful }
				}
				modifier = {
					OR = {
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					factor = 2
				}
				give_nickname = nick_the_beautiful
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_beautiful }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = giant
					NOT = { exists = scope:had_nick_the_giant }
				}
				give_nickname = nick_the_giant
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_giant }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					prowess >= 10
					current_weight >= 50
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					NOT = { exists = scope:had_nick_the_girthy }
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				give_nickname = nick_the_girthy
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_girthy }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						ai_rationality <= -75
						has_trait = lunatic
						has_trait = possessed
						AND = {
							tyranny >= 50
							has_personality_emotional_trigger = yes
							has_personality_malicious_trigger = yes
						}
					}
					NOT = { exists = scope:had_nick_the_mad }
				}
				give_nickname = nick_the_mad
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_mad }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					probably_unintelligent_trigger = yes
					NOT = { exists = scope:had_nick_the_simple }
				}
				give_nickname = nick_the_simple
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_simple }
				trigger_event = lifestyle_nicknames.1000
			}
			500 = {
				trigger = {
					has_trait = leper
					NOT = { exists = scope:had_nick_the_leper }
				}
				give_nickname = nick_the_leper
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_leper }
				trigger_event = lifestyle_nicknames.1000
			}
			300 = {
				trigger = {
					has_trait = maimed
					NOT = { exists = scope:had_nick_half_hand }
				}
				give_nickname = nick_half_hand
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_half_hand }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = disfigured
						has_trait = inbred
						scarred_trait_activation_3 = yes
					}
					NOT = {
						has_trait = beauty_good
					}
					NOT = { exists = scope:had_nick_the_hideous }
				}
				modifier = {
					OR = {
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
					}
					factor = 2
				}
				give_nickname = nick_the_hideous
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hideous }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = inbred
					}
					NOT = {
						has_trait = beauty_good
					}
					NOT = { exists = scope:had_nick_the_frog }
				}
				modifier = {
					OR = {
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
					}
					factor = 2
				}
				give_nickname = nick_the_frog
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_frog }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = inbred
						scarred_trait_activation_3 = yes
					}
					NOT = {
						has_trait = beauty_good
					}
					NOT = { exists = scope:had_nick_the_repulsive }
				}
				modifier = {
					OR = {
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
					}
					factor = 2
				}
				give_nickname = nick_the_repulsive
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_repulsive }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = infirm
						has_trait = weak
						has_trait = spindly
						has_trait = physique_bad
						has_trait = bleeder
						has_trait = inbred
					}
					NOT = {
						has_trait = physique_good
					}
					NOT = { exists = scope:had_nick_the_frail }
				}
				modifier = {
					OR = {
						has_trait = physique_bad_2
						has_trait = physique_bad_3
					}
					factor = 2
				}
				give_nickname = nick_the_frail
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_frail }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					prowess < 8
					OR = {
						has_trait = infirm
						has_trait = spindly
						has_trait = weak
						has_trait = physique_bad
						has_trait = bleeder
						has_trait = inbred
					}
					NOT = {
						has_trait = physique_good
					}
					NOT = { exists = scope:had_nick_the_weak }
				}
				modifier = {
					OR = {
						has_trait = physique_bad_2
						has_trait = physique_bad_3
					}
					factor = 2
				}
				give_nickname = nick_the_weak
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_weak }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = clubfooted
						has_trait = weak
						has_trait = spindly
						has_trait = physique_bad
					}
					NOT = {
						has_trait = physique_good
					}
					NOT = { exists = scope:had_nick_the_lame }
				}
				modifier = {
					has_trait = clubfooted
					factor = 2
				}
				give_nickname = nick_the_lame
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lame }
				trigger_event = lifestyle_nicknames.1000
			}
			1000 = {
				trigger = {
					has_trait = lisping
					has_trait = clubfooted
					NOT = { exists = scope:had_nick_the_lisp_and_lame }
				}
				give_nickname = nick_the_lisp_and_lame
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lisp_and_lame }
				trigger_event = lifestyle_nicknames.1000
			}
			300 = {
				trigger = {
					has_trait = hunchbacked
					NOT = { exists = scope:had_nick_the_hunchback }
				}
				give_nickname = nick_the_hunchback
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hunchback }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					current_weight >= 50
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					NOT = { exists = scope:had_nick_the_fat }
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				give_nickname = nick_the_fat
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_fat }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = { 
						culture = { has_common_language_group_trigger = yes }
						culture = { has_khazmodan_language_group_trigger = yes }
					}
					current_weight >= 50
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					NOT = { exists = scope:had_nick_chubbycheeks }
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				give_nickname = nick_chubbycheeks
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_chubbycheeks }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					current_weight >= 50
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					diplomacy <= 2
					NOT = { exists = scope:had_nick_the_slobberer }
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				give_nickname = nick_the_slobberer
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_slobberer }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					current_weight >= 50
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					NOT = { exists = scope:had_nick_the_rotund }
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				give_nickname = nick_the_rotund
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_rotund }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					current_weight >= 50
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					NOT = { exists = scope:had_nick_the_plump }
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				give_nickname = nick_the_plump
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_plump }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = blind
					NOT = { exists = scope:had_nick_the_blind }
				}
				give_nickname = nick_the_blind
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_blind }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = stuttering
					NOT = { exists = scope:had_nick_the_stammerer }
				}
				give_nickname = nick_the_stammerer
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_stammerer }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = gout_ridden
					NOT = { exists = scope:had_nick_the_gouty }
				}
				give_nickname = nick_the_gouty
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_gouty }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = consumption
						has_trait = cancer
						has_trait = pneumonic
						has_trait = typhus
						has_trait = smallpox
						has_trait = measles
						has_trait = dysentery
						has_trait = ergotism
						has_trait = bubonic_plague
					}
					prestige_level <= 1
					NOT = { exists = scope:had_nick_the_diseased }
				}
				give_nickname = nick_the_diseased
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_diseased }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					dynasty ?= { dynasty_prestige_level >= 5 }
					prestige_level <= 1
					NOT = { exists = scope:had_nick_the_disgraceful }
				}
				give_nickname = nick_the_disgraceful
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_disgraceful }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
				NOT = { exists = scope:had_nick_bad_hand }
					OR = {
						has_trait = maimed
					}
					AND = {
						has_trait = scarred
						prowess < 8
					}
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
				}
				give_nickname = nick_bad_hand
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_bad_hand }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = one_eyed
					NOT = { exists = scope:had_nick_the_one_eyed }
				}
				give_nickname = nick_the_one_eyed
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_one_eyed }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					has_trait = craven
					prestige_level <= 2
					has_personality_submissive_trigger = yes
					NOT = { exists = scope:had_nick_the_trembling }
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				give_nickname = nick_the_trembling
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_trembling }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = craven
					prestige_level <= 2
					has_personality_submissive_trigger = yes
					NOT = { exists = scope:had_nick_the_craven }
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				give_nickname = nick_the_craven
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_craven }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						ai_rationality <= -75
						has_trait = lunatic
						has_trait = possessed
						AND = {
							tyranny >= 50
							has_personality_emotional_trigger = yes
							has_personality_malicious_trigger = yes
						}
					}
					NOT = { exists = scope:had_nick_the_insane }
				}
				give_nickname = nick_the_insane
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_insane }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_introverted_trigger = yes
					has_personality_dominant_trigger = yes
					has_personality_levelheaded_trigger = yes
					NOT = { exists = scope:had_nick_the_joyless }
				}
				give_nickname = nick_the_joyless
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_joyless }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = viking
					martial >= 10
					prowess >= 10
					NOT = { exists = scope:had_nick_the_viking }
				}
				give_nickname = nick_the_viking
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_viking }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					culture = { has_cultural_tradition = tradition_horse_lords }
					martial >= 10
					prowess >= 10
					number_maa_regiments_of_base_type = {
						type = archer_cavalry
						value > 1
					}
					any_raid_target = {
						always = yes
					}
					NOT = { exists = scope:had_nick_the_horse }
				}
				give_nickname = nick_the_horse
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_horse }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					probably_unintelligent_trigger = yes
					has_personality_introverted_trigger = yes
					has_personality_levelheaded_trigger = yes
					NOT = { exists = scope:had_nick_the_dull }
				}
				give_nickname = nick_the_dull
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_dull }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_dominant_trigger = yes
					has_personality_extroverted_trigger = yes
					prowess >= 16
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
					NOT = { exists = scope:had_nick_strongarm }
				}
				give_nickname = nick_strongarm
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_strongarm }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = one_eyed
					NOT = { exists = scope:had_nick_one_eye }
				}
				give_nickname = nick_one_eye
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_one_eye }
				trigger_event = lifestyle_nicknames.1000
			}
			300 = {
				trigger = {
					has_trait = maimed
					NOT = { exists = scope:had_nick_one_hand }
				}
				give_nickname = nick_one_hand
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_one_hand }
				trigger_event = lifestyle_nicknames.1000
			}
			300 = {
				trigger = {
					has_education_intrigue_trigger = yes
					intrigue >= 16
					has_trait = disfigured
					NOT = { exists = scope:had_nick_of_a_thousand_faces }
				}
				give_nickname = nick_of_a_thousand_faces
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_of_a_thousand_faces }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = consumption
						has_trait = cancer
						has_trait = pneumonic
						has_trait = typhus
						has_trait = smallpox
						has_trait = measles
						has_trait = dysentery
						has_trait = ergotism
						has_trait = bubonic_plague
					}
					prestige_level <= 1
					NOT = { exists = scope:had_nick_the_plaguebearer }
				}
				give_nickname = nick_the_plaguebearer
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_plaguebearer }
				trigger_event = lifestyle_nicknames.1000
			}
			500 = {
				trigger = {
					calc_true_if = {
						amount >= 2
						has_trait = maimed
						has_trait = one_eyed
						has_trait = one_legged
						has_trait = disfigured
					}
					stress < 100
					health >= medium_health
					NOT = { exists = scope:had_nick_the_persevering }
				}
				give_nickname = nick_the_persevering
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_persevering }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = physique_good_2
						has_trait = physique_good_3
						has_trait = beauty_good_2
						has_trait = beauty_good_3
					}
					OR = {
						has_trait = physique_bad_2
						has_trait = physique_bad_3
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
						has_trait = giant
						has_trait = albino
						has_trait = scaly
					}
					NOT = { exists = scope:had_nick_the_chimera }
				}
				give_nickname = nick_the_chimera
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_chimera }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					highest_held_title_tier <= tier_duchy
					realm_size >= 5
					any_vassal = {
						count >= 3
					}
					has_personality_benevolent_trigger = yes
					prestige_level >= 2
					diplomacy >= 12
					NOT = { exists = scope:had_nick_the_lord_of_realm }
				}
				give_nickname = nick_the_lord_of_realm
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lord_of_realm }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					highest_held_title_tier <= tier_duchy
					domain_size <= 2
					any_sibling = {
						highest_held_title_tier >= tier_kingdom
						domain_size >= 4
						prestige_level >= root.prestige_level
					}
					NOT = { exists = scope:had_nick_lackland }
				}
				give_nickname = nick_lackland
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_lackland }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					culture = {
						OR = {
							like_heritage_brythonic_trigger = yes
							any_parent_culture_or_above = {
								like_heritage_brythonic_trigger = yes
							}
						}
					}
					is_at_war = yes
					martial >= 12
					NOT = { exists = scope:had_nick_twistedbeard }
				}
				give_nickname = nick_twistedbeard
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_twistedbeard }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = { # Will make the character grow a beautiful beard
				trigger = {
					is_male = yes
					age >= 30
					learning >= 16
					OR = {
						has_trait = lifestyle_mystic
						has_trait = scholar
						has_trait = theologian
					}
					NOT = { exists = scope:had_nick_the_bearded }
				}
				give_nickname = nick_the_bearded
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bearded }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = strong
						has_trait = physique_good
					}
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = disfigured
					}
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
					NOT = { exists = scope:had_nick_the_boar }
				}
				give_nickname = nick_the_boar
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_boar }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = disfigured
					has_personality_introverted_trigger = yes
					NOT = { exists = scope:had_nick_the_faceless }
				}
				give_nickname = nick_the_faceless
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_faceless }
				trigger_event = lifestyle_nicknames.1000
			}
			300 = {
				trigger = {
					has_trait = giant
					has_trait = one_eyed
					NOT = { exists = scope:had_nick_the_cyclops }
				}
				give_nickname = nick_the_cyclops
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_cyclops }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = giant
					OR = {
						has_trait = weak
						has_trait = spindly
						has_trait = physique_bad
					}
					NOT = { exists = scope:had_nick_the_beanstalk }
				}
				give_nickname = nick_the_beanstalk
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_beanstalk }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_female = yes
					faith = { has_doctrine = doctrine_theocracy_temporal }
					has_personality_levelheaded_trigger = yes
					has_personality_introverted_trigger = yes
					has_personality_submissive_trigger = yes
					piety_level >= 2
					num_sinful_traits <= 0
					NOT = { exists = scope:had_nick_the_nun }
				}
				give_nickname = nick_the_nun
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_nun }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_in_civil_war = yes
					tyranny > 0
					diplomacy <= 8
					NOT = { exists = scope:had_nick_the_ill_ruler }
				}
				modifier = {
					diplomacy <= 4
					factor = 2
				}
				give_nickname = nick_the_ill_ruler
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_ill_ruler }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_in_civil_war = yes
					tyranny > 0
					diplomacy <= 8
					NOT = { exists = scope:had_nick_the_careless }
				}
				modifier = {
					diplomacy <= 4
					factor = 2
				}
				give_nickname = nick_the_careless
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_careless }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					age >= 60
					health >= good_health
					NOT = { exists = scope:had_nick_the_undying }
				}
				give_nickname = nick_the_undying
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_undying }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					debt_level = 1
					NOT = { exists = scope:had_nick_of_the_empty_pockets }
				}
				modifier = {
					factor = debt_level
				}
				give_nickname = nick_of_the_empty_pockets
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_of_the_empty_pockets }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = giant
					prowess >= 20
					NOT = { exists = scope:had_nick_the_goliath }
				}
				give_nickname = nick_the_goliath
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_goliath }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_education_martial_trigger = yes
					exists = capital_county
					capital_county.county_opinion >= 50
					NOT = { exists = scope:had_nick_the_shield_of_capital }
				}
				give_nickname = nick_the_shield_of_capital
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_shield_of_capital }
				trigger_event = lifestyle_nicknames.1000
			}
				100 = {
					trigger = {
						has_trait = giant
						religion = { like_pagan_religion_trigger = yes }
						NOT = { exists = scope:had_nick_the_ladder_legs }
				}
				give_nickname = nick_the_ladder_legs
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_ladder_legs }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					has_personality_dominant_trigger = yes
					has_personality_extroverted_trigger = yes
					has_trait = beauty_good
					NOT = { exists = scope:had_nick_the_peacock }
				}
				give_nickname = nick_the_peacock
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_peacock }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					dread >= 50
					has_personality_dominant_trigger = yes
					has_personality_extroverted_trigger = yes
					NOT = { exists = scope:had_nick_the_bellower }
				}
				give_nickname = nick_the_bellower
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_bellower }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = lifestyle_physician
					has_personality_benevolent_trigger = yes
					piety_level >= 2
					NOT = { exists = scope:had_nick_the_healer }
				}
				give_nickname = nick_the_healer
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_healer }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_dominant_trigger = yes
					has_personality_benevolent_trigger = yes
					prestige_level >= 2
					piety_level >= 2
					NOT = { exists = scope:had_nick_the_righteous }
				}
				modifier = {
					prestige_level >= 3
					piety_level >= 3
					factor = 2
				}
				give_nickname = nick_the_righteous
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_righteous }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_compassion >= 75
					ai_rationality >= 75
					has_personality_benevolent_trigger = yes
					NOT = { exists = scope:had_nick_the_understanding }
				}
				give_nickname = nick_the_understanding
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_understanding }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					age >= 75
					piety_level >= 2
					NOT = { exists = scope:had_nick_the_venerable }
				}
				modifier = {
					piety_level >= 3
					factor = 2
				}
				give_nickname = nick_the_venerable
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_venerable }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = lifestyle_mystic
					has_personality_benevolent_trigger = yes
					piety_level >= 2
					NOT = { exists = scope:had_nick_the_miracle_worker }
				}
				give_nickname = nick_the_miracle_worker
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_miracle_worker }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_vengefulness <= -50
					has_personality_benevolent_trigger = yes
					has_personality_levelheaded_trigger = yes
					NOR = {
						any_prisoner = {
							count >= 1
							always = yes
						}
						any_killed_character = {
							count >= 1
							always = yes
						}
					}
					NOT = { exists = scope:had_nick_the_merciful }
				}
				give_nickname = nick_the_merciful
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_merciful }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					intrigue >= 14
					diplomacy >= 14
					has_personality_extroverted_trigger = yes
					NOT = { exists = scope:had_nick_the_silver_tongue }
				}
				give_nickname = nick_the_silver_tongue
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_silver_tongue }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					prowess >= 10
					attraction >= 30
					OR = {
						has_trait = athletic
						has_trait = strong
						has_trait = physique_good
					}
					NOT = { exists = scope:had_nick_the_stallion }
				}
				give_nickname = nick_the_stallion
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_stallion }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = infirm
						probably_unintelligent_trigger = yes
					}
					NOT = { exists = scope:had_nick_the_forgetful }
				}
				modifier = {
					has_trait = fickle
					factor = 2
				}
				give_nickname = nick_the_forgetful
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_forgetful }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
					}
					has_personality_introverted_trigger = yes
					has_personality_submissive_trigger = yes
					piety_level >= 1
					NOT = { exists = scope:had_nick_the_hermit }
				}
				give_nickname = nick_the_hermit
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_hermit }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
					}
					has_personality_introverted_trigger = yes
					has_personality_submissive_trigger = yes
					NOT = { exists = scope:had_nick_the_recluse }
				}
				give_nickname = nick_the_recluse
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_recluse }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = infirm
						has_trait = spindly
						has_trait = weak
						has_trait = physique_bad
						has_trait = bleeder
						has_trait = inbred
					}
					NOR = {
						has_trait = strong
						has_trait = physique_good
					}
					NOT = { exists = scope:had_nick_the_feeble }
				}
				give_nickname = nick_the_feeble
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_feeble }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_dominant_trigger = yes
					has_personality_extroverted_trigger = yes
					has_trait = beauty_good
					NOT = { exists = scope:had_nick_the_vain }
				}
				give_nickname = nick_the_vain
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_vain }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					days_of_continuous_peace >= 700
					ai_has_economical_boom_personality = yes
					any_held_title = {
						count >= 4
						tier = tier_county
						title_province = {
							has_ongoing_construction = yes
						}
					}
					NOT = { exists = scope:had_nick_the_castellan }
				}
				modifier = {
					any_held_title = {
						count = all
						tier = tier_county
						title_province = {
							has_ongoing_construction = yes
						}
					}
					factor = 2
				}
				give_nickname = nick_the_castellan
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_castellan }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					piety_level >= 2
					faith.religion = { like_rf_abrahamic_family_trigger = yes }
					days_of_continuous_peace >= 700
					ai_has_economical_boom_personality = yes
					any_held_title = {
						count >= 4
						tier = tier_county
						title_province = {
							has_ongoing_construction = yes
						}
					}
					NOT = { exists = scope:had_nick_the_carpenter }
				}
				modifier = {
					any_held_title = {
						count = all
						tier = tier_county
						title_province = {
							has_ongoing_construction = yes
						}
					}
					factor = 2
				}
				give_nickname = nick_the_carpenter
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_carpenter }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					intrigue >= 10
					prowess >= 12
					martial >= 12
					has_education_martial_trigger = yes
					NOT = { exists = scope:had_nick_the_griffin }
				}
				modifier = {
					intrigue >= 16
					factor = 2
				}
				give_nickname = nick_the_griffin
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_griffin }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_greed <= -50
					any_sponsored_inspiration = {
						count >= 1
					}
					prestige_level >= 2
					highest_held_title_tier >= tier_kingdom
					NOT = { exists = scope:had_nick_the_patron_of_arts }
				}
				give_nickname = nick_the_patron_of_arts
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_patron_of_arts }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_zeal >= 100
					ai_rationality <= -50
					piety_level >= 2
					NOT = { exists = scope:had_nick_the_zealot }
				}
				give_nickname = nick_the_zealot
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_zealot }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					age >= 75
					NOT = { exists = scope:had_nick_the_elder }
				}
				give_nickname = nick_the_elder
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_elder }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					num_sinful_traits >= 1
					OR = {
						has_trait = sadistic
						has_trait = callous
					}
					ai_zeal <= 0
					NOT = { exists = scope:had_nick_the_evil }
				}
				modifier = {
					num_sinful_traits >= 2
					factor = 2
				}
				give_nickname = nick_the_evil
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_evil }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_extroverted_trigger = yes
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					diplomacy >= 8
					has_trait_malicious_trigger = no
					NOT = { exists = scope:had_nick_the_jovial }
				}
				give_nickname = nick_the_jovial
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_jovial }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_extroverted_trigger = yes
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					ai_rationality < 0
					has_trait_malicious_trigger = no
					NOT = { exists = scope:had_nick_the_jolly }
				}
				give_nickname = nick_the_jolly
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_jolly }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lifestyle_mystic
						has_trait = lunatic
						has_trait = possessed
					}
					has_trait_malicious_trigger = no
					NOT = { exists = scope:had_nick_the_strange }
				}
				give_nickname = nick_the_strange
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_strange }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = possessed
					stress >= 200
					NOT = { exists = scope:had_nick_the_haunted }
				}
				give_nickname = nick_the_haunted
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_haunted }
				trigger_event = lifestyle_nicknames.1000
			}
			300 = {
				trigger = {
					diplomacy < 8
					stewardship < 8
					martial < 8
					intrigue < 8
					learning < 8
					is_at_war_as_defender = yes
					NOT = { exists = scope:had_nick_the_unlucky }
				}
				give_nickname = nick_the_unlucky
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_unlucky }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					any_relation = {
						type = friend
						always = yes
					}
					any_relation = {
						type = lover
						always = yes
					}
					is_at_war = no
					gold >= 500
					realm_size >= 5
					has_any_illness = no
					health > poor_health
					stress < 100
					NOT = { exists = scope:had_nick_the_lucky }
				}
				give_nickname = nick_the_lucky
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lucky }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					prowess <= 4
					martial <= 4
					has_education_learning_trigger = yes
					prestige_level <= 1
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root }
					NOT = { exists = scope:had_nick_the_effeminate }
				}
				give_nickname = nick_the_effeminate
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_effeminate }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_male = yes
					OR = { 
						culture = { has_common_language_group_trigger = yes }
						culture = { has_khazmodan_language_group_trigger = yes }
					}
					prowess <= 4
					fertility <= 0.4
					NOT = {
						any_child = {
							count > 1
						}
					}
					NOT = { exists = scope:had_nick_softsword }
				}
				give_nickname = nick_softsword
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_softsword }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = fickle
					ai_rationality <= -50
					prestige_level <= 2
					NOT = { exists = scope:had_nick_the_clueless }
				}
				modifier = {
					probably_unintelligent_trigger = yes
					factor = 2
				}
				give_nickname = nick_the_clueless
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_clueless }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_vengefulness >= 35
					OR = {
						has_trait = wrathful
						has_trait = irritable
					}
					NOT = { exists = scope:had_nick_the_ill_tempered }
				}
				give_nickname = nick_the_ill_tempered
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_ill_tempered }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					calc_true_if = {
						amount >= 2
						has_trait = maimed
						has_trait = one_eyed
						has_trait = one_legged
						has_trait = disfigured
					}
					stress < 100
					health >= medium_health
					NOT = { exists = scope:had_nick_the_resilient }
				}
				give_nickname = nick_the_resilient
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_resilient }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lazy
						AND = {
							has_trait = reclusive
							ai_energy <= -25
						}
					}
					NOT = {
						has_trait = ambitious
					}
					days_of_continuous_peace = 3650
					NOT = { exists = scope:had_nick_do_nothing }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				give_nickname = nick_do_nothing
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_do_nothing }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = lazy
					ai_greed <= -25
					NOT = {
						has_trait = ambitious
					}
					days_of_continuous_peace = 3650
					NOT = { exists = scope:had_nick_the_indolent }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				give_nickname = nick_the_indolent
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_indolent }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = lazy
					ai_boldness >= 25
					NOT = { exists = scope:had_nick_the_sluggard }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				give_nickname = nick_the_sluggard
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_sluggard }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = lazy
					ai_boldness <= -50
					ai_energy <= -25
					days_of_continuous_peace = 3650
					NOT = { exists = scope:had_nick_the_idle }
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				give_nickname = nick_the_idle
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_idle }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = dwarf
					NOT = { exists = scope:had_nick_the_short }
				}
				give_nickname = nick_the_short
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_short }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = dwarf
					NOT = { exists = scope:had_nick_elbow_high }
				}
				give_nickname = nick_elbow_high
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_elbow_high }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = athletic
					prowess >= 12
					NOT = { exists = scope:had_nick_longshanks }
				}
				give_nickname = nick_longshanks
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_longshanks }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = wrathful
					ai_boldness >= 25
					ai_rationality <= -25
					num_of_relation_rival >= 2
					NOT = { exists = scope:had_nick_the_wrathful }
				}
				give_nickname = nick_the_wrathful
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_wrathful }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					diplomacy <= 4
					has_personality_emotional_trigger = yes
					has_personality_dominant_trigger = yes
					NOT = { exists = scope:had_nick_the_petulant }
				}
				give_nickname = nick_the_petulant
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_petulant }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_personality_emotional_trigger = yes
					num_of_relation_rival >= 4
					NOT = { exists = scope:had_nick_the_quarrelsome }
				}
				give_nickname = nick_the_quarrelsome
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_quarrelsome }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_eunuch_trigger = yes
					NOT = { exists = scope:had_nick_the_eunuch }
				}
				give_nickname = nick_the_eunuch
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_eunuch }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = lifestyle_blademaster
					any_equipped_character_artifact = { artifact_type = sword }
					prowess >= 12
					NOT = { exists = scope:had_nick_longsword }
				}
				give_nickname = nick_longsword
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_longsword }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = lifestyle_blademaster
					any_equipped_character_artifact = { artifact_type = axe }
					prowess >= 12
					NOT = { exists = scope:had_nick_greataxe }
				}
				give_nickname = nick_greataxe
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_greataxe }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = lifestyle_blademaster
					any_equipped_character_artifact = { artifact_type = mace }
					prowess >= 12
					NOT = { exists = scope:had_nick_the_mace }
				}
				give_nickname = nick_the_mace
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_mace }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = lifestyle_blademaster
					any_equipped_character_artifact = { artifact_type = spear }
					prowess >= 12
					NOT = { exists = scope:had_nick_the_spear_of_capital }
				}
				give_nickname = nick_the_spear_of_capital
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_spear_of_capital }
				trigger_event = lifestyle_nicknames.1000
			}
			200 = {
				trigger = {
					has_trait = lifestyle_blademaster
					any_equipped_character_artifact = { artifact_type = hammer }
					prowess >= 12
					NOT = { exists = scope:had_nick_the_maul }
				}
				give_nickname = nick_the_maul
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_maul }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					exists = capital_province
					capital_province = { geographical_region = world_india }
					prestige_level >= 3
					prowess >= 12
					martial >= 12
					NOT = { exists = scope:had_nick_the_tiger_of_place }
				}
				give_nickname = nick_the_tiger_of_place
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_tiger_of_place }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					diplomacy >= 16
					has_personality_extroverted_trigger = yes
					has_royal_court = yes
					has_dlc_feature = royal_court
					court_grandeur_current_level >= 9
					NOT = { exists = scope:had_nick_the_lover_of_elegance }
				}
				give_nickname = nick_the_lover_of_elegance
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_lover_of_elegance }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						has_trait = strong
						has_trait = physique_good
					}
					NOR = {
						has_trait = weak
						has_trait = spindly
						has_trait = physique_bad
					}
					NOT = { exists = scope:had_nick_the_stout }
				}
				give_nickname = nick_the_stout
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_stout }
				trigger_event = lifestyle_nicknames.1000
			}
			10 = {
				trigger = {
					diplomacy >= 16
					intrigue >= 16
					has_personality_levelheaded_trigger = yes
					NOT = { exists = scope:had_nick_the_universal_spider }
				}
				give_nickname = nick_the_universal_spider
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_universal_spider }
				trigger_event = lifestyle_nicknames.1000
			}
			25 = {
				trigger = {
					any_character_artifact = {
						count >= 6
						is_unique = yes
					}
					NOT = { exists = scope:had_nick_the_collector }
				}
				give_nickname = nick_the_collector
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_collector }
				trigger_event = lifestyle_nicknames.1000
			}
			50 = {
				trigger = {
					highest_held_title_tier >= tier_kingdom
					prestige_level >= 3
					has_personality_dominant_trigger = yes
					max_number_maa_soldiers_of_base_type = {
						type = heavy_cavalry
						value >= 500
					}
					any_held_title = {
						tier = tier_county
						any_county_province = {
							OR = {
								# TODO: Add more mine locations to this
								has_building_or_higher = undermine_01
							}
						}
					}
					NOT = { exists = scope:had_nick_the_iron_and_golden_king }
				}
				give_nickname = nick_the_iron_and_golden_king
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_iron_and_golden_king }
				trigger_event = lifestyle_nicknames.1000
			}
			2000 = {
				trigger = {
					has_trait = incapable
					NOT = { exists = scope:had_nick_the_sleeper }
				}
				give_nickname = nick_the_sleeper
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_sleeper }
				trigger_event = lifestyle_nicknames.1000
			}
			10000 = {
				trigger = {
					has_trait = incapable
					NOT = { exists = scope:had_nick_the_sleeping_king }
				}
				give_nickname = nick_the_sleeping_king
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_sleeping_king }
				trigger_event = lifestyle_nicknames.1000
			}
			1000 = {
				trigger = {
					exists = liege
					exists = mother
					liege.culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					mother.culture = {
						NOR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					NOT = {
						faith = { has_dominant_ruling_gender = dummy_male}
					}
					NOT = { exists = scope:had_nick_the_foreign_mother }
				}
				give_nickname = nick_the_foreign_mother
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_foreign_mother }
				trigger_event = lifestyle_nicknames.1000
			}
			1000 = {
				trigger = {
					exists = liege
					exists = father
					liege.culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					father.culture = {
						NOR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					NOT = {
						faith = { has_dominant_ruling_gender = dummy_female}
					}
					NOT = { exists = scope:had_nick_the_foreign_father }
				}
				give_nickname = nick_the_foreign_father
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_foreign_father }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					current_weight >= 50
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
					}
					NOT = { exists = scope:had_nick_the_corpulent }
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				give_nickname = nick_the_corpulent
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_corpulent }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					is_independent_ruler = no
					OR = {
						is_a_faction_member = yes
						has_trait = disloyal
					}
					ai_boldness >= 50
					NOT = { exists = scope:had_nick_the_insubordinate }
				}
				give_nickname = nick_the_insubordinate
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_insubordinate }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = disloyal
					intrigue >= 15
					NOT = { exists = scope:had_nick_the_backstabber }
				}
				modifier = {
					is_at_war_with_liege = yes
					factor = 2
				}
				give_nickname = nick_the_backstabber
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_backstabber }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_greed >= 50
					ai_honor <= 50
					gold >= massive_gold_value
					NOT = { exists = scope:had_nick_the_corrupt }
				}
				modifier = {
					has_trait = disloyal
					factor = 2
				}
				give_nickname = nick_the_corrupt
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_corrupt }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					probably_unintelligent_trigger = yes
					OR = {
						AND = {
							diplomacy <= 6
							martial <= 6
							stewardship <= 6
							intrigue <= 6
							learning <= 6
						}
						AND = {
							government_allows = administrative
							governor_efficiency <= 0.7
						}
						prestige_level <= 2
					}	
					NOT = { exists = scope:had_nick_the_incompetent }
				}
				modifier = {
					government_allows = administrative
					governor_efficiency <= 0.6
					factor = 2
				}
				give_nickname = nick_the_incompetent
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_incompetent }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					ai_rationality <= -50
					ai_boldness >= 50
					OR = {
						has_trait = profligate
						has_trait = reckless
					}
					NOT = { exists = scope:had_nick_the_gambler }
				}
				give_nickname = nick_the_gambler
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_gambler }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					diplomacy <= 3
					has_personality_extroverted_trigger = yes
					OR = {
						has_trait = wrathful
						has_trait = drunkard
						has_trait = honest
						has_trait = eccentric
						has_trait = impatient
					}
					prestige_level <= 2
					NOT = { exists = scope:had_nick_the_obscene }
				}
				give_nickname = nick_the_obscene
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_obscene }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					has_trait = greedy
					gold > massive_gold_value
					NOT = {
						has_trait = improvident
					}
					OR = {
						has_royal_court = no
						court_grandeur_current_level < court_grandeur_minimum_expected_level
					}
					NOT = { exists = scope:had_nick_the_miser }
				}
				give_nickname = nick_the_miser
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_miser }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					stress_level >= 3
					gold < 0
					NOT = { exists = scope:had_nick_the_unfortunate }
				}
				give_nickname = nick_the_unfortunate
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_the_unfortunate }
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					culture = {
						OR = {
							this = culture:norman
							any_parent_culture_or_above = { this = culture:norman }
						}
					}
					calc_true_if = {
						amount >= 3
						has_trait = wrathful
						has_trait = ambitious
						has_trait = lifestyle_hunter
						has_trait = education_martial
						has_trait = logistician
					}
					NOT = { exists = scope:had_nick_curtmantle }
				}
				give_nickname = nick_curtmantle
				# Flag this as having been spat out already, in case we're applying several nicknames in quick succession.
				flag_random_nickname_as_taken_in_batch_effect = { NICK = nick_curtmantle }
				trigger_event = lifestyle_nicknames.1000
			}
		}
	}
}

#Chooses a random appropriate NEGATIVE nickname and sets it on the scoped character
#Much looser trigger than generic random nickname effect as it needs to get any that are relevant
set_random_negative_nickname_effect = {
	save_scope_as = nick_recipient
	custom_tooltip = receive_slanderous_nickname_tt
	hidden_effect = {
		random_list = {
			100 = {
				trigger = {
					is_male = yes
					OR = {
						has_trait = stubborn
						has_trait = impatient
						has_trait = ambitious
						has_trait = arrogant
					}
					NOR = {
						prestige_level >= 3
						portrait_shared_clothing_contents_trigger = { # They have a chance to be bald normally; it's not weird or tease-worthy
							CULTURE_SCOPE = culture
							CULTURE_FLAG = african
						}
						is_bald_trigger = yes
						exists = scope:had_nick_the_actually_bald
					}
					any_claim = {
						tier >= tier_kingdom
					}
					highest_held_title_tier < tier_kingdom
				}
				modifier = {
					prestige_level < 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_bald_ironic
				}
			}
			10 = {
				trigger = {
					is_male = yes
					age >= 30
					NOR = {
						portrait_shared_clothing_contents_trigger = { # They have a chance to be bald normally; it's not weird or tease-worthy
							CULTURE_SCOPE = culture
							CULTURE_FLAG = african
						}
						is_bald_trigger = yes
						exists = scope:had_nick_the_actually_bald
					}
				}
				modifier = {
					add = scope:nick_recipient.age
				}
				set_nickname_effect = {
					NICKNAME = nick_the_actually_bald
				}
			}
			100 = {
				trigger = {
					NOR = {
						has_trait = crusader_king
						#WARCRAFT
						#has_title = title:e_mongol_empire
					}
					NOT = {
						any_realm_county = {
							culture = scope:nick_recipient.culture
						} 
					}
					NOT = {
						primary_title ?= {
							any_past_holder = {
								has_nickname = nick_the_stranger
							}
						}
					}
				}
				modifier = {
					NOT = {
						any_realm_county = {
							culture = {
								cultural_acceptance = { target = scope:nick_recipient.culture value >= 40 }
							}
						} 
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_stranger
				}
			}
			100 = {
				trigger = {
					is_playable_character = yes
					NOR = {
						any_sub_realm_county = {
							faith = scope:nick_recipient.faith
						}
						AND = {
							is_independent_ruler = no
							faith = liege.faith
						}
						government_has_flag = government_is_theocracy
						government_has_flag = government_is_landless_adventurer
					}
				}
				modifier = {
					has_trait = zealous
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_faith
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = deceitful
						has_trait = fickle
						has_trait = ambitious
						has_trait = greedy
						has_trait = eccentric
						has_trait = gregarious
						has_Trait = arbitrary
					}
					NOR = {
						has_trait = shy
						has_trait = calm
					}
					ai_boldness >= 75
					ai_honor < -25
				}
				modifier = {
					ai_honor <= -100
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_troublemaker
				}
			}
			100 = {
				trigger = {
					is_male = yes
					OR = {
						has_trait = lazy
						has_trait = lunatic
						has_trait = drunkard
						has_trait = hashishiyah
						has_trait = beauty_bad_1
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
					}
					is_bald_trigger = no
				}
				modifier = {
					prestige_level < 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_hairy
				}
			}
			100 = {
				trigger = {
					is_in_civil_war = yes
					tyranny > 0
				}
				modifier = {
					diplomacy <= 4
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_unready
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
						has_trait = ambitious
						has_trait = vengeful
					}
					is_at_war = yes
					any_character_war = {
						primary_attacker = scope:nick_recipient
					}
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
						has_trait = ambitious
						has_trait = vengeful
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_quarreller
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
						has_trait = fickle
					}
					is_at_war = yes
					any_character_war = {
						primary_attacker = scope:nick_recipient
						attacker_war_score <= -50
					}
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						has_trait = wrathful
						has_trait = irritable
						has_trait = impatient
						has_trait = fickle
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_rash
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = deceitful
						has_trait = arbitrary
						has_trait = ambitious
						has_trait = callous
						has_trait = sadistic
						has_trait = disloyal
						has_trait = fickle
					}
					any_killed_character = {
						is_close_family_of = scope:nick_recipient
					}
				}
				modifier = {
					is_at_war_with_liege = yes
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_traitor
				}
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					any_killed_character = {
						count >= 10
						death_reason = death_execution
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_executioner
				}
			}
			50 = {
				trigger = {
					learning >= 10
					has_personality_dominant_trigger = yes
					has_personality_extroverted_trigger = yes
				}
				modifier = {
					is_clergy = yes
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_turbulent
				}
			}
			100 = {
				trigger = {
					has_trait = witch
					NOT = { faith = { has_doctrine = doctrine_witchcraft_accepted } }
				}
				modifier = {
					piety_level <= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_witch
				}
			}
			100 = {
				trigger = {
					piety_level <= 1
					ai_rationality <= -25
					stress_level >= 1
				}
				set_nickname_effect = {
					NICKNAME = nick_the_bewitched
				}
			}
			100 = {
				trigger = {
					has_trait = drunkard
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_drunkard
				}
			}
			100 = {
				trigger = {
					has_trait = drunkard
					faith = { like_norse_religion_trigger = yes }
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_ale_lover
				}
			}
			100 = {
				trigger = {
					ai_greed >= 50
				}
				modifier = {
					has_trait = greedy
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_greedy
				}
			}
			100 = {
				trigger = {
					culture = culture:anglo_saxon
					is_male = yes
					ai_greed >= 50
					gold >= 100
				}
				modifier = {
					has_trait = greedy
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_pennyfather
				}
			}
			100 = {
				trigger = {
					has_trait = gluttonous
					has_personality_introverted_trigger = no
				}
				set_nickname_effect = {
					NICKNAME = nick_foul_fart
				}
			}
			100 = {
				trigger = {
					OR = {
						has_personality_submissive_trigger = yes
						has_personality_introverted_trigger = yes
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_timid
				}
			}
			100 = {
				trigger = {
					any_powerful_vassal = {
						count >= 3
					}
					any_powerful_vassal = {
						count = all
						opinion = {
							target = scope:nick_recipient
							value <= -25
						}
					}
				}
				modifier = {
					prestige_level <= 0
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_unworthy
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = adulterer
						AND = {
							exists = primary_spouse
							exposed_cheating_on_spouse_trigger = { SPOUSE = scope:nick_recipient.primary_spouse }
						}
					}

				}
				set_nickname_effect = {
					NICKNAME = nick_the_unfaithful
				}
			}
			100 = {
				trigger = {
					is_male = yes
					any_child = {
						count >= 4
						exists = mother
						mother = {
							is_married = yes
							NOT = {
								is_consort_of = scope:nick_recipient
							}
						}
					}
					any_child = {
						count = all
						exists = mother
						mother = {
							is_married = yes
							NOT = {
								is_consort_of = scope:nick_recipient
							}
							add_to_temporary_list = cuckoo
						}
					}
					any_in_list = {
						list = cuckoo
						count >= 4
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_cuckoo
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = fornicator
						has_trait = adulterer
						AND = {
							exists = primary_spouse
							exposed_cheating_on_spouse_trigger = { SPOUSE = scope:nick_recipient.primary_spouse }
						}
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_unchaste
				}
			}
			100 = {
				trigger = {
					is_female = yes
					num_of_relation_lover >= 1
					OR = {
						has_trait = lustful
						has_trait = beauty_good
						attraction >= 50
						has_trait = fornicator
						has_trait = adulterer
					}
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_temptress
				}
			}
			100 = {
				trigger = {
					is_female = yes
					num_of_relation_lover >= 1
					OR = {
						has_trait = lustful
						has_trait = beauty_good
						attraction >= 50
						has_trait = fornicator
						has_trait = adulterer
					}
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_seductress
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lustful
						has_trait = lovers_pox
						has_trait = early_great_pox
						has_trait = great_pox
						has_trait = deviant
					}
				}
				modifier = {
					num_of_relation_lover >= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_lewd
				}
			}
			100 = {
				trigger = {
					is_male = yes
					num_of_relation_lover >= 1
					OR = {
						has_trait = lustful
						has_trait = beauty_good
						attraction >= 50
						has_trait = fornicator
						has_trait = adulterer
					}
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_lecher
				}
			}
			100 = {
				trigger = {
					is_male = yes
					num_of_relation_lover >= 1
					OR = {
						has_trait = lustful
						has_trait = beauty_good
						attraction >= 50
						has_trait = fornicator
						has_trait = adulterer
					}
				}
				modifier = {
					num_of_relation_lover >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_seducer
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = deceitful
						has_trait = schemer
						has_trait = disloyal
					}
					intrigue >= 12
				}
				modifier = {
					intrigue >= 20
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_trickster
				}
			}
			100 = {
				trigger = {
					diplomacy >= 10
					intrigue >= 10
					learning >= 10
					martial >= 10
					stewardship >= 10
					ai_rationality >= 25
				}
				modifier = {
					prestige_level >= 3
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_shrewd
				}
			}
			100 = {
				trigger = {
					ai_rationality <= -50
					OR = {
						has_personality_emotional_trigger = yes
						has_personality_extroverted_trigger = yes
					}
					has_personality_dominant_trigger = no
				}
				modifier = {
					ai_rationality <= -75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_silly
				}
			}
			100 = {
				trigger = {
					gold >= 500
					ai_greed >= 50
				}
				modifier = {
					gold >= 2000
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_moneybags
				}
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					ai_boldness >= 25
					any_killed_character = {
						count >= 1
						always = yes
					}
				}
				modifier = {
					any_killed_character = {
						count >= 3
						always = yes
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_ruthless
				}
			}
			100 = {
				trigger = {
					has_personality_dominant_trigger = yes
					has_personality_malicious_trigger = yes
					prowess >= 12
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:nick_recipient }
				}
				set_nickname_effect = {
					NICKNAME = nick_the_brute
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = sadistic
						has_trait = torturer
						has_trait = murderer
						has_trait = kinslayer_1
						has_trait = kinslayer_2
						has_trait = kinslayer_3
					}
				}
				modifier = {
					any_killed_character = {
						count >= 4
						always = yes
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_butcher
				}
			}
			100 = {
				trigger = {
					any_killed_character = {
						count >= 3
						always = yes
					}
				}
				modifier = {
					any_killed_character = {
						count >= 5
						always = yes
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_bloody
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
						has_trait = content
					}
					has_personality_introverted_trigger = yes
				}
				set_nickname_effect = {
					NICKNAME = nick_the_silent
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = deviant
						has_trait = cannibal
						has_trait = lunatic
						has_trait = incestuous
						AND = {
							has_personality_malicious_trigger = yes
							has_personality_emotional_trigger = yes
						}
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_depraved
				}
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					OR = {
						has_trait = torturer
						has_trait = sadistic
						has_trait = callous
						has_trait = vengeful
						tyranny > 0
						dread >= 50
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_cruel
				}
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					OR = {
						has_trait = giant
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
						has_trait = scaly
					}
					OR = {
						tyranny > 0
						dread >= 20
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_abominable
				}
			}
			100 = {
				trigger = {
					OR = {
						AND = {
							has_personality_malicious_trigger = yes
							num_sinful_traits = 1
						}
						num_sinful_traits > 1
						piety_level <= 0
						has_trait = excommunicated
					}
				}
				modifier = {
					num_sinful_traits > 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_wicked
				}
			}
			100 = {
				trigger = {
					OR = {
						num_sinful_traits >= 1
						piety_level <= 0
						has_trait = excommunicated
					}
				}
				modifier = {
					num_sinful_traits >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_accursed
				}
			}
			100 = {
				trigger = {
					exists = cp:councillor_court_chaplain
					opinion = {
						target = cp:councillor_court_chaplain
						value <= -50
					}
				}
				modifier = {
					num_sinful_traits >= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_priest_hater
				}
			}
			100 = {
				trigger = {
					is_independent_ruler = no
					NOR = {
						religion = liege.religion
						faith = { has_doctrine = doctrine_pluralism_pluralistic }
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_heathen
				}
			}
			100 = {
				trigger = {
					faith.religion = { is_in_family = rf_abrahamic }
					OR = {
						dread >= 25
						piety_level <= 0
						has_trait = excommunicated
					}
					has_personality_malicious_trigger = yes
				}
				modifier = {
					num_sinful_traits >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_devil
				}
			}
			100 = {
				trigger = {
					faith.religion = { is_in_family = rf_abrahamic }
					OR = {
						num_sinful_traits >= 1
						piety_level <= 0
						has_trait = excommunicated
					}
					has_personality_dominant_trigger = yes
				}
				set_nickname_effect = {
					NICKNAME = nick_the_black
				}
			}
			100 = {
				trigger = {
					OR = {
						AND = {
							has_personality_malicious_trigger = yes
							dread > 0
						}
						tyranny >= 10
						dread >= 50
					}
				}
				modifier = {
					tyranny >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_terrible
				}
			}
			100 = {
				trigger = {
					OR = {
						has_personality_dominant_trigger = yes
						tyranny >= 25
					}
					tyranny >= 0
				}
				modifier = {
					tyranny >= 50
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_tyrant
				}
			}
			50 = {
				trigger = {
					age >= 60
				}
				modifier = {
					age >= 80
					factor = 5
				}
				set_nickname_effect = {
					NICKNAME = nick_the_old
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
					}
					has_personality_introverted_trigger = yes
				}
				modifier = {
					has_personality_submissive_trigger = yes
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_shy
				}
			}
			100 = {
				trigger = {
					age <= 25
				}
				modifier = {
					age <= 20
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_young
				}
			}
			100 = {
				trigger = {
					is_male = yes
					OR = {
						has_trait = bastard
						has_trait = legitimized_bastard
						has_trait = bastard_founder
					}
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_bastard
				}
			}
			100 = {
				trigger = {
					OR = {
						AND = {
							has_personality_dominant_trigger = yes
							ai_boldness >= 50
						}
						has_trait = arrogant
						has_trait = ambitious
					}
				}
				modifier = {
					prestige_level >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_proud
				}
			}
			100 = {
				trigger = {
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
						has_trait = gluttonous
						current_weight >= 50
					}
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_girthy
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lunatic
						has_trait = possessed
						has_trait = eccentric
						AND = {
							ai_rationality <= -50
							tyranny >= 25
							has_personality_emotional_trigger = yes
						}
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_mad
				}
			}
			100 = {
				trigger = {
					probably_unintelligent_trigger = yes
				}
				set_nickname_effect = {
					NICKNAME = nick_the_simple
				}
			}
			500 = {
				trigger = {
					has_trait = leper
				}
				set_nickname_effect = {
					NICKNAME = nick_the_leper
				}
			}
			300 = {
				trigger = {
					OR = {
						has_trait = maimed
						scarred_trait_activation_3 = yes
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_half_hand
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = disfigured
						has_trait = inbred
						scarred_trait_activation_3 = yes
					}
					NOT = {
						has_trait = beauty_good
					}
				}
				modifier = {
					OR = {
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_hideous
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = inbred
					}
					NOT = {
						has_trait = beauty_good
					}
				}
				modifier = {
					OR = {
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_frog
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = inbred
						scarred_trait_activation_3 = yes
					}
					NOT = {
						has_trait = beauty_good
					}
				}
				modifier = {
					OR = {
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_repulsive
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = infirm
						has_trait = weak
						has_trait = spindly
						has_trait = physique_bad
						has_trait = bleeder
						has_trait = inbred
					}
					NOT = {
						has_trait = physique_good
					}
				}
				modifier = {
					OR = {
						has_trait = physique_bad_2
						has_trait = physique_bad_3
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_frail
				}
			}
			100 = {
				trigger = {
					prowess < 10
					OR = {
						has_trait = infirm
						has_trait = spindly
						has_trait = weak
						has_trait = physique_bad
						has_trait = bleeder
						has_trait = inbred
						prowess <= 2
					}
					NOT = {
						has_trait = physique_good
					}
				}
				modifier = {
					OR = {
						has_trait = physique_bad_2
						has_trait = physique_bad_3
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_weak
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = clubfooted
						has_trait = weak
						has_trait = spindly
						has_trait = physique_bad
						has_trait = infirm
					}
					NOT = {
						has_trait = physique_good
					}
				}
				modifier = {
					has_trait = clubfooted
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_lame
				}
			}
			1000 = {
				trigger = {
					has_trait = lisping
					has_trait = clubfooted
				}
				set_nickname_effect = {
					NICKNAME = nick_the_lisp_and_lame
				}
			}
			300 = {
				trigger = {
					has_trait = hunchbacked
				}
				set_nickname_effect = {
					NICKNAME = nick_the_hunchback
				}
			}
			100 = {
				trigger = {
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
						has_trait = gluttonous
						current_weight >= 50
					}
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_fat
				}
			}
			100 = {
				trigger = {
					culture = culture:anglo_saxon
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
						current_weight >= 50
					}
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_chubbycheeks
				}
			}
			50 = {
				trigger = {
					OR = {
						current_weight >= 50
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
						has_trait = gluttonous
					}
					diplomacy <= 8
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_slobberer
				}
			}
			50 = {
				trigger = {
					OR = {
						current_weight >= 50
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
						has_trait = gluttonous
					}
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_rotund
				}
			}
			25 = {
				trigger = {
					OR = {
						current_weight >= 50
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
						has_trait = gluttonous
					}
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_plump
				}
			}
			200 = {
				trigger = {
					has_trait = blind
				}
				set_nickname_effect = {
					NICKNAME = nick_the_blind
				}
			}
			200 = {
				trigger = {
					has_trait = stuttering
				}
				set_nickname_effect = {
					NICKNAME = nick_the_stammerer
				}
			}
			200 = {
				trigger = {
					has_trait = gout_ridden
				}
				set_nickname_effect = {
					NICKNAME = nick_the_gouty
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = consumption
						has_trait = cancer
						has_trait = pneumonic
						has_trait = typhus
						has_trait = smallpox
						has_trait = measles
						has_trait = dysentery
						has_trait = ergotism
						has_trait = bubonic_plague
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_diseased
				}
			}
			25 = {
				trigger = {
					dynasty ?= { dynasty_prestige_level >= 2 }
					prestige_level <= 1
				}
				set_nickname_effect = {
					NICKNAME = nick_the_disgraceful
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = maimed
						AND = {
							has_trait = scarred
							prowess < 8
						}
					}
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:nick_recipient }
				}
				set_nickname_effect = {
					NICKNAME = nick_bad_hand
				}
			}
			100 = {
				trigger = {
					has_trait = one_eyed
				}
				set_nickname_effect = {
					NICKNAME = nick_the_one_eyed
				}
			}
			50 = {
				trigger = {
					OR = {
						has_trait = craven
						AND = {
							has_personality_submissive_trigger = yes
							dread <= 0
						}
					}
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_trembling
				}
			}
			100 = {
				trigger = {
					has_trait = craven
					has_personality_submissive_trigger = yes
				}
				modifier = {
					prestige_level <= 1
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_craven
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lunatic
						has_trait = possessed
						has_trait = eccentric
						AND = {
							tyranny >= 50
							ai_rationality <= -50
							has_personality_emotional_trigger = yes
						}
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_insane
				}
			}
			100 = {
				trigger = {
					OR = {
						AND = {
							has_personality_introverted_trigger = yes
							has_personality_levelheaded_trigger = yes
						}
						has_trait = depressed_1
						has_trait = depressed_genetic
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_joyless
				}
			}
			100 = {
				trigger = {
					probably_unintelligent_trigger = yes
					OR = {
						has_personality_introverted_trigger = yes
						has_personality_levelheaded_trigger = yes
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_dull
				}
			}
			100 = {
				trigger = {
					has_trait = one_eyed
				}
				set_nickname_effect = {
					NICKNAME = nick_one_eye
				}
			}
			300 = {
				trigger = {
					has_trait = maimed
				}
				set_nickname_effect = {
					NICKNAME = nick_one_hand
				}
			}
			300 = {
				trigger = {
					intrigue >= 15
					has_trait = disfigured
				}
				set_nickname_effect = {
					NICKNAME = nick_of_a_thousand_faces
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = consumption
						has_trait = cancer
						has_trait = pneumonic
						has_trait = typhus
						has_trait = smallpox
						has_trait = measles
						has_trait = dysentery
						has_trait = ergotism
						has_trait = bubonic_plague
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_plaguebearer
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = physique_good
						has_trait = beauty_good
					}
					OR = {
						has_trait = physique_bad_2
						has_trait = physique_bad_3
						has_trait = beauty_bad_2
						has_trait = beauty_bad_3
						has_trait = giant
						has_trait = albino
						has_trait = scaly
						has_trait = spindly
						has_trait = hunchbacked
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_chimera
				}
			}
			50 = {
				trigger = {
					highest_held_title_tier <= tier_duchy
					domain_size <= 2
					any_sibling = {
						highest_held_title_tier >= tier_kingdom
						domain_size >= 4
						prestige_level >= scope:nick_recipient.prestige_level
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_lackland
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = strong
						has_trait = physique_good
						prowess >= 18
					}
					OR = {
						has_trait = beauty_bad
						has_trait = hunchbacked
						has_trait = scaly
						has_trait = disfigured
						scarred_trait_activation_3 = yes
					}
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:nick_recipient }
				}
				set_nickname_effect = {
					NICKNAME = nick_the_boar
				}
			}
			100 = {
				trigger = {
					has_trait = disfigured
					has_personality_introverted_trigger = yes
				}
				set_nickname_effect = {
					NICKNAME = nick_the_faceless
				}
			}
			300 = {
				trigger = {
					has_trait = giant
					has_trait = one_eyed
				}
				set_nickname_effect = {
					NICKNAME = nick_the_cyclops
				}
			}
			100 = {
				trigger = {
					has_trait = giant
					OR = {
						has_trait = weak
						has_trait = spindly
						has_trait = physique_bad
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_beanstalk
				}
			}
			100 = {
				trigger = {
					OR = {
						tyranny > 0
						stewardship <= 4
					}
					diplomacy <= 8
				}
				modifier = {
					diplomacy <= 4
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_ill_ruler
				}
			}
			100 = {
				trigger = {
					is_in_civil_war = yes
					OR = {
						tyranny > 0
						diplomacy <= 8
					}
				}
				modifier = {
					diplomacy <= 4
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_careless
				}
			}
			50 = {
				trigger = {
					gold <= 0
				}
				modifier = {
					factor = debt_level
				}
				set_nickname_effect = {
					NICKNAME = nick_of_the_empty_pockets
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = infirm
						probably_unintelligent_trigger = yes
					}
				}
				modifier = {
					has_trait = fickle
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_forgetful
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
					}
					has_personality_introverted_trigger = yes
				}
				set_nickname_effect = {
					NICKNAME = nick_the_hermit
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = shy
						has_trait = reclusive
					}
					has_personality_introverted_trigger = yes
				}
				set_nickname_effect = {
					NICKNAME = nick_the_recluse
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = infirm
						has_trait = spindly
						has_trait = weak
						has_trait = physique_bad
						has_trait = bleeder
						has_trait = inbred
						prowess <= 2
					}
					NOR = {
						has_trait = strong
						has_trait = physique_good
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_feeble
				}
			}
			100 = {
				trigger = {
					has_personality_dominant_trigger = yes
					OR = {
						has_trait = arrogant
						has_trait = lustful
						has_trait = lazy
						has_personality_extroverted_trigger = yes
					}
					has_trait = beauty_good
				}
				set_nickname_effect = {
					NICKNAME = nick_the_vain
				}
			}
			100 = {
				trigger = {
					ai_zeal >= 100
					ai_rationality <= -20
				}
				set_nickname_effect = {
					NICKNAME = nick_the_zealot
				}
			}
			100 = {
				trigger = {
					has_personality_malicious_trigger = yes
					OR = {
						has_trait = sadistic
						has_trait = callous
						num_sinful_traits >= 1
					}
				}
				modifier = {
					num_sinful_traits >= 2
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_evil
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lifestyle_mystic
						has_trait = lunatic
						has_trait = possessed
						has_trait = witch
						has_trait = eccentric
					}
					has_trait_malicious_trigger = no
				}
				set_nickname_effect = {
					NICKNAME = nick_the_strange
				}
			}
			100 = {
				trigger = {
					has_trait = possessed
				}
				set_nickname_effect = {
					NICKNAME = nick_the_haunted
				}
			}
			300 = {
				trigger = {
					OR = {
						AND = {
							diplomacy <= 6
							stewardship <= 6
							martial <= 6
							intrigue <= 6
							learning <= 6
						}
						stress_level >= 3
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_unlucky
				}
			}
			100 = {
				trigger = {
					is_male = yes
					prowess <= 4
					martial <= 4
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:nick_recipient }
				}
				set_nickname_effect = {
					NICKNAME = nick_the_effeminate
				}
			}
			100 = {
				trigger = {
					is_male = yes
					culture = culture:anglo_saxon
					prowess <= 6
					fertility <= 0.4
					NOT = {
						any_child = {
							count > 1
						}
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_softsword
				}
			}
			100 = {
				trigger = {
					has_trait = fickle
					ai_rationality <= -25
				}
				modifier = {
					probably_unintelligent_trigger = yes
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_clueless
				}
			}
			100 = {
				trigger = {
					ai_vengefulness >= 35
					OR = {
						has_trait = wrathful
						has_trait = irritable
						has_trait = fickle
						has_trait = stubborn
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_ill_tempered
				}
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lazy
						AND = {
							has_trait = reclusive
							ai_energy <= -20
						}
					}
					NOR = {
						has_trait = ambitious
						has_trait = diligent
					}
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_do_nothing
				}
			}
			100 = {
				trigger = {
					has_trait = lazy
					ai_greed <= -20
					NOR = {
						has_trait = ambitious
					}
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_indolent
				}
			}
			100 = {
				trigger = {
					has_trait = lazy
					ai_boldness <= -20
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_sluggard
				}
			}
			100 = {
				trigger = {
					has_trait = lazy
					ai_boldness <= -20
					ai_energy <= -20
				}
				modifier = {
					calc_true_if = {
						amount >= 2
						prestige_level <= 2
					}
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_idle
				}
			}
			100 = {
				trigger = {
					has_trait = dwarf
				}
				set_nickname_effect = {
					NICKNAME = nick_the_short
				}
			}
			100 = {
				trigger = {
					has_trait = dwarf
				}
				set_nickname_effect = {
					NICKNAME = nick_elbow_high
				}
			}
			100 = {
				trigger = {
					has_trait = wrathful
					ai_rationality <= -25
					num_of_relation_rival >= 1
				}
				set_nickname_effect = {
					NICKNAME = nick_the_wrathful
				}
			}
			100 = {
				trigger = {
					diplomacy <= 4
					has_personality_emotional_trigger = yes
				}
				set_nickname_effect = {
					NICKNAME = nick_the_petulant
				}
			}
			100 = {
				trigger = {
					has_personality_emotional_trigger = yes
					num_of_relation_rival >= 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_quarrelsome
				}
			}
			100 = {
				trigger = { is_eunuch_trigger = yes }
				set_nickname_effect = {
					NICKNAME = nick_the_eunuch
				}
			}
			2000 = {
				trigger = {
					has_trait = incapable
				}
				set_nickname_effect = {
					NICKNAME = nick_the_sleeper
				}
			}
			2000 = {
				trigger = {
					has_trait = incapable
					highest_held_title_tier >= tier_kingdom
				}
				set_nickname_effect = {
					NICKNAME = nick_the_sleeping_king
				}
			}
			1000 = {
				trigger = {
					exists = liege
					exists = mother
					liege.culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					mother.culture = {
						NOR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					NOT = {
						faith = { has_dominant_ruling_gender = dummy_male}
					}
				}
				give_nickname = nick_the_foreign_mother
				trigger_event = lifestyle_nicknames.1000
			}
			1000 = {
				trigger = {
					exists = liege
					exists = father
					liege.culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					culture = {
						OR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					father.culture = {
						NOR = {
							this = culture:greek
							any_parent_culture_or_above = {
								this = culture:greek
							}
						}
					}
					NOT = {
						faith = { has_dominant_ruling_gender = dummy_female}
					}
				}
				give_nickname = nick_the_foreign_father
				trigger_event = lifestyle_nicknames.1000
			}
			100 = {
				trigger = {
					OR = {
						loves_food_trigger = yes
						has_trait = lifestyle_reveler
						has_trait = gluttonous
						current_weight >= 50
					}
				}
				modifier = {
					current_weight >= 75
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_corpulent
				}
			}
			100 = {
				trigger = {
					is_independent_ruler = no
					OR = {
						is_a_faction_member = yes
						has_trait = disloyal
						opinion = {
							target = liege
							value <= -60
						}
					}
					ai_boldness >= low_positive_ai_value
				}
				set_nickname_effect = {
					NICKNAME = nick_the_insubordinate
				}
			}
			100 = {
				trigger = {
					has_trait = disloyal
					intrigue >= 10
				}
				modifier = {
					is_at_war_with_liege = yes
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_backstabber
				}
			}
			100 = {
				trigger = {
					ai_greed >= 25
					ai_honor <= 25
					gold >= massive_gold_value
				}
				modifier = {
					has_trait = disloyal
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_corrupt
				}
			}
			100 = {
				trigger = {
					probably_unintelligent_trigger = yes
					OR = {
						AND = {
							diplomacy <= 6
							martial <= 6
							stewardship <= 6
							intrigue <= 6
							learning <= 6
						}
						AND = {
							government_allows = administrative
							governor_efficiency <= 0.7
						}
					}	
				}
				modifier = {
					government_allows = administrative
					governor_efficiency <= 0.6
					factor = 2
				}
				set_nickname_effect = {
					NICKNAME = nick_the_incompetent
				}
			}
			100 = {
				trigger = {
					ai_rationality <= -25
					ai_boldness > 0
					OR = {
						has_trait = profligate
						has_trait = reckless
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_gambler
				}
			}
			100 = {
				trigger = {
					diplomacy <= 5
					has_personality_extroverted_trigger = yes
					OR = {
						has_trait = wrathful
						has_trait = drunkard
						has_trait = honest
						has_trait = eccentric
						has_trait = impatient
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_obscene
				}
			}
			100 = {
				trigger = {
					has_trait = greedy
					gold >= major_gold_value
					NOT = {
						has_trait = improvident
					}
					OR = {
						has_royal_court = no
						court_grandeur_current_level < court_grandeur_minimum_expected_level
					}
				}
				set_nickname_effect = {
					NICKNAME = nick_the_miser
				}
			}
			#Fallback
			1 = {
				trigger = {
				}
				set_nickname_effect = {
					NICKNAME = nick_the_unfortunate
				}
			}
		}
	}
}
