# Control values.
## Gold controls.
@countermeasure_gold_cost_miniscule_value = miniscule_gold_value
@countermeasure_gold_cost_minor_value = minor_gold_value
@countermeasure_gold_cost_medium_value = medium_gold_value
@countermeasure_gold_cost_major_value = major_gold_value
## Prestige controls.
@countermeasure_prestige_cost_miniscule_value = 25
@countermeasure_prestige_cost_minor_value = 50
@countermeasure_prestige_cost_medium_value = 150
@countermeasure_prestige_cost_major_value = 250
## Piety controls.
@countermeasure_piety_cost_miniscule_value = 25
@countermeasure_piety_cost_minor_value = 50
@countermeasure_piety_cost_medium_value = 150
@countermeasure_piety_cost_major_value = 250
## Opposing Hostile Scheme Success Chance controls.
@opposing_hostile_success_chance_malus_minor = -10
@opposing_hostile_success_chance_malus_medium = -20
@opposing_hostile_success_chance_malus_major = -30

# Just for putting parameters into so that they can be set up in advance of when they're actually used.
debug_countermeasure = {
	
	is_shown = { always = no }

	parameters = {
		# Check State parameters — stuff we use to see what countermeasure is in place
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters — the ones wot actually do somefink
		secrecy_vs_all_schemes_bonus_minor = yes
		secrecy_vs_all_schemes_bonus_medium = yes
		secrecy_vs_all_schemes_bonus_major = yes
		success_chance_vs_calculated_schemes_malus_minor = yes
		success_chance_vs_calculated_schemes_malus_medium = yes
		success_chance_vs_calculated_schemes_malus_major = yes
		success_chance_vs_calculated_schemes_bonus_minor = yes
		success_chance_vs_calculated_schemes_bonus_medium = yes
		success_chance_vs_calculated_schemes_bonus_major = yes
		success_chance_vs_opportunistic_schemes_malus_minor = yes
		success_chance_vs_opportunistic_schemes_malus_medium = yes
		success_chance_vs_opportunistic_schemes_malus_major = yes
		success_chance_vs_opportunistic_schemes_bonus_minor = yes
		success_chance_vs_opportunistic_schemes_bonus_medium = yes
		success_chance_vs_opportunistic_schemes_bonus_major = yes
		success_chance_vs_indirect_schemes_malus_minor = yes
		success_chance_vs_indirect_schemes_malus_medium = yes
		success_chance_vs_indirect_schemes_malus_major = yes
		success_chance_vs_indirect_schemes_bonus_minor = yes
		success_chance_vs_indirect_schemes_bonus_medium = yes
		success_chance_vs_indirect_schemes_bonus_major = yes
		# Deprecated.
		characters_more_likely_to_accept_agenthood_against_if_honest = yes
		characters_more_likely_to_accept_agenthood_against_if_just = yes
		characters_more_likely_to_accept_agenthood_against_if_deceitful = yes
		characters_more_likely_to_accept_agenthood_against_if_gregarious = yes
		characters_more_likely_to_accept_agenthood_against_if_arrogant = yes
	}
}

# Cheap way to lower hostile secrecy, not too effective.
bounties_for_whispers_t1 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_bronze.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = bounties_for_whispers
			TIER = 1
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = bounties_for_whispers }
	}

	owner_modifier = {
		monthly_prestige_gain_mult = -0.2
		monthly_income_mult = -0.1
	}

	ai_will_do = { add = ai_will_do_bounties_for_whispers_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_minor = yes
		#characters_more_likely_to_accept_agenthood_against_if_honest = yes
	}
}
bounties_for_whispers_t2 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_silver.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = bounties_for_whispers
			TIER = 2
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = bounties_for_whispers }
	}

	owner_modifier = {
		monthly_prestige_gain_mult = -0.15
		monthly_income_mult = -0.075
	}

	ai_will_do = { add = ai_will_do_bounties_for_whispers_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_minor = yes
		#characters_more_likely_to_accept_agenthood_against_if_honest = yes
	}
}
bounties_for_whispers_t3 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_gold.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = bounties_for_whispers
			TIER = 3
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = bounties_for_whispers }
	}

	owner_modifier = {
		monthly_prestige_gain_mult = -0.1
		monthly_income_mult = -0.05
	}

	ai_will_do = { add = ai_will_do_bounties_for_whispers_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_honest = yes
	}
}
bounties_for_whispers_t4 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_purple.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = bounties_for_whispers
			TIER = 4
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = bounties_for_whispers }
	}

	owner_modifier = {
		monthly_prestige_gain_mult = -0.05
		monthly_income_mult = -0.025
	}

	ai_will_do = { add = ai_will_do_bounties_for_whispers_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_honest = yes
	}
}

# Costly way to lower hostile secrecy, effective but many side-effects.
arbitrary_arrests_t1 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_bronze.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = arbitrary_arrests
			TIER = 1
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = arbitrary_arrests }
	}

	owner_modifier = {
		county_opinion_add = dislikes_countermeasure_county_opinion_value
		courtier_and_guest_opinion = dislikes_countermeasure_opinion_value
		tyranny_gain_mult = 0.3
	}

	ai_will_do = { add = ai_will_do_arbitrary_arrests_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_just = yes
	}
}
arbitrary_arrests_t2 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_silver.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = arbitrary_arrests
			TIER = 2
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = arbitrary_arrests }
	}

	owner_modifier = {
		county_opinion_add = dislikes_countermeasure_county_opinion_lowered_value
		courtier_and_guest_opinion = dislikes_countermeasure_opinion_lowered_value
		tyranny_gain_mult = 0.2
	}

	ai_will_do = { add = ai_will_do_arbitrary_arrests_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_just = yes
	}
}
arbitrary_arrests_t3 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_gold.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = arbitrary_arrests
			TIER = 3
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = arbitrary_arrests }
	}

	owner_modifier = {
		county_opinion_add = dislikes_countermeasure_county_opinion_lowered_value
		courtier_and_guest_opinion = dislikes_countermeasure_opinion_lowered_value
		tyranny_gain_mult = 0.1
	}

	ai_will_do = { add = ai_will_do_arbitrary_arrests_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_just = yes
	}
}
arbitrary_arrests_t4 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_purple.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = arbitrary_arrests
			TIER = 4
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = arbitrary_arrests }
	}

	owner_modifier = {
		county_opinion_add = dislikes_countermeasure_county_opinion_lowered_further_value
		courtier_and_guest_opinion = dislikes_countermeasure_opinion_lowered_further_value
		tyranny_gain_mult = 0.1
	}

	ai_will_do = { add = ai_will_do_arbitrary_arrests_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		secrecy_vs_all_schemes_bonus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_just = yes
	}
}

# Good for stopping things like seduction, bad for stopping things like murder.
strengthen_sentries_t1 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_bronze.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = strengthen_sentries
			TIER = 1
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = strengthen_sentries }
	}

	owner_modifier = {
		courtly_opinion = dislikes_countermeasure_opinion_value
		courtier_and_guest_opinion = dislikes_countermeasure_opinion_lowered_further_value
	}

	ai_will_do = {
		add = ai_will_do_strengthen_sentries_value
		add = ai_will_do_strengthen_sentries_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_opportunistic_schemes_bonus_medium = yes
		success_chance_vs_calculated_schemes_malus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_deceitful = yes
	}
}
strengthen_sentries_t2 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_silver.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = strengthen_sentries
			TIER = 2
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = strengthen_sentries }
	}

	owner_modifier = {
		courtly_opinion = dislikes_countermeasure_opinion_value
	}

	ai_will_do = {
		add = ai_will_do_strengthen_sentries_value
		add = ai_will_do_strengthen_sentries_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_opportunistic_schemes_bonus_medium = yes
		success_chance_vs_calculated_schemes_malus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_deceitful = yes
	}
}
strengthen_sentries_t3 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_gold.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = strengthen_sentries
			TIER = 3
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = strengthen_sentries }
	}

	owner_modifier = {
		courtly_opinion = dislikes_countermeasure_opinion_lowered_value
	}

	ai_will_do = {
		add = ai_will_do_strengthen_sentries_value
		add = ai_will_do_strengthen_sentries_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_opportunistic_schemes_bonus_medium = yes
		success_chance_vs_calculated_schemes_malus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_deceitful = yes
	}
}
strengthen_sentries_t4 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_purple.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = strengthen_sentries
			TIER = 4
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = strengthen_sentries }
	}

	owner_modifier = {
		courtly_opinion = dislikes_countermeasure_opinion_lowered_further_value
	}

	ai_will_do = {
		add = ai_will_do_strengthen_sentries_value
		add = ai_will_do_strengthen_sentries_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_opportunistic_schemes_bonus_minor = yes
		success_chance_vs_calculated_schemes_malus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_deceitful = yes
	}
}

# Good for stopping things like murder, bad for stopping things like seduction.
redouble_guards_t1 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_bronze.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = redouble_guards
			TIER = 1
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = redouble_guards }
	}

	owner_modifier = {
		glory_hound_opinion = dislikes_countermeasure_opinion_value
		courtier_and_guest_opinion = dislikes_countermeasure_opinion_lowered_further_value
		stress_gain_mult = 0.2
	}

	ai_will_do = {
		add = ai_will_do_redouble_guards_value
		add = ai_will_do_redouble_guards_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_calculated_schemes_bonus_medium = yes
		success_chance_vs_opportunistic_schemes_malus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_gregarious = yes
	}
}
redouble_guards_t2 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_silver.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = redouble_guards
			TIER = 2
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = redouble_guards }
	}

	owner_modifier = {
		glory_hound_opinion = dislikes_countermeasure_opinion_lowered_value
		stress_gain_mult = 0.15
	}

	ai_will_do = {
		add = ai_will_do_redouble_guards_value
		add = ai_will_do_redouble_guards_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_calculated_schemes_bonus_medium = yes
		success_chance_vs_opportunistic_schemes_malus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_gregarious = yes
	}
}
redouble_guards_t3 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_gold.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = redouble_guards
			TIER = 3
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = redouble_guards }
	}

	owner_modifier = {
		glory_hound_opinion = dislikes_countermeasure_opinion_lowered_value
		stress_gain_mult = 0.1
	}

	ai_will_do = {
		add = ai_will_do_redouble_guards_value
		add = ai_will_do_redouble_guards_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_calculated_schemes_bonus_major = yes
		success_chance_vs_opportunistic_schemes_malus_medium = yes
		#characters_more_likely_to_accept_agenthood_against_if_gregarious = yes
	}
}
redouble_guards_t4 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_purple.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = redouble_guards
			TIER = 4
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = redouble_guards }
	}

	owner_modifier = {
		glory_hound_opinion = dislikes_countermeasure_opinion_lowered_further_value
		stress_gain_mult = 0.05
	}

	ai_will_do = {
		add = ai_will_do_redouble_guards_value
		add = ai_will_do_redouble_guards_for_courtier_value
	}

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_aggressive_countermeasure_active = yes
		# Effect parameters
		success_chance_vs_calculated_schemes_bonus_major = yes
		success_chance_vs_opportunistic_schemes_malus_minor = yes
		#characters_more_likely_to_accept_agenthood_against_if_gregarious = yes
	}
}

# Okay at reducing most types of schemes but has high social cost & makes some niche schemes _much_ easier.
withdraw_from_view_t1 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_bronze.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = withdraw_from_view
			TIER = 1
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = withdraw_from_view }
	}

	owner_modifier = {
		general_opinion = dislikes_countermeasure_opinion_value
		stress_gain_mult = 0.3
	}

	ai_will_do = { add = ai_will_do_withdraw_from_view_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		countermeasure_only_affects_court_holder = yes
		success_chance_vs_calculated_schemes_bonus_medium = yes
		success_chance_vs_opportunistic_schemes_bonus_medium = yes
		success_chance_vs_indirect_schemes_malus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_arrogant = yes
	}
}
withdraw_from_view_t2 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_silver.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = withdraw_from_view
			TIER = 2
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = withdraw_from_view }
	}

	owner_modifier = {
		general_opinion = dislikes_countermeasure_opinion_value
		stress_gain_mult = 0.2
	}

	ai_will_do = { add = ai_will_do_withdraw_from_view_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		countermeasure_only_affects_court_holder = yes
		success_chance_vs_calculated_schemes_bonus_medium = yes
		success_chance_vs_opportunistic_schemes_bonus_medium = yes
		success_chance_vs_indirect_schemes_malus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_arrogant = yes
	}
}
withdraw_from_view_t3 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_gold.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = withdraw_from_view
			TIER = 3
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = withdraw_from_view }
	}

	owner_modifier = {
		general_opinion = dislikes_countermeasure_opinion_lowered_value
		stress_gain_mult = 0.1
	}

	ai_will_do = { add = ai_will_do_withdraw_from_view_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		countermeasure_only_affects_court_holder = yes
		success_chance_vs_calculated_schemes_bonus_major = yes
		success_chance_vs_opportunistic_schemes_bonus_major = yes
		success_chance_vs_indirect_schemes_malus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_arrogant = yes
	}
}
withdraw_from_view_t4 = {
	frame = "gfx/interface/icons/scheme_countermeasure_types/frame_purple.dds"
	
	is_shown = {
		scheme_countermeasure_access_select_best_tier_trigger = {
			COUNTERMEASURE = withdraw_from_view
			TIER = 4
		}
	}

	is_valid_showing_failures_only = {
		# You can only set them for your home court.
		can_set_own_countermeasures_trigger = yes
	}

	on_activate = {
		inform_player_of_relevant_countermeasure_activated_effect = { COUNTERMEASURE = withdraw_from_view }
	}

	owner_modifier = {
		general_opinion = dislikes_countermeasure_opinion_lowered_value
	}

	ai_will_do = { add = ai_will_do_withdraw_from_view_value }

	parameters = {
		# Check State parameters
		has_any_countermeasure_active = yes
		has_preemptive_countermeasure_active = yes
		# Effect parameters
		countermeasure_only_affects_court_holder = yes
		success_chance_vs_calculated_schemes_bonus_major = yes
		success_chance_vs_opportunistic_schemes_bonus_major = yes
		success_chance_vs_indirect_schemes_malus_major = yes
		#characters_more_likely_to_accept_agenthood_against_if_arrogant = yes
	}
}
