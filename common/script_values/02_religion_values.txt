#Needs to be loaded after
# 	* medium_gold_value (01_dynamic_values)

#Religious war CB levels
faith_fully_accepted_level = 0
faith_astray_level = 1
faith_hostile_level = 2
faith_evil_level = 3

faith_hostility_prevents_marriage_level = faith_evil_level

religious_cb_enabled_hostility_level = faith_hostile_level
religious_cb_evil_hostility_level = faith_evil_level

religious_cb_ally_prestige_kingdom = 500
religious_cb_ally_prestige_duchy = 200
religious_cb_ally_prestige_county = 100

religious_cb_piety_gain_evil_foe = 200
religious_cb_piety_gain_empire = 200
religious_cb_piety_loss_empire = -200
religious_cb_piety_gain_kingdom = 150
religious_cb_piety_loss_kingdom = -150
religious_cb_piety_gain_duchy = 100
religious_cb_piety_loss_duchy = -100
religious_cb_piety_gain_county = 50
religious_cb_piety_loss_county = -50
religious_cb_piety_white_peace = -50

excommunication_cb_piety_change_multiplier = 4
excommunication_cb_piety_white_peace = -50

religious_cb_piety_discount_against_hof_humsac = 0.5
hof_humsacd_fervour_gain = major_fervor_value

faith_doctrine_cost_low = 200
faith_doctrine_cost_mid = 400
faith_doctrine_cost_high = 600
faith_doctrine_cost_massive = 1000

faith_tenet_cost_low = 500
faith_tenet_cost_mid = 1000
faith_tenet_cost_high = 1500
faith_tenet_cost_massive = 2000

# Warcraft - cheaper because we have more doctrines
faith_unchanged_doctrine_cost_mult = 0.25

faith_changed_doctrine_cost_mult_two_step = 1.50
faith_changed_doctrine_cost_mult_three_step = 2.25
faith_changed_doctrine_cost_mult_four_step = 3.50

# Warcraft - mult_five_step doesn't exist in vanilla
faith_changed_doctrine_cost_mult_five_step = 5.25

hostility_multiplier_pluralism = 0.5
hostility_multiplier_righteous = 1
hostility_multiplier_fundamentalist = 2
hostility_multiplier_reduction_adaptive = -0.25

heretical_defector_fervor_gain = 15 # How much fervor Old Faith gains when a ruler splits off to a New Heresy

regional_heresy_factor = {
	if = {
		limit = { has_game_rule = default_regional_heresy }
		value = 5
	}
	else_if = {
		limit = { has_game_rule = strict_regional_heresy }
		value = 200
	}
	else = {
		value = 1
	}
}

meditation_duration = 185 # In days

faction_county_opinion_astray = {
	value = county_opinion
	multiply = -1.0
}
faction_county_opinion_hostile = {
	value = county_opinion
	multiply = -2.5
}
faction_county_opinion_evil = {
	value = county_opinion
	multiply = -5.0
}

head_of_faith_selection_weight = {
	value = 1

	# Strong weight for preferred gender
	if = {
		limit = {
			faith = { has_doctrine = doctrine_gender_male_dominated }
			is_male = yes
		}
		add = 50
	}
	else_if = {
		limit = {
			faith = { has_doctrine = doctrine_gender_female_dominated }
			is_female = yes
		}
		add = 50
	}

	# Bonus for holding land, especially if it is a holy site.
	if = {
		limit = {
			any_sub_realm_barony = {
				is_holy_site_of = root.faith
			}
		}
		add = 40
	}
	add = {
		value = highest_held_title_tier
		multiply = 20
	}

	# Bonus for piousness/learnedness
	add = {
		value = num_virtuous_traits
		multiply = 30
	}
	add = {
		value = num_sinful_traits
		multiply = -30
	}
	add = {
		value = piety_level
		multiply = 10
	}
	add = {
		value = learning
		multiply = 2
	}
	add = {
		value = diplomacy
		multiply = 1
	}
}
################
# Demand Conversion chance calculation
################

#Calculated in scope:recipient
demand_conversion_learning_difference = {
	add = scope:actor.learning
	subtract = learning
	multiply = 5
}

demand_conversion_fervor_difference = {
	add = scope:actor.faith.fervor
	subtract = faith.fervor
}

demand_conversion_tenet_impact = {
	value = 0
	if = {
		limit = {
			faith = {
				has_doctrine_parameter = sanctioned_false_conversion
				NOT = { has_doctrine_parameter = unattractive_for_character_conversions }
			}
		}
		add = -20
	}
	if = {
		limit = {
			faith = { has_doctrine_parameter = tenet_adaptive_conversion_resistance }
		}
		add = -20
	}
	if = {
		limit = {
			faith = { has_doctrine_parameter = unattractive_for_character_conversions }
		}
		add = 20
	}
}

demand_conversion_likelihood_calculation = {
	#Five times actor's-recipient's learning
	add = demand_conversion_learning_difference

	#Calculate each faith's fervor
	add = demand_conversion_fervor_difference

	#Calculate various Doctrines and Tenets
	add = demand_conversion_tenet_impact

	if = {
		limit = {
			opinion = {
				target = scope:actor
				value < medium_negative_opinion
			}
		}
		add = -50
	}
	else_if = {
		limit = {
			opinion = {
				target = scope:actor
				value < neutral_opinion
			}
		}
		add = -25
	}
	else_if = {
		limit = {
			opinion = {
				target = scope:actor
				value >= medium_positive_opinion
			}
		}
		add = 50
	}
	else_if = {
		limit = {
			opinion = {
				target = scope:actor
				value > neutral_opinion
			}
		}
		add = 25
	}

	if = {
		limit = {
			scope:actor = { has_trait = savior }
		}
		add = 30
	}
	if = {
		limit = {
			scope:actor = { has_trait = divine_blood }
		}
		add = 15
	}

	if = {
		limit = {
			has_trait = zealous
		}
		add = -50
	}
	if = {
		limit = {
			has_trait = cynical
		}
		add = 30
	}

	if = {
		limit = {
			has_trait = heresiarch
		}
		add = -100
	}

	#Add value if refusing is a Crime
	if = {
		limit = {
			scope:actor = {
				refusing_conversion_is_crime_trigger = {
					CHARACTER = scope:recipient
				}
			}
		}
		add = 50
	}



	if = {
		limit = {
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
		}
		add = 10
	}
	if = {
		limit = {
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
		}
		add = 20
	}

	max = 100
}

demand_conversion_bribe_size = {
	value = medium_gold_value
}

demand_conversion_piety_cost = {
	value = medium_piety_value
}


#Religious Legal Pronouncement requirements
religious_legal_pronouncement_target_value = -20

religious_legal_pronouncement_sinful_value = {
	value = 0
	add = scope:recipient.num_sinful_traits
	multiply = 6
}

religious_legal_pronouncement_virtuous_value = {
	value = 0
	add = scope:recipient.num_virtuous_traits
	multiply = 5
}

religious_legal_pronouncement_requirements = {
	value = religious_legal_pronouncement_target_value
	add = religious_legal_pronouncement_sinful_value
	subtract = religious_legal_pronouncement_virtuous_value
	add = scope:actor.learning
}

religious_legal_pronouncement_learning_requirement = {
	value = 0
	subtract = religious_legal_pronouncement_sinful_value
	add = religious_legal_pronouncement_virtuous_value
	subtract = religious_legal_pronouncement_target_value
	min = 1
}

claim_piety_value = {
	value = {
		add = minor_piety_value
		multiply = 2
		if = {
			limit = {
				scope:target = {
					tier = tier_duchy
				}
			}
			multiply = 2
		}
		if = {
			limit = {
				scope:target = {
					tier = tier_kingdom
				}
			}
			multiply = 4
		}
		if = {
			limit = {
				scope:target = {
					tier = tier_empire
				}
			}
			multiply = 8
		}
		add = {
			value = scope:actor.sub_realm_size
			multiply = 10
		}
	}
}

minor_claim_piety_value = {
	value = minor_piety_value
	multiply = 2
}
medium_claim_piety_value = {
	value = minor_claim_piety_value
	multiply = 2
}
major_claim_piety_value = {
	value = medium_claim_piety_value
	multiply = 2
}
massive_claim_piety_value = {
	value = major_claim_piety_value
	multiply = 2
}
minor_claim_piety_loss = {
	value = 0
	subtract = minor_claim_piety_value
}
medium_claim_piety_loss = {
	value = 0
	subtract = medium_claim_piety_value
}
major_claim_piety_loss = {
	value = 0
	subtract = major_claim_piety_value
}
massive_claim_piety_loss = {
	value = 0
	subtract = massive_claim_piety_value
}

#GHW Targeting Multipliers
#Up the base size of kingdoms with an existing same-faith ruler a bit:
ghw_target_existing_same_faith_ruler = 20
#Prioritise reclaiming lands that are core rather than just new large kingdoms:
ghw_target_heartlands = 150
ghw_target_frontier = 25
ghw_target_fringe = 15
ghw_target_stretch = 10
#Always buff any kingdom containing an uncontrolled holy site:
ghw_target_has_holy_site = 6
#Targets that should always be priorities if not controlled:
ghw_target_key_religious_holding = 100
ghw_target_religious_vengeance = 150
#Distance modifiers stack:
ghw_target_distance_01_reduction = 0.8
ghw_target_distance_02_reduction = 0.1
ghw_target_distance_03_reduction = 0.01
ghw_target_distance_01_threshold = 722500
ghw_target_distance_02_threshold = 1445000
ghw_target_distance_03_threshold = 2167500

# Referenced by code when building list of ghw targets
# Logic reworked by Ewan Cowhig Croft
great_holy_war_target_kingdom_weight = {
	# WEIGHTING PROCESS
	# 1. Check how many individual counties within a de jure kingdom have a top-liege with an eligible faith for GHWing. Boost the count a little for kingdoms with existing same-faith monarchs.
	# 2. Modify the count by region location & relative importance to the Faith (is this kingdom in the heartlands of the faith, or one of an increasing gradiant of frontier regions?).
	# 3. Modify the count by region distance from the HoF's capital, or a fallback holy site.
	# 4. Weight up kingdoms containing holy sites directly.
	# 5. Weight up special priority targets (e.g., Jerusalem, Mecca) directly.

	### 1 ###
	# Is the target kingdom a viable GHW target?
	every_in_de_jure_hierarchy = {
		# Check individual counties within the potential target de jure kingdom.
		continue = { tier > tier_county }
		# For every county with a GHWable liege...
		limit = {
			tier = tier_county
			scope:the_faith = {
				is_hostile_enough_for_holy_war_trigger = { FAITH = prev.holder.top_liege.faith }
			}
		}
		# ... Add 1 to the weighting.
		add = 1
	}
	# Weight up the kingdom if it either has an existing same-faith holder, or at least a same-faith claimant.
	if = {
		limit = {
			OR = {
				AND = {
					exists = holder
					holder.faith = scope:the_faith
				}
				any_claimant = {
					exists = this
					faith = scope:the_faith
					is_available_adult = yes
				}
			}
		}
		multiply = ghw_target_existing_same_faith_ruler
	}

	### 2 ###
	# Documentation = {
		# Avoid adding lots of reckless GHW stretch goals, as it'll mess up the targeting if every religion has a dozen apiece.
	# }
	# Warcraft
	#air_group
	if = {
		limit = {
			scope:the_faith.religion = religion:air_group
		}
		# heartlands
		if = {
			limit = {
				title_capital_county.title_province = {
					geographical_region = world_kalimdor_south_uldum
				}
			}
			multiply = ghw_target_heartlands
		}
		#frontier
		else_if = {
			limit = {
				title_capital_county.title_province = {
					geographical_region = world_kalimdor_south_tanaris
				}
			}
			multiply = ghw_target_frontier
		}
		#fringe
		else_if = {
			limit = {
				title_capital_county.title_province = {
					geographical_region = world_kalimdor_south_silithus
				}
			}
			multiply = ghw_target_fringe
		}
	}
	#ape_group
	else_if = {
		limit = {
			scope:the_faith.religion = religion:ape_group
		}
		# heartlands
		if = {
			limit = {
				title_capital_county.title_province = {
					geographical_region = world_pandaria_jade_forest
				}
			}
			multiply = ghw_target_heartlands
		}
		#frontier
		else_if = {
			limit = {
				title_capital_county.title_province = {
					OR = {
						geographical_region = world_pandaria_kun_lai_summit
						geographical_region = world_south_seas_tel_abim
					}
				}
			}
			multiply = ghw_target_frontier
		}
		#fringe
		else_if = {
			limit = {
				title_capital_county.title_province = {
					OR = {
						geographical_region = world_pandaria_krasarang_wilds
						geographical_region = world_pandaria_valley_of_the_four_winds
						geographical_region = world_south_seas_plunder_isle
					}
				}
			}
			multiply = ghw_target_fringe
		}
	}
	#arcane_group
	else_if = {
		limit = {
			scope:the_faith.religion = religion:arcane_group
		}
		# heartlands
		if = {
			limit = {
				title_capital_county.title_province = {
					OR = {
						geographical_region = world_kalimdor_south_feralas
						geographical_region = world_eastern_kingdoms_quelthalas_queldanas_isle
						geographical_region = world_eastern_kingdoms_quelthalas_quelthalas
					}
				}
			}
			multiply = ghw_target_heartlands
		}
		#frontier
		else_if = {
			limit = {
				title_capital_county.title_province = {
					OR = {
						geographical_region = world_kalimdor_south_thousand_needles
						geographical_region = world_kalimdor_central_desolace
						geographical_region = world_eastern_kingdoms_quelthalas_zulaman
					}
				}
			}
			multiply = ghw_target_frontier
		}
		#fringe
		else_if = {
			limit = {
				title_capital_county.title_province = {
					OR = {
						geographical_region = world_kalimdor_north_azshara
						geographical_region = world_eastern_kingdoms_lordaeron_southern_lordaeron
					}
				}
			}
			multiply = ghw_target_fringe
		}
	}
	# TODO Other religions
	# Probably we should tie these regions to holy site locations

	# Warcraft

	### 3 ###
	# Factor in the potential target's distance from the faith.
	# Distance: Rome to Jerusalem-ish
	# If the HoF is landed, use them.
	if = {
		limit = {
			scope:the_faith.religious_head = { is_landed = yes }
		}
		if = {
			limit = {
				title_capital_county = {
					squared_distance >= {
						target = scope:the_faith.religious_head.capital_county
						value = ghw_target_distance_01_threshold
					}
				}
			}
			multiply = ghw_target_distance_01_reduction
		}
	}
	# Otherwise, use a preset fallback holy site.
	else = {
		# Warcraft
		if = {
			limit = {
				title_capital_county = {
					squared_distance >= {
						target = scope:holy_site
						value = ghw_target_distance_01_threshold
					}
				}
			}
			multiply = ghw_target_distance_01_reduction
		}
	}
	# Distance: Rome to Afghanistan-ish
	# If the HoF is landed, use them.
	if = {
		limit = {
			scope:the_faith.religious_head = { is_landed = yes }
		}
		if = {
			limit = {
				title_capital_county = {
					squared_distance >= {
						target = scope:the_faith.religious_head.capital_county
						value = ghw_target_distance_02_threshold
					}
				}
			}
			multiply = ghw_target_distance_02_reduction
		}
	}
	# Otherwise, use a preset fallback holy site.
	else = {
		# Warcraft
		if = {
			limit = {
				title_capital_county = {
					squared_distance >= {
						target = scope:holy_site
						value = ghw_target_distance_02_threshold
					}
				}
			}
			multiply = ghw_target_distance_02_reduction
		}
	}
	# Distance: Rome to Bengal-ish
	# If the HoF is landed, use them.
	if = {
		limit = {
			scope:the_faith.religious_head = { is_landed = yes }
		}
		if = {
			limit = {
				title_capital_county = {
					squared_distance >= {
						target = scope:the_faith.religious_head.capital_county
						value = ghw_target_distance_03_threshold
					}
				}
			}
			multiply = ghw_target_distance_03_reduction
		}
	}
	# Otherwise, use a preset fallback holy site.
	else = {
		# Warcraft
		if = {
			limit = {
				title_capital_county = {
					squared_distance >= {
						target = scope:holy_site
						value = ghw_target_distance_03_threshold
					}
				}
			}
			multiply = ghw_target_distance_03_reduction
		}
	}

	### 4 ###
	# Always weight-up kingdoms containing holy sites.
	if = {
		limit = {
			any_in_de_jure_hierarchy = {
				tier = tier_barony
				continue = { tier > tier_barony }
				is_holy_site_of = scope:the_faith
			}
		}
		multiply = ghw_target_has_holy_site
	}

	### 5 ###
	# Christian & Jewish preference for Jerusalem
	# Warcraft

	# Muslim preference for Mecca & Medina
	# Warcraft

	# A defender in the region HumSac'd your HoF
	if = {
		limit = {
			any_in_de_jure_hierarchy = {
				continue = { tier > tier_county }
				tier = tier_county
				holder = {
					AND = {
						has_variable_list = humsacd_hofs
						is_target_in_variable_list = {
							name = humsacd_hofs
							target = scope:the_faith
						}
					}
					is_hostile_enough_for_holy_war_trigger = { FAITH = top_liege.faith }
				}
			}
		}
		multiply = ghw_target_religious_vengeance
	}
}

great_holy_war_pledge_amount = {
	value = root.yearly_character_income
	min = 10
}

# Referenced in code; don't delete this. When determining GHW participation score, the character's score from the war is multiplied by this. ROOT is the character
ghw_score_mult = {
	value = 1
	if = {
		limit = {
			this = faith.religious_head
			faith = { has_doctrine = doctrine_spiritual_head } # Temporal heads get credit
		}
		value = 0
	}
}

# Referenced in code; don't delete this. When determining GHW participation score, the character's score percentage is capped at this. ROOT is the character
ghw_max_score_percentage = {
	value = 20
}

# Referenced in code; don't delete this. Used by the GHW screen to show the player how much of the pot they'll get when the war starts. Should be used where you hand it out: divide_war_chest = { fraction = ghw_war_start_handout_percentage }
ghw_war_start_handout_percentage = {
	value = 0.2
}

# Referenced in code; don't delete this
# When a holy war is declared, everyone of the defender's faith that passes can_defensively_join_holy_war will be scored using this
# Scores above 0 will join
# Scope is the potential joiner
# scope:attacker is the attacker
# scope:defender is the defender
holy_war_defensive_join_value = {
	add = {
		desc = "BASE_VALUE"
		value = -1
		format = "BASE_VALUE_FORMAT"
	}
}

# Root = faith
faith_conversion_fervor_mult = {
	value = define:NReligion|MAX_FERVOR
	subtract = fervor
	multiply = define:NReligion|FAITH_CREATION_FERVOR_DISCOUNT_PER_MISSING_FERVOR
	max = define:NReligion|FAITH_CREATION_FERVOR_DISCOUNT_MAX
	divide = define:NReligion|MAX_FERVOR
}

# Modify (multiply) the doctrine cost when creating a faith.
# The returned value is interpreted as a multiplicative modifier (e.g. 0.5 means +50% cost).
# scope:character = the creation character
# scope:old_faith = the faith the character is converting from
faith_creation_cost_mult = {
	subtract = {
		value = scope:old_faith.faith_conversion_fervor_mult
		desc = "faith_creation_cost_fervor_impact"
		format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
	}
}

# Modify (multiply) the doctrine cost when converting to a faith.
# The returned value is interpreted as a multiplicative modifier (e.g. 0.5 means +50% cost).
# scope:character = the converting character
# scope:new_faith = the faith the character is converting to
# There should be no subtract equal or higher than 1
faith_conversion_cost_mult = {

	#Adding 1 to apply properly the following multipliers
	add = {
		value = 1
	}

	# Try to always be cheaper than creating a new faith
	if = {
		limit = {
			scope:character.learning > 0
		}
		multiply = {
			value = 1
			subtract = {
				desc = "learning_modifier"
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = scope:character.learning
				divide = 100
			}
		}
	}
	if = {
		multiply = {
			value = 1
			add = {
				value = scope:new_faith.faith_conversion_fervor_mult
				subtract = scope:character.faith.faith_conversion_fervor_mult
				desc = "faith_conversion_cost_fervor_difference"
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
			}
		}
	}
	# Try to always be cheaper than creating a new faith
	if = {
		limit = {
			scope:new_faith.religion = scope:character.faith.religion
		}
		multiply = {
			value = 1
			subtract = {
				desc = "faith_conversion_cost_existing_faith"
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.5
			}
		}
	}
	# Try to always be cheaper than creating a new faith
	else = {
		multiply = {
			value = 1
			subtract = {
				desc = "faith_conversion_cost_existing_faith"
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.35
			}
		}
	}
	# Pluralistic faiths have it easier converting to each other
	if = {
		limit = {
			scope:new_faith = { has_doctrine = doctrine_pluralism_pluralistic }
			scope:character.faith = { has_doctrine = doctrine_pluralism_pluralistic }
		}
		multiply = {
			value = 1
			subtract = {
				desc = "faith_conversion_cost_pluralists"
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.25
			}
		}
	}
	# Pluralistic faiths have it easier converting
	else_if = {
		limit = {
			scope:character.faith = { has_doctrine = doctrine_pluralism_pluralistic }
		}
		multiply = {
			value = 1
			subtract = {
				desc = "faith_conversion_cost_pluralist"
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.15
			}
		}
	}

	###############################################################
	# Converting TO an unreformed faith often has steep penalties #
	###############################################################
	if = {
		limit = {
			scope:new_faith = {
				has_doctrine_parameter = unreformed
			}
		}

		# Massive penalty if your current faith is reformed.
		if = {
			limit = {
				scope:character = {
					faith = {
						NOT = { has_doctrine_parameter = unreformed }
					}
				}
			}
			multiply = {
				value = 1
				add = {
					desc = "faith_conversion_cost_reformed_converting_to_unreformed"
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 5
				}
			}

		}

		# Minor stacking penalties depending on (non-tribal) government form.
		if = {
			limit = {
				scope:character = {
					has_government = clan_government
				}
			}
			multiply = {
				value = 1
				add = {
					desc = "faith_conversion_cost_clan_converting_to_unreformed"
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.25
				}
			}
		}
		else_if = {
			limit = {
				scope:character = {
					# Warcraft
					has_monarchy_government_trigger = yes
				}
			}
			multiply = {
				value = 1
				add = {
					desc = "faith_conversion_cost_feudal_converting_to_unreformed"
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.5
				}
			}
		}
		else_if = {
			limit = {
				scope:character = {
					has_government = republic_government
				}
			}
			multiply = {
				value = 1
				add = {
					desc = "faith_conversion_cost_republic_converting_to_unreformed"
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.75
				}
			}
		}
	}

	##################################
	# Dead Religion/Faith penalty(s) #
	##################################
	#More expensive to convert to a dead religion
	if = {
		limit = {
			scope:new_faith = {
				religion = {
					any_faith = {
						count = all
						has_followers_trigger = no
					}
				}
			}
		}
		multiply = {
			value = 1
			add = {
				desc = faith_conversion_cost_dead_religion
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 5
			}
		}
	}

	#######################################
	# Switching religion/family penalties #
	#######################################
	#More expensive if you convert to a faith outside of your religion's family
	# Warcraft
	if = {
		limit = {
			scope:new_faith = {
				religion = { is_in_dark_religion_family_trigger = yes }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_dark_religion_family_trigger = no
					}
				}
			}
		}
		multiply = {
			value = 1
			add = {
				desc = faith_conversion_cost_other_religion_family
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 2
			}
		}
	}
	# Warcraft
	if = {
		limit = {
			scope:new_faith = {
				religion = { is_in_bright_religion_family_trigger = yes }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_bright_religion_family_trigger = no
					}
				}
			}
		}
		multiply = {
			value = 1
			add = {
				desc = faith_conversion_cost_other_religion_family
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 2
			}
		}
	}
	# Warcraft
	# if = {
	#	limit = {
	#		scope:new_faith = {
	#			religion = { is_in_family = rf_pagan }
	#		}
	#		scope:character = {
	#			faith = {
	#				religion = { NOT = { is_in_family = rf_pagan } }
	#			}
	#		}
	#	}
	#	multiply = {
	#		value = 1
	#		add = {
	#			desc = faith_conversion_cost_other_religion_family
	#			format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
	#			value = 2
	#		}
	#	}
	# }

	# Unreformed Faiths have an easier way converting to Organized faiths
	if = {
		limit = {
			scope:new_faith = {
				NOT = {
					has_doctrine_parameter = unreformed
				}
			}
			scope:character = {
				faith = {
					has_doctrine_parameter = unreformed
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_unreformed_to_organized
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}

	#More expensive to convert to something inside your religion family that's not the same religion
	# Warcraft
	if = {
		limit = {
			scope:new_faith = {
				religion = { is_in_dark_religion_family_trigger = yes }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_dark_religion_family_trigger = yes
						NOT = { this = scope:new_faith.religion}
					}
				}
			}
		}
		multiply = {
			value = 1
			add = {
				desc = faith_conversion_cost_inside_religion_family
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 1
			}
		}
	}
	# Warcraft
	if = {
		limit = {
			scope:new_faith = {
				religion = { is_in_bright_religion_family_trigger = yes }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_bright_religion_family_trigger = yes
						NOT = { this = scope:new_faith.religion}
					}
				}
			}
		}
		multiply = {
			value = 1
			add = {
				desc = faith_conversion_cost_inside_religion_family
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 1
			}
		}
	}
	# Warcraft
	# if = {
	#	limit = {
	#		scope:new_faith = {
	#			religion = { is_in_family = rf_pagan }
	#		}
	#		scope:character = {
	#			faith = {
	#				religion = {
	#					is_in_family = rf_pagan
	#					NOT = { this = scope:new_faith.religion}
	#				}
	#			}
	#		}
	#	}
	#	multiply = {
	#		value = 1
	#		add = {
	#			desc = faith_conversion_cost_inside_religion_family
	#			format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
	#			value = 1
	#		}
	#	}
	# }

	#######################################
	# Misc penalties #
	#######################################
	# More expensive to convert to a faith who's HoF you HumSac'D/to a faith on good terms with one who's HoF you HumSac'd, unless they're chill with HumSac.
	if = {
		limit = {
			scope:character = {
				has_variable_list = humsacd_hofs
				any_in_list = {
					variable = humsacd_hofs
					faith_hostility_level = {
						target = scope:new_faith
						value <= faith_astray_level
					}
				}
			}
			# Exemptions for people who already practice HumSac: they're likely not happy, but it's not the ultimate taboo for them.
			scope:new_faith = {
				NOT = { has_doctrine_parameter = human_sacrifice_active }
			}
		}
		multiply = {
			value = 1
			add = {
				desc = faith_conversion_cost_sacrificed_hof
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 5
			}
		}
	}
	########################
	# Conversion Discounts #
	########################
	# Cheaper if you are targeted by the new Faith in a defensive Holy War
	if = {
		limit = {
			scope:character = {
				any_character_war = {
					using_holy_war_cb_trigger = yes
					is_defender = scope:character
				}
			}
		}
		if = { # Even cheaper if unreformed
			limit = {
				scope:new_faith = {
					NOT = { has_doctrine_parameter = unreformed }
				}
				scope:character = {
					faith = {
						has_doctrine_parameter = unreformed
					}
				}
			}
			multiply = {
				value = 1
				subtract = {
					desc = faith_conversion_cost_unreformed_holy_war
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.9
				}
			}
		}
		else = { # But still a sizable discount otherwise.
			multiply = {
				value = 1
				subtract = {
					desc = faith_conversion_cost_holy_war
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.5
				}
			}
		}
	}
	# Cheaper if your spouse is of the faith
	if = {
		limit = {
			scope:character = {
				any_spouse = {
					faith = scope:new_faith
				}
			}
		}
		if = { # Even cheaper if unreformed
			limit = {
				scope:new_faith = {
					NOT = { has_doctrine_parameter = unreformed }
				}
				scope:character = {
					faith = {
						has_doctrine_parameter = unreformed
					}
				}
			}
			multiply = {
				value = 1
				subtract = {
					desc = faith_conversion_cost_unreformed_spouse
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.9
				}
			}
		}
		else = { # But still a sizable discount otherwise.
			multiply = {
				value = 1
				subtract = {
					desc = faith_conversion_cost_spouse
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.5
				}
			}
		}
	}
	# Does a concubine have the right religion?
	else_if = {
		limit = {
			scope:character = {
				any_concubine = {
					faith = scope:new_faith
				}
			}
		}
		if = { # Even cheaper if unreformed
			limit = {
				scope:new_faith = {
					NOT = { has_doctrine_parameter = unreformed }
				}
				scope:character = {
					faith = {
						has_doctrine_parameter = unreformed
					}
				}
			}
			multiply = {
				value = 1
				subtract = {
					desc = faith_conversion_cost_unreformed_concubine
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.9
				}
			}
		}
		else = { # But still a sizable discount otherwise.

			multiply = {
				value = 1
				subtract = {
					desc = faith_conversion_cost_concubine
					format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
					value = 0.25
				}
			}
		}
	}
	# Warcraft
	if = { #Cheaper if the religion is present near/in your borders and is within the same religious family
		limit = {
			scope:new_faith = {
				religion = { is_in_family = rf_death }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_family = rf_death
					}
				}
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}
	# Warcraft
	else_if = { #Cheaper if the religion is present near/in your borders and is within the same religious family
		limit = {
			scope:new_faith = {
				religion = { is_in_family = rf_disorder }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_family = rf_disorder
					}
				}
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}
	# Warcraft
	else_if = { #Cheaper if the religion is present near/in your borders and is within the same religious family
		limit = {
			scope:new_faith = {
				religion = { is_in_family = rf_elemental }
			}
			scope:character = {
				# Elementals not enabled
				NOT = { has_trait = creature_flamewaker }
				faith = {
					religion = {
						is_in_family = rf_elemental
					}
				}
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}
	# Warcraft
	else_if = { #Cheaper if the religion is present near/in your borders and is within the same religious family
		limit = {
			scope:new_faith = {
				religion = { is_in_family = rf_life }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_family = rf_life
					}
				}
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}
	# Warcraft
	else_if = { #Cheaper if the religion is present near/in your borders and is within the same religious family
		limit = {
			scope:new_faith = {
				religion = { is_in_family = rf_light }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_family = rf_light
					}
				}
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}
	# Warcraft
	else_if = { #Cheaper if the religion is present near/in your borders and is within the same religious family
		limit = {
			scope:new_faith = {
				religion = { is_in_family = rf_order }
			}
			scope:character = {
				faith = {
					religion = {
						is_in_family = rf_order
					}
				}
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}
	# Warcraft
	else_if = { #Cheaper if the religion is present near/in your borders and is within the same religious family
		limit = {
			scope:new_faith = {
				religion = {
					is_in_family = rf_shadow
				}
			}
			scope:character = {
				faith = {
					religion = {
						is_in_family = rf_shadow
						NOT = { this = religion:shathgral }
					}
				}
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.9
			}
		}
	}
	else_if = {
		limit = {
			scope:character = {
				OR = {
					any_neighboring_top_liege_realm_owner = {
						faith = scope:new_faith
					}
					any_vassal = {
						faith = scope:new_faith
					}
					any_realm_province = {
						faith = scope:new_faith
					}
					AND = {
						exists = liege
						liege = {
							faith = scope:new_faith
						}
					}
					AND = {
						exists = liege
						liege = {
							any_vassal = {
								faith = scope:new_faith
							}
						}
					}
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_present
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.5
			}
		}
	}
	# Cheaper if you're an interloper in a struggle converting to an involved faith.
	#if = {
	#	limit = {
	#		scope:character = {
	#			any_character_struggle = {
	#				involvement = interloper
	#				has_struggle_phase_parameter = cheaper_to_convert_to_struggle_faith
	#				is_faith_involved_in_struggle = scope:new_faith
	#			}
	#		}
	#	}
	#	multiply = {
	#		value = 1
	#		subtract = {
	#			desc = struggle_parameter_cheaper_to_convert_to_struggle_faith
	#			format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
	#			value = 0.5
	#		}
	#	}
	#}

	########################################
	# Conversion Discounts from Traditions #
	########################################
	# scope:new_faith.religion = scope:character.faith.religion

	# Pacifism Tenet
	if = {
		limit = {
			AND = {
				scope:character= {
					culture = {
						has_cultural_parameter = reduced_cost_for_conversion_to_pacifist_faith
					}
				}
				scope:new_faith = {
					has_doctrine = tenet_pacifism
				}
			}
		}
		multiply = {
			value = 1
			subtract = {
				desc = faith_conversion_cost_tradition
				format = "BREAKDOWN_FORMAT_PIETY_PERCENTAGE_POSITIVE_IS_BAD"
				value = 0.25
			}
		}
	}

	# Removing 1 to offset the value and present it as expected by the code
	subtract = {
		value = 1
	}

}

reincarnation_chance = 4

holy_sites_to_create_temporal_head_of_faith = 1
holy_sites_to_create_spiritual_head_of_faith = 1

faith_military_strength = {
	every_ruler = {
		limit = {
			faith = prev
			is_at_war = no
		}
		add = max_military_strength
	}
}

syncretic_mutual_opinion_bonus_value = 30

ask_to_take_vows_piety_cost = {
	value = {
		add = medium_piety_value
		if = {
			limit = {
				OR = {
					is_child_of = liege
					liege.primary_title = {
						place_in_line_of_succession = {
							target = prev
							value <= 3
						}
					}
				}
			}
			add = major_piety_value
		}
		else_if = {
			limit = {
				is_close_family_of = liege
			}
			add = medium_piety_value
		}
	}
}
