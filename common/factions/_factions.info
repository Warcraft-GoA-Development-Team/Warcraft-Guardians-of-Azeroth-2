== Structure ==
This documentation does not currently include all possible parameters due to the limited knowledge of the author.

faction_name = { 					#Identifier for the faction. Also used for localizing the name. Posfixed with "_faction" for localizing the faction
	name = [loc_key|{}]				#Dynamic name, will look for the identifier of the type (faction_name) if doesn't exist or if it's empty.	
	description = [loc_key|{}]		#Dynamic description, will look for the identifier of the type + _desc (faction_name_desc) if doesn't exist or if it's empty.
	short_effect_desc = [loc_key|{}]#Dynamic description of the effect, used to summarize faction goals
	demand = {}						#Effect that will launch when the demand triggers. Uses the FACTION scope.
	update_effect = {}				#Effect that will launch every NDefines::NFaction::UPDATE_INTERVAL_DAYS. Uses the FACTION scope.
	on_declaration = {}				#Effect that will launch when the faction declares war. Uses the FACTION scope.
	character_leaves = {}			#Effect that will launch when a character leaves the faction. Uses the FACTION scope. The leaving character can be accessed as scope:faction_member
	leader_leaves = {}				#Effect that will launch when the leader leaves the faction. Uses the FACTION scope. The leaving character can be accessed as scope:faction_member
	ai_join_score =  {}				#MTTH that calculates the the score to join an active faction of this type. Uses the SCOPE_CHARACTER of the character that tries to join. SCOPE:faction target is the active faction. Note that the score is then modified by code to weigh in the effects of Boldness/Dread, Energy and Rationality. See NFaction AI defines.
	ai_create_score = {}			#MTTH that calculates the the score to create an active faction of this type. Uses the SCOPE_CHARACTER of the character that tries to create it. SCOPE:target target is the targeted character. The claimant faction has two aditional scopes, SCOPE:claimant (who is the potential claimant) and SCOPE:title (the title to claim for). Note that the score is then modified by code to weigh in the effects of Boldness/Dread, Energy and Rationality. See NFaction AI defines.
	county_join_score =  {}			#MTTH that calculates the the score to join an active faction of this type. Uses the SCOPE_LANDED_TITLE of the title that tries to join. SCOPE:faction target is the active faction.
	county_create_score = {}		#MTTH that calculates the the score to create an active faction of this type. Uses the SCOPE_LANDED_TITLE of the title that tries to create it.
									# SCOPE:target target is the targeted character. If the score is >= NDefines::NFaction::COUNTY_CREATE_MIN_SCORE and it gets a random chance 0-100 on a monthly update
	county_power = {}				#Script value defining the absolute power of a single county member. The final power is calculated as ratio of this power and the target's military strength.
	ai_demand_chance = {}			#MTTH that calculates the the score to trigger the demand effect of active faction of this type. Uses the FACTION scope. Checked once a month
	discontent_progress = {}		#MTTH that calculates the discontent progress change of the active faction. Uses the FACTION scope.
	power_threshold = value			#MTTH for power threshold at which the discontent starts ticking up. NFaction::DEFAULT_POWER_THRESHOLD define if not set
	is_valid = {}					#Trigger to check if the faction is still valid. Uses the FACTION scope.
	is_character_valid = {}			#Trigger to check if a character is still valid to be part of the faction. Uses the SCOPE_CHARACTER of the character. SCOPE:faction target is the active faction.
	is_county_valid = {}			#Trigger to check if a county is still valid to be part of the faction. Uses the SCOPE_LANDED_TITLE of the county. SCOPE:faction target is the active faction.
	can_character_join = {}			#Trigger to check if a character can join the active faction. Uses the SCOPE_CHARACTER of the character that tries to join. SCOPE:faction target is the active faction. is_character_valid is automatically included and its triggers should not be repeated here.
	can_character_create = {}		#Trigger to check if a character can create the active faction. Uses the SCOPE_CHARACTER of the character that tries to create. SCOPE:target target is target character of the faction.
	can_character_create_ui = {}	#Trigger to check if the button to create a faction will be enabled or not (overrides can_character_create if it's not empty). Uses the SCOPE_CHARACTER of the character that tries to create. SCOPE:target target is target character of the faction.
	can_character_become_leader		#Trigger to check if a member character can become the leader of the faction.
	can_county_join = {}			#Trigger to check if a title can join the active faction. Uses the SCOPE_LANDED_TITLE of the title that tries to join. SCOPE:faction target is the active faction. is_county_valid is automatically included and its triggers should not be repeated here.
	can_county_create = {}			#Trigger to check if a title can create the active faction. Uses the SCOPE_LANDED_TITLE of the title that tries to create. SCOPE:target target is target character of the faction.
	character_allow_create = yes	#Is allow at all
	character_allow_join = yes		#Is allow at all
	county_allow_create = yes		#Is allow at all
	county_allow_join = yes			#Is allow at all
	leaders_allowed_to_leave = no	#Is the leader allowed to leave the faction? (used for faction that create leaders)

	player_can_join = no			# default yes, when this is no the join button will be hidden for players
	
	multiple_targeting = no 		#Can the taarget have more of one of this type targeting
	casus_belli = key 				#The casus belly to be executed for the war

	special_character_title = loc_key	#How the special character of this faction will be called

	ignore_soft_block = bool		#Will this faction ignore the faction soft block
	inherit_membership = no			# By default, heirs that changed liege or tier as a result of succession will inherit faction membership. Set this to no to prevent that

	requires_county = no 			#Requires at least one county member, otherwise it will be destroyed. defaults to no
	requires_character = yes 		#Requires at least one character member, otherwise it will be destroyed. defaults to yes
	requires_leader = no 		#Requires a valid faction leader, otherwise it will be destroyed. defaults to no
	
	county_can_switch_to_other_faction = no # Default no, if set to yes, counties will leave this faction if there's a better factions available for them to join or create
	
	sort_order = 1..n				# Order to sort factions in the UI, lower value => higher in list
	show_special_title = yes		# Should the special title be shown in the interface or not
}

== Event targets ==
[SCOPE_FACTION.faction_target]					- Links to the character targeting the faction
[SCOPE_FACTION.faction_leader]					- Links to the character leading the faction
[SCOPE_FACTION.faction_war]						- Links to the faction war
[SCOPE_FACTION.special_character]				- Links to the special character
[SCOPE_FACTION.special_title]					- Links to the special title
[SCOPE_CHARACTER.leading_faction] 				- Links to the faction is leading. Null faction if it's not leading any faction
[SCOPE_CHARACTER.joined_faction]  				- Links to the faction the character is in. Null faction if it's not in any faction

== Related modifiers ==
TODO

== Related loc/UI functions ==
[Faction.GetName] 					- Gets the name of the faction type. E.G., "Independent Faction"
[Faction.GetDescription]			- Gets the description of the faction type
[Faction.GetDiscontent] 			- Gets the current dicontent of the faction
[Faction.IsAtWar]					- Gets if the faction is currently at war
[Faction.GetPower] 					- Gets tthe current power of the faction
[Faction.GetTarget] 				- Gets the target character of the faction
[Faction.GetLeader] 				- Gets the leader of the faction
[Faction.GetSpecialCharacter] 		- Gets the special character of the faction
[Faction.GetSpecialTitle] 			- Gets the special title of the faction
[Faction.GetSpecialCharacterTitle] 	- Gets the title for the faction's special character eg: Claimant, Leader etc.
[Faction.HasSpecialCharacter]		- Checks if there is a special character of the faction
[Faction.HasSpecialTitle] 			- Checks if there is a special title of the faction

== Related lists ==
[targeting_faction]			- List of the factions targeting the SCOPE_CHARCTER
[faction_member]			- List of the character members in the SCOPE_FACTION
[faction_county_member]		- List of the county members in the SCOPE_FACTION
