gorak_tul_create_court_effect = { # Gorak Tul Realm, Court and Army Setup
	hidden_effect = {
		### Summon Gorak Tul's most trusted courtiers
		# Gorak Zhar
		create_character = {
			template = gorak_zhar_character_template
			save_scope_as = gorak_zhar
			employer = scope:gorak_tul
		}
		scope:gorak_tul = { marry = scope:gorak_zhar }
		add_hook = {
			target = scope:gorak_zhar
			type = loyalty_hook
		}
		
		# Ingra Maloch
		create_character = {
			template = ingra_maloch_character_template
			save_scope_as = ingra_maloch
			employer = scope:gorak_tul
		}
		add_hook = {
			target = scope:ingra_maloch
			type = loyalty_hook
		}
		
		# Ingra Drif
		create_character = {
			template = ingra_drif_character_template
			save_scope_as = ingra_drif
			employer = scope:gorak_tul
		}
		add_hook = {
			target = scope:ingra_drif
			type = loyalty_hook
		}
		
		# Ingra Saor
		create_character = {
			template = ingra_saor_character_template
			save_scope_as = ingra_saor
			employer = scope:gorak_tul
		}
		add_hook = {
			target = scope:ingra_saor
			type = loyalty_hook
		}
	}
}

gorak_tul_effect = { # Title management for Gorak Tul
	ROOT = { save_scope_as = summoner }
	set_variable = {
		name = summoner
		value = scope:summoner
	}
	
	# Set up Titles
	create_title_and_vassal_change = {
		type = returned
		save_scope_as = change
		#add_claim_on_loss = no
	}
	title:k_drustvar = {
		holder = {
			if = {
				limit = { NOT = { this = scope:summoner } }
				add_opinion = {
					target = scope:gorak_tul
					modifier = revoked_title
					opinion = -30
				}
			}
		}
		change_title_holder = {
			holder = scope:gorak_tul
			change = scope:change
		}
	}
	title:c_fates_end = {
		holder = {
			if = {
				limit = { NOT = { this = scope:summoner } }
				add_opinion = {
					target = scope:gorak_tul
					modifier = revoked_title
					opinion = -30
				}
			}
		}
		change_title_holder = {
			holder = scope:gorak_tul
			change = scope:change
		}
	}
	title:b_fates_end = {
		holder = {
			if = {
				limit = { NOT = { this = scope:summoner } }
				add_opinion = {
					target = scope:gorak_tul
					modifier = revoked_title
					opinion = -30
				}
			}
		}
		change_title_holder = {
			holder = scope:gorak_tul
			change = scope:change
		}
	}
	
	scope:summoner = {
		every_held_title = {
			if = {
				limit = {
					tier = tier_kingdom
				}
				change_title_holder = {
					holder = scope:gorak_tul
					change = scope:change
				}
			}
			else_if = {
				limit = {
					OR = {
						NOT = { exists = scope:secondary_title }
						tier > scope:secondary_title.tier
					}
				}
				save_temporary_scope_as = secondary_title
			}
		}
	}
	
	scope:summoner = {
		if = {
			limit = {
				exists = scope:secondary_title
			}
			every_vassal = {
				limit = {
					primary_title.tier >= scope:secondary_title.tier
					NOT = {
						primary_title.tier = tier_barony
					}
				}
				change_liege = {
					liege = scope:gorak_tul
					change = scope:change
				}
			}
		}
	}
	
	scope:summoner = {
		change_liege = {
			liege = scope:gorak_tul
			change = scope:change
		}
	}
	
	resolve_title_and_vassal_change = scope:change
	
	if = {
		limit = {
			has_title = title:k_drustvar
		}
		set_primary_title_to = title:k_drustvar
		title:k_drustvar = {
			set_capital_county = title:c_fates_end
		}
	}
	
	scope:summoner = {
		#Add Alliance
		custom_tooltip = gorak_tul_negotiate_alliance_effect_tooltip
		hidden_effect = {
			create_alliance = {
				target = scope:gorak_tul
				allied_through_owner = this
				allied_through_target = scope:gorak_tul
			}
		}
		add_truce_both_ways = {
			character = scope:gorak_tul
			years = 5
			name = TRUCE_GORAK_TUL
		}
	}
	#Set max authority
	if = {
		limit = { has_realm_law_flag = uses_crown_authority }
		add_realm_law = crown_authority_3
	}
	if = {
		limit = { has_realm_law_flag = uses_tribal_authority }
		add_realm_law = tribal_authority_3
	}
	if = {
		limit = { realm_law_use_dark_frenzy_trigger = yes }
		change_dark_frenzy_effect = { VALUE = 50 }
	}
	
	#Control Counties
	every_held_county = { change_county_control = 100 }
	title:c_fates_end = {
		set_county_culture = culture:drust
		set_county_faith = faith:throsic
	}
	
	# Add hooks to loyal servant
	add_hook = {
		target = scope:summoner
		type = loyalty_hook
	}
	scope:summoner = {
		add_opinion = {
			modifier = became_vassal
			target = scope:gorak_tul
			opinion = 50
		}
		#Add Alliance
		custom_tooltip = gorak_tul_negotiate_alliance_effect_tooltip
		hidden_effect = {
			create_alliance = {
				target = scope:gorak_tul
				allied_through_owner = this
				allied_through_target = scope:gorak_tul
			}
		}
		add_truce_both_ways = {
			character = scope:gorak_tul
			years = 5
			name = TRUCE_GORAK_TUL
		}
		if = {
			limit = {
				is_landed = no
			}
			set_employer = scope:gorak_tul
		}
	}
	scope:gorak_tul = {
		declare_war_on_kt_gorak_tul_effect = yes
	}
	
	# Add initial buff
	scope:gorak_tul = {
		add_gold = 1000
		add_prestige = 500
		add_piety = 250
		add_dread = 50
		hidden_effect = {
			add_character_modifier = {
				modifier = wc_gorak_tul_initial_modifier
				years = 10
			}
		}
		debug_log = "Gorak Tul has been summoned"
	}
}

gorak_tul_spawn_starting_troops_effect = {	# Should give a massive army to counterbalance the Alliance
	if = {
		limit = { exists = capital_province }
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = gorak_tul_elite_army_name
			levies = 7500
			men_at_arms = {
				type = hag_maa
				stacks = 18
			}
			men_at_arms = {
				type = pikemen_unit
				stacks = 18
			}
			men_at_arms = {
				type = armored_footmen
				stacks = 18
			}
			men_at_arms = {
				type = mangonel
				stacks = 15
			}
			location = root.capital_province
			origin = root.capital_province
		}
	}
}

heartsbane_spawn_starting_troops_effect = {	# Should give a massive army to counterbalance the Alliance
	if = {
		limit = { exists = capital_province }
		spawn_army = {
			uses_supply = no
			inheritable = no
			name = heartsbane_army_name
			levies = 3000
			men_at_arms = {
				type = hag_maa
				stacks = 10
			}
			men_at_arms = {
				type = pikemen_unit
				stacks = 12
			}
			men_at_arms = {
				type = armored_footmen
				stacks = 12
			}
			men_at_arms = {
				type = mangonel
				stacks = 8
			}
			location = capital_province
		}
	}
}

# Declare war on Kul Tiras (Heartsbane)
declare_war_on_kt_heartsbane_effect = {
    debug_log = "Drustvar has declared war on Kul Tiras!"
    debug_log_date = yes

	start_war = {
		cb = independence_war
		target = title:k_kul_tiras.holder
		target_title = title:d_drustwar
	}
}

# Declare war on Kul Tiras (Gorak Tul)
declare_war_on_kt_gorak_tul_effect = {
    debug_log = "Gorak Tul has begun invasion of Kul Tiras!"
    debug_log_date = yes
  
    scope:gorak_tul = {
        add_character_flag = {
            flag = free_mongol_cb
            days = 14
        }
        start_war = {
            cb = mongol_invasion_war
            target = title:k_kul_tiras.holder
            target_title = title:k_kul_tiras
        }
    }
}

### WAR EFFECTS ###

# Boralus bloodshed
drust_bloodshed_effect = {
	$LOCATION$ = { save_scope_as = bloodshed_location }
	set_variable = {
		name = victims_killed
		value = 0
	}

	set_variable = {
		name = victims_enslaved
		value = 0
	}
	
	every_hired_mercenary  = { #Gets mercenaries hired by the Player
		mercenary_company_leader = {
			every_courtier = {
				add_to_temporary_list = hired_characters
			}
			every_vassal_or_below = {
				add_to_temporary_list = hired_characters
			}
			add_to_temporary_list = hired_characters
		}
	}
	every_patroned_holy_order = {
		leader = {
			add_to_temporary_list = hired_characters
		}
	}
	every_vassal_or_below = {
		every_patroned_holy_order = {
			leader = {
				add_to_temporary_list = hired_characters
			}
		}
		every_courtier = {
			add_to_temporary_list = hired_characters
		}
	}


	scope:bloodshed_location = {
		hidden_effect = {
			every_county_province = {
				
				every_character_in_location = {
					limit = {
						NOR = {
							this = root
							is_vassal_or_below_of = root
							employer ?= root
							is_courtier_of = root
							is_in_list = hired_characters
						}
					}
					save_scope_as = victim
					
					random_list = {
						5 = {
							#Nothing
						}
						15 = { 
							# Slave
							prisoner_of_war_capture_effect = {
								TARGET = scope:victim
								IMPRISONER = root
							}
							root = {
								change_variable = {
									name = victims_enslaved
									add = 1
								}
							}
						}
						85 = {
							root = {
								change_variable = {
									name = victims_killed
									add = 1
								}
							}
							override_death_effect = { death_reason = death_horde }
						}
					}
				}				
			}
		}
	}

	hidden_effect = { # Dont unhide this or the TOOLTIP will show 0 people killed
		send_interface_toast = {
			title = drust_bloodshed.t
			add_prestige = medium_prestige_gain
			left_icon = root
			if = {
				limit = {
					NAND = {
						exists = var:victims_enslaved
						exists = var:victims_killed
						var:victims_killed = 0
						var:victims_enslaved = 0
					}
				}
				custom_tooltip = drust_bloodshed.d
			}
		}
		remove_variable = victims_enslaved
		remove_variable = victims_killed	
	}
	
	show_as_tooltip = { custom_tooltip = drust_bloodshed.residents }
}

# Drust sack area
drust_sack_area_effect = {
	$TITLE$ = { save_scope_as = target_title }
	scope:target_title = { #Only for duchies
		every_de_jure_county = {
			limit = {
				NOT = { this = { has_county_modifier = recently_sacked_by_the_drust_modifier } }
			}
			drust_sack_county_effect = { LOCATION = this }
		}
	}
}

# Drust sack county
drust_sack_county_effect = {
	$LOCATION$ = { save_scope_as = sacked_location }

	root = { add_gold = massive_gold_value }
	scope:sacked_location = {
		change_development_level = { # Lower Dev Level
			value = {
				add = development_level
				multiply = { -0.8 -0.9 }
			}
		}
		
		change_county_control = { # Lower control
			value = { add = monumental_county_control_loss }
		}
		
		add_county_modifier = {
			modifier = recently_sacked_by_the_drust_modifier
			years = 20
		}
		
		every_county_province = {
			if = {
				limit = { # Remove all of the buildings
					NOT = { has_holding_type = tribal_holding }
				}
				set_holding_type = tribal_holding
			}
			
			barony = {
				if = {
					limit = {
						exists = lessee
					}
					revoke_lease = yes
				}
			}
		}
	}
}

# Drust take control of title
take_control_drust_effect = {
	save_temporary_scope_as = target
	$PREVIOUS_HOLDER$ = { save_temporary_scope_as = previous_holder }
	$NEW_TITLE$ = { save_temporary_scope_as = conquered_title }
	
	create_title_and_vassal_change = {
		type = conquest
		save_scope_as = title_conquest
		add_claim_on_loss = yes
	}
	
	scope:previous_holder = {
		scope:conquered_title = {
			change_title_holder = {
				holder = scope:target
				change = scope:title_conquest
				take_baronies = yes
			}
		}
	}
	resolve_title_and_vassal_change = scope:title_conquest

	scope:conquered_title = {
		every_county_province = {
			barony = {
				if = {
					limit = {
						exists = lessee
					}
					revoke_lease = yes
				}
			}
		}
	}
}

# Changes culture and faith on county scale
change_culture_and_faith_drust_effect = {
	save_temporary_scope_as = target
	
	scope:conquered_title = {
		set_county_culture = scope:target.culture
		set_county_faith = scope:target.faith
	}
}

# Changes culture and faith on duchy scale
change_culture_and_faith_drust_area_effect = {
	$TITLE$ = { save_scope_as = target_title }
	$CHARACTER$ = { save_scope_as = target_character }
	
	
	scope:target_title = { #Only for duchies
		every_de_jure_county = {
			limit = {
				NOT = {
					this.culture = scope:target_character.culture
					this.faith = scope:target_character.faith
				}
			}
			set_county_culture = scope:target_character.culture
			set_county_faith = scope:target_character.faith
		}
	}
}

# Drust sack area but not take control of it
drust_minor_sack_area_effect = {
	$TITLE$ = { save_scope_as = target_title }
	scope:target_title = { #Only for duchies
		every_de_jure_county = {
			limit = {
				NOT = { this = { has_county_modifier = recently_sacked_by_the_drust_modifier } }
			}
			drust_minor_sack_county_effect = { LOCATION = this }
		}
	}
}

# Drust sack county but not take control of it
drust_minor_sack_county_effect = {
	$LOCATION$ = { save_scope_as = sacked_location }

	root = { add_gold = minor_gold_value }
	scope:sacked_location = {
		change_development_level = { # Lower Dev Level
			value = {
				add = development_level
				multiply = { -0.1 -0.2 }
			}
		}
		
		change_county_control = { # Lower control
			value = { add = medium_county_control_loss }
		}
		
		add_county_modifier = {
			modifier = recently_sacked_by_the_drust_modifier
			years = 5
		}
	}
}