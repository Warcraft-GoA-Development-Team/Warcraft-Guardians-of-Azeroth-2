borrow_from_goblins_decision = {
	picture = "gfx/interface/illustrations/decisions/goblo.dds"
	selection_tooltip = borrow_from_goblins_decision_tooltip
	desc = borrow_from_goblins_decision_desc
	confirm_text = borrow_from_goblins_decision_confirm

	cost = {
		prestige = 100
	}
	
	cooldown = { days = 5475 }

	is_shown = {
		is_landed = yes
		highest_held_title_tier > tier_barony
		NOR = {
			exists = var:loan_amount_owed
			exists = var:loan_holder
		}
	}
	
	effect = {
		hidden_effect = {
			set_variable = {
				name = amount_to_loan
				value = goblins_gold_value
				days = 1
			}
			add_character_flag = {
				flag = borrow_from_goblins
				days = 3560
			}
			trigger_event = #CREATE CUSTOM EVENT##holy_order.0200
		}
		custom_tooltip = borrow_from_goblins_decision_effect_tooltip

	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 50
		ai_value_modifier = {
			ai_zeal = -0.5
		}
		ai_value_modifier = {
			ai_greed = 0.5
		}
	}

}

repay_goblin_loan_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"

	major = yes

	desc = repay_loan_decision_decision_desc
	selection_tooltip = repay_loan_decision_decision_tooltip

	ai_check_interval = 0

	is_shown = {
		trigger_if = {
			limit = {
				has_character_flag = borrow_from_goblins
			}
		}
		exists = var:loan_amount_owed
		exists = var:loan_holder
	}

	is_valid_showing_failures_only = {
		is_available = yes
		gold >= var:loan_amount_owed
	}

	effect = {
		pay_short_term_gold = {
			gold = var:loan_amount_owed
			target = var:loan_holder
		}
		if = {
			hidden_effect = { remove_decision_cooldown = repay_loan_decision }
		}
		remove_variable = loan_amount_owed
		remove_variable = loan_holder
		remove_character_flag = borrow_from_goblins
		if = {
			limit = {
				has_character_flag = promised_repayment
			}
			remove_character_flag = promised_repayment
		}
		if = {
			limit = {
				exists = var:has_reminded_about_loan
			}
			remove_variable = has_reminded_about_loan
		}
		if = {
			limit = {
				exists = var:original_loan_holder
			}
			remove_variable = original_loan_holder
		}
		if = {
			limit = {
				any_vassal = {
					exists = var:owes_me_money
				}
			}
			random_vassal = {
				limit = {
					exists = var:owes_me_money
				}
				save_scope_as = recipient
			}
		}
		scope:recipient = {
			remove_variable = owes_me_money
			remove_variable = loan_amount_owed
			if = {
				limit = {
					exists = var:original_lender
				}
				remove_variable = original_lender
			}
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}
