@laamp_base_contract_phases_per_agent_charge = 1

##################################################
# INFO
# For laamp contracts that are broadly applicable: that is, they should be able to trigger virtually anywhere and with a minimum of triggers.
# The idea is that any given laamp led by a character skilled in any one thing should always be viable — maybe through crime, maybe by demeaning themselves, but they should always have some contracts around to work with.
##################################################

##################################################
# #Diplo Contracts
# laamp_base_0001		Regale court with stories
# laamp_base_0011		Improve ruler's reputation
# laamp_base_0021		Hobnob with local ruler
# laamp_base_0031		Paid Mediator
# laamp_base_0041		Confidence trickster
#
# #Martial Contracts
# laamp_base_1001		Hunt criminals
# laamp_base_1011		Act as hired muscle
# laamp_base_1021		Help train local MaA
# laamp_base_1031		Garrison service
# laamp_base_1041		Ambush travellers
#
# #Stewardship Contracts
# laamp_base_2001		Collect taxes for a third party
# laamp_base_2011		Perform a census
# laamp_base_2021		Help construct a building
# laamp_base_2031		Settle an administrative boundary dispute
# laamp_base_2041		Collect fake taxes
#
# #Intrigue Contracts
# laamp_base_3001		Provide intelligence from your trips
# laamp_base_3011		Murder a character's rival
# laamp_base_3021		Abduct a character's rival
# laamp_base_3031		Attack the property of a character's rival
# laamp_base_3041		Heist from a ruler's treasury
#
# #Learning Contracts
# laamp_base_4001		Copy texts for a learned ruler
# laamp_base_4011		Help settle a local theological argument
# laamp_base_4021		Create a work of learning for a ruler
# laamp_base_4031		Solicit Charity
# laamp_base_4041		Sell bogus relics
#
# #Prowess Contracts
# laamp_base_5001		Hunt in the wilds
# laamp_base_5011		Guard merchant properties
# laamp_base_5021		Guard a local ruler at a minor event
# laamp_base_5031		Go rustling
# laamp_base_5041		Go poaching
#
##################################################










##################################################
# DIPLO CONTRACT SCHEMES

# Regale court with stories
laamp_base_0001_contract_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = laamp_base_0001_contract_scheme_desc_general
	success_desc = laamp_base_0001_contract_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = DIPLOMACY }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		# Try to guarantee an event in the first six months.
		scheme_owner = {
			trigger_event = {
				on_action = laamp_base_0001_contract_scheme_on_going_events
				months = { 1 3 }
			}
		}
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_0001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_0001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_0001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Improve ruler's reputation
laamp_base_0011_contract_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = laamp_base_0011_contract_scheme_desc_general
	success_desc = laamp_base_0011_contract_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}
	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = DIPLOMACY }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_0011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_0011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_0011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Hobnob with local ruler
laamp_base_0021_contract_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = laamp_base_0021_contract_scheme_desc_general
	success_desc = laamp_base_0021_contract_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}
	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = DIPLOMACY }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		# Try to guarantee an event in the first six months.
		scheme_owner = {
			trigger_event = {
				on_action = laamp_base_0021_contract_scheme_on_going_events
				months = { 1 3 }
			}
		}
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_0021_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_0021_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_0021_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Paid Mediator
laamp_base_0031_contract_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = laamp_base_0031_contract_scheme_desc_general
	success_desc = laamp_base_0031_contract_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}
	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = DIPLOMACY }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_0031_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_0031_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_0031_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Confidence trickster
laamp_base_0041_contract_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = laamp_base_0041_contract_scheme_desc_general
	success_desc = laamp_base_0041_contract_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_secret = yes
	maximum_breaches = 5
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}
	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = DIPLOMACY }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		# Try to guarantee an event in the first six months.
		scheme_owner = {
			trigger_event = {
				on_action = laamp_base_0041_contract_scheme_on_going_events
				months = { 1 3 }
			}
		}
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_0041_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_0041_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_0041_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}










##################################################
# MARTIAL CONTRACT SCHEMES

# Hunt criminals
laamp_base_1001_contract_scheme = {
	# Basic Setup
	skill = martial
	desc = laamp_base_1001_contract_scheme_desc_general
	success_desc = laamp_base_0000_contract_scheme_desc_success
	icon = martial
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = MARTIAL }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_tracker_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_1001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_1001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_1001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Act as hired muscle
laamp_base_1011_contract_scheme = {
	# Basic Setup
	skill = martial
	desc = laamp_base_1011_contract_scheme_desc_general
	success_desc = laamp_base_0000_contract_scheme_desc_success
	icon = martial
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = MARTIAL }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_1011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_1011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_1011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# unused schemes from deprecated prowess/martial contracts
# Help train local MaA
#laamp_base_1021_contract_scheme = {
#	# Basic Setup
#	skill = martial
#	desc = laamp_base_1021_contract_scheme_desc_general
#	success_desc = laamp_base_0000_contract_scheme_desc_success
#	icon = martial
#	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
#	target_type = character
#	category = contract
#	
#	# Parameters
#	speed_per_skill_point = t2_spsp_owner_value
#	base_progress_goal = t2_base_phase_length_value
#	base_maximum_success = t2_base_max_success_value
#	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
#	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
#	spymaster_speed_per_skill_point = 0
#	uses_resistance = no
#	
#	# Core Triggers
#	valid = {
#		valid_laamp_basic_trigger = {
#			EMPLOYER = scope:target
#			LAAMP = scope:owner
#		}
#	}
#
#	# Agents
#	agent_leave_threshold = -25
#	agent_join_chance = {
#		base = 0
#		ai_agent_join_chance_laamp_contract_modifier = yes
#	}
#	valid_agent = { is_valid_agent_standard_trigger = yes }
#	agent_groups_owner_perspective = { courtiers }
#
#	# Base Chances
#	base_success_chance = {
#		base = 0
#		scheme_type_skill_success_chance_modifier = { SKILL = MARTIAL }
#		
#		laamp_contract_scheme_basic_success_chance_modifier = yes
#	}
#	
#	# On Actions
#	on_phase_completed = {
#		suppress_scheme_follow_up_event_till_input_given_effect = yes
#		laamp_base_1021_contract_scheme_prep_effect = yes
#		cap_schemes_and_fire_reminders_effect = yes
#	}
#	on_hud_click  = { laamp_base_1021_contract_scheme_prep_effect = yes }
#	on_semiyearly = {
#		if = {
#			limit = {
#				scheme_owner = { is_ai = yes }
#			}
#			laamp_base_1021_contract_scheme_prep_effect = yes
#		}
#	}
#	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
#	on_invalidated = {
#		save_scope_as = scheme
#		scheme_owner = {
#			send_interface_message = {
#				title = scheme_invalidated_title
#				type = diplo_contract_scheme_invalidated_message
#				right_icon = scope:scheme.scheme_target_character
#				show_as_tooltip = {
#					scope:scheme = { end_scheme = yes }
#				}
#			}
#		}
#	}
#}
#
## Garrison service
#laamp_base_1031_contract_scheme = {
#	# Basic Setup
#	skill = martial
#	desc = laamp_base_1031_contract_scheme_desc_general
#	success_desc = laamp_base_0000_contract_scheme_desc_success
#	icon = martial
#	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
#	target_type = character
#	category = contract
#	
#	# Parameters
#	speed_per_skill_point = t2_spsp_owner_value
#	base_progress_goal = t2_base_phase_length_value
#	base_maximum_success = t2_base_max_success_value
#	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
#	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
#	spymaster_speed_per_skill_point = 0
#	uses_resistance = no
#	
#	# Core Triggers
#	valid = {
#		valid_laamp_basic_trigger = {
#			EMPLOYER = scope:target
#			LAAMP = scope:owner
#		}
#	}
#
#	# Agents
#	agent_leave_threshold = -25
#	agent_join_chance = {
#		base = 0
#		ai_agent_join_chance_laamp_contract_modifier = yes
#	}
#	valid_agent = { is_valid_agent_standard_trigger = yes }
#	agent_groups_owner_perspective = { courtiers }
#
#	# Base Chances
#	base_success_chance = {
#		base = 0
#		scheme_type_skill_success_chance_modifier = { SKILL = MARTIAL }
#		
#		laamp_contract_scheme_basic_success_chance_modifier = yes
#	}
#	
#	# On Actions
#	on_phase_completed = {
#		suppress_scheme_follow_up_event_till_input_given_effect = yes
#		laamp_base_1031_contract_scheme_prep_effect = yes
#		cap_schemes_and_fire_reminders_effect = yes
#	}
#	on_hud_click  = { laamp_base_1031_contract_scheme_prep_effect = yes }
#	on_semiyearly = {
#		if = {
#			limit = {
#				scheme_owner = { is_ai = yes }
#			}
#			laamp_base_1031_contract_scheme_prep_effect = yes
#		}
#	}
#	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
#	on_invalidated = {
#		save_scope_as = scheme
#		scheme_owner = {
#			send_interface_message = {
#				title = scheme_invalidated_title
#				type = diplo_contract_scheme_invalidated_message
#				right_icon = scope:scheme.scheme_target_character
#				show_as_tooltip = {
#					scope:scheme = { end_scheme = yes }
#				}
#			}
#		}
#	}
#}

# Ambush travellers
laamp_base_1041_contract_scheme = {
	# Basic Setup
	skill = martial
	desc = laamp_base_1041_contract_scheme_desc_general
	success_desc = laamp_base_0000_contract_scheme_desc_success
	icon = martial
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = MARTIAL }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_tracker_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_1041_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_1041_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_1041_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}










##################################################
# STEWARDSHIP CONTRACT SCHEMES

# Collect taxes for a third party
laamp_base_2001_contract_scheme = {
	# Basic Setup
	skill = stewardship
	desc = laamp_base_2001_contract_scheme_desc_general
	success_desc = laamp_base_2001_contract_scheme_desc_success
	icon = stewardship
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = STEWARDSHIP }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_2001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_2001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_2001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Perform a census
laamp_base_2011_contract_scheme = {
	# Basic Setup
	skill = stewardship
	desc = laamp_base_2011_contract_scheme_desc_general
	success_desc = laamp_base_2011_contract_scheme_desc_success
	icon = stewardship
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = STEWARDSHIP }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_2011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_2011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_2011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Help construct a building
laamp_base_2021_contract_scheme = {
	# Basic Setup
	skill = stewardship
	desc = laamp_base_2021_contract_scheme_desc_general
	success_desc = laamp_base_2021_contract_scheme_desc_success
	icon = stewardship
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = STEWARDSHIP }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_2021_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_2021_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_2021_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Settle an administrative boundary dispute
laamp_base_2031_contract_scheme = {
	# Basic Setup
	skill = stewardship
	desc = laamp_base_2031_contract_scheme_desc_general
	success_desc = laamp_base_2031_contract_scheme_desc_success
	icon = stewardship
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = STEWARDSHIP }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_2031_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_2031_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_2031_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Collect fake taxes
laamp_base_2041_contract_scheme = {
	# Basic Setup
	skill = stewardship
	desc = laamp_base_2041_contract_scheme_desc_general
	success_desc = laamp_base_2041_contract_scheme_desc_success
	icon = stewardship
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = STEWARDSHIP }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_2041_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_2041_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_2041_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}











##################################################
# INTRIGUE CONTRACT SCHEMES

# Provide intelligence from your trips
laamp_base_3001_contract_scheme = {
	# Basic Setup
	skill = intrigue
	desc = laamp_base_3001_contract_scheme_desc_general
	success_desc = laamp_base_3001_contract_scheme_desc_success
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_3001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_3001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_3001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Murder a character's rival
laamp_base_3011_contract_scheme = {
	# Basic Setup
	skill = intrigue
	desc = laamp_base_3011_contract_scheme_desc_general
	success_desc = laamp_base_3011_contract_scheme_desc_success
	discovery_desc = "MURDER_DISCOVERY_DESC"
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_secret = yes
	maximum_breaches = 5
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	speed_per_target_skill_point = t2_spsp_target_value
	base_progress_goal = t3_base_phase_length_value
	maximum_secrecy = 95
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = t2_spsp_target_spy_value
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	base_secrecy = {
		add = secrecy_base_value
		add = countermeasure_apply_secrecy_maluses_value
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_3011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_3011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_3011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = {
		hostile_scheme_monthly_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}			
			random_list = {
				100 = {
					scheme_owner = {
						trigger_event = { on_action = murder_ongoing }
					}
				}
				50 = { fire_generic_contract_scheme_on_going_events_effect = yes }
			}
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Abduct a character's rival
laamp_base_3021_contract_scheme = {
	# Basic Setup
	skill = intrigue
	desc = laamp_base_3021_contract_scheme_desc_general
	success_desc = laamp_base_3021_contract_scheme_desc_success
	discovery_desc = "ABDUCT_DISCOVERY_DESC"
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_secret = yes
	maximum_breaches = 5
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	speed_per_target_skill_point = t2_spsp_target_value
	base_progress_goal = t3_base_phase_length_value
	maximum_secrecy = 95
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = t2_spsp_target_spy_value
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	base_secrecy = {
		add = secrecy_base_value
		add = countermeasure_apply_secrecy_maluses_value
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_3021_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_3021_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_3021_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = {
		hostile_scheme_monthly_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			random_list = {
				100 = {
					scheme_owner = {
						trigger_event = { on_action = abduct_ongoing }
					}
				}
				50 = { fire_generic_contract_scheme_on_going_events_effect = yes }
			}
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Attack the property of a character's rival
laamp_base_3031_contract_scheme = {
	# Basic Setup
	skill = intrigue
	desc = laamp_base_3031_contract_scheme_desc_general
	success_desc = laamp_base_3031_contract_scheme_desc_success
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_3031_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_3031_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_3031_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Heist from a ruler's treasury
laamp_base_3041_contract_scheme = {
	# Basic Setup
	skill = intrigue
	desc = laamp_base_3041_contract_scheme_desc_general
	success_desc = laamp_base_3041_contract_scheme_desc_success
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	maximum_secrecy = 95
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = t2_spsp_target_spy_value
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = INTRIGUE }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	base_secrecy = {
		add = secrecy_base_value
		add = countermeasure_apply_secrecy_maluses_value
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_3041_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_3041_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_3041_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = {
		hostile_scheme_monthly_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			fire_generic_contract_scheme_on_going_events_effect = yes
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}











##################################################
# LEARNING CONTRACT SCHEMES

# Copy texts for a learned ruler
laamp_base_4001_contract_scheme = {
	# Basic Setup
	skill = learning
	desc = laamp_base_4001_contract_scheme_desc_general
	success_desc = laamp_base_4001_contract_scheme_desc_success
	icon = learning
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = LEARNING }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_learning_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_4001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_4001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_4001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Help settle a local theological argument
laamp_base_4011_contract_scheme = {
	# Basic Setup
	skill = learning
	desc = laamp_base_4011_contract_scheme_desc_general
	success_desc = laamp_base_4011_contract_scheme_desc_success
	icon = learning
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = LEARNING }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_learning_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_4011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_4011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_4011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Create a work of learning for a ruler
laamp_base_4021_contract_scheme = {
	# Basic Setup
	skill = learning
	desc = laamp_base_4021_contract_scheme_desc_general
	success_desc = laamp_base_4021_contract_scheme_desc_success
	icon = learning
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = LEARNING }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_learning_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_4021_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_4021_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_4021_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Solicit Charity
laamp_base_4031_contract_scheme = {
	# Basic Setup
	skill = learning
	desc = laamp_base_4031_contract_scheme_desc_general
	success_desc = laamp_base_4031_contract_scheme_desc_success
	icon = learning
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = LEARNING }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_learning_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_4031_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_4031_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_4031_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Sell bogus relics
laamp_base_4041_contract_scheme = {
	# Basic Setup
	skill = learning
	desc = laamp_base_4041_contract_scheme_desc_general
	success_desc = laamp_base_4041_contract_scheme_desc_success
	icon = learning
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = LEARNING }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_learning_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_4041_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_4041_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_4041_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}











##################################################
# PROWESS CONTRACT SCHEMES

# unused schemes from deprecated prowess/martial contracts
# Hunt in the wilds
#laamp_base_5001_contract_scheme = {
#	# Basic Setup
#	skill = prowess
#	desc = laamp_base_5001_contract_scheme_desc_general
#	success_desc = laamp_base_5001_contract_scheme_desc_success
#	icon = war
#	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
#	target_type = character
#	category = contract
#	
#	# Parameters
#	speed_per_skill_point = t2_spsp_owner_value
#	base_progress_goal = t2_base_phase_length_value
#	base_maximum_success = t2_base_max_success_value
#	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
#	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
#	spymaster_speed_per_skill_point = 0
#	uses_resistance = no
#	
#	# Core Triggers
#	valid = {
#		valid_laamp_basic_trigger = {
#			EMPLOYER = scope:target
#			LAAMP = scope:owner
#		}
#	}
#
#	# Agents
#	agent_leave_threshold = -25
#	agent_join_chance = {
#		base = 0
#		ai_agent_join_chance_laamp_contract_modifier = yes
#	}
#	valid_agent = { is_valid_agent_standard_trigger = yes }
#	agent_groups_owner_perspective = { courtiers }
#
#	# Base Chances
#	base_success_chance = {
#		base = 0
#		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
#		
#		laamp_contract_scheme_basic_success_chance_modifier = yes
#
#		laamp_improved_tracker_contract_success_modifier = yes
#	}
#	
#	# On Actions
#	on_phase_completed = {
#		suppress_scheme_follow_up_event_till_input_given_effect = yes
#		laamp_base_5001_contract_scheme_prep_effect = yes
#		cap_schemes_and_fire_reminders_effect = yes
#	}
#	on_hud_click  = { laamp_base_5001_contract_scheme_prep_effect = yes }
#	on_semiyearly = {
#		if = {
#			limit = {
#				scheme_owner = { is_ai = yes }
#			}
#			laamp_base_5001_contract_scheme_prep_effect = yes
#		}
#	}
#	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
#	on_invalidated = {
#		save_scope_as = scheme
#		scheme_owner = {
#			send_interface_message = {
#				title = scheme_invalidated_title
#				type = diplo_contract_scheme_invalidated_message
#				right_icon = scope:scheme.scheme_target_character
#				show_as_tooltip = {
#					scope:scheme = { end_scheme = yes }
#				}
#			}
#		}
#		# Clean up variables.
#		scheme_target_character = { remove_variable = animal_type_event }
#	}
#}
#
## Guard merchant properties
#laamp_base_5011_contract_scheme = {
#	# Basic Setup
#	skill = prowess
#	desc = laamp_base_5011_contract_scheme_desc_general
#	success_desc = laamp_base_5011_contract_scheme_desc_success
#	icon = war
#	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
#	target_type = character
#	category = contract
#	
#	# Parameters
#	speed_per_skill_point = t2_spsp_owner_value
#	base_progress_goal = t2_base_phase_length_value
#	base_maximum_success = t2_base_max_success_value
#	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
#	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
#	spymaster_speed_per_skill_point = 0
#	uses_resistance = no
#	
#	# Core Triggers
#	valid = {
#		valid_laamp_basic_trigger = {
#			EMPLOYER = scope:target
#			LAAMP = scope:owner
#		}
#	}
#
#	# Agents
#	agent_leave_threshold = -25
#	agent_join_chance = {
#		base = 0
#		ai_agent_join_chance_laamp_contract_modifier = yes
#	}
#	valid_agent = { is_valid_agent_standard_trigger = yes }
#	agent_groups_owner_perspective = { courtiers }
#
#	# Base Chances
#	base_success_chance = {
#		base = 0
#		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
#		
#		laamp_contract_scheme_basic_success_chance_modifier = yes
#	}
#	
#	# On Actions
#	on_phase_completed = {
#		suppress_scheme_follow_up_event_till_input_given_effect = yes
#		laamp_base_5011_contract_scheme_prep_effect = yes
#		cap_schemes_and_fire_reminders_effect = yes
#	}
#	on_hud_click  = { laamp_base_5011_contract_scheme_prep_effect = yes }
#	on_semiyearly = {
#		if = {
#			limit = {
#				scheme_owner = { is_ai = yes }
#			}
#			laamp_base_5011_contract_scheme_prep_effect = yes
#		}
#	}
#	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
#	on_invalidated = {
#		save_scope_as = scheme
#		scheme_owner = {
#			send_interface_message = {
#				title = scheme_invalidated_title
#				type = diplo_contract_scheme_invalidated_message
#				right_icon = scope:scheme.scheme_target_character
#				show_as_tooltip = {
#					scope:scheme = { end_scheme = yes }
#				}
#			}
#		}
#	}
#}
#
## Guard a local ruler at a minor event
#laamp_base_5021_contract_scheme = {
#	# Basic Setup
#	skill = prowess
#	desc = laamp_base_5021_contract_scheme_desc_general
#	success_desc = laamp_base_5021_contract_scheme_desc_success
#	icon = war
#	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
#	target_type = character
#	category = contract
#	
#	# Parameters
#	speed_per_skill_point = t2_spsp_owner_value
#	base_progress_goal = t2_base_phase_length_value
#	base_maximum_success = t2_base_max_success_value
#	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
#	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
#	spymaster_speed_per_skill_point = 0
#	uses_resistance = no
#	
#	# Core Triggers
#	valid = {
#		valid_laamp_basic_trigger = {
#			EMPLOYER = scope:target
#			LAAMP = scope:owner
#		}
#	}
#
#	# Agents
#	agent_leave_threshold = -25
#	agent_join_chance = {
#		base = 0
#		ai_agent_join_chance_laamp_contract_modifier = yes
#	}
#	valid_agent = { is_valid_agent_standard_trigger = yes }
#	agent_groups_owner_perspective = { courtiers }
#
#	# Base Chances
#	base_success_chance = {
#		base = 0
#		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
#		
#		laamp_contract_scheme_basic_success_chance_modifier = yes
#	}
#	
#	# On Actions
#	on_phase_completed = {
#		suppress_scheme_follow_up_event_till_input_given_effect = yes
#		laamp_base_5021_contract_scheme_prep_effect = yes
#		cap_schemes_and_fire_reminders_effect = yes
#	}
#	on_hud_click  = { laamp_base_5021_contract_scheme_prep_effect = yes }
#	on_semiyearly = {
#		if = {
#			limit = {
#				scheme_owner = { is_ai = yes }
#			}
#			laamp_base_5021_contract_scheme_prep_effect = yes
#		}
#	}
#	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
#	on_invalidated = {
#		save_scope_as = scheme
#		scheme_owner = {
#			send_interface_message = {
#				title = scheme_invalidated_title
#				type = diplo_contract_scheme_invalidated_message
#				right_icon = scope:scheme.scheme_target_character
#				show_as_tooltip = {
#					scope:scheme = { end_scheme = yes }
#				}
#			}
#		}
#	}
#}

# Go rustling
laamp_base_5031_contract_scheme = {
	# Basic Setup
	skill = prowess
	desc = laamp_base_5031_contract_scheme_desc_general
	success_desc = laamp_base_5031_contract_scheme_desc_success
	icon = war
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t2_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes

		laamp_improved_tracker_contract_success_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_5031_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_5031_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_5031_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# unused schemes from deprecated prowess/martial contracts
# Go poaching
#laamp_base_5041_contract_scheme = {
#	# Basic Setup
#	skill = prowess
#	desc = laamp_base_5041_contract_scheme_desc_general
#	success_desc = laamp_base_5041_contract_scheme_desc_success
#	icon = war
#	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
#	target_type = character
#	category = contract
#	
#	# Parameters
#	speed_per_skill_point = t2_spsp_owner_value
#	base_progress_goal = t2_base_phase_length_value
#	base_maximum_success = t2_base_max_success_value
#	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
#	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
#	spymaster_speed_per_skill_point = 0
#	uses_resistance = no
#	
#	# Core Triggers
#	valid = {
#		valid_laamp_basic_trigger = {
#			EMPLOYER = scope:target
#			LAAMP = scope:owner
#		}
#	}
#
#	# Agents
#	agent_leave_threshold = -25
#	agent_join_chance = {
#		base = 0
#		ai_agent_join_chance_laamp_contract_modifier = yes
#	}
#	valid_agent = { is_valid_agent_standard_trigger = yes }
#	agent_groups_owner_perspective = { courtiers }
#
#	# Base Chances
#	base_success_chance = {
#		base = 0
#		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
#		
#		laamp_contract_scheme_basic_success_chance_modifier = yes
#
#		laamp_improved_tracker_contract_success_modifier = yes
#	}
#	
#	# On Actions
#	on_phase_completed = {
#		suppress_scheme_follow_up_event_till_input_given_effect = yes
#		laamp_base_5041_contract_scheme_prep_effect = yes
#		cap_schemes_and_fire_reminders_effect = yes
#	}
#	on_hud_click  = { laamp_base_5041_contract_scheme_prep_effect = yes }
#	on_semiyearly = {
#		if = {
#			limit = {
#				scheme_owner = { is_ai = yes }
#			}
#			laamp_base_5041_contract_scheme_prep_effect = yes
#		}
#	}
#	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
#	on_invalidated = {
#		save_scope_as = scheme
#		scheme_owner = {
#			send_interface_message = {
#				title = scheme_invalidated_title
#				type = diplo_contract_scheme_invalidated_message
#				right_icon = scope:scheme.scheme_target_character
#				show_as_tooltip = {
#					scope:scheme = { end_scheme = yes }
#				}
#			}
#		}
#	}
#}

# Mug people.
laamp_base_5051_contract_scheme = {
	# Basic Setup
	skill = prowess
	desc = laamp_base_5051_contract_scheme_desc_general
	success_desc = laamp_base_5051_contract_scheme_desc_success
	discovery_desc = "PETTY_CRIME_DISCOVERY_DESC"
	icon = intrigue
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	is_secret = yes
	maximum_breaches = 5
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	speed_per_target_skill_point = t2_spsp_target_value
	base_progress_goal = t3_base_phase_length_value
	maximum_secrecy = 95
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	base_secrecy = {
		add = secrecy_base_value
		add = countermeasure_apply_secrecy_maluses_value
	}
	
	# On Actions
	on_start = {
		add_scheme_starting_opportunities_intrigue_effect = yes
		# Toggle our special muggings control variable.
		increment_variable_effect = {
			VAR = special_muggings_tally
			VAL = 0
		}
		save_scope_value_as = {
			name = special_muggings_max
			value = {
				value = 2
				add = scope:target.highest_held_title_tier
			}
		}
		increment_variable_effect = {
			VAR = special_muggings_max
			VAL = scope:special_muggings_max
		}
	}
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_5051_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_5051_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_5051_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = {
		hostile_scheme_monthly_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}
			random_list = {
				# Special mugging.
				60 = {
					random = {
						chance = 60
						scheme_owner = { trigger_event = laamp_base_contract_schemes.5901 }
					}
				}
				# Generic random events.
				30 = { fire_generic_contract_scheme_on_going_events_effect = yes }
				# Feels like I'm triggerin' nothin' at all!
				10 = {}
			}
		}
	}
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}











##################################################
# JUSTICAR CONTRACT SCHEMES

# Protect the Innocent
laamp_base_6001_contract_scheme = {
	# Basic Setup
	skill = prowess
	desc = laamp_base_6001_contract_scheme_desc_general
	success_desc = laamp_base_6001_contract_scheme_desc_success
	icon = war
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_6001_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_6001_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_6001_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Rescue a fair non-combatant gender
laamp_base_6011_contract_scheme = {
	# Basic Setup
	skill = prowess
	desc = laamp_base_6011_contract_scheme_desc_general
	success_desc = laamp_base_6011_contract_scheme_desc_success
	icon = war
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }
	pulse_actions = {
		entries = {
			#################################################
			# Success Chance
			scheme_apa_positive.0371 # Defenses Bolstered
			scheme_apa_positive.0381 # Infiltrator Apprehended
			scheme_apa_positive.0391 # Contingencies Covered
			scheme_apa_positive.0701 # False Alarm
			scheme_apa_positive.3031 # Better Than Expected

			#################################################
			# Speed Chance
			scheme_apa_positive.2181 # Threats Think Twice
			scheme_apa_positive.2191 # Patrols Perfected
			scheme_apa_positive.2201 # Presence Established
			scheme_apa_positive.2491 # Child's Play

			#################################################
			# Negative APAs

			#################################################
			# Success Chance
			scheme_apa_negative.5311 # Entryway Overlooked
			scheme_apa_negative.5321 # Asleep on Duty
			scheme_apa_negative.5331 # Intruder Escapes
			scheme_apa_negative.5671 # Suspicions of Bribery

			#################################################
			# Speed Chance
			scheme_apa_negative.7171 # Threat Escalates
			scheme_apa_negative.7181 # Bored to Tears
			scheme_apa_negative.7191 # Watch Missed
			scheme_apa_negative.7511 # Spread Too Thin
			scheme_apa_negative.8001 # Poor Timing
		}
		chance_of_no_event = scheme_apa_chance_of_no_event_value
	}

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_6011_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_6011_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_6011_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Participate in a Chivalry Play
laamp_base_6021_contract_scheme = {
	# Basic Setup
	skill = diplomacy
	desc = laamp_base_6021_contract_scheme_desc_general
	success_desc = laamp_base_6021_contract_scheme_desc_success
	icon = diplomacy
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }
	pulse_actions = {
		entries = {
			#################################################
			# Positive APAs

			#################################################
			# Success Chance
			scheme_apa_positive.0311 # Courtiers Enthralled
			scheme_apa_positive.0321 # Popular Speaker
			scheme_apa_positive.0331 # Tall Tales Topical
			scheme_apa_positive.3021 # Capitalised on Success
			scheme_apa_positive.3031 # Better than Expected

			#################################################
			# Speed Chance
			scheme_apa_positive.2121 # Every Meal an Audience
			scheme_apa_positive.2131 # Second-Hand Tellings
			scheme_apa_positive.2141 # All the Buzz
			scheme_apa_positive.3001 # Convenient Opportunity Leveraged

			#################################################
			# Negative APAs

			#################################################
			# Success Chance
			scheme_apa_negative.5071 # Sycophant
			scheme_apa_negative.5091 # Trying Too Hard
			scheme_apa_negative.5271 # Aggressively Boring
			scheme_apa_negative.8121 # Tales Full of Holes

			#################################################
			# Speed Chance
			scheme_apa_negative.7001 # Slower than Expected
			scheme_apa_negative.7011 # Harder than Planned
			scheme_apa_negative.7041 # Not Welcome
			scheme_apa_negative.8021 # Sluggish Progress
			scheme_apa_negative.8111 # Effort Stymied
		}
		chance_of_no_event = scheme_apa_chance_of_no_event_value
	}

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = DIPLOMACY }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_6021_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_6021_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_6021_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}

# Do a Pass d'Armes
laamp_base_6031_contract_scheme = {
	# Basic Setup
	skill = prowess
	desc = laamp_base_6031_contract_scheme_desc_general
	success_desc = laamp_base_6031_contract_scheme_desc_success
	icon = war
	illustration = "gfx/interface/illustrations/event_scenes/corridor.dds"
	target_type = character
	category = contract
	
	# Parameters
	speed_per_skill_point = t2_spsp_owner_value
	base_progress_goal = t3_base_phase_length_value
	base_maximum_success = t2_base_max_success_value
	phases_per_agent_charge = @laamp_base_contract_phases_per_agent_charge
	success_chance_growth_per_skill_point = laamp_contract_scgpsp_value
	spymaster_speed_per_skill_point = 0
	uses_resistance = no
	
	# Core Triggers
	valid = {
		# Warcraft
		NOT = { is_isolated_from_trigger = { target = scope:target } }
		valid_laamp_basic_trigger = {
			EMPLOYER = scope:target
			LAAMP = scope:owner
		}
	}

	# Agents
	agent_leave_threshold = -25
	agent_join_chance = {
		base = 0
		ai_agent_join_chance_laamp_contract_modifier = yes
	}
	valid_agent = { is_valid_agent_standard_trigger = yes }
	agent_groups_owner_perspective = { courtiers }
	pulse_actions = {
		entries = {
			#################################################
			# Positive APAs

			#################################################
			# Success Chance
			scheme_apa_positive.0311 # Courtiers Enthralled
			scheme_apa_positive.0321 # Popular Speaker
			scheme_apa_positive.0331 # Tall Tales Topical
			scheme_apa_positive.3021 # Capitalised on Success
			scheme_apa_positive.3031 # Better than Expected

			#################################################
			# Speed Chance
			scheme_apa_positive.2121 # Every Meal an Audience
			scheme_apa_positive.2131 # Second-Hand Tellings
			scheme_apa_positive.2141 # All the Buzz
			scheme_apa_positive.3001 # Convenient Opportunity Leveraged

			#################################################
			# Negative APAs

			#################################################
			# Success Chance
			scheme_apa_negative.5071 # Sycophant
			scheme_apa_negative.5091 # Trying Too Hard
			scheme_apa_negative.5271 # Aggressively Boring
			scheme_apa_negative.8121 # Tales Full of Holes

			#################################################
			# Speed Chance
			scheme_apa_negative.7001 # Slower than Expected
			scheme_apa_negative.7011 # Harder than Planned
			scheme_apa_negative.7041 # Not Welcome
			scheme_apa_negative.8021 # Sluggish Progress
			scheme_apa_negative.8111 # Effort Stymied
		}
		chance_of_no_event = scheme_apa_chance_of_no_event_value
	}

	# Base Chances
	base_success_chance = {
		base = 0
		scheme_type_skill_success_chance_modifier = { SKILL = PROWESS }
		
		laamp_contract_scheme_basic_success_chance_modifier = yes
	}
	
	# On Actions
	on_phase_completed = {
		suppress_scheme_follow_up_event_till_input_given_effect = yes
		laamp_base_6031_contract_scheme_prep_effect = yes
		cap_schemes_and_fire_reminders_effect = yes
	}
	on_hud_click  = { laamp_base_6031_contract_scheme_prep_effect = yes }
	on_semiyearly = {
		if = {
			limit = {
				scheme_owner = { is_ai = yes }
			}
			laamp_base_6031_contract_scheme_prep_effect = yes
		}
	}
	on_monthly = { fire_generic_contract_scheme_on_going_events_effect = yes }
	on_invalidated = {
		save_scope_as = scheme
		scheme_owner = {
			send_interface_message = {
				title = scheme_invalidated_title
				type = diplo_contract_scheme_invalidated_message
				right_icon = scope:scheme.scheme_target_character
				show_as_tooltip = {
					scope:scheme = { end_scheme = yes }
				}
			}
		}
	}
}
