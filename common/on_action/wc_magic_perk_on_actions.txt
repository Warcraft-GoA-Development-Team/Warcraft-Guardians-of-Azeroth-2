on_scheme_reflect_regeneration = {
    effect = {
        change_variable = {
            name = scheme_reflect_count
            add = 1
        }
    }
}

on_abduct_reflect = {
    effect = {
        if = {
            limit = {
                scope:target = {
                    has_variable = reflect_interaction
                }
            }
            trigger_event = {
                on_action = on_abduct_reflect
                days = 1
            }
        }
        else = {
            if = {
                limit = {
                    scope:target = {
                        has_variable = true_target
                    }
                }
                scope:target = {
                    var:true_target = {
                        save_scope_as = target
                    }
                    remove_variable = true_target
                }
            }
            scope:owner = {
                if = {
                    limit = {
                        has_character_flag = is_in_event_abduct_outcome_0001
                    }
                    trigger_event = {
                        id = abduct_outcome.0001
                        days = 1
                    }
                }
                else = {
                    trigger_event = abduct_outcome.0001
                }
            }
        }
    }
}

on_fabrivate_hook_reflect = {
    effect = {
        if = {
            limit = {
                scope:target = {
                    has_variable = reflect_interaction
                }
            }
            trigger_event = {
                on_action = on_fabrivate_hook_reflect
                days = 1
            }
        }
        else = {
            if = {
                limit = {
                    scope:target = {
                        has_variable = true_target
                    }
                }
                scope:target = {
                    var:true_target = {
                        save_scope_as = target
                    }
                    remove_variable = true_target
                }
            }

            scope:target = {
                if = {
                    limit = { is_ruler = yes }
                    # Check for secrets that can be revealed
                    if = {
                        limit = {
                            any_secret = {
                                NOT = { is_known_by = scope:owner }
                            }
                        }
                        random_secret = {
                            limit = {
                                NOT = { is_known_by = scope:owner }
                            }
                            weight = {
                                base = 1
                                modifier = {
                                    # It's more fun to Discover a Criminal Secret
                                    add = 5
                                    is_criminal_for = scope:target
                                }
                            }
                            save_scope_as = secret_to_reveal
                        }
                    }
                    else_if = {
                        # Others require Criminal Secrets
                        limit = {
                            any_secret = {
                                NOT = { is_known_by = scope:owner }
                                is_criminal_for = scope:target
                            }
                        }
                        random = {
                            chance = 20
                            random_secret = {
                                limit = {
                                    NOT = { is_known_by = scope:owner }
                                    is_criminal_for = scope:target
                                }
                                save_scope_as = secret_to_reveal
                            }
                        }
                    }
                }
                else = {
                    if = {
                        limit = {
                            any_secret = {
                                NOT = { is_known_by = scope:owner }
                                is_criminal_for = scope:target
                            }
                        }
                        random_secret = {
                            limit = {
                                NOT = { is_known_by = scope:owner }
                                is_criminal_for = scope:target
                            }
                            save_scope_as = secret_to_reveal
                        }
                    }
                }
            }

            if = {
                limit = { exists = scope:secret_to_reveal }
                scope:owner = {
                    trigger_event = fabricate_hook_outcome.0001 # Secret discovery handling
                }
            }
            else = {
                if = {
                    limit = { scope:target = { is_ruler = yes } }
                    # Strong Hook against Ruler roll
                    random = {
                        chance = 20
                        save_scope_value_as = {
                            name = strong_hook_against_ruler
                            value = yes
                        }
                    }
                }
                scope:owner = {
                    trigger_event = {
                        on_action = fabricate_hook_method_success_outcome
                    }
                }
            }
        }
    }
}

on_murder_reflect = {
    effect = {
        if = {
            limit = {
                scope:target = {
                    has_variable = reflect_interaction
                }
            }
            trigger_event = {
                on_action = on_murder_reflect
                days = 1
            }
        }
        else = {
            if = {
                limit = {
                    scope:target = {
                        has_variable = true_target
                    }
                }
                scope:target = {
                    var:true_target = {
                        save_scope_as = target
                    }
                    remove_variable = true_target
                }
            }
            scope:owner = {
                if = {
                    limit = {
                        has_character_flag = is_in_event_murder_outcome_0001
                    }
                    trigger_event = {
                        id = murder_outcome.0001
                        days = 1
                    }
                }
                else = {
                    trigger_event = murder_outcome.0001
                }
            }
        }
    }
}

on_steal_artifact_reflect = {
    effect = {
        if = {
            limit = {
                scope:target = {
                    has_variable = reflect_interaction
                }
            }
            trigger_event = {
                on_action = on_steal_artifact_reflect
                days = 1
            }
        }
        else = {
            if = {
                limit = {
                    scope:target = {
                        has_variable = true_target
                    }
                }
                scope:target = {
                    var:true_target = {
                        save_scope_as = artifact
                    }
                    remove_variable = true_target
                }
            }
            scope:owner = {
                trigger_event = {
                    on_action = steal_back_artifact_success
                }
            }
        }
    }
}

on_claim_throne_reflect = {
    effect = {
        if = {
            limit = {
                scope:target = {
                    has_variable = reflect_interaction
                }
            }
            trigger_event = {
                on_action = on_claim_throne_reflect
                days = 1
            }
        }
        else = {
            if = {
                limit = {
                    scope:target = {
                        has_variable = cancel_scheme
                    }
                }
                remove_variable = cancel_scheme
                scope:scheme = {
                    end_scheme = yes
                }
            }
            else = {
                if = {
                    limit = {
                        has_character_flag = is_executing_claim_throne
                    }
                    trigger_event = {
                        on_action = claim_throne_setup
                        days = 1
                    }
                }
                else = {
                    trigger_event = {
                        on_action = claim_throne_setup
                    }
                }
            }
        }
    }
}

on_overthrow_regent_reflect = {
    effect = {
        if = {
            limit = {
                scope:target = {
                    has_variable = reflect_interaction
                }
            }
            trigger_event = {
                on_action = on_overthrow_regent_reflect
                days = 1
            }
        }
        else = {
            if = {
                limit = {
                    scope:target = {
                        has_variable = cancel_scheme
                    }
                }
                remove_variable = cancel_scheme
                scope:scheme = {
                    end_scheme = yes
                }
            }
            else = {
                if = {
                    limit = {
                        has_character_flag = is_in_event_diarchy_0501
                    }
                    trigger_event = {
                        id = diarchy.0501
                        days = 1
                    }
                }
                else = { trigger_event = diarchy.0501 }
            }
        }
    }
}