## PLAGUE ON ACTIONS

plague_county_setup = {
	trigger = {
		exists = scope:owner
		exists = scope:plague_center
		
		is_vulnerable_to_plague_county_trigger = yes
	}
	effect = {
		scope:plague_center = {
			if = {
				limit = { NOT = { exists = var:plagued_counties } }
				set_variable = { name = plagued_counties value = 0 }
			}
		}
		
		# Plague effects
		scope:plague_center = { change_variable = { name = plagued_counties add = 1 } }
		
		plague_county_effect = {
			PLACE = this
			PLAGUER = scope:owner
		}
		
		trigger_event = { on_action = plague_county_pulse }
	}
}
plague_county_pulse = {
	trigger = {
		has_county_modifier = plagued_county_modifier
	}

	effect = {
		# if = {
			# limit = { NOT = { exists = var:spread_times } }
			# set_variable = { name = spread_times value = 0 }
		# }
		
		if = {
			limit = { root = root.holder.capital_county }
			create_contagion_list_effect = { SICK_CHARACTER = root.holder CONTAGION_COURT_OWNER = root.holder }
		}
		
		every_in_list = {
			list = contagion_list
			trigger_event = { on_action = plague_character_pulse }
		}
		
		# Repeat pulse
		trigger_event = {
			on_action = plague_county_pulse
			days = { 25 35 }
		}

		if = {
			limit = {
				# Spread limit
				# exists = var:spread_times
				exists = scope:plague_center.var:plagued_counties
				scope:plague_center.var:plagued_counties < plagued_counties_max_value
			}
			
			# Spread it to other province
			random_title_to_title_neighboring_county = {
				limit = {
					NOT = { title_province = { geographical_region = special_plague_region_ignore } }
					is_vulnerable_to_plague_county_trigger = yes
				}
				
				weight = {
					base = 0
					modifier = {
						add = plague_county_weight
					}
				}
				
				# change_variable = { name = spread_times add = 1 }

				trigger_event = {
					on_action = plague_county_setup
					days = { 7 15 }
				}
			}
		}
	}
}

plague_character_pulse = {
	trigger = {
		is_vulnerable_to_plague_character_trigger = yes
		NOT = {
			has_character_modifier = important_lore_character
		}
	}
	random_events = {
		chance_to_happen = 5

		chance_of_no_event = {
			# Perk reduces chance of sickness for yourself and for Courtiers/Guests
			value = wash_your_hands_perk_value
		}

		100 = WCHEA.1001 	#You become undead via Plague
	}
}

# plague_setup: final outcome event
plague_setup = {
	# Occurs when you execute the murder scheme. Pick out the murder method set in murder_ongoing.0001.
	first_valid = {
		plague_outcome.1001 #Zombie outbreak
	}
}

# plague_succeeded: when the plague succeds this outcome is called
plague_succeeded = {
	# Picks out the correct success event depending on setup.
	first_valid = {
		plague_outcome.2000 #Undead outbreak
	}
}

# plague_failed: when the plague fails this outcome is called
plague_failed = {
	# Picks out the correct failure event depending on setup/save.
	first_valid = {
		plague_outcome.4001
	}
}

# plague_ongoing: method that calls events every month or so
plague_ongoing = {
	# Events that can happen while planning to murder someone.
	trigger = {
		exists = scope:scheme
	}
	
	random_events = {
		chance_to_happen = 10
		200 = 0
		################
		## Specific Scheme events#
		################
		500 = plague_ongoing.3302			# Recruit cultists
		
		################
		## Generic Intrigue Scheme events#
		################
		##Agents:
		200 = intrigue_scheme_ongoing.1001 	# Pay gold for Scheme Progress
		100 = intrigue_scheme_ongoing.1002 	# Zealous agent promotes your agenda
		100 = intrigue_scheme_ongoing.1004 	# A Gregarious agent is a little too loose-lipped
		100 = intrigue_scheme_ongoing.1006 	# A Lazy agent is a little careless
		30 = intrigue_scheme_ongoing.1007 	# Caring agent wants you to stop
		50 = intrigue_scheme_ongoing.1008 	# Agent close to being discovered
		50 = intrigue_scheme_ongoing.1009 	# Close relation is willing to join your scheme after all
		50 = intrigue_scheme_ongoing.2003 	# Discover a secret about someone else than your target
		
		##Target:
		100 = intrigue_scheme_ongoing.2001 	# Trusting target
		100 = intrigue_scheme_ongoing.2002 	# Drunkard target
		##Owner:
		50 = intrigue_scheme_ongoing.3001 	# Being Just Causes Stress
		50 = intrigue_scheme_ongoing.3002 	# Being Compassionate Causes Pain
		##Child target:
		100 = intrigue_scheme_ongoing.3003 	# Mapping the local surroundings
		
		#############
		# Lifestyle events
		#############
		100 = intrigue_scheme_lifestyle.1001 	# Opportunity for a general to set up a soldier spy ring
		50 = intrigue_scheme_lifestyle.1002 	# Your soldier spy ring has been compromised!
		100 = intrigue_scheme_lifestyle.3001 	# Study the targets habits
		100 = intrigue_scheme_lifestyle.3101 	# Convert informants in target´s court
		50 = intrigue_scheme_lifestyle.3102 	# Informants are revealed!
		100 = intrigue_scheme_lifestyle.3201 	# Intercept communication
		100 = intrigue_scheme_lifestyle.3301 	# Possible to gain hook - ends the scheme
		100 = intrigue_scheme_lifestyle.3401 	# Convince courtier at target's court to inform on them
	}
}
