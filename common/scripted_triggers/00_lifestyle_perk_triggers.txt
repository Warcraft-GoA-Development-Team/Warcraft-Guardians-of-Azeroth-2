
# Triggers used in events and actions caused by Lifestyle Perks


# extortion_powerful_vassal_trigger: Is this powerful vassal available for extortion?
# extortion_county_trigger: Is this County available for extortion?
# extortion_theocratic_vassal_trigger: Is this Theocratic Vassal available for extortion?

extortion_powerful_vassal_trigger = {
	is_available_ai_adult = yes
	NOR = {
		has_variable = was_recently_extorted
		has_opinion_modifier = {
			target = root
			modifier = extorted_me_opinion
		}
	}	
}


extortion_county_trigger = {
	tier = tier_county
	NOT = { this = root.capital_county }
	county_control >= medium_county_control
	NOR = {
		has_county_modifier = county_extorted_modifier
		has_variable = was_recently_extorted
	}
}

extortion_theocratic_vassal_trigger = {
	is_available_ai_adult = yes
	government_has_flag = government_is_theocracy
	NOR = {
		has_variable = was_recently_extorted
		has_opinion_modifier = {
			target = root
			modifier = extorted_me_opinion
		}
	}
}

extortion_vassal_at_large_trigger = {
	is_available_ai_adult = yes
	NOR = {
		has_variable = was_recently_extorted
		has_opinion_modifier = {
			target = root
			modifier = extorted_me_opinion
		}
	}
}

extortion_courtier_representative_trigger = {
	is_available_ai_adult = yes
	NOR = {
		is_close_family_of = root
		has_variable = was_recently_extorted
		has_opinion_modifier = {
			target = root
			modifier = extorted_me_opinion
		}
	}	
}

# We use a trigger so this can be enabled elsewhere easily.
can_challenge_rival_to_single_combat_trigger = {
	# Enabling perks.
	OR = {
		has_perk = stalwart_leader_perk
		culture = { has_cultural_parameter = can_duel_rivals }
	}
}

rival_single_combat_shown_and_not_invalid_trigger = {
	# Scope:actor must be able to fight personally.
	scope:actor = { can_start_single_combat_trigger = yes }
	# Scope:actor cannot challenge someone they have a ceasefire against.
	scope:actor = {
		NOT = { has_truce = scope:recipient }
	}
	# Scope:actor *definitely* cannot challenge someone they're at war with.
	scope:actor = {
		NOT = { is_at_war_with = scope:recipient }
	}
}
