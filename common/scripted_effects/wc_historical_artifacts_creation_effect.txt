create_artifact_terenas_crown_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }

	set_artifact_rarity_famed = yes
	
	# Create the artifact
	create_artifact = {	
		name = terenas_crown_name
		description = terenas_crown_desc
		type = helmet
		visuals = terenas_crown
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 364.08.08
			recipient = character:63146 #Lordain Menethil
			location = title:c_lordaeron.title_province # Lordaeron
		}
		modifier = terenas_crown
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = {
			name = terenas_crown
			value = yes
		}
		add_artifact_title_history = {
			target = title:k_lordaeron
			date = 364.08.08
		}
		save_scope_as = epic
	}
}
create_artifact_frostmourne_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = frostmourne_name
		description = frostmourne_desc
		type = sword
		template = frostmourne_template
		visuals = frostmourne
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = frostmourne_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = no_damage value = yes }
		set_variable = frostmourne
		set_variable = { name = frostmourne_level value = 0 }
	}
}
create_artifact_gorehowl_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = gorehowl_name
		description = gorehowl_desc
		type = axe
		template = gorehowl_template
		visuals = gorehowl
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = gorehowl_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = gorehowl value = yes }
	}
}

create_artifact_dark_crystal_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = dark_crystal_name
		description = dark_crystal_desc
		type = miscellaneous
		template = dark_crystal_template
		visuals = dark_crystal
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = dark_crystal_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = dark_crystal value = yes }
	}
}
# LIBRAM_TYPE = compassion, holiness, justice, protection, retribution
create_artifact_libram_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	create_artifact = {
		name = libram_$LIBRAM_TYPE$_name
		desc = libram_$LIBRAM_TYPE$_desc
		type = regalia
		template = libram_$LIBRAM_TYPE$_template
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = libram_$LIBRAM_TYPE$_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = libram_$LIBRAM_TYPE$ value = yes }
	}
}

create_artifact_hammer_of_twilight_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = hammer_of_twilight_name
		description = hammer_of_twilight_desc
		type = hammer
		template = hammer_of_twilight_template
		visuals = hammer_of_twilight
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created_before_history
		}
		modifier = hammer_of_twilight_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = { name = hammer_of_twilight value = yes }
	}
}