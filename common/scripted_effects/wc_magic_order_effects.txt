init_order_spells_effect = {
    add_to_global_variable_list = { name = order_spells target = flag:polymorph }
    add_to_global_variable_list = { name = order_spells target = flag:conjure_refreshment }
    add_to_global_variable_list = { name = order_spells target = flag:counterspell }
    add_to_global_variable_list = { name = order_spells target = flag:scry }
    add_to_global_variable_list = { name = order_spells target = flag:spellsteal }
    add_to_global_variable_list = { name = order_spells target = flag:haste }
    add_to_global_variable_list = { name = order_spells target = flag:chronomancy }
}

cast_polymorph_effect = {
    if = {
        limit = { exists = var:polymorph_recipient }
        var:polymorph_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:polymorph
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_trait = polymorph
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_polymorph_duration_days_value
                }
            }

            save_scope_value_as = {
                name = spell_dodge_chance
                value = wc_order_magic_resistance_dodge_value
            }

            random_list = {
                80 = {
                    add_trait = polymorph
                    save_scope_value_as = {
                        name = polymorph_prowess
                        value = {
                            value = prowess
                            subtract = 1
                            multiply = -1
                        }
                    }
                    trigger_event = {
                        id = wc_magic_spell_events.1001
                        days = wc_current_spell_duration
                    }
                    hidden_effect = {
                        add_prowess_skill = {
                            value = scope:polymorph_prowess
                        }
                        root = {
                            send_interface_toast = {
                                title = wc_spell_hit
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_polymorph_hit_tt
                            }
                        }
                    }
                }
                20 = {
                    custom_tooltip = wc_polymorph_resist_tt
                    modifier = {
                        is_alive = yes
                        add = scope:spell_dodge_chance
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_dodged
                                left_icon = scope:this_recipient
                                right_icon = root
                                custom_tooltip = wc_polymorph_dodge
                            }
                        }
                    }
                }
            }
        }
    }
}

cast_counterspell_effect = {
    if = {
        limit = { exists = var:counterspell_recipient }
        var:counterspell_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:counterspell
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_character_modifier = wc_counterspell_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_counterspell_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_counterspell_modifier
                days = wc_current_spell_duration
            }
        }
    }
}

cast_spellsteal_effect = {
    if = {
        limit = { exists = var:spellsteal_recipient }
        var:spellsteal_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:spellsteal
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        random_list = {
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_summon_fire_elemental_modifier }
                spellsteal_move_modifier_effect = { SPELL = summon_fire_elemental MODIFIER = wc_summon_fire_elemental_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_empowered_fire_elemental_modifier }
                spellsteal_move_modifier_effect = { SPELL = summon_fire_elemental MODIFIER = wc_empowered_fire_elemental_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_animate_rage_modifier }
                spellsteal_move_modifier_effect = { SPELL = none MODIFIER = wc_animate_rage_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_backdraft_proc }
                spellsteal_move_modifier_effect = { SPELL = backdraft MODIFIER = wc_backdraft_proc }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_flame_wall_good_modifier }
                spellsteal_move_modifier_effect = { SPELL = flame_wall MODIFIER = wc_flame_wall_good_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_pyromania_modifier }
                spellsteal_move_modifier_effect = { SPELL = none MODIFIER = wc_pyromania_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_cauterized_wound_modifier }
                spellsteal_move_modifier_effect = { SPELL = cauterize_wound MODIFIER = wc_cauterized_wound_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_counterspell_modifier }
                spellsteal_move_modifier_effect = { SPELL = counterspell MODIFIER = wc_counterspell_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_scry_modifier }
                spellsteal_move_modifier_effect = { SPELL = scry MODIFIER = wc_scry_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_haste_modifier }
                spellsteal_move_modifier_effect = { SPELL = haste MODIFIER = wc_haste_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_conjure_food_modifier }
                spellsteal_move_modifier_effect = { SPELL = conjure_refreshment MODIFIER = wc_conjure_food_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_conjure_drink_modifier }
                spellsteal_move_modifier_effect = { SPELL = conjure_refreshment MODIFIER = wc_conjure_drink_modifier }
            }
            0 = {
                spellsteal_has_modifier_modifier = { MODIFIER = wc_conjure_feast_modifier }
                spellsteal_move_modifier_effect = { SPELL = conjure_refreshment MODIFIER = wc_conjure_feast_modifier }
            }
        }
    }
}

spellsteal_move_modifier_effect = {
    remove_character_modifier = $MODIFIER$
    root = {
        if = {
            limit = {
                flag:$SPELL$ = flag:none
            }
            add_character_modifier = $MODIFIER$
        }
        else = {
            add_character_modifier = {
                modifier = $MODIFIER$
                days = wc_spell_$SPELL$_duration_days_value
            }
        }
    }
}

cast_scry_effect = {
    if = {
        limit = { exists = var:scry_recipient }
        var:scry_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:scry
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_character_modifier = wc_scry_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_scry_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_scry_modifier
                days = wc_current_spell_duration
            }
        }
    }
}

cast_haste_effect = {
    if = {
        limit = { exists = var:haste_recipient }
        var:haste_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:haste
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                scope:this_recipient = root
                NOT = {
                    has_character_modifier = wc_haste_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_haste_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_haste_modifier
                days = wc_current_spell_duration
            }
        }
        else_if = {
            limit = {
                NOT = {
                    has_character_modifier = wc_slow_modifier
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_haste_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_slow_modifier
                days = wc_current_spell_duration
            }
        }
    }
}

cast_conjure_refreshment_effect = {
    if = {
        limit = { exists = var:conjure_refreshment_recipient }
        var:conjure_refreshment_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:conjure_refreshment
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                root = {
                    OR = {
                        AND = {
                            has_variable = conjure_refreshment_rank
                            var:conjure_refreshment_rank < 3
                        }
                        AND = {
                            has_variable = current_spell_rank
                            NOT = { has_variable = conjure_refreshment_rank }
                            var:current_spell_rank < 3
                        }
                    }
                    OR = {
                        NOT = {
                            has_variable = selected_refreshment
                        }
                        var:selected_refreshment = flag:food
                    }
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_conjure_refreshment_duration_days_value
                }
            }
            hidden_effect = {
                add_character_modifier = {
                    modifier = wc_conjure_food_modifier
                    days = wc_current_spell_duration
                }
            }

            if = {
                limit = {
                    root = {
                        OR = {
                            AND = {
                                has_variable = conjure_refreshment_rank
                                var:conjure_refreshment_rank = 2
                            }
                            AND = {
                                has_variable = current_spell_rank
                                NOT = { has_variable = conjure_refreshment_rank }
                                var:current_spell_rank = 2
                            }
                        }
                    }
                }

                custom_tooltip = conjure_refreshment_tt2

                hidden_effect = {
                    every_courtier_or_guest = {
                        add_character_modifier = {
                            modifier = wc_conjure_food_modifier
                            days = wc_current_spell_duration
                        }
                    }
                }
            }
            else = {
                custom_tooltip = conjure_refreshment_tt1
            }
        }
        else_if = {
            limit = {
                root = {
                    OR = {
                        AND = {
                            has_variable = conjure_refreshment_rank
                            var:conjure_refreshment_rank < 3
                        }
                        AND = {
                            has_variable = current_spell_rank
                            NOT = { has_variable = conjure_refreshment_rank }
                            var:current_spell_rank < 3
                        }
                    }
                    var:selected_refreshment = flag:drink
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_conjure_refreshment_duration_days_value
                }
            }
            hidden_effect = {
                add_character_modifier = {
                    modifier = wc_conjure_drink_modifier
                    days = wc_current_spell_duration
                }
            }
            if = {
                limit = {
                    root = {
                        OR = {
                            AND = {
                                has_variable = conjure_refreshment_rank
                                var:conjure_refreshment_rank = 2
                            }
                            AND = {
                                has_variable = current_spell_rank
                                NOT = { has_variable = conjure_refreshment_rank }
                                var:current_spell_rank = 2
                            }
                        }
                    }
                }

                custom_tooltip = conjure_refreshment_tt2

                hidden_effect = {
                    every_courtier_or_guest = {
                        add_character_modifier = {
                            modifier = wc_conjure_drink_modifier
                            days = wc_current_spell_duration
                        }
                    }
                }
            }
            else = {
                custom_tooltip = conjure_refreshment_tt1
            }
        }
        else_if = {
            limit = {
                root = {
                    OR = {
                        AND = {
                            has_variable = conjure_refreshment_rank
                            var:conjure_refreshment_rank = 3
                        }
                        AND = {
                            has_variable = current_spell_rank
                            NOT = { has_variable = conjure_refreshment_rank }
                            var:current_spell_rank = 3
                        }
                    }
                }
            }

            custom_tooltip = conjure_refreshment_tt3

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_conjure_refreshment_duration_days_value
                }
            }
            add_character_modifier = {
                modifier = wc_conjure_feast_modifier
            }
            set_variable = {
                name = conjure_feast_duration
                value = scope:duration
            }
        }
    }
}

cast_chronomancy_effect = {
    if = {
        limit = { exists = var:chronomancy_recipient }
        var:chronomancy_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:chronomancy
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        if = {
            limit = {
                NOT = {
                    has_character_flag = chronomancy
                }
            }

            root = {
                save_temporary_scope_value_as = {
                    name = duration
                    value = wc_spell_chronomancy_duration_days_value
                }
            }

            chronomancy_store_modifier_effect = { MODIFIER = wc_conjure_feast_modifier SPELL = conjure_refreshment }
            chronomancy_store_modifier_effect = { MODIFIER = wc_conjure_drink_modifier SPELL = conjure_refreshment }
            chronomancy_store_modifier_effect = { MODIFIER = wc_conjure_food_modifier SPELL = conjure_refreshment }
            chronomancy_store_modifier_effect = { MODIFIER = wc_haste_modifier SPELL = haste }
            chronomancy_store_modifier_effect = { MODIFIER = wc_scry_modifier SPELL = scry }
            chronomancy_store_modifier_effect = { MODIFIER = wc_counterspell_modifier SPELL = counterspell }
            chronomancy_store_modifier_effect = { MODIFIER = wc_cauterized_wound_modifier SPELL = cauterize_wound }
            chronomancy_store_modifier_effect = { MODIFIER = wc_flame_wall_good_modifier SPELL = flame_wall }
            chronomancy_store_modifier_effect = { MODIFIER = wc_backdraft_proc SPELL = backdraft }
            chronomancy_store_modifier_effect = { MODIFIER = wc_empowered_fire_elemental_modifier SPELL = summon_fire_elemental }
            chronomancy_store_modifier_effect = { MODIFIER = wc_summon_fire_elemental_modifier SPELL = summon_fire_elemental }

            every_character_trait = {
                limit = {
                    NOT = {
                        has_trait_category = lifestyle
                    }
                }
                save_scope_as = this_trait
                scope:this_recipient = {
                    add_to_variable_list = {
                        name = chronomancy_trait_list
                        target = scope:this_trait
                    }
                }
            }
            trigger_event = {
                id = wc_magic_spell_events.3001
                days = wc_current_spell_minus_one_duration
            }
            add_character_flag = {
                flag = chronomancy_active
                days = wc_current_spell_duration
            }
        }
    }
}

chronomancy_store_modifier_effect = {
    if = {
        limit = {
            has_character_modifier = $MODIFIER$
        }
        add_to_variable_list = {
            name = chronomancy_modifier_list
            target = flag:$MODIFIER$
        }
        add_to_variable_list = {
            name = chronomancy_modifier_duration_list
            target = wc_spell_$SPELL$_duration_days_value
        }
    }
}

chronomancy_restore_modifier_effect = {
    remove_character_modifier = $MODIFIER$
    add_character_modifier = {
        modifier = $MODIFIER$
        days = wc_current_spell_duration
    }
}