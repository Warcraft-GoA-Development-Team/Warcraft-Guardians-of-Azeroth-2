
namespace = conqueror

# Become a Conqueror
conqueror.0001 = {
	type = character_event
	title = conqueror.0001.t
	desc = conqueror.0001.desc
	theme = war
	override_background = { reference = courtyard }
	left_portrait = {
		character = root
		animation = sword_coup_degrace
	}
	
	trigger = {
		is_independent_ruler = yes
		is_landed = yes
	}

	on_trigger_fail = {
		if = {
			limit = {
				has_character_flag = had_laamp_conq_decision
			}
			trigger_event = {
				id = conqueror.0001
				months = 4
			}
		}
	}

	immediate = {
		save_scope_as = root_scope
		if = { # Starter package!
			limit = {
				is_ai = yes
			}
			add_gold = 500
			add_prestige = 800
		}
	}

	option = {
		name = conqueror.0001.a
		flavor = conqueror_flavor
		if = {
			limit = {
				has_game_rule = no_conquerors_bonuses
			}
		}
		else = {
			add_trait = conqueror
			if = {
				limit = {
					has_game_rule = extreme_conquerors_bonuses
					is_ai = yes
				}
				add_character_modifier = {
					modifier = ai_extreme_conqueror_modifier
				}
			}
		}
		create_story = story_conqueror
		if = {
			limit = {
				any_vassal = { has_vassal_stance = glory_hound }
			}
			every_vassal = {
				limit = { has_vassal_stance = glory_hound }
				custom = every_glory_hound_vassal
				add_opinion = {
					modifier = approving_opinion
					target = root
					opinion = 20
				}
			}
		}
		if = {
			limit = {
				any_vassal = { has_vassal_stance = parochial }
			}
			every_vassal = {
				custom = every_parochial_vassal
				add_opinion = {
					modifier = disapproving_opinion
					opinion = -20
					target = root
				}
			}
		}
		ai_chance = {
			base = 100 
		}
	}

	option = { 
		name = conqueror.0001.b
		add_prestige = minor_prestige_loss
		if = {
			limit = {
				any_vassal = { has_vassal_stance = glory_hound }
			}
			every_vassal = {
				limit = { has_vassal_stance = glory_hound }
				custom = every_glory_hound_vassal
				add_opinion = {
					modifier = disapproving_opinion
					target = root
					opinion = -20
				}
			}
		}
		if = {
			limit = {
				any_vassal = { has_vassal_stance = glory_hound }
			}
			every_vassal = {
				custom = every_parochial_vassal
				add_opinion = {
					modifier = approving_opinion
					opinion = 20
					target = root
				}
			}
		}
		
		ai_chance = {
			base = 0 
		}
	}
}

# Stop being a conqueror
conqueror.0002 = {
	type = character_event
	title = conqueror.0002.t
	desc = {
		desc = conqueror.0002.intro
		random_valid = {
			triggered_desc = {
				trigger = {
					days_of_continuous_peace >= 3650 # 10 years
				}
				desc = conqueror.0002.peace
			}
			triggered_desc = {
				trigger = {
					prestige_level <= -1
				}
				desc = conqueror.0002.prestige
			}
			triggered_desc = {
				trigger = {
					debt_level >= 3
				}
				desc = conqueror.0002.debt_level
			}
			triggered_desc = {
				trigger = {
					AND = {
						exists = var:lost_wars
						var:lost_wars >= 3
					}
				}
				desc = conqueror.0002.lost_wars
			}
			triggered_desc = {
				trigger = {
					is_independent_ruler = no
				}
				desc = conqueror.0002.independence
			}
			triggered_desc = {
				trigger = {
					has_trait = incapable
				}
				desc = conqueror.0002.incapable
			}
			triggered_desc = {
				trigger = {
					highest_held_title_tier <= tier_county
				}
				desc = conqueror.0002.count
			}
		}
		desc = conqueror.0002.outro
	}
	theme = war
	override_background = { reference = courtyard }
	left_portrait = {
		character = root
		animation = sword_yield_start
	}
	
	trigger = {
	}

	immediate = {
		save_scope_as = root_scope
		every_owned_story = {
			limit = {
				story_type = story_conqueror
			}
			end_story = yes
		}
		add_character_flag = used_to_be_conqueror
	}

	option = {
		name = conqueror.0002.a
		flavor = conqueror_end_flavor
		remove_character_modifier = ai_extreme_conqueror_modifier
		remove_character_modifier = ai_weak_conqueror_modifier
		remove_trait = conqueror
		add_prestige_level = -2
		if = {
			limit = {
				any_vassal = { has_vassal_stance = glory_hound }
			}
			every_vassal = {
				limit = { has_vassal_stance = glory_hound }
				custom = every_glory_hound_vassal
				add_opinion = {
					modifier = disappointed_opinion
					target = root
					opinion = -50
				}
			}
		}
		ai_chance = {
			base = 100 
		}
	}
}

# Feed messages

# Small gift from County
conqueror.0100 = {
	hidden = yes

	trigger = {
		any_sub_realm_county = {
			exists = holder
			county_control >= 100
			county_opinion >= 0
			title_province = {
				available_loot >= 5
			}
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				exists = holder
				county_control >= 100
				county_opinion >= 0
				title_province = {
					available_loot >= 5
				}
			}
			save_scope_as = county_target
		}
		
		send_interface_message = {
			type = event_diplomacy_good_with_text
			title = conqueror_feed_county_gift
			desc = conqueror_feed_county_gift_desc
			left_icon = scope:county_target
			add_gold = scope:county_target.title_province.available_loot
		}
	}
}

# Good Knight Joins
conqueror.0200 = {
	hidden = yes

	trigger = {
		OR = {
			number_of_knights < max_number_of_knights
			any_knight = {
				prowess < invite_knights_decision_standard_value
			}
		}
	}

	immediate = {
		save_temporary_scope_as = host

		#Set up a list of provinces, one per duchy in the realm, find all relevant pool characters there
		every_realm_province = {
			if = {
				limit = {
					save_temporary_scope_as = potential_province
					NOT = {
						any_in_list = {
							list = pool_provinces
							county.duchy = scope:potential_province.county.duchy
						}
					}
				}
				add_to_temporary_list = pool_provinces
			}
		}

		every_in_list = {
			list = pool_provinces
			save_temporary_scope_as = pool_province

			every_pool_character = {
				province = scope:pool_province
				limit = {
					prowess >= invite_knights_decision_standard_value
					guest_knight_candidate_trigger = { HOST = root }
				}
				add_to_temporary_list = potential_knights
			}
		}

		#Randomize a good knight from the realm pool characters
		random_in_list = {
			list = potential_knights
			limit = { is_alive = yes }
			weight = {
				base = 1
				modifier = {
					add = {
						value = prowess
						subtract = invite_knights_decision_standard_value
						multiply = 5
					}
				}
			}
			save_scope_as = knight
		}

		#If no one was found, make one
		if = {
			limit = { NOT = { exists = scope:knight } }

			create_character = {
				location = root.capital_province
				template = pool_repopulate_prowess
				prowess = { invite_knights_decision_standard_value invite_knights_decision_upper_value }
				save_scope_as = knight
			}
		}
		if = {
			limit = {
				scope:knight = {
					NOT = { has_trait = tourney_participant }
					is_lowborn = no
				}
			}
			random_list = {
				40 = {}
				60 = {
					trigger = { has_dlc_feature = tours_and_tournaments }
					scope:knight = {
						add_trait = tourney_participant
						add_random_tourney_participant_level_effect = yes
					}
				}
			}
		}
		
		send_interface_message = {
			type = event_diplomacy_good_with_text
			title = conqueror_feed_knight_joins
			desc = conqueror_feed_knight_joins_desc
			left_icon = scope:knight
			add_courtier = scope:knight
			add_hook = {
			type = loyalty_hook
				target = scope:knight
			}
		}
	}
}

# Angry Vassal is Impressed
conqueror.0300 = {
	hidden = yes

	trigger = {
		any_vassal = {
			is_available_ai_adult = yes
			highest_held_title_tier >= tier_county
			NOR = {
				has_vassal_stance = parochial
				has_any_bad_relationship_with_character_trigger = { CHARACTER = root }
			}
			opinion = {
				target = root
				value <= -30
			}
		}
	}

	immediate = {
		random_vassal = {
			limit = {
				is_available_ai_adult = yes
				highest_held_title_tier >= tier_county
				NOR = {
					has_vassal_stance = parochial
					has_any_bad_relationship_with_character_trigger = { CHARACTER = root }
				}
				opinion = {
					target = root
					value <= -30
				}
			}
			save_scope_as = angry_vassal
		}
		
		send_interface_message = {
			type = event_diplomacy_good_with_text
			title = conqueror_feed_angry_vassal
			desc = conqueror_feed_angry_vassal_desc
			left_icon = scope:angry_vassal
			reverse_add_opinion = {
				modifier = impressed_opinion
				target = scope:angry_vassal
				opinion = 60
			}
		}
	}
}

# Courtier Gives you Gold
conqueror.0400 = {
	hidden = yes

	trigger = {
		any_courtier = {
			is_available_ai_adult = yes
			NOT = {
				has_any_bad_relationship_with_character_trigger = { CHARACTER = root }
			}
			gold >= 5
			ai_greed <= 20
		}
	}

	immediate = {
		random_courtier = {
			limit = {
				is_available_ai_adult = yes
				NOT = {
					has_any_bad_relationship_with_character_trigger = { CHARACTER = root }
				}
				gold >= 5
				ai_greed <= 20
			}
			save_scope_as = generous_courtier
		}
		
		send_interface_message = {
			type = event_diplomacy_good_with_text
			title = conqueror_feed_generous_courtier
			desc = conqueror_feed_generous_courtier_desc
			left_icon = scope:generous_courtier
			scope:generous_courtier = {
				pay_short_term_gold = {
					target = root
					gold = {
						value = root.medium_gold_value
						max = scope:generous_courtier.gold
					}
				}
			}
		}
	}
}

# Gain Siege Engineer
conqueror.0500 = {
	hidden = yes

	trigger = {
		NOT = {
			any_courtier = {
				count > 2
				has_trait = military_engineer
			}
		}
	}

	immediate = {
		recruit_terrain_specialist_effect = {
			SPECIALIST_TRAIT = military_engineer
			SPECIALIST_TEMPLATE_CHARACTER = open_commander_character
		}
		scope:new_commander = {
			if = {
				limit = {
					NOT = {
						has_trait = military_engineer
					}
				}
				add_trait = military_engineer
			}
		}
		send_interface_message = {
			type = event_diplomacy_good_with_text
			title = conqueror_feed_siege_engineer
			desc = conqueror_feed_siege_engineer_desc
			left_icon = scope:new_commander
			show_as_tooltip = {
				add_courtier = scope:new_commander
			}
		}
	}
}

# Proper Events
scripted_trigger happy_vassal_trigger = {
	is_available_ai_adult = yes
	is_landed = yes
	NOR = {
		has_any_bad_relationship_with_character_trigger = { CHARACTER = root }
		has_vassal_stance = parochial
		is_a_faction_member = yes
		is_at_war = yes
	}
	opinion = {
		target = root
		value >= -10
	}
}

scripted_trigger generous_vassal_trigger = {
	happy_vassal_trigger = yes
	gold >= root.medium_gold_value
	ai_greed <= 0
}

# Vassal Offers Gift
conqueror.1000 = {
	type = character_event
	title = conqueror.1000.t
	desc = conqueror.1000.desc
	theme = war
	cooldown = { years = 2 }
	override_background = { reference = courtyard }
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:generous_vassal
		animation = steward
	}
	
	trigger = {
		any_vassal_or_below = {
			generous_vassal_trigger = yes
		}
	}

	immediate = {
		save_scope_as = root_scope
		random_vassal_or_below = {
			limit = {
				generous_vassal_trigger = yes
			}
			save_scope_as = generous_vassal
		}
	}

	option = { 
		name = conqueror.1000.a
		
		scope:generous_vassal = {
			pay_long_term_gold = {
				target = root
				gold = root.medium_gold_value
			}
			add_opinion = {
				modifier = happy_opinion
				opinion = 10
				target = root
			}
		}
		
		ai_chance = {
			base = 100
		}
	}

	option = { 
		name = conqueror.1000.b
		
		trigger = {
			NOT = {
				has_character_modifier = mercenary_bolstering
			}
		}
		
		add_character_modifier = {
			modifier = mercenary_bolstering
			years = 20
		}
		
		scope:generous_vassal = {
			add_opinion = {
				modifier = happy_opinion
				opinion = 10
				target = root
			}
		}
		
		ai_chance = {
			base = 25
		}
	}

	option = { 
		name = conqueror.1000.c
		
		scope:generous_vassal = {
			add_opinion = {
				modifier = impressed_opinion
				opinion = 20
				target = root
			}
		}
		
		ai_chance = {
			base = 0 
		}
	}
}

# Vassal Offers Army
conqueror.1100 = {
	type = character_event
	title = conqueror.1100.t
	desc = conqueror.1100.desc
	theme = war
	cooldown = { years = 2 }
	override_background = { reference = courtyard }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = {
		character = root
		animation = eccentric
	}
	right_portrait = {
		character = scope:maa_leader
		animation = marshal
	}
	lower_right_portrait = scope:generous_vassal
	
	trigger = {
		any_vassal_or_below = {
			generous_vassal_trigger = yes
			NOT = { has_vassal_stance = parochial }
		}
	}

	immediate = {
		save_scope_as = root_scope
		random_vassal_or_below = {
			limit = {
				generous_vassal_trigger = yes
				NOT = { has_vassal_stance = parochial }
			}
			save_scope_as = generous_vassal
			save_scope_as = vassal
		}
		scope:generous_vassal = {
			create_character = {
				template = new_warrior_character
				location = root.location
				culture = scope:generous_vassal.culture
				faith = scope:generous_vassal.faith
				gender_female_chance = root_soldier_female_chance
				save_scope_as = maa_leader
			}
		}
		scope:maa_leader = { add_character_flag = wear_armor }
	}

	option = {
		name = conqueror.1100.a
		
		add_courtier = scope:maa_leader
		
		#Warcraft
		# if = {
		# 	limit = {
		# 		scope:generous_vassal.culture = { culture_has_archer_cavalry_maa = yes }
		# 	}
		# 	spawn_army = {
		# 		levies = event_troop_100_vassal_scale
		# 		men_at_arms = {
		# 			type = horse_archers
		# 			men = event_troop_50_vassal_scale
		# 		}
		# 		location = root.capital_province
		# 		name = event_troop_default_name
		# 	}
		# }
		if = {
			limit = {
				scope:generous_vassal.culture = { culture_has_heavy_cavalry_maa = yes }
			}
			spawn_army = {
				levies = event_troop_100_vassal_scale
				men_at_arms = {
					type = armored_horsemen
					men = event_troop_25_vassal_scale
				}
				location = root.capital_province
				name = event_troop_default_name
			}
		}
		else_if = {
			limit = {
				scope:generous_vassal.culture = { culture_has_light_cavalry_maa = yes }
			}
			spawn_army = {
				levies = event_troop_100_vassal_scale
				men_at_arms = {
					type = light_horsemen
					men = event_troop_50_vassal_scale
				}
				location = root.capital_province
				name = event_troop_default_name
			}
		}
		else_if = {
			limit = {
				scope:generous_vassal.culture = { culture_has_pikemen_maa = yes }
			}
			spawn_army = {
				levies = event_troop_100_vassal_scale
				men_at_arms = {
					type = pikemen_unit
					men = event_troop_50_vassal_scale
				}
				location = root.capital_province
				name = event_troop_default_name
			}
		}
		else_if = {
			limit = {
				scope:generous_vassal.culture = { culture_has_heavy_infantry_maa = yes }
			}
			spawn_army = {
				levies = event_troop_100_vassal_scale
				men_at_arms = {
					type = armored_footmen
					men = event_troop_50_vassal_scale
				}
				location = root.capital_province
				name = event_troop_default_name
			}
		}
		else_if = {
			limit = {
				scope:generous_vassal.culture = { culture_has_archer_maa = yes }
			}
			spawn_army = {
				levies = event_troop_100_vassal_scale
				men_at_arms = {
					type = bowmen
					men = event_troop_100_vassal_scale
				}
				location = root.capital_province
				name = event_troop_default_name
			}
		}
		else = {
			spawn_army = {
				levies = event_troop_100_vassal_scale
				men_at_arms = {
					type = light_footmen
					men = event_troop_100_vassal_scale
				}
				location = root.capital_province
				name = event_troop_default_name
			}
		}
		scope:generous_vassal = {
			add_opinion = {
				modifier = happy_opinion
				opinion = 10
				target = root
			}
		}
		
		ai_chance = {
			base = 100
		}
	}

	option = { 
		name = conqueror.1100.b
		
		trigger = {
			NOT = {
				has_character_modifier = maa_recruitment_boon
			}
		}
		
		add_courtier = scope:maa_leader
		
		add_character_modifier = {
			modifier = maa_recruitment_boon
			years = 20
		}
		
		scope:generous_vassal = {
			add_opinion = {
				modifier = happy_opinion
				opinion = 10
				target = root
			}
		}
		
		ai_chance = {
			base = 100
		}
	}

	option = { 
		name = conqueror.1100.c
		
		scope:generous_vassal = {
			add_opinion = {
				modifier = impressed_opinion
				opinion = 20
				target = root
			}
		}
		
		ai_chance = {
			base = 0 
		}
	}
	after = {
		scope:maa_leader = {
			remove_character_flag = wear_armor
		}
	}
}

# Glory Hounds are Happy
conqueror.1200 = {
	type = character_event
	title = conqueror.1200.t
	desc = conqueror.1200.desc
	theme = war
	cooldown = { years = 2 }
	override_background = { reference = courtyard }
	left_portrait = {
		character = scope:vassal_1
		animation = celebrate_axe
		camera = camera_event_right
	}
	right_portrait = {
		character = scope:vassal_2
		animation = throne_room_cheer_2
	}
	
	trigger = {
		any_vassal = {
			count >= 2
			is_physically_able_ai_adult = yes
			has_vassal_stance = glory_hound
		}
		NOT = {
			days_of_continuous_peace >= 730 # 2 years
		}
	}

	immediate = {
		save_scope_as = root_scope
		random_vassal = {
			limit = {
				is_physically_able_ai_adult = yes
				has_vassal_stance = glory_hound
			}
			save_scope_as = vassal_1
		}
		random_vassal = {
			limit = {
				is_physically_able_ai_adult = yes
				has_vassal_stance = glory_hound
				NOT = { this = scope:vassal_1 }
			}
			save_scope_as = vassal_2
		}
	}

	option = {
		name = conqueror.1200.a
		
		every_vassal = {
			limit = { has_vassal_stance = glory_hound }
			custom = every_glory_hound_vassal
			add_opinion = {
				modifier = war_war_war_opinion
				target = root
				opinion = 50
			}
		}
		
		ai_chance = {
			base = 25
		}
	}

	option = { 
		name = conqueror.1200.b
		
		trigger = {
			NOT = {
				has_character_modifier = glory_hound_contribution
			}
		}
		
		add_character_modifier = {
			modifier = glory_hound_contribution
			years = 20
		}
		
		every_vassal = {
			limit = { has_vassal_stance = glory_hound }
			custom = every_glory_hound_vassal
			add_opinion = {
				modifier = war_war_war_opinion
				target = root
				opinion = 15
			}
		}
		
		ai_chance = {
			base = 100
		}
	}
}

# Peasants Send a Gift
conqueror.1300 = {
	type = character_event
	title = conqueror.1300.t
	desc = conqueror.1300.desc
	theme = war
	cooldown = { years = 2 }
	override_background = { reference = courtyard }
	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:portrait_peasant
		animation = hunting_carcass_start
		hide_info = yes
	}
	
	trigger = {
		any_sub_realm_barony = {
			exists = holder
			county = {
				county_control >= 100
				county_opinion >= 0
			}
			title_province = {
				available_loot >= 5
			}
		}
	}

	immediate = {
		save_scope_as = root_scope
		random_sub_realm_barony = {
			limit = {
				exists = holder
				county = {
					county_control >= 100
					county_opinion >= 0
				}
				title_province = {
					available_loot >= 5
				}
			}
			save_scope_as = peasant_barony
		}
		if = {
			limit = {
				exists = scope:peasant_barony.title_province
				any_pool_character = {
					province = scope:peasant_barony.title_province
					is_available_ai_adult = yes
					has_no_particular_noble_roots_trigger = yes
					culture = scope:peasant_barony.title_province.culture
				}
			}
			random_pool_character = {
				province = scope:peasant_barony.title_province
				limit = {
					is_available_ai_adult = yes
					has_no_particular_noble_roots_trigger = yes
					culture = scope:peasant_barony.title_province.culture
				}
				save_scope_as = portrait_peasant
			}
		}
		else = {
			scope:peasant_barony.holder = {
				create_character = {
					template = generic_peasant_character
					location = scope:peasant_barony.title_province
					culture = scope:peasant_barony.title_province.culture
					faith = scope:peasant_barony.title_province.faith
					gender_female_chance = root_soldier_female_chance
					save_scope_as = portrait_peasant
				}
			}
		}
	}

	option = {
		name = conqueror.1300.a
		
		add_gold = {
			value = scope:peasant_barony.title_province.available_loot
			multiply = 3
		}
		
		ai_chance = {
			base = 100
		}
	}

	option = { 
		name = conqueror.1300.b
		
		trigger = {
			NOT = {
				has_character_modifier = peasant_supplies
			}
		}
		
		add_gold = scope:peasant_barony.title_province.available_loot
		
		add_character_modifier = {
			modifier = peasant_supplies
			years = 20
		}
		
		ai_chance = {
			base = 100
		}
	}

	option = { 
		name = conqueror.1300.c
		
		trigger = {
			NOT = {
				has_character_modifier = peasant_draft
			}
		}
		
		add_gold = scope:peasant_barony.title_province.available_loot
		
		add_character_modifier = {
			modifier = peasant_draft
			years = 20
		}
		
		ai_chance = {
			base = 100
		}
	}
}

# Positive
# Someone offers diplomatic assistance: Invite Claimant acceptance boon

# Boon in long wars; gold, soldiers, joining vassal
