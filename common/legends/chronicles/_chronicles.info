<key> = {
	# Dynamic description for the name of a legend with this chronicle
	# Defaults to legend_chronicle_<key> if not set
	# root = legend/seed owner
	# scope:<property> = scope object for that property
	name = {
		first_valid = {

		}
	}
	
	# Dynamic description for the description of a legend with this chronicle
	# Defaults to legend_chronicle_<key>_desc if not set
	# root = legend/seed owner
	# scope:<property> = scope object for that property
	description = {
		first_valid = {

		}
	}

	properties = {
		# Multiple properties can be read in, the key is arbitrary, it is how it will be referred to later
		# The right hand side is the type of scope object that should be stored
		<key> = <scope_type>
	}

	# Every localization key for the chapters has the following scopes
	# root = the legend itself
	# scope:<property> = scope object for that property
	chapters = {
		<key> # Name for this chapter, will not be filled
		<key> = <loc_key> # Name for this chapter and its default localization key
	}

	impact = {
		# Modifier applied to any province with this legend
		province_modifier = {
			<modifier>
		}

		# Modifier applied to the county if its county capital province has adopted this legend
		county_modifier = {
			<modifier>
		}

		# Modifier applied to the owner of the legend
		owner_modifier = {
			<modifier>
		}

		# Modifier applied to every promoter of the legend
		promoter_modifier = {
			<modifier>
		}

		# Effect run when this legend is completed/ended by its owner
		on_complete = {
			<effect>
		}
	}
}

