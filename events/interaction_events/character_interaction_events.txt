####################
# MISC INTERACTIONS
####################

namespace = char_interaction

# Offer Vassalization Response: Accepted
char_interaction.0001 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = char_interaction.0001.desc
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { offer_vassalization_interaction_effect = yes }
	}

	option = {
		name = EXCELLENT
	}
}

# Offer Vassalization Response: Refused
char_interaction.0002 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0002.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0002.a
	}
}

# Offer Fealty Response: Accepted
char_interaction.0010 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = char_interaction.0010.desc
		
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { offer_fealty_interaction_effect = yes }
	}

	option = {
		name = char_interaction.0010.a
	}
}

# Offer Fealty Response: Refused
char_interaction.0011 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0011.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0011.a
	}
}

# Disinherited by the Dynast
char_interaction.0020 = {
	type = letter_event
	opening = {
		desc = char_interaction.0020.opening
	}
	desc = char_interaction.0020.desc
	sender = {
		character = scope:actor
		animation = dismissal
	}

	option = {
		name = char_interaction.0020.a
		show_as_tooltip = {
			add_trait = disinherited
		}
	}
}

# Inheritance Restored by the Dynast
char_interaction.0030 = {
	type = letter_event
	opening = {
		desc = char_interaction.0030.opening
	}
	desc = char_interaction.0030.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0030.a
		show_as_tooltip = {
			remove_trait = disinherited
		}
	}
}

# Denounced by the Dynast
char_interaction.0040 = {
	type = letter_event
	opening = {
		desc = char_interaction.0020.opening
	}
	desc = char_interaction.0040.desc
		
	sender = {
		character = scope:actor
		animation = dismissal
	}

	option = {
		name = char_interaction.0040.a
		show_as_tooltip = {
			add_trait = denounced
		}
	}
}

# Forgiven by the Dynast
char_interaction.0050 = {
	type = letter_event
	opening = {
		desc = char_interaction.0030.opening
	}
	desc = char_interaction.0050.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0050.a
		show_as_tooltip = {
			remove_trait = denounced
		}
	}
}

# Title Claimed by the Dynast
char_interaction.0060 = {
	type = letter_event
	opening = {
		desc = char_interaction.0020.opening
	}
	desc = char_interaction.0060.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0060.a
		show_as_tooltip = {
			scope:actor = {
				add_unpressed_claim = scope:target
			}
		}
	}
}

# Wars ended by the Dynast - attacker
char_interaction.0070 = {
	type = letter_event
	opening = {
		desc = char_interaction.0070.opening
	}
	desc = char_interaction.0070.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0070.a
		show_as_tooltip = {
			scope:recipient = {
				every_character_war = {
					limit = {
						primary_attacker = scope:recipient
						primary_defender.dynasty = scope:recipient.dynasty
					}
					end_war = white_peace
				}
			}
		}
	}
}

# Wars ended by the Dynast - defender(s)
char_interaction.0071 = {
	type = letter_event
	opening = {
		desc = char_interaction.0070.opening
	}
	desc = char_interaction.0071.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0071.a
	}
}

# Education Response: Rejection because the guardian is no longer available
char_interaction.0078 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = {
					scope:guardian = scope:actor
			    }
			    desc = char_interaction.0078.desc_them
			}
			desc = char_interaction.0078.desc
		}
	}
		
	sender = scope:actor

	immediate = {
		
	}

	option = {
		name = char_interaction.0078.a
	}
}

# Education Response: Rejection because the guardian is no longer available
char_interaction.0079 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = {
					scope:guardian = scope:actor
			    }
			    desc = char_interaction.0079.desc_them
			}
			desc = char_interaction.0079.desc
		}
	}
		
	sender = scope:recipient

	immediate = {
		scope:recipient = {
			add_opinion = {
				target = scope:actor
				modifier = insult_opinion
				opinion = -10
			}
		}
	}

	option = {
		name = char_interaction.0079.a
	}
}

# Education Response: Accepted
char_interaction.0080 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					root = scope:ward
					scope:recipient = scope:guardian
				}
				desc = char_interaction.0080.desc_guardian_self_ward
			}
			triggered_desc = {
				trigger = { scope:recipient = scope:guardian }
				desc = char_interaction.0080.desc_guardian_self
			}
			triggered_desc = {
				trigger = { scope:recipient = scope:guardian_liege }
				desc = char_interaction.0080.desc_guardian
			}
			triggered_desc = {
				trigger = {
					this = scope:guardian
					scope:recipient = scope:ward_liege
				}
				desc = char_interaction.0080.desc_self
			}
			desc = char_interaction.0080.desc
		} 
	}
		
	sender = scope:recipient

	immediate = {
		if = {
			limit = {
				scope:education_hook = yes
				has_usable_hook = scope:recipient
			}
			use_hook = scope:recipient
		}
		if = {
			limit = {
				scope:ward.location != scope:guardian.location
			}
			hidden_effect = { educate_child_interaction_effect = yes }
			if = {
				limit = {
					scope:guardian = { is_landed = yes }
					scope:ward = { is_landed = no }
				}
				custom_tooltip = ward_leaves_for_guardian_tt
			}
			else_if = {
				limit = {
					scope:ward = { is_landed = yes }
					scope:guardian = { is_landed = no }
				}
				custom_tooltip = guardian_leaves_for_ward_tt
			}
		}
		else = { educate_child_interaction_effect = yes }
		#The event is used in two interactions, what tooltip should we show?
		if = {
			limit = { exists = scope:offer_guardianship_interaction }
			if = {
				limit = { this = scope:secondary_actor }
				stress_impact = { shy = minor_stress_impact_gain }
			}
		}
		else = {
			stress_impact = {
				paranoid = minor_stress_impact_gain
			}
		}
	}

	option = {
		name = EXCELLENT
	}
}

# Education Response: Refused
char_interaction.0081 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0081.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0081.a
	}
}

scripted_effect ward_guardian_arrival_tooltip_effect = {
	show_as_tooltip = {
		if = {
			limit = {
				scope:guardian = { is_landed = yes }
			}
			scope:ward = { visit_court_of = scope:guardian }
		}
		else_if = {
			limit = {
				scope:ward = { is_landed = yes }
			}
			scope:guardian = { visit_court_of = scope:ward }
		}
		else = {
			scope:ward = { visit_court_of = scope:guardian.host }
		}
		scope:ward = { set_relation_guardian = scope:guardian }
		guardian_add_opinion_effect = {
			GUARDIAN = scope:guardian
			WARD_LIEGE = scope:ward_liege
			WARD = scope:ward
		}
	}
}

# Education: Ward/Liege - guardian arrives
char_interaction.0082 = {
	type = character_event
	title = char_interaction.0082.t
	desc = {
		desc = char_interaction.0082.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { this = scope:ward }
				}
				desc = char_interaction.0082.desc.liege
			}
			desc = char_interaction.0082.desc
		}
	}
	theme = education
	override_background = { reference = courtyard }
	left_portrait = {
		character = scope:guardian
		animation = admiration
	}
	right_portrait = {
		character = scope:ward
	}

	trigger = { is_ai = no }

	immediate = { ward_guardian_arrival_tooltip_effect = yes }

	option = {
		name = char_interaction.0082.a
	}
}

# Education: Guardian/Host - ward arrives
char_interaction.0083 = {
	type = character_event
	title = char_interaction.0083.t
	desc = {
		desc = char_interaction.0083.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					NOT = { this = scope:guardian }
				}
				desc = char_interaction.0083.desc.host
			}
			desc = char_interaction.0083.desc
		}
	}
	theme = education
	override_background = { reference = courtyard }
	left_portrait = {
		character = scope:guardian
		animation = admiration
	}
	right_portrait = {
		character = scope:ward
	}

	trigger = { is_ai = no }

	immediate = { ward_guardian_arrival_tooltip_effect = yes }

	option = {
		name = char_interaction.0083.a
	}
}

# Education: Liege - letter confirming ward's arrival
char_interaction.0084 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = char_interaction.0084.desc
		
	sender = scope:guardian

	trigger = { is_ai = no }

	immediate = { ward_guardian_arrival_tooltip_effect = yes }

	option = {
		name = char_interaction.0084.a
	}
}

# Education stopped
char_interaction.0090 = {
	type = letter_event
	opening = {
		desc = char_interaction.0020.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:actor = {
						OR = {
							this = scope:ward
							AND = {
								exists = scope:ward_2
								this = scope:ward_2
							}
						}
					}
				}
				desc = char_interaction.0090.from_ward.desc
			}
			triggered_desc = {
				trigger = { exists = scope:ward_2 }
				desc = char_interaction.0090.two_wards.desc
			}
			desc = char_interaction.0090.one_ward.desc
		}
	}
	
		
	sender = scope:actor

	immediate = {
		if = {
			limit = {
				scope:actor = {
					OR = {
						this = scope:ward
						AND = {
							exists = scope:ward_2
							this = scope:ward_2
						}
					}
				}
			}
			scope:actor = {
				capital_province = { barony = { save_scope_as = capital } }
			}
		}
	}

	option = {
		name = char_interaction.0090.a

		show_as_tooltip = {
			scope:guardian = { remove_relation_ward = scope:ward }
			scope:ward = { return_to_court = yes }
		}
		if = {
			limit = { exists = scope:ward_2 }
			remove_guardian_effect = {
				GUARDIAN = scope:guardian
				WARD = scope:ward_2
				RETURN_WARD = yes
				HIDE_OPINION = no
			}
		}
	}
}

# Gift Sent
char_interaction.0100 = {
	type = letter_event
	opening = {
		desc = char_interaction.0030.opening
	}
	desc = char_interaction.0100.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0100.a

		show_as_tooltip = {
			scope:actor = {
				pay_short_term_gold = {
					gold = 50
					target = scope:recipient
				}
			}
			scope:recipient = {
				add_opinion = {
					target = scope:actor
					modifier = gift_opinion
					opinion = 20
				}
			}
		}
	}
}

# Title Granted
char_interaction.0110 = {
	type = letter_event
	opening = {
		desc = char_interaction.0030.opening
	}
	desc = char_interaction.0110.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0110.a
	}
}

# Designated Heir
char_interaction.0120 = {
	type = letter_event
	opening = {
		desc = char_interaction.0030.opening
	}
	desc = char_interaction.0120.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0120.a
	}
}

# Ransom Offer Response: Refused
char_interaction.0131 = {
	type = letter_event
	opening = {
		desc = char_interaction.0131.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:secondary_recipient = scope:recipient
				}
				desc = char_interaction.0131.desc_personal
			}
			desc = char_interaction.0131.desc
		}
	}
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0131.a
	}
}

# Pay Ransom Response: Accepted
char_interaction.0140 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = char_interaction.0140.desc
	
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { ransom_interaction_effect = yes }
	}

	option = {
		name = char_interaction.0130.a
	}
}

# Pay Ransom Response: Refused
char_interaction.0141 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0141.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0141.a
	}
}

# Pay Personal Ransom Response: Accepted
char_interaction.0150 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = char_interaction.0150.desc
	
	sender = scope:recipient

	immediate ={
		show_as_tooltip = { ransom_interaction_effect = yes }
	}

	option = {
		name = char_interaction.0130.a
	}
}

# Pay Personal Ransom Response: Refused
char_interaction.0151 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0151.desc
		
	sender = {
		character = scope:recipient
		animation = schadenfreude
	}

	option = {
		name = char_interaction.0141.a
	}
}

# (Conditional) Release from Prison: Accepted
char_interaction.0160 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0160.desc
	
	sender = scope:recipient

	option = {
		name = {
			trigger = {
				scope:recipient = {
					OR = {
						is_courtier_of = root
						is_foreign_court_or_pool_guest_of = root
						scope:recruit = yes
					}
					scope:banish = no
				}
			}
			text = char_interaction.0160.a.courtier
		}
		name = {
			text = char_interaction.0160.a
		}
	}
}

# (Conditional) Release from Prison: Refused
char_interaction.0161 = {
	type = letter_event
	opening = {
		desc = char_interaction.0131.opening
	}
	desc = char_interaction.0161.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0131.a
	}
}

# Executed! (Player by AI)
char_interaction.0170 = {
	type = character_event
	title = char_interaction.0170.t
	theme = death
	override_background = {
		reference = gallows
	}

	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:execution_devour = yes
				}
				desc = char_interaction.0170.desc_devoured
			}
			triggered_desc = {
				trigger = {
					scope:execution_burned = yes
				}
				desc = char_interaction.0170.desc_burned
			}
			triggered_desc = {
				trigger = {
					scope:execution_public = yes
				}
				desc = char_interaction.0170.desc_public
			}
			desc = char_interaction.0170.desc
		}
	}
	
	left_portrait = {
		character = scope:actor
		triggered_animation = {
			trigger = {
				scope:execution_devour = yes
			}
			animation = ecstasy
		}
		triggered_animation = {
			trigger = {
				NOT = { scope:execution_devour = yes }
			}
			animation = schadenfreude
		}
	}
	right_portrait = {
		trigger = {
			exists = scope:executioner
		}
		character = scope:executioner
		animation = schadenfreude
	}

	immediate = {
		play_music_cue = mx_cue_stress
		random_court_position_holder = {
			type = executioner_court_position
			limit = { is_physically_able = yes }
			save_scope_as = executioner
		}
	}

	option = {
		name = {
			trigger = { 
				culture = { has_cultural_tradition = tradition_life_is_just_a_joke }
			}
			text = char_interaction.0170.life_is_just_a_joke.a
		}
		name = char_interaction.0170.a
		if = {
			limit = {
				culture = { has_cultural_tradition = tradition_life_is_just_a_joke }
			}
			stress_impact = {
				base = massive_stress_loss
			}
		}
		execute_prisoner_effect = {
			VICTIM = scope:recipient
			EXECUTIONER = scope:actor
		}
	}
}

# Executed!
char_interaction.0171 = {
	type = character_event
	title = char_interaction.0170.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:execution_devour = yes
				}
				desc = char_interaction.0170.desc_devoured
			}
			triggered_desc = {
				trigger = {
					scope:execution_burned = yes
				}
				desc = char_interaction.0170.desc_burned
			}
			desc = char_interaction.0170.desc
		}
	}
	
	left_portrait = scope:actor
	theme = death
	override_background = {
		reference = gallows
	}

	immediate = {
		play_music_cue = mx_cue_stress
	}

	option = {
		name = {
			trigger = { 
				culture = { has_cultural_tradition = tradition_life_is_just_a_joke }
			}
			text = char_interaction.0170.life_is_just_a_joke.a
		}
		name = char_interaction.0170.a
		if = {
			limit = {
				culture = { has_cultural_tradition = tradition_life_is_just_a_joke }
			}
			stress_impact = {
				base = massive_stress_loss
			}
		}
		show_as_tooltip = {
			execute_prisoner_effect = {
				VICTIM = scope:recipient
				EXECUTIONER = scope:actor
			}
		}
	}
}

# Notification that you have been converted to another Faith
char_interaction.0180 = {
	type = letter_event
	opening = {
		desc = char_interaction.0070.opening
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = root.house.house_head
					scope:actor = root.house.house_head
				}
				desc = char_interaction.0180.desc
			}
			desc = char_interaction.0180.desc.liege
		}
	}
		
	sender = scope:actor

	option = {
		name = char_interaction.0180.a
	}
}

# House Head Conversion: Accepted
char_interaction.0181 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0181.desc
	
	sender = scope:recipient

	option = {
		name = EXCELLENT
		show_as_tooltip = { demand_conversion_interaction_effect = yes }
	}
}

# House Head Conversion: Refused
char_interaction.0182 = {
	type = letter_event
	opening = {
		desc = char_interaction.0131.opening
	}
	desc = char_interaction.0182.desc
		
	sender = {
		character = scope:recipient
		animation = anger
	}

	option = {
		name = char_interaction.0182.a
	}
}

# Conversion: Accepted
char_interaction.0190 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0190.desc
	
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { demand_conversion_player_ruler_interaction_effect = yes }
	}

	option = {
		name = EXCELLENT
	}
}

# Conversion: Refused
char_interaction.0191 = {
	type = letter_event
	opening = {
		desc = char_interaction.0131.opening
	}
	desc = char_interaction.0191.desc
		
	sender = {
		character = scope:recipient
		animation = anger
	}

	immediate = {
		show_as_tooltip = {
			scope:actor = {
				#To show that you get an imprisonment reason against them if it's a crime to refuse
				if = {
					limit = {
						refusing_conversion_is_crime_trigger = {
							CHARACTER = scope:recipient
						}
					}
					add_opinion = {
						target = scope:recipient
						modifier = illegal_resisted_conversion_opinion
						years = 15
					}
				}
			}
		}
	}

	option = {
		name = char_interaction.0182.a
	}
}

# Title Revoked
char_interaction.0200 = {
	type = letter_event
	opening = {
		desc = char_interaction.0020.opening
	}
	desc = char_interaction.0200.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0200.a
	}
}

# Title Revocation Accepted
char_interaction.0199 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0199.desc
		
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { revoke_title_interaction_effect = yes }
	}

	option = {
		name = char_interaction.0199.a
	}
}

# Title Revocation refused.
#Removed, desc used in war CB loc.

# Vassal Grant: Refused
char_interaction.0211 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0211.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0211.a
	}
}

# Vassal Retraction: Accepted
char_interaction.0220 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0220.desc
		
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { retract_vassal_interaction_effect = yes }
	}

	option = {
		name = char_interaction.0220.a
	}
}

# Vassal Retraction: Refused
#Removed, desc used in war CB loc, used to be: char_interaction.0221

# Vassal Imprison Attempt failed.
char_interaction.0230 = {
	type = character_event
	title = char_interaction.0230.title
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = { scope:recipient = { is_councillor_of = scope:actor } }
			    desc = char_interaction.0230.desc.courtier_court_chaplain_stayed
			}
			desc = char_interaction.0230.desc.courtier
		}
	}
	theme = prison
		
	right_portrait = {
		character = scope:recipient
		animation = anger
	}

	immediate = {
		show_as_tooltip = {
			#Remove them as guardian for any child
			if = {
				limit = {
					any_in_list = {
						list = ward_children
						count >= 1
					}
				}
				every_in_list = {
					list = ward_children
					remove_guardian_effect = {
						GUARDIAN = scope:recipient
						WARD = this
						RETURN_WARD = yes
						HIDE_OPINION = no
					}
				}
			}
		}
	}

	option = {
		name = {
			text = char_interaction.0230.a
		}
		name = {
			trigger = { scope:recipient = { is_councillor_of = scope:actor } }
			text = char_interaction.0230.a_court_chaplain_stayed
		}
	}
}
#Vassal Imprison Attempt succeeded.
char_interaction.0231 = {
	type = character_event
	title = char_interaction.0231.title
	desc = { 
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:recipient = { is_in_prison_type = house_arrest }
				}
				desc = char_interaction.0231.desc_house_arrest
			}
			desc = char_interaction.0231.desc_prison
		}
	}
		
	right_portrait = {
		character = scope:recipient
		animation = sadness
	}
	theme = prison

	option = {
		name = char_interaction.0231.a
	}
}

#Player called to war by rebellious vassal. (vs imprisonment)
char_interaction.0232 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0232.desc
		
	sender = {
		character = scope:recipient
		animation = anger
	}

	option = {
		name = char_interaction.0232.a
		scope:recipient = {
			every_character_war = {
				limit = {
					using_cb = refused_liege_demand_war
					casus_belli = {
						primary_attacker = scope:recipient
						primary_defender = scope:actor
					}
				}
				hidden_effect = {
					set_called_to = root
				}
				add_attacker = root
			}
			scope:recipient = {
				add_opinion = {
					target = root
					modifier = helped_me_agaisnt_tyrant_opinion
				}
			}
		}
	}
	option = {
		name = char_interaction.0232.b
		scope:recipient = {
			add_opinion = {
				target = root
				modifier = sided_with_tyrant_opinion
			}
		}
	}
}

# Vassal Imprisoned automatically
char_interaction.0233 = {
	type = letter_event
	opening = {
		desc = char_interaction.0020.opening
	}
	desc = char_interaction.0233.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0233.a
	}
}

# Negotiate Alliance - Auto-Accepted
char_interaction.0234 = {
	type = letter_event
	opening = {
		desc = char_interaction.0070.opening
	}
	desc = char_interaction.0234.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0234.a
	}
}
# Negotiate Alliance - Accepted
char_interaction.0235 = {
	type = letter_event
	opening = {
		desc = char_interaction.0010.opening
	}
	desc = char_interaction.0235.desc
		
	sender = scope:recipient

	immediate = {
		show_as_tooltip = {
			custom_tooltip = char_interaction.0235.tooltip

			if = {
				limit = { scope:hook = yes }
				use_hook = scope:recipient
			}

			stress_impact = {
				shy = minor_stress_impact_gain
			}

			if = {
				limit = {
					exists = scope:perk_alliance_interaction
				}
				scope:recipient = {
					add_opinion = {
						modifier = perk_negotiated_alliance_opinion
						target = scope:actor
					}
				}
			}
		}
	}

	option = {
		name = char_interaction.0235.a
	}
}

# Negotiate Alliance - Refused (Also used when you're refused to join a war)
char_interaction.0236 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0236.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0236.a
	}
}

# Ask for Pardon - Auto accepted
char_interaction.0240 = {
	type = letter_event
	opening = {
		desc =  call_ally.0001.opening
	}
	desc = char_interaction.0240.desc
		
	sender = scope:actor

	option = {
		name = char_interaction.0240.a
	}
}

# Your Contract was changed
char_interaction.0250 = {
	type = letter_event
	opening = {
		desc = char_interaction.0070.opening
	}
	desc = char_interaction.0250.desc
		
	sender = scope:actor
	
	trigger = {
		scope:actor = {
			has_usable_hook = scope:recipient
		}
	}

	immediate = {
		apply_ai_vassal_obligation_liege_most_desired = yes
		scope:actor = {
			use_hook = scope:recipient
		}
	}

	option = {
		name = char_interaction.0250.a
	}
}

# Vassal lowered their contract
char_interaction.0251 = {
	type = letter_event
	opening = {
		desc = char_interaction.0070.opening
	}
	desc = char_interaction.0251.desc
		
	sender = scope:actor
	
	trigger = {
		scope:actor = {
			has_usable_hook = scope:recipient
		}
	}

	immediate = {
		scope:actor = {
			apply_ai_vassal_obligation_vassal_most_desired = yes
			set_vassal_contract_modification_blocked = yes
			use_hook = scope:recipient
		}
	}

	option = {
		name = char_interaction.0250.a
	}
}

# Diarch Title Revoked Auto-Accepted
char_interaction.0261 = {
	type = letter_event
	opening = char_interaction.0020.opening
	desc = char_interaction.0261.desc
	sender = scope:actor

	immediate = {
		show_as_tooltip = { revoke_title_interaction_effect = yes }
	}

	option = { name = char_interaction.0261.a }
}

# Diarch Title Revocation Accepted
char_interaction.0262 = {
	type = letter_event
	opening = char_interaction.0001.opening
	desc = char_interaction.0262.desc
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { revoke_title_interaction_effect = yes }
	}

	option = { name = char_interaction.0262.a }
}

# Diarch Title Revocation refused
char_interaction.0263 = {
	type = letter_event
	opening = char_interaction.0020.opening
	desc = char_interaction.0263.desc
		
	sender = scope:recipient

	immediate = {
		# Nab a scope for the AI weight check.
		scope:recipient = { save_scope_as = target_military }
	}

	# Acquiesce.
	option = {
		name = char_interaction.0263.a

		# Declare them a traitor.
		scope:recipient = {
			send_interface_toast = {
				title = char_interaction.0263.a.tt
				left_icon = scope:actor
				right_icon = scope:diarch_liege
				diarch_declare_recipient_criminal_effect = yes
			}
		}

		ai_chance = {
			# We keep this low but specified so that it's easy to out-weigh it if necessary.
			base = 1
		}
	}
	# _Time for war_.
	option = {
		name = char_interaction.0263.b
		trigger = { is_landed = yes }

		# To war!
		diarch_declare_claim_war_effect = yes

		ai_chance = {
			# Opt out of this by default...
			base = 0
			# ... but don't necessarily stay that way.
			diarch_evaluate_worth_of_war_modifier = yes
		}
	}
}

# Diarch Title Retracted Auto-Accepted
char_interaction.0271 = {
	type = letter_event
	opening = char_interaction.0020.opening
	desc = char_interaction.0271.desc
	sender = scope:actor

	immediate = {
		show_as_tooltip = { retract_vassal_interaction_effect = yes }
	}

	option = { name = char_interaction.0271.a }
}

# Diarch Title Retraction Accepted
char_interaction.0272 = {
	type = letter_event
	opening = char_interaction.0001.opening
	desc = char_interaction.0272.desc
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { retract_vassal_interaction_effect = yes }
	}

	option = { name = char_interaction.0272.a }
}

# Diarch Title Retraction refused
char_interaction.0273 = {
	type = letter_event
	opening = char_interaction.0020.opening
	desc = char_interaction.0273.desc
		
	sender = scope:recipient

	immediate = {
		# Nab a scope for the AI weight check.
		scope:recipient = { save_scope_as = target_military }
	}

	# Acquiesce.
	option = {
		name = char_interaction.0273.a

		# Declare them a traitor.
		scope:recipient = {
			send_interface_toast = {
				title = char_interaction.0273.a.tt
				left_icon = scope:actor
				right_icon = scope:diarch_liege
				diarch_declare_recipient_criminal_effect = yes
			}
		}

		ai_chance = {
			# We keep this low but specified so that it's easy to out-weigh it if necessary.
			base = 1
		}
	}
	# _Time for war_.
	option = {
		name = char_interaction.0273.b
		trigger = { is_landed = yes }

		# To war!
		diarch_declare_vassalisation_war_effect = yes

		ai_chance = {
			# Opt out of this by default...
			base = 0
			# ... but don't necessarily stay that way.
			diarch_evaluate_worth_of_war_modifier = yes
		}
	}
}

# Diarch Imprison Auto-Accepted
char_interaction.0281 = {
	type = letter_event
	opening = char_interaction.0020.opening
	desc = char_interaction.0281.desc
	sender = scope:actor

	immediate = {
		show_as_tooltip = { diarch_imprison_general_accept_effect = yes }
	}

	option = { name = char_interaction.0281.a }
}

# Diarch Imprison Accepted
char_interaction.0282 = {
	type = letter_event
	opening = char_interaction.0001.opening
	desc = char_interaction.0282.desc
	sender = scope:recipient

	immediate = {
		show_as_tooltip = { diarch_imprison_general_accept_effect = yes }
	}

	option = { name = char_interaction.0282.a }
}

# Diarch Imprison refused.
char_interaction.0283 = {
	type = letter_event
	opening = char_interaction.0020.opening
	desc = char_interaction.0283.desc
		
	sender = scope:recipient

	immediate = {
		# Nab a scope for the AI weight check.
		scope:recipient = { save_scope_as = target_military }
	}

	# Acquiesce.
	option = {
		name = char_interaction.0283.a

		# Declare them a traitor.
		scope:recipient = {
			send_interface_toast = {
				title = char_interaction.0283.a.tt
				left_icon = scope:actor
				right_icon = scope:diarch_liege
				diarch_declare_recipient_criminal_effect = yes
			}
		}

		ai_chance = {
			# We keep this low but specified so that it's easy to out-weigh it if necessary.
			base = 1
		}
	}
	# _Time for war_.
	option = {
		name = char_interaction.0283.b
		trigger = { is_landed = yes }

		# To war!
		scope:recipient = {
			start_war = {
				casus_belli = remove_regent_cb
				target = scope:actor
			}
		}

		ai_chance = {
			# Opt out of this by default...
			base = 0
			# ... but don't necessarily stay that way.
			diarch_evaluate_worth_of_war_modifier = yes
		}
	}
}

# Diarch trilateral interaction vetoed.
char_interaction.0291 = {
	type = letter_event
	opening = char_interaction.0020.opening
	desc = {
		first_valid = {
			# Liege likes you.
			triggered_desc = {
				trigger = {
					reverse_opinion = {
						target = scope:intermediary
						value >= 50
					}
				}
				desc = char_interaction.0291.desc.positive
			}
			# Liege dislikes you.

			triggered_desc = {
				trigger = {
					reverse_opinion = {
						target = scope:intermediary
						value <= -50
					}
				}
				desc = char_interaction.0291.desc.negative
			}
			# Liege is neutral towards you.
			desc = char_interaction.0291.desc.neutral
		}
	}
	sender = scope:intermediary

	immediate = {
		# Show off the correct effects.
		show_as_tooltip = {
			# Title revoke.
			if = {
				limit = { scope:diarch_interaction = flag:title_revoke }
				diarch_revoke_title_interaction_intermediary_fail_opinions_effect = yes
			}
			# Vassal retract.
			else_if = {
				limit = { scope:diarch_interaction = flag:vassal_retract }
				diarch_retract_vassal_interaction_intermediary_fail_opinions_effect = yes
			}
			# Imprison.
			else_if = {
				limit = { scope:diarch_interaction = flag:imprison }
				diarch_imprison_interaction_intermediary_fail_opinions_effect = yes
			}
		}
	}

	option = {
		# Calm, patient, just, or friendly relationship with liege.
		name = {
			trigger = {
				OR = {
					has_trait = calm
					has_trait = patient
					has_trait = just
					has_friendly_relationship_with_character_trigger = { CHARACTER = scope:intermediary }
				}
			}
			text = char_interaction.0291.a
		}
		# Liege is child.
		name = {
			trigger = {
				scope:intermediary = { is_adult = no }
			}
			text = char_interaction.0291.b
		}
		# Liege is incapable.
		name = {
			trigger = {
				scope:intermediary = { is_incapable = yes }
			}
			text = char_interaction.0291.c
		}
		# Liege is infirm.
		name = {
			trigger = {
				scope:intermediary = { has_trait = infirm}
			}
			text = char_interaction.0291.d
		}
		# Liege is nemesis.
		name = {
			trigger = { has_relation_nemesis = scope:intermediary }
			text = char_interaction.0291.e
		}
		# Liege is rival.
		name = {
			trigger = { has_relation_rival = scope:intermediary }
			text = char_interaction.0291.f
		}
		# Liege is imprisoned.
		name = {
			trigger = {
				scope:intermediary = { is_imprisoned = yes }
			}
			text = char_interaction.0291.g
		}
		# Fallback.
		name = char_interaction.0291.h
	}
}

# Offer Hostage: Refused
char_interaction.0300 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0300.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0300.a
	}
}

# Demand Hostage: Refused
char_interaction.0301 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0301.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		if = {
			limit = {
				scope:recipient = { is_vassal_of = scope:actor }
			}
			scope:recipient = {
				if = {
					limit = { is_ai = yes }
					add_opinion = {
						modifier = liege_demanded_hostage_opinion
						target = scope:actor
					}
				}
			}
			add_tyranny = minor_tyranny_gain
			if = {
				limit = { is_ai = yes }
				add_opinion = {
					modifier = vassal_refused_hostage_demand_opinion
					target = scope:recipient
				}
			}
		}
	}

	option = {
		name = char_interaction.0301.a
	}
}

# Exchange Hostage: Refused
char_interaction.0311 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0311.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0311.a
	}
}

# Offer Hostage: Accepted
char_interaction.0330 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0330.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		show_as_tooltip = {
			hostage_depart_effect = {
				HOSTAGE = scope:hostage
				WARDEN = scope:hostage_taker
				HOME_COURT = scope:hostage_sender
			}
		}
	}

	option = {
		name = char_interaction.0330.a
	}
}

# Demand Hostage: Accepted
char_interaction.0331 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0331.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		if = {
			limit = {
				scope:recipient = { is_vassal_of = scope:actor }
			}
			scope:recipient = {
				if = {
					limit = { is_ai = yes }
					add_opinion = {
						modifier = liege_demanded_hostage_opinion
						target = scope:actor
					}
				}
			}
			scope:actor = { add_tyranny = minor_tyranny_gain } # Tyranny for demanding from vassals
		}
		show_as_tooltip = {
			hostage_depart_effect = {
				HOSTAGE = scope:hostage
				WARDEN = scope:hostage_taker
				HOME_COURT = scope:hostage_sender
			}
		}
	}

	option = {
		name = char_interaction.0331.a
	}
}

# Exchange Hostages: Accepted
char_interaction.0332 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0332.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		show_as_tooltip = {
			hostage_depart_effect = {
				HOSTAGE = scope:hostage_1
				WARDEN = scope:hostage_sender_2
				HOME_COURT = scope:hostage_sender_1
			}
			hostage_depart_effect = {
				HOSTAGE = scope:hostage_2
				WARDEN = scope:hostage_sender_1
				HOME_COURT = scope:hostage_sender_2
			}
		}
	}

	option = {
		name = char_interaction.0332.a
	}
}

# Hostage Returned
char_interaction.0320 = {
	type = letter_event
	opening = {
		desc = char_interaction.0320.opening
	}
	desc = char_interaction.0320.desc
		
	sender = {
		character = scope:warden
		animation = war_over_win
	}

	immediate = {
		bp2_return_hostage_effect = { HOSTAGE = scope:hostage }
	}

	option = {
		name = char_interaction.0320.a
	}
}

# Hostage Recalled
char_interaction.0340 = {
	type = letter_event
	opening = {
		desc = char_interaction.0340.opening
	}
	desc = char_interaction.0340.desc
		
	sender = {
		character = scope:warden
		animation = war_over_win
	}

	immediate = {
		bp2_return_hostage_effect = { HOSTAGE = scope:hostage }
	}

	option = {
		name = char_interaction.0340.a
	}
}

# Recall Hostage: Refused
char_interaction.0341 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = char_interaction.0341.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = char_interaction.0341.a
	}
}
