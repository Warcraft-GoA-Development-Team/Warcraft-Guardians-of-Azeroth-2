activity_arthas_expedition_non_dlc = {
	is_shown = {
		is_target_in_global_variable_list = { name = unavailable_unique_events target = flag:arthas_activity_good_to_go }
		exists = global_var:arthas_character
		root = global_var:arthas_character
		is_landed = yes
		exists = title:e_scourge.holder
		# DLC locked
		NAND = {
			has_dlc_feature = tours_and_tournaments
			has_dlc_feature = advanced_activities
		}
	}

	can_start_showing_failures_only = {
		is_available_adult = yes
		is_imprisoned = no
	}

	is_valid = {
		any_attending_character = {
			is_alive = yes
		}
		NOT = { has_variable = finish_this_activity }
		exists = title:e_scourge.holder
		scope:host = {
			is_imprisoned = no
			
			trigger_if = {
				limit = { NOT = { root = { exists = var:fallen_expedition } } }
				evil_public_religion_trigger = no
			}
		}
	}

	ai_select_num_provinces = {
		value = 0
	}

	guest_join_chance = {
		base = 300
	}

	wait_time_before_start = {
		days = 15 #months = 1
	}
	max_guest_arrival_delay_time = {
		days = 5
	}
	on_invalidated = {
		every_attending_character = {
			if = {
				limit = { scope:host = { is_alive = no } }
				trigger_event = wc_arthas_story.150
			}
			else = {
				send_interface_message = {
					type = event_generic_neutral
					title = activity_arthas_expedition_invalid
					left_icon = this
					custom_tooltip = activity_arthas_expedition_invalid_tooltip
				}
			}
		}
		# one chance one try
		remove_list_global_variable = { name = unavailable_unique_events target = flag:arthas_activity_good_to_go }
		remove_global_variable = andorhal_province
		remove_global_variable = stratholme
		remove_global_variable = hearthglen
		remove_global_variable = malganis
		remove_global_variable = arthas_character
		remove_global_variable = terenas_character
		remove_global_variable = lordaeron_city
		remove_global_variable = lordaeron
		var:jaina ?= { if = {limit = {has_trait = cannot_mary_historical } remove_trait = cannot_mary_historical } }
	}

	on_host_death = {
		#Otherwise indirectly cancel the activity by not setting a new host
		# Send your entourage home
		scope:host = {
			current_travel_plan = {
				every_entourage_character = { set_location_to_default = yes }
			}
		}
		# one chance one try
		remove_list_global_variable = { name = unavailable_unique_events target = flag:arthas_activity_good_to_go }
		remove_global_variable = andorhal_province
		remove_global_variable = stratholme
		remove_global_variable = hearthglen
		remove_global_variable = malganis
		remove_global_variable = arthas_character
		remove_global_variable = terenas_character
		remove_global_variable = lordaeron_city
		remove_global_variable = lordaeron
		var:jaina ?= { if = {limit = {has_trait = cannot_mary_historical } remove_trait = cannot_mary_historical } }
	}

	is_location_valid = {
		always = yes
	}

	province_description = {
		desc = activity_ae_province_desc
	}

	# desc is only shown in debug AI watch window
	ai_will_do = {
		value = 2000
	}

	ai_check_interval = 1

	ai_will_select_province = {
		value = 100
	}

	###################
	# PARAMETERS
	###################

	is_grand_activity = no

	is_single_location = yes

	province_filter = top_realm

	max_route_deviation_mult = 3.0

	cost = {
		gold = 5
	}

	ui_predicted_cost = {
		gold = 5
	}

	###################
	# OPTIONS
	###################

	options = {
		#########
		# TYPE OF PILGRIMAGE [SPECIAL TYPE] OPTION
		#########
		special_type = {
			ae_destroy_your_enemies = {
				#Crashes [sometimes] if you start the game with a ruler where this is default then tag over to another ruler where this isn't default
				default = {
					always = yes
				}
				is_valid = {
					always = yes
				}
				ai_will_do = {
					value = 10
					
					if = {
						limit = {
							OR = {
								has_trait = vengeful
								has_trait = callous
							}
						}
						add = 40
					}
					if = {
						limit = {
							OR = {
								has_trait = stubborn
								has_trait = arrogant
								has_trait = impatient
							}
						}
						add = 40
					}
					if = {
						limit = {
							has_trait = disloyal
						}
						add = 40
					}
				}
			}
			ae_save_your_country = {
				is_valid = {
					always = yes
				}
				ai_will_do = {
					value = 5
					
					if = {
						limit = {
							has_trait = loyal
						}
						add = 40
					}
					if = {
						limit = {
							OR = {
								has_trait = humble
								has_trait = patient
								has_trait = temperate
							}
						}
						add = 40
					}
				}
			}
			ae_save_your_people = {
				is_valid = {
					always = yes
				}
				ai_will_do = {
					value = 5
					
					if = {
						limit = {
							OR = {
								has_trait = compassionate
								has_trait = forgiving
							}
						}
						add = 80
					}
					if = {
						limit = {
							has_trait = trusting
						}
						add = 40
					}
				}
			}
		}
		#########
		# POMP OPTION
		#########
		ae_option_financial_support = {
			ae_finance_normal = {
				default = yes

				# Entourage option grabbing suitable bodyguards & maybe someone from court who really likes you, + randos.
				travel_entourage_selection = { 
					weight = bdp_entourage_base_set_weighting_value
					max = 2
					invite_rule_order = 1
				}

				ai_will_do = {
					value = 0
				}
			}
			ae_finance_good = {
				#is_shown = { has_dlc_feature = advanced_activities }

				cost = { gold = 50 }

				#Entourage option grabbing most people suitable from court, + randos.
				travel_entourage_selection = {
					weight = {
						add = bdp_entourage_base_set_weighting_value
					}

					max = 4
					invite_rule_order = 1
				}

				ai_will_do = {
					value = 5
				}
			}
			ae_finance_enormous = {
				#is_shown = { has_dlc_feature = advanced_activities }

				cost = { gold = 100 }
				#Entourage option grabbing sodding everyone suitable from court, + every grabbable rando in the duchy and maybe a few extra.
				travel_entourage_selection = {
					weight = {
						add = bdp_entourage_base_set_weighting_value
					}

					max = 6
					invite_rule_order = 1
				}

				ai_will_do = {
					value = 5
				}
			}
		}
	}

	special_option_category = special_type

	# Effects run when the activity is created
	on_start = {
		scope:activity ?= {
			activity_setup_special_type_progression_effect = yes
		}
		scope:host = {
			save_scope_as = arthas
			top_liege = {
				save_scope_as = terenas
				primary_title = { save_scope_as = lordaeron }
			}
			trigger_event = { id = wc_arthas_story.10 days = 2 }
		}
		find_nerzhul_effect = yes
		
		# Notification for players
		every_player = {
			limit = {
				NOT = { this = scope:host }
				can_be_invited_in_arthas_expedition_trigger = { INVITER = scope:arthas }

				top_liege = scope:host.top_liege
			}
			trigger_event = { id = wc_arthas_story.10 days = 3 }
		}
		global_var:stratholme = { save_scope_as = stratholme }
		global_var:hearthglen = { save_scope_as = hearthglen }
	}

	###################
	# PHASES
	###################

	phases = {
		ae_phase_investigation = {
			is_predefined = yes
			order = 1

			ai_will_do = { value = 100 }
			location_source = scripted
			select_scripted_location = {
				if = {
					limit = {
						has_global_variable = andorhal_province
					}
					global_var:andorhal_province = { save_scope_as = province }
				}
				else = { title:b_andorhal = { save_scope_as = province } }
			}

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }
					scope:activity = {
						var:uther = { save_scope_as = uther }
						var:jaina = { save_scope_as = jaina }
					}

					top_liege = { save_scope_as = terenas }
					# List of dynasties for renown reward
					scope:activity = {
						progress_activity_phase_after = { days = 16 }
						
					}

					trigger_event = { id = wc_arthas_story.15 days = 7 }
				}
			}
		}
		ae_phase_hearthglen = {
			is_predefined = yes
			order = 2

			ai_will_do = { value = 100 }

			location_source = scripted
			select_scripted_location = {
				if = {
					limit = {
						has_global_variable = andorhal_province
					}
					global_var:andorhal_province = { save_scope_as = province }
				}
				else = { title:b_andorhal = { save_scope_as = province } }
			}

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }
					scope:activity = { var:malganis = { add_character_flag = wear_armor_flag } }

					scope:activity = {
						progress_activity_phase_after = { days = 25 }
					}
					trigger_event = { id = wc_arthas_story.25 days = 21 }
					trigger_event = { id = theramore_events.100 days = 40 }
				}
			}
		}
		ae_phase_stratholme = {
			is_predefined = yes
			order = 3

			ai_will_do = { value = 100 }

			location_source = scripted
			select_scripted_location = {
				if = {
					limit = {
						has_global_variable = andorhal_province
					}
					global_var:andorhal_province = { save_scope_as = province }
				}
				else = { title:b_andorhal = { save_scope_as = province } }
			}

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					scope:activity = {
						progress_activity_phase_after = { days = 29 }
					}
					trigger_event = { id = wc_arthas_story.30 days = 21 }
				}
			}
		}
		ae_phase_northrend = {
			is_predefined = yes
			order = 4

			ai_will_do = { value = 100 }

			location_source = scripted
			select_scripted_location = {
				if = {
					limit = {
						has_global_variable = andorhal_province
					}
					global_var:andorhal_province = { save_scope_as = province }
				}
				else = { title:b_andorhal = { save_scope_as = province } }
			}

			is_valid = {
				root = {
					has_activity_option = {
						category = special_type
						option = ae_destroy_your_enemies
					}
				}
			}

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					scope:activity = {
						progress_activity_phase_after = { days = 61 }
					}

					trigger_event = { id = wc_arthas_story.55 days = 51 }
				}
			}
		}
		ae_phase_final_location = {
			is_predefined = yes
			order = 5

			ai_will_do = { value = 100 }

			location_source = scripted
			select_scripted_location = {
				if = {
					limit = {
						has_global_variable = andorhal_province
					}
					global_var:andorhal_province = { save_scope_as = province }
				}
				else = { title:b_andorhal = { save_scope_as = province } }
			}

			is_valid = {
				root = {
					has_activity_option = {
						category = special_type
						option = ae_destroy_your_enemies
					}
				}
			}

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					scope:activity = {
						progress_activity_phase_after = { days = 27 }
					}

					trigger_event = { id = wc_arthas_story.70 days = 16 }
				}
			}
		}
		ae_phase_lordaeron = {
			is_predefined = yes
			order = 6

			ai_will_do = { value = 100 }

			location_source = scripted
			select_scripted_location = {
				if = {
					limit = {
						has_global_variable = andorhal_province
					}
					global_var:andorhal_province = { save_scope_as = province }
				}
				else = { title:b_andorhal = { save_scope_as = province } }
			}

			is_valid = {
				root = {
					OR = {
						# To kill father
						has_activity_option = {
							category = special_type
							option = ae_destroy_your_enemies
						}
						# To hug father
						has_activity_option = {
							category = special_type
							option = ae_save_your_country
						}
					}
				}
			}

			on_enter_phase = {
				if = {
					limit = { this = scope:host }
					# No passive state for the toast, just jump right into it
					scope:activity = { progress_activity_phase_after = { days = 1 } }
				}
			}

			on_phase_active = {
				if = {
					limit = { this = scope:host }

					scope:activity = {
						progress_activity_phase_after = { days = 52 }
					}

					if = {
						limit = {
							scope:activity = {
								has_activity_option = {
									category = special_type
									option = ae_destroy_your_enemies
								}
							}
						}
						# Kill father
						trigger_event = { id = wc_arthas_story.85 days = 43 }
					}
					else_if = {
						limit = {
							scope:activity = {
								has_activity_option = {
									category = special_type
									option = ae_save_your_country
								}
							}
						}
						# Hug father
						trigger_event = { id = wc_arthas_story.100 days = 43 }
					}
				}
			}
		}
	}

	on_complete = {
		#REWARDS
		if = {
			limit = { this = scope:host }
			scope:activity = {
				every_attending_character = {
					dynasty ?= {
						scope:activity = {
							add_to_variable_list = {
								name = dynasties_for_renown_reward
								target = prev
							}
						}
					}
					add_reward_prestige_ae_effect = yes
				}
				add_reward_dynasty_ae_effect = yes
			}
		}
		
		if = {
			limit = {
				is_ai = yes
				is_alive = yes
				NOT = { this = scope:host }
			}
			set_location_to_default = yes
		}
		#Conclusion/reward event is run in the phase on_end
		if = {
			limit = {
				root = scope:host
			}
			remove_list_global_variable = { name = unavailable_unique_events target = flag:arthas_activity_good_to_go }
			remove_global_variable = andorhal_province
			remove_global_variable = stratholme
			remove_global_variable = hearthglen
			remove_global_variable = malganis
			remove_global_variable = arthas_character
			remove_global_variable = terenas_character
			remove_global_variable = lordaeron_city
			remove_global_variable = lordaeron
			if = {
				limit = {
					scope:activity = {
						has_activity_option = {
							category = special_type
							option = ae_destroy_your_enemies
						}
					}
				}
				scope:activity.var:nerzhul = { set_diarch = scope:host }
			}
			
			current_travel_plan = { complete_travel_plan = yes }
			set_location_to_default = yes
		}
	}

	###################
	# GUEST HANDLING
	###################

	allow_zero_guest_invites = yes

	guest_invite_rules = {
		defaults = {
			1 = activity_invite_rule_vassals
		}
	}

	can_be_activity_guest = {
		age >= 14
	}

	max_guests = 30

	host_intents = {
		intents = { find_answers_intent }
		default = find_answers_intent
	}

	guest_intents = {
		intents = { find_answers_intent }
		default = find_answers_intent
	}

	travel_entourage_selection = {
		weight = bdp_entourage_base_set_weighting_value
		max = 2
		invite_rule_order = 1
	}

	###################
	# ACTIVITY-SPECIFIC PULSES
	###################

	#pulse_actions = {
	#	entries = {
	#		apa_preaching_wrath_of_god
	#		apa_studying_scripture
	#	}
	#	chance_of_no_event = 5
	#}

	on_enter_travel_state = {
		scope:activity ?= {
			
		}
	}

	on_enter_passive_state = {
		#If you arrive early we just start early
		if = {
			limit = {
				root = scope:host
			}
			scope:activity = {
				if = {
					limit = { any_attending_character = { NOT = { location = scope:host.location } } }
					every_attending_character = { limit = { NOT = { location = scope:host.location } } set_location = scope:host.location } 
				}
				progress_activity_phase_after = { days = 1 }
			}
		}
	}

	on_travel_state_pulse = {
		#Handled in the on_travel_plan_movement on_action for Pilgrimage and Hajj
	}


	on_passive_state_pulse = { }

	on_enter_active_state = { }

	on_active_state_pulse = { }

	###################
	# GRAPHICS
	###################

	# Travel
	background = { # Bridge
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_riverside_province = yes
				geographical_region = world_europe
				OR = {
					terrain = farmlands
					terrain = plains
					terrain = mountains
					terrain = hills
				}
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_bridge.dds"
		environment = "environment_travel_bridge"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	
	background = { # Farmland, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_farm.dds"
		environment = "environment_travel_farmlands"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { # Farmland, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				terrain = farmlands
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/farms.dds"
		environment = "environment_event_farms"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #Desert, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_desert.dds"
		environment = "environment_travel_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}
	background = { #Desert, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_desert_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/desert.dds"
		environment = "environment_event_bp1_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #forest snowy
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location ?= { hunt_snowy_forest_trigger = yes }
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_hunt_snowy_forest.dds"
		environment = "environment_hunt_snowy_forest"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #forest_pine
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_pine_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest_pine.dds"
		environment = "environment_event_forest_pine"
		ambience = "event:/SFX/Events/Backgrounds/coniferous_forest_day"
	}

	background = { #forest
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_forest_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/forest.dds"
		environment = "environment_event_forest"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #mountains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_mountains.dds"
		environment = "environment_travel_mountain_settlement"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = { #mountains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_mountains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/mountains.dds"
		environment = "environment_event_mountains"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	background = { #steppe, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_steppe.dds"
		environment = "environment_travel_steppe_settlement"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}
	background = { #steppe, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_steppe_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/steppe.dds"
		environment = "environment_event_steppe"
		ambience = "event:/SFX/Events/Backgrounds/steppe_day"
	}

	background = { #drylands (formerly desert)
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_drylands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/drylands.dds"
		environment = "environment_event_desert"
		ambience = "event:/SFX/Events/Backgrounds/desert_day"
	}

	background = { #wetlands
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_wetlands_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_wetlands.dds"
		environment = "environment_event_bp1_wetlands" 
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #jungle
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_wilderness_jungle_trigger = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_jungle.dds"
		environment = "environment_event_bp1_jungle"
		ambience = "event:/SFX/Events/Backgrounds/deciduous_forest_day"
	}

	background = { #plains, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #plains, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_plains_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_plains.dds"
		environment = "environment_event_bp1_plains"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #hills, settled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				exists = province_owner
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_travel_hills.dds"
		environment = "environment_travel_hills_settlement"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}
	background = { #hills, unsettled
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				graphical_hills_trigger = yes
				NOT = { exists = province_owner }
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/bp1_hills.dds"
		environment = "environment_event_bp1_hills"
		ambience = "event:/SFX/Events/Backgrounds/fields_farms_day"
	}

	background = { #sea
		trigger = {
			NOT = { scope:host.location = scope:activity.activity_location }
			scope:host.location = {
				is_sea_province = yes
			}
		}
		texture = "gfx/interface/illustrations/event_scenes/fp1_ocean.dds"
		environment = "environment_event_fp1_ocean"
		ambience = "event:/DLC/FP1/SFX/Events/event_ocean_longship"
	}
	# End Travel

	#Expedition backgrounds
	background = {
		trigger = {
			has_current_phase = ae_phase_investigation
		}
		texture = "gfx/interface/illustrations/event_scenes/wc_cauldron_by_dlikt.dds"
		environment = "environment_character_wc_cauldron_by_dlikt"
		ambience = "event:/SFX/Events/Backgrounds/city_alley_night"
	}
	background = {
		trigger = {
			has_current_phase = ae_phase_hearthglen
		}
		texture = "gfx/interface/illustrations/event_scenes/ep2_tournament_tribal.dds"
		environment = "environment_village_festival"
		ambience = "event:/DLC/EP2/SFX/Events/Backgrounds/evn_background_festival_western"
	}
	background = {
		trigger = {
			has_current_phase = ae_phase_stratholme
		}
		texture = "gfx/interface/illustrations/event_scenes/wc_stratholme.dds"
		environment = "environment_character_wc_stratholme"
		ambience = "event:/SFX/Events/Backgrounds/city_alley_night"
	}
	background = {
		trigger = {
			has_current_phase = ae_phase_northrend
		}
		texture = "gfx/interface/illustrations/character_view/northrend.dds"
		environment = "environment_character_northrend"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}
	background = {
		trigger = {
			has_current_phase = ae_phase_final_location
		}
		texture = "gfx/interface/illustrations/event_scenes/wc_frostmourne_cave.dds"
		environment = "environment_character_wc_frostmourne_cave"
		ambience = "event:/SFX/Events/Backgrounds/city_alley_night"
	}
	background = {
		trigger = {
			has_current_phase = ae_phase_lordaeron
		}
		texture = "gfx/interface/illustrations/character_view/wc_lordaeron_throne_room.dds"
		environment = "environment_lordaeron_throne_room"
		ambience = "event:/SFX/Events/Backgrounds/throneroom_western"
	}

	#Fallback
	background = {
		texture = "gfx/interface/illustrations/event_scenes/northrend.dds"
		environment = "environment_character_northrend"
		ambience = "event:/SFX/Events/Backgrounds/mountains_day"
	}

	### Plug in widgets
	activity_window_widgets = {
		activity_special_type_progression = "activity_plugin_widgets_summary"
	}

	window_characters = {

		lordaeronian = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
						NOT = { this = scope:host }
						NOT = { root.var:jaina = this }
						NOT = { root.var:uther = this }
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				animation = jockey_walk
			}
		}

		lordaeronian = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						has_variable = uther
						any_attending_character = {
							this = root.var:uther
						}
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					var:uther = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				animation = jockey_walk
			}
		}

		lordaeronian = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						has_variable = uther
						NOT = {
							any_attending_character = {
								this = root.var:uther
							}
						}
					}
					every_attending_character = {
						limit = {
							NOT = {
								scope:host.location = scope:activity.activity_location
							}
							NOT = { this = scope:host }
						}
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				animation = jockey_walk
			}
		}
		
		expedition_leader = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						scope:host.location = scope:activity.activity_location
					}
					scope:host = { add_to_list = characters }
				}
			}
			scripted_animation = {
				triggered_animation = {
					trigger = {
						always = yes
					}
					animation = jockey_walk #jockey_lance_tilted jockey_lance_couched_gallop jockey_walk jockey_idle jockey_victory
				}
				#Fallback
				animation = jockey_lance_couched_gallop
			}
		}
		
		expedition_leader = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					scope:host = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				animation = jockey_lance_couched_gallop
			}
		}


		lordaeronian = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						has_variable = jaina
						any_attending_character = {
							this = root.var:jaina
						}
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					var:jaina = {
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				animation = jockey_walk
			}
		}

		lordaeronian = {
			camera = camera_body
			
			effect = {
				if = {
					limit = {
						has_variable = jaina
						NOT = {
							any_attending_character = {
								this = root.var:jaina
							}
						}
					}
					every_attending_character = {
						limit = {
							NOT = {
								scope:host.location = scope:activity.activity_location
							}
						}
						add_to_list = characters
					}
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				animation = jockey_walk
			}
		}

		lordaeronian = {
			camera = camera_body
			
			effect = {
				every_attending_character = {
					limit = {
						NOT = {
							scope:host.location = scope:activity.activity_location
						}
					}
					add_to_list = characters
				}
			}

			scripted_animation = {
				triggered_animation = {
					trigger = {
						scope:character.location = { is_sea_province = yes }
					}
					animation = { idle }
				}
				animation = jockey_walk
			}
		}
	}
}