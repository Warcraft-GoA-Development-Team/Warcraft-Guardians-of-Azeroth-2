window = {
	name = "activity_list"
	parentanchor = top|right
	layer = windows_layer
	movable = no

	datacontext = "[GetPlayer]"
	datacontext = "[GetVariableSystem]"

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Set( 'activity_list_tab', 'host' )]"
		on_start = "[GetVariableSystem.Set( 'activity_list_view', 'activities' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				widget_header_with_picture = {
					layoutpolicy_horizontal = expanding

					blockoverride "size" {
						size = { 100% 160 }
					}

					blockoverride "illustration_texture" {
						texture = "gfx/interface/illustrations/window_headers/header_activity.dds"
						fittype = centercrop
						alpha = 0.4
					}

					blockoverride "header_text"
					{
						text = "ACTIVITY_LIST"
					}

					blockoverride "button_close"
					{
						onclick = "[ActivityListWindow.Close]"
					}

					vbox = {
						name = "activity_status"
						layoutpolicy_horizontal = expanding
						datacontext = "[Character.GetInvolvedActivity]"
						margin_top = 40

						text_single = {
							text = "ACTIVITY_CURRENT_HEADER"
						}

						expand = {}

						text_single = {
							name = "status_no_activity"
							text = "ACTIVITY_LIST_NO_ONGOING_ACTIVITY"
							visible = "[Not( Activity.IsValid )]"
							autoresize = yes
							maximumsize = { 450 -1 }
							align = center
							default_format = "#weak"
						}

						vbox = {
							name = "status_involved_activity"
							layoutpolicy_horizontal = expanding
							visible = "[Activity.IsValid]"

							text_multi = {
								name = "status_involved_activity"
								text = "ACTIVITY_LIST_INVOLVED_ACTIVITY"
								visible = "[Not( ObjectsEqual( Activity.GetHost.Self, Character.Self ) )]"
								autoresize = yes
								max_width = 450
								align = center
							}

							text_multi = {
								name = "status_hosting_activity"
								text = "ACTIVITY_LIST_HOSTING_ACTIVITY"
								visible = "[ObjectsEqual( Activity.GetHost.Self, Character.Self )]"
								autoresize = yes
								max_width = 450
								align = center
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_left = 10
								spacing = 10

								activity_hud_button = {
									name = "activity_hud_icon"
								}

								vbox = {
									text_single = {
										layoutpolicy_horizontal = expanding
										text = "ACTIVITY_LIST_CURRENT_PHASE"
									}
									text_single = {
										layoutpolicy_horizontal = expanding
										text = "ACTIVITY_LIST_CURRENT_STATE"
									}
								}

								expand = {}
							}
						}

						expand = {}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox = {
						name = "activity_content"

						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						visible = "[VariableSystem.HasValue( 'activity_list_view', 'activities' )]"

						margin_top = 30

						scrollbox = {
							name = "host_scrollbox"
							visible = "[VariableSystem.HasValue( 'activity_list_tab', 'host' )]"

							using = Animation_Tab_Switch

							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							blockoverride "scrollbox_content"
							{
								name = "activities_container"
								spacing = 8

								vbox = {
									name = "host_activities"
									layoutpolicy_horizontal = expanding
									margin = { 0 4 }
									spacing = 4

									text_label_center = {
										text = "ACTIVITY_LIST_HOST_GRAND"
										visible = "[HasDlcFeature( 'advanced_activities' )]"
									}

									vbox = {
										name = "grand_activities"
										layoutpolicy_horizontal = expanding
										visible = "[HasDlcFeature( 'advanced_activities' )]"

										text_single = {
											visible = "[IsDataModelEmpty( ActivityListWindow.GetHostableGrandActivities )]"
											text = "ACTIVITY_LIST_HOST_NO_GRAND_ACTIVITIES"
											default_format = "#low;italic"
										}

										vbox = {
											layoutpolicy_horizontal = expanding
											margin_bottom = 8
											spacing = 4

											datamodel = "[ActivityListWindow.GetHostableGrandActivities]"

											item = {
												activity_host_item_button = {
													layoutpolicy_horizontal = expanding

													blockoverride "size" {
														size = { 300 62 }
													}

													blockoverride "size_illustration"
													{
														parentanchor = right|vcenter
														position = { -2 0 }
														size = { 250 58 }
													}

													blockoverride "default_format"
													{
														default_format = "#medium"
													}
												}
											}
										}
									}

									text_label_center = {
										text = "ACTIVITY_LIST_HOST"
									}

									vbox = {
										name = "regular_activities"
										layoutpolicy_horizontal = expanding

										text_single = {
											visible = "[IsDataModelEmpty( ActivityListWindow.GetHostableActivities )]"
											text = "ACTIVITY_LIST_HOST_NO_REGULAR_ACTIVITIES"
											default_format = "#low;italic"
										}

										vbox = {
											layoutpolicy_horizontal = expanding
											spacing = 4

											datamodel = "[ActivityListWindow.GetHostableActivities]"

											item = {
												activity_host_item_button = {
													layoutpolicy_horizontal = expanding

													blockoverride "size_illustration"
													{
														parentanchor = right|vcenter
														position = { -2 0 }
														size = { 250 48 }


													}
												}
											}
										}
									}
								}

								divider_light = {
									layoutpolicy_horizontal = expanding
								}

								vbox = {
									name = "joinable_activities"
									layoutpolicy_horizontal = expanding
									margin = { 0 4 }
									spacing = 4

									text_label_center = {
										text = "ACTIVITY_LIST_JOIN"
										max_width = 500
									}

									text_single = {
										visible = "[IsDataModelEmpty( ActivityListWindow.GetInvitedActivities )]"
										text = "ACTIVITY_LIST_NO_ACTIVITY_INVITATIONS"
										default_format = "#low;italic"
										max_width = 500
									}

									vbox = {
										name = "activity_invites"
										layoutpolicy_horizontal = expanding
										spacing = 4

										datamodel = "[ActivityListWindow.GetInvitedActivities]"

										item = {
											activity_join_item_button = {
												layoutpolicy_horizontal = expanding

												blockoverride "size_illustration"
												{
													parentanchor = right|vcenter
													position = { -2 0 }
													size = { 250 48 }
												}

												blockoverride "right_side"
												{
													button_dismiss = {
														onclick = "[Activity.DeclineInvite]"
														size = { 45 45 }
														tooltip = "ACTIVITY_LIST_DECLINE_INVITE"
													}
												}
											}
										}
									}

									vbox = {
										name = "open_activities"
										visible = "[HasDlcFeature( 'advanced_activities' )]"
										layoutpolicy_horizontal = expanding

										text_multi = {
											visible = "[IsDataModelEmpty( ActivityListWindow.GetJoinableActivities )]"
											text = "ACTIVITY_LIST_NO_JOINABLE_ACTIVITIES"
											default_format = "#low;italic"
											align = center
											max_width = 500
											autoresize = yes
										}

										vbox = {
											layoutpolicy_horizontal = expanding
											spacing = 4

											datamodel = "[ActivityListWindow.GetJoinableActivities]"

											item = {
												activity_join_item_button = {
													layoutpolicy_horizontal = expanding

													blockoverride "size_illustration"
													{
														parentanchor = right|vcenter
														position = { -2 0 }
														size = { 250 48 }
													}
												}
											}
										}

										spacer = {
											size = { 0 8 }
										}

										button_checkbox_label = {
											name = "notify_can_join"
											datacontext = "[GetActivityType( 'activity_tournament' )]"
											onclick = "[ActivityType.ToggleShouldNotifyCanJoinOpenActivity]"

											blockoverride "checkbox"
											{
												checked = "[ActivityType.ShouldNotifyCanJoinOpenActivity]"
											}

											blockoverride "text"
											{
												text = "ACTIVITY_LIST_NOTIFY_ME_ABOUT_TOURNAMENTS"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# This is basically a duplication of the decision detail view
window = {
	name = "activity_list_detail_host"
	parentanchor = top|right
	position = { -650 110 }
	size = { 630 935 }
	layer = middle

	using = Window_Movable
	using = Window_Background
	using = Window_Decoration_Spike

	datacontext = "[ActivityListDetailHostView.GetType]"

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
		position = { -650 110 }
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "ACTIVITY_LIST_DETAIL_HOST_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[ActivityListDetailHostView.Close]"
			}
		}

		vbox = {
			name = "contents"

			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			vbox = {
				layoutpolicy_horizontal = expanding
				minimumsize = { 550 220 }

				background = {
					name = "illustrations"
					texture = "[ActivityType.GetHeaderBackground]"
					margin_top = 10
					alpha = 0.7
					using = Mask_Rough_Edges
				}
			}

			text_multi = {
				name = "description"
				minimumsize = { 515 -1 }
				maximumsize = { 515 -1 }
				margin = { 15 15 }
				autoresize = yes
				text = "[ActivityType.GetDescription]"
				using = Font_Size_Small
			}

			scrollbox = {
				name = "description_scrollarea"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						spacing = 10

						vbox = {
							name = "effect"
							layoutpolicy_horizontal = expanding

							# No visible check as we always want the base you host this activity effect description

							background = {
								name = "illustrations"
								texture = "gfx/interface/icons/lifestyle_tree_backgrounds/skulduggery.dds"
								tintcolor = { 0.6 0.8 0.8 0.8 }

								margin = { 0 5 }
								using = Mask_Rough_Edges
								alpha = 0.8
								fittype = centercrop
								mirror = horizontal

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_fade_corners_bottom.dds"
									blend_mode = alphamultiply
									alpha = 0.6
								}

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_rough_edges.dds"
									blend_mode = overlay
									alpha = 0.4
								}
							}

							text_label_center = {
								text = "DECISION_DETAIL_EFFECTS"
							}

							text_multi = {
								layoutpolicy_horizontal = expanding
								margin = { 15 15 }
								max_width = 515
								autoresize = yes
								text = "ACTIVITY_LIST_DETAIL_HOST_EFFECTS"
							}
						}

						vbox = {
							name = "requirements"
							visible = "[ActivityListDetailHostView.HasRequirements]"
							layoutpolicy_horizontal = expanding

							text_label_center = {
								text = "DECISION_DETAIL_REQUIREMENTS"
							}

							text_multi = {
								alwaystransparent = no
								minimumsize = { 515 -1 }
								maximumsize = { 515 -1 }
								margin = { 15 15 }
								autoresize = yes
								text = "[ActivityListDetailHostView.GetRequirementsDescription]"
							}
						}

						expand = {}

					}
				}

				blockoverride "scrollbox_background_fade" {}
			}

			vbox = {
				name = "footer"
				layoutpolicy_horizontal = expanding

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_top = 4
					margin_bottom = 10
					spacing = 5

					text_single = {
						name = "cost"
						visible = "[ActivityListDetailHostView.HasCost]"
						text = "[ActivityListDetailHostView.GetCostDescription]"
						tooltip = "ACTIVITY_BASE_COST_TT"
						using = Font_Size_Medium
						default_format = "#high"
						align = nobaseline
					}

					spacer = {
						size = { 10 2 }
					}

					button_primary = {
						name = "confirm"
						size = { 380 50 }

						enabled = "[ActivityListDetailHostView.CanConfirm]"
						tooltip = "[ActivityListDetailHostView.GetConfirmTooltip]"
						onclick = "[ActivityListDetailHostView.Confirm]"

						text = "ACTIVITY_LIST_DETAIL_HOST_CONFIRM"

						default_clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
						clicksound = "[ActivityListDetailHostView.GetConfirmClickSound]"
					}

					spacer = {
						size = { 0 2 }
					}

					button_checkbox_label = {
						name = "major_checkbox"
						onclick = "[ActivityType.ToggleShouldNotifyCanHost]"

						blockoverride "checkbox"
						{
							checked = "[ActivityType.ShouldNotifyCanHost]"
						}

						blockoverride "text"
						{
							text = "ACTIVITY_LIST_DETAIL_TOGGLE_SHOULD_NOTIFY_CAN_HOST"
						}
					}

					expand = {}
				}
			}
		}
	}
}

window = {
	name = "activity_list_detail_invite"
	parentanchor = top|right
	position = { -650 110 }
	size = { 630 935 }
	layer = middle

	using = Window_Movable
	using = Window_Background
	using = Window_Decoration_Spike

	datacontext = "[ActivityListDetailJoinView.GetActivity]"
	datacontext = "[Activity.GetType]"

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		using = Sound_WindowShow_Standard
		position = { -650 110 }
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "ACTIVITY_LIST_DETAIL_JOIN_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[ActivityListDetailJoinView.Close]"
			}
		}

		vbox = {
			name = "contents"

			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			vbox = {
				layoutpolicy_horizontal = expanding
				minimumsize = { 550 220 }

				background = {
					name = "illustrations"
					texture = "[ActivityType.GetHeaderBackground]"
					margin_top = 10
					alpha = 0.7
					using = Mask_Rough_Edges
				}

				hbox = {
					name = "activity_host"
					layoutpolicy_horizontal = expanding
					datacontext = "[Activity.GetHost]"
					margin = { 20 0 }
					spacing = 10

					portrait_torso = {}

					expand = {}
				}
			}

			vbox = {
				name = "invitation"
				datacontext = "[Activity.GetHost]"

				layoutpolicy_horizontal = expanding
				using = Background_Letter
				minimumsize = { 515 -1 }
				maximumsize = { 515 -1 }

				margin = { 20 15 }

				text_multi = {
					name = "description"
					minimumsize = { 500 -1 }
					maximumsize = { 500 -1 }
					autoresize = yes

					text = "[ActivityListDetailJoinView.GetInvitationText]"

					using = Font_Size_Small

					default_format = "#light_background"
					using = Text_Light_Background_Overrides
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					coa_character_sigil = {}

					text_single = {
						name = "liege_signature"
						max_width = 430
						align = left
						layoutpolicy_horizontal = expanding

						text = "ACTIVITY_LIST_INVITATION_SIGNATURE"

						using = Font_Size_Medium

						default_format = "#light_background"
						using = Text_Light_Background_Overrides
					}
				}
			}

			scrollbox = {
				name = "description_scrollarea"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						spacing = 10
						
						vbox = {
							name = "phases"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							margin = { 0 5 }

							background = {
								using = Background_Area_Solid
							}

							text_label_center = {
								text = "ACTIVITY_LIST_DETAIL_JOIN_PHASES_HEADER"
							}

							activity_phase_progress_timline_widget = {
								name = "phase_progres_timeline"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								maximumsize = { 500 -1 }

								blockoverride "current_phase_progress"
								{
									tooltip = "ACTIVITY_PHASE_TOOLTIP"
								}
							}
						}

						hbox = {
							name = "destination"
							layoutpolicy_horizontal = expanding

							text_single = {
								text = "ACTIVITY_LIST_DETAIL_JOIN_LOCATION"
							}

							text_single = {
								text = "ACTIVITY_LIST_DETAIL_JOIN_TRAVEL_TIME"
							}
						}

						vbox = {
							name = "effect"
							layoutpolicy_horizontal = expanding

							background = {
								name = "illustrations"
								texture = "gfx/interface/icons/lifestyle_tree_backgrounds/skulduggery.dds"
								tintcolor = { 0.6 0.8 0.8 0.8 }

								margin = { 0 5 }
								using = Mask_Rough_Edges
								alpha = 0.8
								fittype = centercrop
								mirror = horizontal

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_fade_corners_bottom.dds"
									blend_mode = alphamultiply
									alpha = 0.6
								}

								modify_texture = {
									texture = "gfx/interface/component_masks/mask_rough_edges.dds"
									blend_mode = overlay
									alpha = 0.4
								}
							}

							text_label_center = {
								text = "DECISION_DETAIL_EFFECTS"
							}

							text_multi = {
								layoutpolicy_horizontal = expanding
								margin = { 15 15 }
								max_width = 515
								autoresize = yes
								text = "ACTIVITY_LIST_DETAIL_JOIN_EFFECTS"
							}
						}

						expand = {}

					}
				}

				blockoverride "scrollbox_background_fade" {}
			}

			vbox = {
				name = "footer"
				layoutpolicy_horizontal = expanding

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_top = 4
					margin_bottom = 10
					spacing = 7

					container = {
						name = "latest_departure_date"
						visible = "[Not( IsDateAfter( GetCurrentDate, ActivityListDetailJoinView.GetLatestDepartureDate ) )]"

						text_single = {
							name = "latest_departure_date_normal_guest"
							text = "ACTIVITY_LIST_DETAIL_JOIN_DEPARTURE_TIME"
							visible = "[Not( Activity.IsSpecialGuest( GetPlayer ) )]"
						}

						container = {
							name = "latest_departure_date_special_guest"

							datacontext = "[Activity.GetSpecialGuestTypeForCharacter( GetPlayer )]"
							visible = "[Activity.IsSpecialGuest( GetPlayer )]"

							text_single = {
								text = "ACTIVITY_LIST_DETAIL_JOIN_REQUIRED_SPECIAL_GUEST"
								visible = "[ActivitySpecialGuestType.IsRequired]"
							}

							text_single = {
								text = "ACTIVITY_LIST_DETAIL_JOIN_DEPARTURE_TIME"
								visible = "[Not( ActivitySpecialGuestType.IsRequired )]"
							}
						}
					}

					text_single = {
						name = "may_not_arrive_in_time"
						text = "ACTIVITY_LIST_DETAIL_JOIN_MAY_NOT_ARRIVE_IN_TIME"
						visible = "[IsDateAfter( GetCurrentDate, ActivityListDetailJoinView.GetLatestDepartureDate )]"
					}

					hbox = {
						spacing = 10

						button_primary = {
							name = "confirm"
							size = { 380 50 }

							onclick = "[ActivityListDetailJoinView.Confirm]"

							text = "ACTIVITY_LIST_DETAIL_JOIN_CONFIRM"
						}

						button_round = {
							name = "change_left_character"

							onclick = "[Activity.DeclineInvite]"
							visible = "[Not( Activity.GetType.IsOpenInvite )]"
							size = { 40 40 }
							tooltip = "ACTIVITY_LIST_DECLINE_INVITE"

							button_dismiss = {
								size = { 35 35 }
								parentanchor = center
								alwaystransparent = yes
							}
						}
					}

					expand = {}
				}
			}
		}
	}
}

types ActivityListTypes
{
	type activity_host_item_button = button_standard
	{
		down = "[IsGameViewDataShown( 'activity_list_detail_host_window', ActivityType.Self )]"
		onclick = "[ToggleGameViewData( 'activity_list_detail_host_window', ActivityType.Self )]"

		tooltip = SHOW_ACTIVITY_TOOLTIP

		block "size" {
			size = { 300 52 }
		}

		widget = {
			parentanchor = right|top
			scissor = yes

			block "size_illustration" {
				size = { 250 43 }
			}

			icon = {
				name = "illustration"
				visible = "[ActivityType.CanStartActivity( GetPlayer )]"
				parentanchor = right|top
				size = { 250 100 }

				texture = "[ActivityType.GetHeaderBackground]"
				alpha = 0.7
				mirror = horizontal

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				visible = "[Not( ActivityType.CanStartActivity( GetPlayer ) )]"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[ActivityType.GetHeaderBackground]"
				alpha = 0.7

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			margin = { 4 0 }
			margin_right = 16
			spacing = 5

			highlight_icon = {
				name = "icon"
				size = { 40 40 }
				texture = "[ActivityType.GetIcon]"
			}

			vbox = {
				layoutpolicy_vertical = expanding

				spacing = -2
				minimumsize = { 150 -1 }

				expand = {}

				text_single = {
					name = "title"
					visible = "[ActivityType.CanStartActivity( GetPlayer )]"

					layoutpolicy_horizontal = expanding

					text = "[ActivityType.GetNameNoTooltip]"
					default_format = "#clickable"
					align = nobaseline
				}

				text_single = {
					name = "title_disabled"
					visible = "[Not( ActivityType.CanStartActivity( GetPlayer ) )]"

					layoutpolicy_horizontal = expanding

					text = "[ActivityType.GetNameNoTooltip]"
					align = nobaseline
				}

				text_single = {
					name = "base_cost"
					layoutpolicy_horizontal = expanding
					alwaystransparent = yes
					text = "ACTIVITY_BASE_COST"
					align = nobaseline
				}

				expand = {}
			}

			expand = {}

			highlight_icon = {
				size = { 30 30 }
				name = "not_possible"
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				visible = "[Not( Or(ActivityType.CanStartActivity( GetPlayer ), ActivityType.CanAlwaysPlan() ) )]"
			}
		}
	}

	type activity_join_item_button = button_standard
	{
		datacontext = "[Activity.GetType]"
		down = "[IsGameViewDataShown( 'activity_list_detail_invite_window', Activity.Self )]"
		onclick = "[ToggleGameViewData( 'activity_list_detail_invite_window', Activity.Self )]"

		tooltip = JOIN_ACTIVITY_TOOLTIP

		block "size" {
			size = { 300 52 }
		}

		widget = {
			parentanchor = right|top
			scissor = yes

			block "size_illustration" {
				size = { 250 43 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[ActivityType.GetHeaderBackground]"
				alpha = 0.7

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

			margin = { 4 0 }
			margin_right = 8
			spacing = 4

			highlight_icon = {
				name = "icon"
				size = { 40 40 }
				texture = "[ActivityType.GetIcon]"
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				spacing = -2

				expand = {}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 20

					text_single = {
						name = "title"
						text = "[Activity.GetNameNoTooltip]"
						default_format = "#clickable"
						align = nobaseline
					}

					expand = {}
				}

				expand = {}
			}

			block "right_side"
			{
			}

			expand = {}
		}
	}

	type travel_trait_small_vbox = vbox
	{
		text_single = {
			block "name"
			{
				raw_text = "#D NAME#!"
			}
		}

		hbox = {
			debug_square = {
				size = { 50 50 }
			}

			progressbar_standard = {
				size = { 100 20 }
				min = 0
				max = 1
				value = 0.5
			}
		}
	}
}
