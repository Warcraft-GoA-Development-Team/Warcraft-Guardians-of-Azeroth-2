# Warcraft - TODO: Need adaptation
story_cycle_house_feud = {

	on_setup = {
		### Scopes
		save_scope_as = house_feud_story
		story_owner = {
			add_character_flag = had_house_feud_story
			var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
			remove_variable = house_feud_house
		}

		### Tracking variables
		# Save Feud target House
		set_variable = {
			name = house_feud_house
			value = scope:house_feud_rival.house
		}
		# Save Feud starter
		set_variable = {
			name = house_feud_first_owner
			value = story_owner
		}
		# Save first Feud target House Head
		set_variable = {
			name = house_feud_first_rival
			value = scope:house_feud_rival
		}
		# Save feud length counter
		set_variable = {
			name = house_feud_length_counter
			value = 0
		}
		# Save feud death counter
		set_variable = {
			name = house_feud_death_counter
			value = 0
		}
		# Save feud kill counter
		set_variable = {
			name = house_feud_kill_counter
			value = 0
		}

		### Effects
		# Inform House Members feud has started
		story_owner.house = {
			every_house_member = {
				limit = { is_ai = no }
				send_interface_message = {
					type = house_feud_begins_message
					left_icon = scope:story.story_owner
					right_icon = scope:house_feud_rival
					show_as_tooltip = {
						house.house_head = { set_relation_rival = scope:house_feud_rival } #Show as tooltip does not require a reason
					}
				}
				if = {
					limit = { house_feud_member_ping_trigger = yes }
					trigger_event = {
						id = bp1_house_feud.0600
						days = 5
					}
				}
			}
		}
		# Chance to inform target House Head, who can reciprocate
		story_owner = { save_scope_as = house_feud_attacker }
		var:house_feud_house.house_head = {
			trigger_event = {
				id = bp1_house_feud.0501
				months = { 1 2 }
			}
		}
	}

	on_end = {
		if = {
			limit = {
				NAND = {
					exists = story_owner.var:house_feud_swapped_house
					story_owner.var:house_feud_swapped_house = var:house_feud_house
				}
			}
			house_feud_end_modifier_effect = yes
		}
		story_owner = {
			save_scope_as = house_feud_ender
			house = {
				set_variable = {
					name = house_feud_cooldown
					years = 25
				}
				set_variable = {
					name = house_feud_ended
					years = 1
				}
				hidden_effect = {
					if = {
						limit = {
							any_house_member = { is_alive = yes }
						}
						every_house_member = {
							limit = { is_alive = yes }
							if = {
								limit = {
									exists = scope:house_feud_rival
									scope:house_feud_rival = { is_alive = yes }
									has_opinion_modifier = {
										modifier = house_feud_opinion
										target = scope:house_feud_rival
									}
								}
								remove_opinion = {
									modifier = house_feud_opinion
									target = scope:house_feud_rival
								}
							}
							if = {
								limit = { is_ai = no }
								send_interface_message = {
									type = house_feud_ends_message
									left_icon = scope:house_feud_ender
									right_icon = scope:house_feud_rival
									scope:house_feud_ender.house = {
										show_as_tooltip = {
											switch = {
												trigger = has_house_modifier
												house_feud_terrible_modifier = {
													add_house_modifier = {
														modifier = house_feud_terrible_modifier
														years = 25
													}
												}
												house_feud_bad_modifier = {
													add_house_modifier = {
														modifier = house_feud_bad_modifier
														years = 25
													}
												}
												house_feud_even_modifier = {
													add_house_modifier = {
														modifier = house_feud_even_modifier
														years = 25
													}
												}
												house_feud_good_modifier = {
													add_house_modifier = {
														modifier = house_feud_good_modifier
														years = 25
													}
												}
												house_feud_excellent_modifier = {
													add_house_modifier = {
														modifier = house_feud_excellent_modifier
														years = 25
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		# Inform target feud has ended
		if = {
			limit = {
				exists = var:house_feud_house.house_head
				var:house_feud_house.house_head = { is_alive = yes }
			}
			story_owner = { save_scope_as = house_feud_attacker }
			var:house_feud_house.house_head = {
				trigger_event = {
					id = bp1_house_feud.0502
					days = 5
				}
			}
		}
	}

	on_owner_death = {
		# Transfer to heir
		if = {
			limit = {
				exists = scope:story.var:house_feud_house.house_head
				story_owner = {
					is_landed = yes
					exists = player_heir
				}
			}
			var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
			story_owner = {
				save_scope_as = old_house_head
				player_heir = { save_scope_as = new_story_owner }
			}
			transfer_house_feud_story_cycle_to_effect = {
				CHARACTER = scope:new_story_owner
				STORY = scope:story
			}
		}
		# Or destroy
		else = {
			scope:story = { end_story = yes }
		}
	}

	# Something happens - random events
	effect_group = {
		years = { 1 2 }
		chance = 50

		trigger = {
			exists = var:house_feud_house.house_head
			var:house_feud_house.house_head = { is_alive = yes }
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
				story_owner = {
					trigger_event = { on_action = ongoing_house_feud_events }
				}
			}
		}
	}

	# Start AI scheme
	effect_group = {
		months = 3
		chance = 100 # TODO

		trigger = {
			exists = var:house_feud_house.house_head
			var:house_feud_house.house_head = { is_alive = yes }
			story_owner.house = {
				any_house_member = { house_feud_ai_scheme_trigger = yes }
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				story_owner.house = {
					random_house_member = {
						limit = { house_feud_ai_scheme_trigger = yes }
						weight = {
							base = 1
							modifier = {
								factor = 2
								has_trait = deceitful
							}
							modifier = {
								factor = 0.5
								has_trait = honest
							}
							modifier = {
								factor = 2
								has_trait = vengeful
							}
							modifier = {
								factor = 0.25
								has_trait = forgiving
							}
							modifier = {
								factor = 2
								has_trait = schemer
							}
							modifier = {
								factor = 2
								ai_honor <= high_negative_ai_value
							}
							modifier = {
								factor = 2
								ai_honor <= medium_negative_ai_value
							}
							modifier = {
								factor = 0.5
								ai_honor >= medium_positive_ai_value
							}
							modifier = {
								factor = 0.5
								ai_honor >= high_positive_ai_value
							}
							modifier = {
								factor = 0.5
								ai_honor >= very_high_positive_ai_value
							}
						}
						trigger_event = { on_action = house_feud_ai_scheme_pulse }
					}
				}
			}
		}
	}

	#Achieved claim
	effect_group = {
		days = 1

		trigger = {
			NOT = { has_variable = house_feud_revenged }
			story_owner = { age >= 9 }
			has_variable = house_feud_reason
			var:house_feud_reason = flag:competing_claim
			has_variable = house_feud_title
			var:house_feud_title = {
				exists = previous_holder.house
				previous_holder.house = scope:story.var:house_feud_first_rival.house
				holder.house = scope:story.story_owner.house
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
				var:house_feud_title = {
					save_scope_as = house_feud_title
					previous_holder = { save_scope_as = previous_holder_scope }
				}
				set_variable = {
					name = house_feud_revenged
					value = scope:house_feud_rival.house
				}
				story_owner = { trigger_event = bp1_house_feud.7000 }
			}
		}
	}

	#Avenged death
	effect_group = {
		days = 1

		trigger = {
			NOT = { has_variable = house_feud_revenged }
			story_owner = { age >= 9 }
			has_variable = house_feud_reason
			OR = {
				var:house_feud_reason = flag:head_killed
				var:house_feud_reason = flag:family_killed
			}
			has_variable = house_feud_attacker
			var:house_feud_attacker = {
				is_alive = no
				exists = killer
				killer.house = scope:story.story_owner.house
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
				var:house_feud_attacker = { save_scope_as = house_feud_attacker }
				var:house_feud_victim = { save_scope_as = house_feud_victim }
				set_variable = {
					name = house_feud_revenged
					value = scope:house_feud_rival.house
				}
				story_owner = { trigger_event = bp1_house_feud.7001 }
			}
		}
	}
	
	#Count length of the feud
	effect_group = {
		years = 1

		trigger = { exists = var:house_feud_length_counter }

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				change_variable = {
					name = house_feud_length_counter
					add = 1
				}
			}
		}
	}

	#Out of diplo range
	effect_group = {
		days = 1

		trigger = {
			exists = scope:story.var:house_feud_house.house_head
			scope:story.var:house_feud_house.house_head = { is_alive = yes }
			NOT = {
				story_owner = { in_diplomatic_range = scope:story.var:house_feud_house.house_head }
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
				end_story = yes
			}
		}
	}

	#Wiped out
	effect_group = {
		days = 1

		trigger = {
			story_owner.age >= 9
			house_feud_wiped_out_trigger = yes
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				story_owner = { trigger_event = bp1_house_feud.0830 }
			}
		}
	}

	#Not rival with house head
	effect_group = {
		months = { 1 2 }

		trigger = {
			story_owner = {
				age >= 9
				trigger_if = {
					limit = {  has_variable = house_feud_next_cooldown }
					NOT = { var:house_feud_next_cooldown = scope:story.var:house_feud_house.house_head } 
				}
			}
			exists = var:house_feud_house.house_head
			exists = var:house_feud_first_rival
			var:house_feud_house = var:house_feud_first_rival.house
			var:house_feud_house.house_head = {
				is_alive = yes
				age >= 9
				NOT = { has_relation_rival = scope:story.story_owner }
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
				story_owner = { trigger_event = bp1_house_feud.0840 }
			}
		}
	}

	#Add opinion modifiers
	effect_group = {
		months = 6

		trigger = {
			story_owner.house = {
				any_house_member = {
					is_adult = yes
					in_diplomatic_range = scope:story.story_owner
					NOR = {
						this = this.house.house_head
						AND = {
							exists = scope:story.var:house_feud_house.house_head
							has_opinion_modifier = {
								target = scope:story.var:house_feud_house.house_head
								modifier = house_feud_opinion
							}
						}
					}
				}
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				story_owner.house = {
					every_house_member = {
						limit = { house_feud_member_ping_trigger = yes }
						scope:story.var:house_feud_house.house_head = { save_scope_as = house_feud_rival }
						trigger_event = bp1_house_feud.0600
					}
				}
			}
		}
	}

	# Target house can decide to reciprocate
	effect_group = {
		months = 6
		trigger = {
			exists = scope:story.var:house_feud_house.house_head
			scope:story.var:house_feud_house.house_head = {
				house_feud_house_head_trigger = yes
				trigger_if = {
					limit = { has_variable = house_feud_reciprocate_cooldown }
					NOT = { var:house_feud_reciprocate_cooldown = scope:story.story_owner.house }
				}
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				story_owner = { save_scope_as = house_feud_rival }
				scope:story = { save_scope_as = other_house_feud_story }
				scope:story.var:house_feud_house.house_head = {
					random = {
						chance = 50
						modifier = {
							add = 25
							intrigue > scope:house_feud_rival.intrigue
						}
						modifier = {
							add = 25
							has_relation_nemesis = scope:house_feud_rival
						}
						modifier = {
							add = -25
							has_trait = trusting
						}
						trigger_event = bp1_house_feud.0500
					}
				}
			}
		}
	}

	#Murder inform
	effect_group = {
		months = 1

		trigger = {
			story_owner.house = {
				any_house_member = {
					opinion = {
						target = scope:story.story_owner
						value >= -25
					}
					NOT = {
						has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:story.story_owner }
					}
					any_secret = {
						secret_type = secret_murder
						secret_target = {
							exists = house
							house = scope:story.var:house_feud_house
						}
						NOT = {
							any_secret_knower = { this = scope:story.story_owner }
						}
					}
				}
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				story_owner.house = {
					random_house_member = {
						limit = {
							opinion = {
								target = scope:story.story_owner
								value >= -25
							}
							NOT = {
								has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:story.story_owner }
							}
						}
						random_secret = {
							limit = {
								secret_type = secret_murder
								secret_target = {
									exists = house
									house = scope:story.var:house_feud_house
								}
								NOT = {
									any_secret_knower = { this = scope:story.story_owner }
								}
							}
							reveal_to = scope:story.story_owner
						}
					}
				}
			}
		}
	}

	effect_group = {
		months = 1

		trigger = {
			story_owner.house = {
				any_house_member = {
					opinion = {
						target = scope:story.story_owner
						value >= -25
					}
					NOT = {
						has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:story.story_owner }
					}
					any_secret = {
						secret_type = secret_lover
						secret_target = {
							exists = house
							house = scope:story.var:house_feud_house
						}
						NOT = {
							any_secret_knower = { this = scope:story.story_owner }
						}
					}
				}
			}
		}

		triggered_effect = {
			trigger = { always = yes }
			effect = {
				story_owner.house = {
					random_house_member = {
						limit = {
							opinion = {
								target = scope:story.story_owner
								value >= -25
							}
							NOT = {
								has_any_bad_relationship_with_character_trigger = { CHARACTER = scope:story.story_owner }
							}
						}
						random_secret = {
							limit = {
								secret_type = secret_lover
								secret_target = {
									exists = house
									house = scope:story.var:house_feud_house
								}
								NOT = {
									any_secret_knower = { this = scope:story.story_owner }
								}
							}
							reveal_to = scope:story.story_owner
						}
					}
				}
			}
		}
	}
}
