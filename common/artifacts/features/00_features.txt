#################################################################
# Universal Features - Patterns, Inlays, (Filigree) Wire, etc.	#
#################################################################
# decoration_pattern
	decoration_pattern_wolf = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_wolf_trigger = yes }
		weight = 1
	}

	decoration_pattern_animals = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_animals_trigger = yes }
		weight = 1
	}

	decoration_pattern_local_animal = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_local_animal_trigger = yes }
		weight = 1
	}

	decoration_pattern_beasts = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_beasts_trigger = yes }
		weight = 1
	}

	decoration_pattern_bird = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_bird_trigger = yes }
		weight = 1
	}

	decoration_pattern_war_god = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_war_god_trigger = yes }
		weight = 1
	}

	decoration_pattern_religion = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_religion_trigger = yes }
		weight = 1
	}

	decoration_pattern_eschatology = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_eschatology_trigger = yes }
		weight = 1
	}

	decoration_pattern_religious_symbol = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_religious_symbol_trigger = yes }
		weight = 1
	}

	decoration_pattern_gibberish = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_gibberish_trigger = yes }
		weight = 1
	}

	decoration_pattern_culture_symbol = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_culture_symbol_trigger = yes }
		weight = 1
	}

	decoration_pattern_culture_style = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_culture_style_trigger = yes }
		weight = 1
	}

	decoration_pattern_dynasty_shield = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_dynasty_shield_trigger = yes }
		weight = 1
	}

	decoration_pattern_dynasty_motifs = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_dynasty_motifs_trigger = yes }
		weight = 1
	}

	decoration_pattern_roses = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_roses_trigger = yes }
		weight = 1
	}

	decoration_pattern_floral = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_floral_trigger = yes }
		weight = 1
	}

	decoration_pattern_geometric = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_geometric_trigger = yes }
		weight = 1
	}

	decoration_pattern_quotes = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_quotes_trigger = yes }
		weight = 1
	}

	decoration_pattern_knots = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_knots_trigger = yes }
		weight = 1
	}

	decoration_pattern_bodies = {
		group = decoration_pattern
		trigger = { artifact_feature_pattern_bodies_trigger = yes }
		weight = 1
	}

# decoration_material_inlay
	decoration_material_inlay_gold = {
		group = decoration_material_inlay
		trigger = { scope:wealth >= 60 }
		weight = 20
	}
	decoration_material_inlay_electrum = {
		group = decoration_material_inlay
		trigger = { scope:wealth < 80 scope:wealth >= 40 }
		weight = 10
	}
	decoration_material_inlay_niello = {
		group = decoration_material_inlay
		trigger = { scope:wealth < 80 scope:wealth >= 40 }
		weight = 20
	}
	decoration_material_inlay_silver = {
		group = decoration_material_inlay
		trigger = {scope:wealth < 60 scope:wealth >= 20 }
		weight = 10
	}
	decoration_material_inlay_copper = {
		group = decoration_material_inlay
		trigger = { scope:wealth < 40 }
		weight = 10
	}
	decoration_material_inlay_pewter = {
		group = decoration_material_inlay
		trigger = { scope:wealth < 40 }
		weight = 20
	}

# decoration_material_inlay_HSB
	# Common. All regions should have access to *at least* one of these.
	decoration_material_inlay_HSB_camel_bone = {
		group = decoration_material_inlay_HSB
		trigger = {
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_camel_bone } #Half of the world
		}
		weight = 20
	}
	decoration_material_inlay_HSB_deer_antler = {
		group = decoration_material_inlay_HSB
		trigger = {
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_deer_antler } #The other half
		}
		weight = 20
	}
	decoration_material_inlay_HSB_boar_tusk = {
		group = decoration_material_inlay_HSB
		trigger = {
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_boar_tusk }
		}
		weight = 20
	}
	decoration_material_inlay_HSB_seashell = {
		group = decoration_material_inlay_HSB
		trigger = {
			OR = {
				# Warcraft
				scope:owner.culture = { has_cultural_pillar = heritage_amphibian }
				
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_seashell }
			}
		}
		
		# Warcraft
		weight = {
			value = 20
			# Murlocs love seashells
			if = {
				limit = { scope:owner.culture = { has_cultural_pillar = heritage_amphibian } }
				add = 100
			}
		}
	}

	# Rare, Expensive, or Region-Specific. Not all regions will have access to these.
	decoration_material_inlay_HSB_tortoiseshell = {
		group = decoration_material_inlay_HSB
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_tortoiseshell }
		}
		weight = 80
	}
	decoration_material_inlay_HSB_mother_of_pearl = {
		group = decoration_material_inlay_HSB
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_mother_of_pearl }
		}
		weight = 80
	}
	decoration_material_inlay_HSB_ivory = {
		group = decoration_material_inlay_HSB
		trigger = {
			OR = {
				AND = {
					artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
				}
				AND = {
					artifact_value_trigger = { VALUE = scope:wealth MIN = 80 MAX = 999 }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_imported }
				}
			}
		}
		weight = {
			value = 40
			if = {
				limit = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
				}
				add = 40
			}
		}
	}

# decoration_material_wire
	decoration_material_wire_gold = {
		group = decoration_material_wire
		trigger = { scope:wealth >= 60 }
		weight = 30
	}
	decoration_material_wire_electrum = {
		group = decoration_material_wire
		trigger = { scope:wealth < 80 scope:wealth >= 40 }
		weight = 20
	}
	decoration_material_wire_silver = {
		group = decoration_material_wire
		trigger = {scope:wealth < 60 scope:wealth >= 20 }
		weight = 20
	}
	decoration_material_wire_brass = {
		group = decoration_material_wire
		trigger = { scope:wealth < 40 }
		weight = 30
	}
	decoration_material_wire_latten = {
		group = decoration_material_wire
		trigger = {
			scope:wealth < 40

			# Only commonly used by the Christian church
			exists = religion
			like_christianity_religion_trigger = yes
		}
		weight = 30
	}
	decoration_material_wire_copper = {
		group = decoration_material_wire
		trigger = { scope:wealth < 20 }
		weight = 10
	}
	decoration_material_wire_pewter = {
		group = decoration_material_wire
		trigger = { scope:wealth < 20 }
		weight = 10
	}

# decoration_material_gem
	# Cheap/Common Gems, Everywhere
	decoration_material_gem_rock_crystal = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 20 } }	
		weight = 20
	}
	decoration_material_gem_jet = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 10 MAX = 30 } }	
		weight = 20
	}
	decoration_material_gem_agate = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 40 } }	
		weight = 20
	}
	decoration_material_gem_onyx = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 40 } }	
		weight = 20
	}

	# Semi-Precious Gems, Everywhere
	decoration_material_gem_jasper = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 30 MAX = 50 } }	
		weight = 20
	}
	decoration_material_gem_zircon = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 35 MAX = 60 } }	
		weight = 20
	}
	decoration_material_gem_garnet = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 70 } }	
		weight = 20
	}
	
	# Rare/Precious Gems, Everywhere
	decoration_material_gem_sapphire = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 } }	
		weight = 30
	}
	decoration_material_gem_emerald = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 999 } }	
		weight = 30
	}
	decoration_material_gem_ruby = {
		group = decoration_material_gem
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 70 MAX = 999 } }	
		weight = 30
	}

	# Semi-Precious Gems, Regional
	decoration_material_gem_flourite = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 60 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe_west_britannia }	
		}		
		weight = 30
	}
	decoration_material_gem_adventurine = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 60 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe_west_iberia }	
		}		
		weight = 30
	}
	decoration_material_gem_amethyst = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 60 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe_west_francia }
		}	
		weight = 30
	}
	decoration_material_gem_amber = {
		group = decoration_material_gem
		trigger = {
			# Warcraft
			artifact_feature_gem_amber_trigger = yes
		}
		
		# Warcraft
		weight = {
			value = 30
			# Mantid love amber
			if = {
				limit = {
					scope:owner.culture = {
						is_culture_or_parent_culture_trigger = { CULTURE = culture:mantid }
					}
				}
				add = 100
			}
		}
	}
	decoration_material_gem_moonstone = {
		group = decoration_material_gem
		trigger = {
			# Warcraft
			artifact_feature_gem_moonstone_trigger = yes
		}
		weight = 30
	}
	decoration_material_gem_turquoise = {
		group = decoration_material_gem
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 70 }
				OR = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = world_asia_minor }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = world_middle_east_persia }
				}
			}
		}
		weight = 30
	}
	decoration_material_gem_carnelian = {
		group = decoration_material_gem
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 70 }
				OR = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe_west_germania }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe_north }
				}
			}
		}	
		weight = 30
	}

	# Rare/Precious Gems, Regional
	decoration_material_gem_peridot = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 80 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_india_deccan }
		}	
		weight = 40
	}
	decoration_material_gem_lapis_lazuli = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 90 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_middle_east_persia }
		}
		weight = 40
	}
	decoration_material_gem_opal = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 90 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_africa_east }
		}		
		weight = 40
	}
	decoration_material_gem_spinel = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 90 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_india_deccan }
		}
		weight = 40
	}
	decoration_material_gem_jade = {
		group = decoration_material_gem
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 90 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_india_bengal }
		}	
		weight = 40
	}

# decoration_material_embroidery
	decoration_material_embroidery_wool = {
		group = decoration_material_embroidery
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 40 } }
		weight = 10
	}
	
	decoration_material_embroidery_linen = {
		group = decoration_material_embroidery
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 60 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_linen }
		}	
		weight = 10
	}
	decoration_material_embroidery_cotton = {
		group = decoration_material_embroidery
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 10 MAX = 60 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_cotton }
		}	
		weight = 10
	}
	decoration_material_embroidery_silk = {
		group = decoration_material_embroidery
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 70 }
			NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_no_silk } }
		}
		weight = 40
	}
	decoration_material_embroidery_silver_thread = {
		group = decoration_material_embroidery
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 70 }
		}
		weight = 40
	}
	decoration_material_embroidery_gold_thread = {
		group = decoration_material_embroidery
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 999 }
		}
		weight = 50
	}

# generic_material_cloth
	# wools - found literally everywhere
	generic_material_cloth_wool = {
		# Simple wool fabric, can vary wildly in quality and appearance depending on the yarn used to wave it as well as the weaver's skill. 
		group = generic_material_cloth
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 60 } }
		weight = 30
	}
	generic_material_cloth_lambswool = {
		group = generic_material_cloth
		# Wool from the very first shearing of a sheep. Soft, elastic, and slippery, used in high-grade textiles.
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 999 } }	
		weight = 10
	}
	# silks - found pretty much everywhere but subsaharan Africa
	generic_material_cloth_silk = {
		# Plain silk weave. Average quality, but carries some statue and value simply due to its material.
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 70 }
			NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_no_silk } }
		}
		weight = 20
	}
	generic_material_cloth_satin = {
		# Satin weave silk, luxurious and soft. Becomes famous in 12th century Europe after the Crusades.
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 80 }
			NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_no_silk } }
		}	
		weight = 30
	}
	generic_material_cloth_velvet = {
		# Velvet is a piled silk weave popular in the Middle East. Must be woven on a special loom, and due to the difficulty of manufacture it is associated with nobility.
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 90 }
			NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_no_silk } }
		}	
		weight = 30
	}
	generic_material_cloth_samite = {
		# Twill silk weave that is popular in the Byzantine Empire, originally developed in Sassanid Persia. Commonly restricted to royalty or clergy.
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 70 MAX = 999 }
			NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_no_silk } }
		}	
		weight = 10
	}
	# linens - modern Germany was a major producer of this linen, which was exported all throughout Europe (but not really beyond that)
	generic_material_cloth_linen = {
		# Plain weave flax fibers. Consistently average in quality and price, saw widespread use throughout the medieval era.
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 60 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_linen }
		}	
		weight = 40
	}
	generic_material_cloth_fustian = {
		# Twill cotton-linen blend. As it a mixed fabric, practicing Jews are forbidden to wear it.
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 70 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_linen }
			trigger_if = {
				limit = { exists = scope:owner }
				NOT = { scope:owner = { like_judaism_religion_trigger = yes } }
			}
		}	
		weight = 30
	}
	# cotton has been grown in Egypt and India since ancient times, spread to Ethiopia early and then to Europe in the medieval period
	generic_material_cloth_cotton = {
		# Plain weave cotton
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 10 MAX = 70 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_cotton }
		}	
		weight = 50
	}
	# regional specialties
	generic_material_cloth_worsted_wool = {
		# Worsting was a special process for manufactuing high-quality wool that developed in England
		group = generic_material_cloth
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 999 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe_west_britannia }
			current_date >= 1200.1.1
		}	
		weight = 40
	}

# generic_material_cordage
	generic_material_cordage_wool = {
		# Simple wool fabric, can vary wildly in quality and appearance depending on the yarn used to wave it as well as the weaver's skill. 
		group = generic_material_cordage
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 70 } }
		weight = 30
	}
	generic_material_cordage_silk = {
		# Plain silk weave. Average quality, but carries some statue and value simply due to its material.
		group = generic_material_cordage
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 999 }
			#NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_no_silk } }
			#Silk can be aquired even outside of this region if skilled enough
		}
		weight = 20
	}
	generic_material_cordage_linen = {
		# Plain weave flax fibers. Consistently average in quality and price, saw widespread use throughout the medieval era.
		group = generic_material_cordage
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 70 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_linen }
		}	
		weight = 40
	}
	generic_material_cordage_cotton = {
		# Plain weave cotton
		group = generic_material_cordage
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 10 MAX = 80 }
			artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_cotton }
		}	
		weight = 50
	}

# generic_material_wood
	generic_material_wood_ash = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_ash_trigger = yes }
		weight = 1
	}

	generic_material_wood_oak = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_oak_trigger = yes }
		weight = 1
	}

	generic_material_wood_pine = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_pine_trigger = yes }
		weight = 1
	}

	generic_material_wood_fir = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_fir_trigger = yes }
		weight = 1
	}

	generic_material_wood_elm = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_elm_trigger = yes }
		weight = 1
	}

	generic_material_wood_walnut = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_walnut_trigger = yes }
		weight = 1
	}

	generic_material_wood_maple = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_maple_trigger = yes }
		weight = 1
	}

	generic_material_wood_fleroya = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_fleroya_trigger = yes }
		weight = 1
	}

	generic_material_wood_sycomore = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_sycomore_trigger = yes }
		weight = 1
	}

	generic_material_wood_padauk = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_padauk_trigger = yes }
		weight = 1
	}

	generic_material_wood_sal = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_sal_trigger = yes }
		weight = 1
	}

	generic_material_wood_rosewood = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_rosewood_trigger = yes }
		weight = 1
	}

	generic_material_wood_satinwood = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_satinwood_trigger = yes }
		weight = 1
	}

	generic_material_wood_teak = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_teak_trigger = yes }
		weight = 1
	}

	generic_material_wood_yew = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_yew_trigger = yes }
		weight = 1
	}

	generic_material_wood_olivewood = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_olivewood_trigger = yes }
		weight = 1
	}

	generic_material_wood_coromandel = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_coromandel_trigger = yes }
		weight = 1
	}

	generic_material_wood_ebony = {
		group = generic_material_wood
		trigger = { artifact_feature_wood_ebony_trigger = yes }
		weight = 1
	}	

#################################################################
# Weapon Core Features - Blades, Hilts, Heads, (S)hafts)		#
#################################################################

# blade_metal - swords and daggers
	blade_metal_wrought_iron = {
		group = blade_metal
		trigger = { artifact_feature_metal_wrought_iron_trigger = yes }
		weight = 1
	}

	blade_metal_folded_iron = {
		group = blade_metal
		trigger = { artifact_feature_metal_folded_iron_trigger = yes }
		weight = 10
	}

	blade_metal_wootz_steel = {
		group = blade_metal
		trigger = { artifact_feature_metal_wootz_steel_trigger = yes }
		weight = 20
	}

	blade_metal_damascus_steel = {
		group = blade_metal
		trigger = {artifact_feature_metal_damascus_steel_trigger = yes }
		weight = 20
	}

	blade_metal_bulat_steel = {
		group = blade_metal
		trigger = { artifact_feature_metal_bulat_steel_trigger = yes }
		weight = 20
	}

# head_metal - axes, hammers, maces, and spears
	head_metal_wrought_iron = {
		group = head_metal
		trigger = { artifact_feature_metal_wrought_iron_trigger = yes }
		weight = 1
	}

	head_metal_wootz_steel = {
		group = head_metal
		trigger = { artifact_feature_metal_wootz_steel_trigger = yes }
		weight = 20
	}

	head_metal_damascus_steel = {
		group = head_metal
		trigger = {artifact_feature_metal_damascus_steel_trigger = yes }
		weight = 20
	}

	head_metal_bulat_steel = {
		group = head_metal
		trigger = { artifact_feature_metal_bulat_steel_trigger = yes }
		weight = 20
	}

# handle_metal - maces
	handle_metal_wrought_iron = {
		group = handle_metal
		trigger = { artifact_feature_metal_wrought_iron_trigger = yes }
		weight = 1
	}

	handle_metal_wootz_steel = {
		group = handle_metal
		trigger = { artifact_feature_metal_wootz_steel_trigger = yes }
		weight = 1
	}

	handle_metal_damascus_steel = {
		group = handle_metal
		trigger = {artifact_feature_metal_damascus_steel_trigger = yes }
		weight = 1
	}

	handle_metal_bulat_steel = {
		group = handle_metal
		trigger = { artifact_feature_metal_bulat_steel_trigger = yes }
		weight = 1
	}

# shaft_wood - axes, hammers, spears
	shaft_wood_ash = {
		group = shaft_wood
		trigger = { artifact_feature_wood_ash_trigger = yes }
		weight = 1
	}

	shaft_wood_pine = {
		group = shaft_wood
		trigger = { artifact_feature_wood_pine_trigger = yes }
		weight = 1
	}

	shaft_wood_fir = {
		group = shaft_wood
		trigger = { artifact_feature_wood_fir_trigger = yes }
		weight = 1
	}

	shaft_wood_elm = {
		group = shaft_wood
		trigger = { artifact_feature_wood_elm_trigger = yes }
		weight = 1
	}

	shaft_wood_walnut = {
		group = shaft_wood
		trigger = { artifact_feature_wood_walnut_trigger = yes }
		weight = 1
	}

	shaft_wood_maple = {
		group = shaft_wood
		trigger = { artifact_feature_wood_maple_trigger = yes }
		weight = 1
	}

	shaft_wood_fleroya = {
		group = shaft_wood
		trigger = { artifact_feature_wood_fleroya_trigger = yes }
		weight = 1
	}

	shaft_wood_sycomore = {
		group = shaft_wood
		trigger = { artifact_feature_wood_sycomore_trigger = yes }
		weight = 1
	}

	shaft_wood_padauk = {
		group = shaft_wood
		trigger = { artifact_feature_wood_padauk_trigger = yes }
		weight = 1
	}

	shaft_wood_sal = {
		group = shaft_wood
		trigger = { artifact_feature_wood_sal_trigger = yes }
		weight = 1
	}

	shaft_wood_rosewood = {
		group = shaft_wood
		trigger = { artifact_feature_wood_rosewood_trigger = yes }
		weight = 1
	}

	shaft_wood_satinwood = {
		group = shaft_wood
		trigger = { artifact_feature_wood_satinwood_trigger = yes }
		weight = 1
	}

	shaft_wood_teak = {
		group = shaft_wood
		trigger = { artifact_feature_wood_teak_trigger = yes }
		weight = 1
	}

	shaft_wood_yew = {
		group = shaft_wood
		trigger = { artifact_feature_wood_yew_trigger = yes }
		weight = 1
	}

	shaft_wood_olivewood = {
		group = shaft_wood
		trigger = { artifact_feature_wood_olivewood_trigger = yes }
		weight = 1
	}

	shaft_wood_coromandel = {
		group = shaft_wood
		trigger = { artifact_feature_wood_coromandel_trigger = yes }
		weight = 1
	}

	shaft_wood_ebony = {
		group = shaft_wood
		trigger = { artifact_feature_wood_ebony_trigger = yes }
		weight = 1
	}

	shaft_wood_oak = {
		group = shaft_wood
		trigger = { artifact_feature_wood_oak_trigger = yes }
		weight = 1
	}

#################################################################
# Weapon Decorative Features - Blades, Hilts, Heads, (S)hafts) 	#
#################################################################

# blade_decoration - swords and daggers
	blade_decoration_etched_pattern = {
		group = blade_decoration
		trigger = { artifact_has_pattern_trigger = no }
		weight = 1
	}
	blade_decoration_etched_motto = {
		group = blade_decoration
		weight = 1
	}
	blade_decoration_etched_owner = {
		group = blade_decoration
		weight = 1
	}

# hilt_decoration - swords and daggers
	hilt_decoration_carved_pattern = {
		group = hilt_decoration
		trigger = { artifact_has_pattern_trigger = no }
		weight = 1
	}
	hilt_decoration_inlay_pattern = {
		group = hilt_decoration
		trigger = { artifact_has_pattern_trigger = no }
		weight = 1
	}
	hilt_decoration_filigree = {
		group = hilt_decoration
		weight = 1
	}
	hilt_decoration_rounded_pommels = {
		group = hilt_decoration
		weight = 1
	}
	hilt_decoration_wires = {
		group = hilt_decoration
		weight = 1
	}
	hilt_decoration_circles = {
		group = hilt_decoration
		weight = 1
	}
	hilt_decoration_twisting = {
		group = hilt_decoration
		weight = 1
	}

# head_decoration - spears, hammers, axes, and maces
	head_decoration_etched_pattern = {
		group = head_decoration
		trigger = { artifact_has_pattern_trigger = no }
		weight = 1
	}
	head_decoration_religious_motifs = {
		group = head_decoration
		weight = 1
	}

# shaft_decoration - spears, hammers, and axes
	shaft_decoration_varnish = {
		group = shaft_decoration
		weight = 1
	}
	shaft_decoration_grooves = {
		group = shaft_decoration
		weight = 1
	}
	shaft_decoration_wavelets = {
		group = shaft_decoration
		weight = 1
	}
	shaft_decoration_lines = {
		group = shaft_decoration
		weight = 1
	}
	shaft_decoration_inlay = {
		group = shaft_decoration
		weight = 1
	}
	shaft_decoration_painted_pattern = {
		group = shaft_decoration
		trigger = { artifact_has_pattern_trigger = no }
		weight = 1
	}

# metal_handle_decoration - maces
	metal_handle_decoration_etched_pattern = {
		group = metal_handle_decoration
		trigger = { artifact_has_pattern_trigger = no }
		weight = 1
	}
	metal_handle_decoration_inlay = {
		group = metal_handle_decoration
		weight = 1
	}


#################################################################
# Armor Features - Material, Helmet, Decoration					#
#################################################################

# armor_material - plates, scales, etc.
	armor_material_hardened_leather = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:quality MIN = 0 MAX = 999 }
			exists = scope:armor_type
			scope:armor_type = {
				OR = {			
					this = flag:armor_type_scale
					this = flag:armor_type_lamellar
					this = flag:armor_type_laminar
					this = flag:armor_type_brigandine
				}
			}
		}
		weight = 20
	}

	armor_material_iron = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:quality MIN = 0 MAX = 999 }
			trigger_if = {
				limit = { exists = scope:armor_type }
				NOT = { scope:armor_type = flag:armor_type_brigandine }
			}
		}
		weight = 40
	}

	armor_material_steel = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:quality MIN = 50 MAX = 999 }
			trigger_if = {
				limit = { exists = scope:armor_type }
				NOT = { scope:armor_type = flag:armor_type_brigandine }
			}
		}
		weight = 30
	}

	armor_material_gold = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:quality MIN = 50 MAX = 999 }
			trigger_if = {
				limit = { exists = scope:armor_type }
				NOT = { scope:armor_type = flag:armor_type_brigandine }
			}
		}
		weight = 5
	}

	armor_material_bronze = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 50 }
			trigger_if = {
				limit = { exists = scope:armor_type }
				NOT = { scope:armor_type = flag:armor_type_brigandine }
			}
		}
		weight = 20
	}

	armor_material_horn = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 999 }
			exists = scope:armor_type
			scope:armor_type = flag:armor_type_scale
		}
		weight = 5
	}

	armor_material_pangolin_scales = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 999 }
			exists = scope:armor_type
			scope:armor_type = flag:armor_type_scale
		}
		weight = 5
	}

	armor_material_canvas = {
		group = armor_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 999 }
			trigger_if = {
				limit = { exists = scope:armor_type }
				scope:armor_type = flag:armor_type_brigandine
			}
		}
		weight = 20
	}

# armor_helmet - the accompanying helmet for a set of armor
	armor_helmet_spangenhelm = {
		group = armor_helmet
		weight = {
			value = 10
			if = {
				limit = { #Mostly in Middle East and Europe
					culture = { like_heritage_arabic_trigger = yes }
					culture_has_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
		}
	}
	armor_helmet_crested = {
		group = armor_helmet
		weight = {
			value = 10
			if = {
				limit = { #Mostly England and Scandinavia
					culture_has_north_european_heritage_pillar_trigger = yes
					culture_has_west_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = {
					# Only common until 11th century
					current_date > 1000.1.1
				}
				multiply = 0
			}
		}
	}
	armor_helmet_nasal = {
		group = armor_helmet
		weight = {
			value = 10
			if = {
				limit = { # Western European origin
					culture_has_west_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = {
					# Lost popularity at the end of 13th century
					current_date > 1250.1.1
				}
				multiply = 0
			}
		}
	}
	armor_helmet_enclosed = {
		group = armor_helmet
		trigger = {
			# More fancy than the nasal helmet, cheaper than the great helmet
			trigger_if = {
				limit = { exists = scope:wealth }
				scope:wealth >= 40
			}
		}
		weight = {
			value = 10
			if = {
				limit = { # Mostly in Europe
					culture_has_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = { # Likely to match the armor
					exists = scope:armor_type
					scope:armor_type = flag:armor_type_plate
				}
				add = 40
			}
			if = {
				limit = {
					# Began to show up late 12th century
					current_date < 1150.1.1
				}
				multiply = 0
			}
		}
	}
	armor_helmet_great_helmet = {
		group = armor_helmet
		trigger = {
			# More fancy than the nasal helmet and the enclosed helmet
			trigger_if = {
				limit = { exists = scope:wealth }
				scope:wealth >= 60
			}
			# Began to show up late 12th century (Crusades)
			current_date > 1150.1.1
		}
		weight = {
			value = 10
			if = {
				limit = { # Mostly in Europe
					culture_has_west_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = { # Likely to match the armor
					exists = scope:armor_type
					scope:armor_type = flag:armor_type_plate
				}
				add = 40
			}
			if = {
				limit = {
					# Mostly used after 1220
					current_date > 1220.1.1
				}
				add = 10
			}
		}
	}
	armor_helmet_great_helmet_bascinet = {
		group = armor_helmet
		trigger = {
			# More fancy than the nasal helmet and the enclosed helmet
			trigger_if = {
				limit = { exists = scope:wealth }
				scope:wealth >= 60
			}
			# Bascinet began to show up late 12th century (first recorded reference: 1281)
			current_date > 1281.1.1
		}
		weight = {
			value = 10
			if = {
				limit = { # Mostly in Europe
					culture_has_west_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = { # Likely to match the armor
					exists = scope:armor_type
					scope:armor_type = flag:armor_type_plate
				}
				add = 40
			}
		}
	}
	armor_helmet_great_helmet_cervelliere = {
		group = armor_helmet
		trigger = {
			# More fancy than the nasal helmet and the enclosed helmet
			trigger_if = {
				limit = { exists = scope:wealth }
				scope:wealth >= 60
			}
			# Began to show up late 12th century (Crusades)
			current_date > 1150.1.1
		}
		weight = {
			value = 10
			if = {
				limit = { # Mostly in Europe
					culture_has_west_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = { # Likely to match the armor
					exists = scope:armor_type
					scope:armor_type = flag:armor_type_plate
				}
				add = 40
			}
			if = {
				limit = {
					# Mostly used after 1250
					current_date > 1250.1.1
				}
				add = 10
			}
		}
	}
	armor_helmet_turban_helmet = {
		group = armor_helmet
		trigger = {
			#Began to show up late 13th century (Ottoman Empire)
			current_date > 1250.1.1
		}
		weight = {
			value = 10
			if = {
				limit = { # Mostly in North Africa/West Asia/Southeast Europe
					OR = {
						culture_has_north_african_heritage_pillar_trigger = yes
						culture_has_west_asian_heritage_pillar_trigger = yes
						culture = { like_turkic_group_trigger = yes }
						culture = { like_heritage_latin_trigger = yes }
						culture = { like_byzantine_group_trigger = yes }
					}
				}
				add = 10
			}
		}
	}
	armor_helmet_lamellar = {
		group = armor_helmet
		trigger = {
			#Began to show up late 13th century (Ottoman Empire)
			current_date > 1250.1.1
		}
		weight = {
			value = 10
			if = {
				limit = { # Popularized in central Asia by the steppe nomads
					culture_has_central_asian_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = { # Likely to match the armor
					exists = scope:armor_type
					scope:armor_type = flag:armor_type_lamellar
				}
				add = 40
			}
		}
	}
	armor_helmet_cervelliere = {
		group = armor_helmet
		trigger = {
			#First introduced during the late 12th century
			current_date > 1150.1.1
		}
		weight = {
			value = 10
			if = {
				limit = { # Mostly in Europe
					culture_has_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = { # Not very fancy
					scope:wealth < 40
				}
				multiply = 0.1
			}
		}
	}
	armor_helmet_kettle = {
		group = armor_helmet
		trigger = {
			#First introduced during the late 12th century
			current_date > 1150.1.1
		}
		weight = {
			value = 10
			if = {
				limit = { # Mostly in Europe
					culture_has_european_heritage_pillar_trigger = yes
				}
				add = 10
			}
			if = {
				limit = { # Not very fancy
					scope:wealth < 40
				}
				multiply = 0.1
			}
		}
	}
	armor_helmet_kulah_khud = {
		group = armor_helmet
		weight = {
			value = 10
			if = {
				limit = { # Originated in Central Asia, but also used in all of west Asia
					OR = {
						culture_has_central_asian_heritage_pillar_trigger = yes
						culture_has_west_asian_heritage_pillar_trigger = yes
					}
				}
				add = 10
			}
			if = {
				limit = { # Mostly used in the later middle ages
					current_date < 1400.1.1
				}
				multiply = 0.25
			}
		}
	}

# armor_decoraton - any additional embellishments added to a set of armor
	armor_decoration_etched_pattern = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			NOR = {
				scope:armor_type = flag:armor_type_brigandine
				scope:armor_type = flag:armor_type_mail
				has_artifact_feature = armor_material_hardened_leather
			}
		}
		weight = 20
	}
	armor_decoration_inlay_pattern = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			NOR = {
				scope:armor_type = flag:armor_type_brigandine
				scope:armor_type = flag:armor_type_mail
				has_artifact_feature = armor_material_hardened_leather
			}
		}
		weight = 20
	}
	armor_decoration_painted_pattern = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			NOR = {
				scope:armor_type = flag:armor_type_brigandine
				scope:armor_type = flag:armor_type_mail
			}
		}
		weight = 20
	}
	armor_decoration_lines = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			NOR = {
				scope:armor_type = flag:armor_type_brigandine
				scope:armor_type = flag:armor_type_mail
			}
		}
		weight = 20
	}
	armor_decoration_gold_plating = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			NOR = {
				scope:armor_type = flag:armor_type_brigandine
				has_artifact_feature = armor_material_hardened_leather
				has_artifact_feature = armor_material_gold
			}
		}
		weight = 20
	}
	armor_decoration_lining = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			scope:armor_type = flag:armor_type_mail
		}
		weight = 20
	}
	armor_decoration_embossed = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			scope:armor_type = flag:armor_type_brigandine
		}
		weight = 20
	}
	armor_decoration_grouped_rivets = {
		group = armor_decoration
		trigger = {
			exists = scope:armor_type
			scope:armor_type = flag:armor_type_brigandine
		}
		weight = 20
	}
	
# armor properties
	artifact_armor_descriptor_shiny = {
		group = armor_property
		trigger = {
			OR = {
				has_artifact_feature = armor_material_iron
				has_artifact_feature = armor_material_steel
				has_artifact_feature = armor_material_bronze
				has_artifact_feature = armor_decoration_gold_plating
				has_artifact_feature = armor_material_gold
			}
		}
		weight = 7
	}
	artifact_armor_descriptor_lustrous = {
		group = armor_property
		trigger = {
			OR = {
				has_artifact_feature = armor_material_iron
				has_artifact_feature = armor_material_steel
				has_artifact_feature = armor_material_bronze
				has_artifact_feature = armor_decoration_gold_plating
				has_artifact_feature = armor_material_gold
			}
		}
		weight = 7
	}
	artifact_armor_descriptor_burnished = {
		group = armor_property
		trigger = {
			OR = {
				has_artifact_feature = armor_material_iron
				has_artifact_feature = armor_material_steel
				has_artifact_feature = armor_material_bronze
				has_artifact_feature = armor_decoration_gold_plating
				has_artifact_feature = armor_material_gold
			}
		}
		weight = 7
	}
	artifact_armor_descriptor_flexible = {
		group = armor_property
		trigger = {
			NOR = {
				artifact_type = armor_laminar
				artifact_type = armor_plate
			}
		}
		weight = 20
	}
	artifact_armor_descriptor_powerful = {
		group = armor_property
		trigger = {
			OR = {
				artifact_type = armor_laminar
				artifact_type = armor_plate
			}
		}
		weight = 20
	}
	artifact_armor_descriptor_silver_inlaid = {
		group = armor_property
		trigger = {
			has_artifact_feature = decoration_material_inlay_silver
		}
		weight = 20
	}
	artifact_armor_descriptor_gold_inlaid = {
		group = armor_property
		trigger = {
			has_artifact_feature = decoration_material_inlay_gold
		}
		weight = 20
	}
	artifact_armor_descriptor_bronze_inlaid = {
		group = armor_property
		trigger = {
			has_artifact_feature = armor_material_bronze
		}
		weight = 20
	}
	artifact_armor_descriptor_armor_material_hardened_leather = {
		group = armor_property
		trigger = {
			has_artifact_feature = armor_material_hardened_leather
		}
		weight = 20
	}
	artifact_armor_descriptor_armor_material_steel = {
		group = armor_property
		trigger = {
			has_artifact_feature = armor_material_steel
		}
		weight = 20
	}
	artifact_armor_descriptor_armor_gold_decorated = {
		group = armor_property
		trigger = {
			has_artifact_feature_group = decoration_material_inlay
			has_artifact_feature = decoration_material_inlay_gold
		}
		weight = 20
	}
	artifact_armor_descriptor_armor_silver_decorated = {
		group = armor_property
		trigger = {
			has_artifact_feature_group = decoration_material_inlay
			has_artifact_feature = decoration_material_inlay_silver
		}
		weight = 20
	}
	artifact_armor_descriptor_armor_copper_decorated = {
		group = armor_property
		trigger = {
			has_artifact_feature_group = decoration_material_inlay
			has_artifact_feature = decoration_material_inlay_copper
		}
		weight = 20
	}

#################################################################
# Regalia Features - Scepter, Clothes, Accessory				#
#################################################################

# regalia_scepter
	regalia_scepter_gemstone = {
		group = regalia_scepter
		trigger = { always = yes }
		weight = 100
	}

# regalia_clothes
	regalia_clothes_cloak = {
		group = regalia_clothes
		trigger = { artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe } }
		weight = 100
	}
	regalia_clothes_robe = {
		group = regalia_clothes
		trigger = { NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe } } }
		weight = 100
	}

# regalia_accessory
	regalia_accessory_orb = {
		group = regalia_accessory
		trigger = { scope:owner = { like_christianity_religion_trigger = yes } }
		weight = 100
	}
	regalia_accessory_necklace = {
		group = regalia_accessory
		trigger = { NOT = { scope:owner = { like_christianity_religion_trigger = yes } } }
		weight = 100
	}

#################################################################
# Crown Features - Decorations									#
#################################################################

# crown_decoration
	crown_decoration_gems = {
		group = crown_decoration
		trigger = {	artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 60 } }
		weight = 20
	}
	crown_decoration_filigree = {
		group = crown_decoration
		trigger = {	artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 80 } }	
		weight = 40
	}
	crown_decoration_filigree_and_gem = {
		group = crown_decoration
		trigger = {	artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 999 } }	
		weight = 60
	}

#################################################################
# Brooch Features - Decorations, Centerpieces, Adornments		#
#################################################################

# brooch_decoration
	brooch_decoration_adornment = {
		group = brooch_decoration
		trigger = {	artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 50 } }
		weight = 20
	}
	brooch_decoration_centerpiece = {
		group = brooch_decoration
		trigger = {	artifact_value_trigger = { VALUE = scope:wealth MIN = 25 MAX = 75 } }	
		weight = 40
	}
	brooch_decoration_centerpiece_and_adornment = {
		group = brooch_decoration
		trigger = {	artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 } }	
		weight = 60
	}

# brooch_centerpiece
	brooch_centerpiece_cross = {
		group = brooch_centerpiece
		trigger = {
			exists = religion
			like_christianity_religion_trigger = yes
		}
		weight = 33
	}
	brooch_centerpiece_sword = {
		group = brooch_centerpiece
		trigger = {
			exists = faith
			faith = { NOT = { has_doctrine_parameter = pacifist_opinion_active } }
		}
		weight = 33
	}
	brooch_centerpiece_cabochon = {
		group = brooch_centerpiece
		weight = 33
	}

# brooch_adornment
	brooch_adornment_gems = {
		group = brooch_adornment
		weight = 33
	}
	brooch_adornment_filigree = {
		group = brooch_adornment
		weight = 33
	}
	brooch_adornment_runes = {
		group = brooch_adornment	
		weight = 33
	}		

#################################################################
# Furniture Features - Wood Type, Decorations, etc.				#
#################################################################

# wood_decoration
	wood_decoration_none = {
		group = wood_decoration
		weight = 1
	}
	wood_decoration_varnish = {
		group = wood_decoration
		weight = 1
	}
	wood_decoration_hsb_inlay = {
		group = wood_decoration
		weight = 1
	}
	wood_decoration_painted_pattern = {
		group = wood_decoration
		weight = 1
	}


#################################################################
# Sculpture Features - Material, etc.							#
#################################################################
# sculpture_material
	sculpture_material_stone = {
		group = sculpture_material
		trigger = {
			exists = scope:owner.var:artifact_sculpture_material
			scope:owner.var:artifact_sculpture_material = flag:sculpture_material_stone
		}
		weight = 1
	}
	sculpture_material_wood = {
		group = sculpture_material
		trigger = {
			NOT = { exists = scope:owner.var:artifact_sculpture_material }
		}
		weight = 1
	}



#################################################################
# Wall Decoration Features - Tapestry Scene, Animal Trophy, etc.#
#################################################################

# tapestry_scene
	tapestry_scene_geometric_patterns = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:geometric_patterns
			}
		}
		weight = 1
	}

	tapestry_scene_calligraphic = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:calligraphic
			}
		}
		weight = 1
	}

	tapestry_scene_animals = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:animals
			}
		}
		weight = 1
	}

	tapestry_scene_garden = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:garden
			}
		}
		weight = 1
	}

	tapestry_scene_historical = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:historical
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_religious = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:religious
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_hunt = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:hunt
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_myth = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				always = no #It's not currently set anywhere
				#scope:owner.var:artifact_tapestry_scene = flag:myth
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_bucolic = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:bucolic
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_coronation = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:coronation
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_ships = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:ships
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_banquet = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:banquet
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_hearing = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:hearing
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

	tapestry_scene_battle = {
		group = tapestry_scene
		trigger = {
			trigger_if = { # If the scene has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:artifact_tapestry_scene }
				scope:owner.var:artifact_tapestry_scene = flag:battle
			}
			trigger_else = {
				scope:owner = {
					NOR = {
						like_islam_religion_trigger = yes
						faith = { has_doctrine = tenet_aniconism }
					}
				}
			}
		}
		weight = 1
	}

# animal_skull_type
	animal_skull_type_wolf = {
		group = animal_skull_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_skull_type }
				scope:owner.var:animal_skull_type = flag:wolf
			}
		}
		weight = 4
	}
	animal_skull_type_stag = {
		group = animal_skull_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_skull_type }
				scope:owner.var:animal_skull_type = flag:stag
			}
		}
		weight = 4
	}
	animal_skull_type_horse = {
		group = animal_skull_type
		trigger = { #Only if actively specified
			exists = scope:owner.var:animal_skull_type
			scope:owner.var:animal_skull_type = flag:horse
		}
		weight = 2
	}
	animal_skull_type_rabbit = {
		group = animal_skull_type
		trigger = { #Only if actively specified
			exists = scope:owner.var:animal_skull_type
			scope:owner.var:animal_skull_type = flag:rabbit
		}
		weight = 2
	}
	animal_skull_type_boar = {
		group = animal_skull_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_skull_type }
				scope:owner.var:animal_skull_type = flag:boar
			}
			artifact_feature_animal_boar_trigger = yes
		}
		weight = 4
	}
	animal_skull_type_lion = {
		group = animal_skull_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_skull_type }
				scope:owner.var:animal_skull_type = flag:lion
			}
			artifact_feature_animal_lion_trigger = yes
		}
		weight = 4
	}
	animal_skull_type_tiger = {
		group = animal_skull_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_skull_type }
				scope:owner.var:animal_skull_type = flag:tiger
			}
			artifact_feature_animal_tiger_trigger = yes
		}
		weight = 4
	}
	animal_skull_type_bear = {
		group = animal_skull_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_skull_type }
				scope:owner.var:animal_skull_type = flag:bear
			}
			artifact_feature_animal_bear_trigger = yes
		}
		weight = 4
	}
	animal_skull_type_aurochs = {
		group = animal_skull_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_skull_type }
				always = no
				# disabled for now since it's not set anywhere
				#scope:owner.var:animal_skull_type = flag:aurochs 
			}
			artifact_feature_animal_aurochs_trigger = yes
		}
		weight = 3
	}
	animal_skull_type_unicorn = {
		group = animal_skull_type
		trigger = { #Only if actively specified
			exists = scope:owner.var:animal_skull_type
			scope:owner.var:animal_skull_type = flag:unicorn
		}
		weight = 1
	}

# animal_hide_type
	animal_hide_type_cat = {
		group = animal_hide_type
		trigger = { # Will only trigger if it's set through events
			exists = scope:owner.var:animal_hide_type
			scope:owner.var:animal_hide_type = flag:cat
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:small
			}
		}
		weight = 1
	}
	animal_hide_type_dog = {
		group = animal_hide_type
		trigger = { # Will only trigger if it's set through events
			exists = scope:owner.var:animal_hide_type
			scope:owner.var:animal_hide_type = flag:dog
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:small
			}
		}
		weight = 1
	}
	animal_hide_type_fox = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:fox
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:medium
			}
		}
		weight = 4
	}
	animal_hide_type_hare = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:hare
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:small
			}
		}
		weight = 4
	}
	animal_hide_type_rabbit = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				always = no
				# disabled for now since it's not set anywhere
				#scope:owner.var:animal_hide_type = flag:rabbit
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:small
			}
		}
		weight = 4
	}
	animal_hide_type_wolf = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:wolf
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
		}
		weight = 4
	}
	animal_hide_type_stag = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:stag
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
		}
		weight = 4
	}
	animal_hide_type_hart = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:hart
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
		}
		weight = 4
	}
	animal_hide_type_boar = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:boar
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:medium
			}
			artifact_feature_animal_boar_trigger = yes
		}
		weight = 4
	}
	animal_hide_type_lynx = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:lynx
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:medium
			}
			artifact_feature_animal_lynx_trigger = yes
		}
		weight = 4
	}
	animal_hide_type_lion = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:lion
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
			artifact_feature_animal_lion_trigger = yes
		}
		weight = 4
	}
	animal_hide_type_tiger = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:tiger
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
			artifact_feature_animal_tiger_trigger = yes
		}
		weight = 4
	}
	animal_hide_type_bear = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_hide_type = flag:bear
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
			artifact_feature_animal_bear_trigger = yes
		}
		weight = 4
	}
	animal_hide_type_aurochs = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				always = no
				# disabled for now since it's not set anywhere
				#scope:owner.var:animal_hide_type = flag:aurochs 
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
			artifact_feature_animal_aurochs_trigger = yes
		}
		weight = 2
	}
	animal_hide_type_unicorn = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_skull_type = flag:unicorn
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
			exists = scope:inspiration_owner
			scope:inspiration_owner = { has_trait = lunatic }
		}
		weight = 1
	}

	animal_hide_type_dragon = {
		group = animal_hide_type
		trigger = {
			trigger_if = {
				limit = { exists = scope:owner.var:animal_hide_type }
				scope:owner.var:animal_skull_type = flag:dragon
			}
			trigger_if = {
				limit = { exists = scope:animal_hide_size }
				scope:animal_hide_size = flag:big
			}
			exists = scope:inspiration_owner
			scope:inspiration_owner = { has_trait = lunatic }
		}
		weight = 1
	}

#################################################################
# Box Features - Material, Decorations, etc.					#
#################################################################

# box_material
	box_material_brass = {
		group = box_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 80 } }
		weight = 3
	}

	box_material_silver = {
		group = box_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 100 } }
		weight = 4
	}

	box_material_gold = {
		group = box_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 70 MAX = 999 } }
		weight = 5
	}

	box_material_bone = {
		group = box_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 30 MAX = 80 } }
		weight = 1
	}

	box_material_hsb_ivory = {
		group = box_material
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 }
				OR = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_imported }
				}
			}
		}
		weight = {
			value = 4
			if = {
				limit = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
				}
				add = 2
			}
			if = {
				limit = {
					artifact_value_trigger = { VALUE = scope:wealth MIN = 80 MAX = 999 }
				}
				add = 1
			}
		}
	}

	box_material_oak = {
		group = box_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 999 } }
		weight = 1
	}

	box_material_pine = {
		group = box_material
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 50 }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_woods_pine_and_fir }
			}
		}
		weight = 2
	}

	box_material_walnut = {
		group = box_material
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 40 MAX = 999 }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_wood_walnut }
			}
		}
		weight = 3
	}

	box_material_sycomore = {
		group = box_material
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 30 MAX = 80 }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_woods_subsaharan }
			}
		}
		weight = 4
	}

	box_material_teak = {
		group = box_material
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 70 MAX = 999 }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_woods_india }
			}
		}
		weight = 3
	}

	box_material_ebony = {
		group = box_material
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 70 MAX = 999 }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_woods_sri_lanka }
			}
		}
		weight = 10
	}


# box_decoration
	box_decoration_painted = {
		group = box_decoration
		weight = 1
	}

	box_decoration_inlay = {
		group = box_decoration
		weight = 1
	}

	box_decoration_carved = {
		group = box_decoration
		weight = 1
	}


#################################################################
# Goblet Features - Material, etc.								#
#################################################################

# goblet_material
	goblet_material_brass = {
		group = goblet_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 80 } }
		weight = 1
	}

	goblet_material_silver = {
		group = goblet_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 100 } }
		weight = 2
	}

	goblet_material_gold = {
		group = goblet_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 70 MAX = 999 } }
		weight = 3
	}
	
	goblet_material_bone = {
		group = goblet_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 30 MAX = 80 } }
		weight = 1
	}
	
	goblet_material_ivory = {
		group = goblet_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 }
			OR = {
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_imported }
			}
		}
		weight = {
			value = 4
			if = {
				limit = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
				}
				add = 2
			}
		}
	}
	
	goblet_material_glass = {
		group = goblet_material
		trigger = { artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 } }
		weight = 4
	}


#################################################################
# Book Features - Subject, Topic, Decorations, etc.				#
#################################################################

# book_subject
	book_subject_martial = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:martial
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_education_martial_trigger = yes }
						add = 60
					}
					if = {
						limit = {
							book_subject_martial_trigger = yes
						}
						add = 40
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = martial
						multiply = -5
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_education_martial_trigger = yes }
						add = 60
					}
					if = {
						limit = {
							book_subject_martial_trigger = yes
						}
						add = 40
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = martial
						multiply = -5
						min = 0
					}
				}
			}
		}
	}

	book_subject_diplomacy = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:diplomacy
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_education_diplomacy_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = diplomacy
						multiply = -5
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_education_diplomacy_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = diplomacy
						multiply = -5
						min = 0
					}
				}
			}
		}
	}

	book_subject_stewardship = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:stewardship
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_education_stewardship_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = stewardship
						multiply = -5
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_education_stewardship_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = stewardship
						multiply = -5
						min = 0
					}
				}
			}
		}
	}

	book_subject_intrigue = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:intrigue
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_education_intrigue_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = intrigue
						multiply = -5
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_education_intrigue_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = intrigue
						multiply = -5
						min = 0
					}
				}
			}
		}
	}

	book_subject_learning = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:learning
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_education_learning_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = learning
						multiply = -5
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_education_learning_trigger = yes }
						add = 60
					}
					add = { #If they're good you get +, if they're shit you get -
						value = average_skill_rating
						subtract = learning
						multiply = -5
						min = 0
					}
				}
			}
		}
	}

	book_subject_medicine = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:medicine
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_education_learning_trigger = yes }
						add = 60
					}
					if = {
						limit = {
							book_subject_medicine_trigger = yes
						}
						add = 50
					}
					if = {
						limit = {
							is_witch_trigger = yes
						}
						add = 20
					}
					add = {
						value = learning
						multiply = 2
						min = 0
					}
					add = {
						value = ai_rationality
						multiply = 0.25
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_education_learning_trigger = yes }
						add = 60
					}
					if = {
						limit = {
							book_subject_medicine_trigger = yes
						}
						add = 50
					}
					if = {
						limit = {
							is_witch_trigger = yes
						}
						add = 20
					}
					add = {
						value = learning
						multiply = 2
						min = 0
					}
					add = {
						value = ai_rationality
						multiply = 0.25
						min = 0
					}
				}
			}
		}
	}

	book_subject_witch = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:witch
			}
			trigger_else = {
				OR = {
					AND = {
						exists = scope:owner.var:book_artifact_author
						scope:owner.var:book_artifact_author = { is_witch_trigger = yes }
					}
					scope:owner = { is_witch_trigger = yes }
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_education_learning_trigger = yes }
						add = 60
					}
					if = {
						limit = {
							book_subject_witch_trigger = yes
						}
						add = 50
					}
					add = {
						value = learning
						multiply = 2
						min = 0
					}
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_education_learning_trigger = yes }
						add = 60
					}
					if = {
						limit = {
							book_subject_witch_trigger = yes
						}
						add = 50
					}
					add = {
						value = learning
						multiply = 2
						min = 0
					}
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
		}
	}

	book_subject_reveler = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:reveler
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = {
					OR = {
						has_trait = lifestyle_reveler
						has_trait = gregarious
						has_trait = gluttonous
						has_trait = drunkard
						has_trait = adventurer
						has_trait = diplomatic_court
					}
				}
			}
			trigger_else = {
				scope:owner = {
					OR = {
						has_trait = lifestyle_reveler
						has_trait = gregarious
						has_trait = gluttonous
						has_trait = drunkard
						has_trait = adventurer
						has_trait = diplomatic_court
					}
				}
			}
		}
		weight = {
			value = 40
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					add = {
						value = ai_compassion
						multiply = 0.25
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					add = {
						value = ai_compassion
						multiply = 0.25
						min = 0
					}
				}
			}
		}
	}

	book_subject_blademaster = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:blademaster
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = {
					OR = {
						has_trait = lifestyle_blademaster
						has_trait = brave
						has_trait = strong
						has_trait = berserker
						has_trait = aggressive_attacker
						has_trait = education_martial_prowess
						has_trait = adventurer
						has_trait = warlike_court
					}
				}
			}
			trigger_else = {
				scope:owner = {
					OR = {
						has_trait = lifestyle_blademaster
						has_trait = education_martial
						has_trait = strong
						has_trait = berserker
						has_trait = aggressive_attacker
						has_trait = education_martial_prowess
						has_trait = adventurer
						has_trait = warlike_court
					}
				}
			}
		}
		weight = {
			value = 40
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					add = {
						value = martial
						multiply = 2
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					add = {
						value = martial
						multiply = 2
						min = 0
					}
				}
			}
		}
	}

	book_subject_hunter = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:hunter
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = {
					OR = { #Hunter lifestyle, any terrain related commander trait, adventurers and warlike courts
						has_trait = lifestyle_hunter
						has_trait = forest_fighter
						has_trait = winter_soldier
						has_trait = rough_terrain_expert
						has_trait = open_terrain_expert
						has_trait = jungle_stalker
						has_trait = desert_warrior
						has_trait = adventurer
						has_trait = warlike_court
					}
				}
			}
			trigger_else = {
				scope:owner = { 
					OR = { #Hunter lifestyle, any terrain related commander trait, adventurers and warlike courts
						has_trait = lifestyle_hunter
						has_trait = forest_fighter
						has_trait = winter_soldier
						has_trait = rough_terrain_expert
						has_trait = open_terrain_expert
						has_trait = jungle_stalker
						has_trait = desert_warrior
						has_trait = adventurer
						has_trait = warlike_court
					}
				}
			}
		}
		weight = {
			value = 40
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					add = {
						value = prowess
						multiply = 2
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					add = {
						value = prowess
						multiply = 2
						min = 0
					}
				}
			}
		}
	}

	book_subject_mystic = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:mystic
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = {
					OR = { #Mystic lifestyle, adventurers, scholarly educated or scholarly court - not formal theologian
						has_trait = lifestyle_mystic
						has_trait = scholarly_court
						has_trait = scholar
						has_trait = education_learning
						has_trait = adventurer
					}
					NOT = { has_trait = theologian }
				}
			}
			trigger_else = {
				scope:owner = {
					OR = { #Mystic lifestyle, adventurers, scholarly educated or scholarly court - not formal theologian
						has_trait = lifestyle_mystic
						has_trait = scholarly_court
						has_trait = scholar
						has_trait = education_learning
						has_trait = adventurer
					}
					NOT = { has_trait = theologian }
				}
			}
		}
		weight = {
			value = 40
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					add = {
						value = learning
						multiply = 2
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					add = {
						value = learning
						multiply = 2
						min = 0
					}
				}
			}
		}
	}

	book_subject_herbalist = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:herbalist
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = {
					OR = { #Herbalist lifestyle, adventurers, gardener, scholarly educated or scholarly court
						has_trait = lifestyle_herbalist
						has_trait = scholarly_court
						has_trait = scholar
						has_trait = education_learning
						has_trait = adventurer
						has_trait = lifestyle_gardener
					}
				}
			}
			trigger_else = {
				scope:owner = {
					OR = { #Herbalist lifestyle, adventurers, gardener, scholarly educated or scholarly court
						has_trait = lifestyle_herbalist
						has_trait = scholarly_court
						has_trait = scholar
						has_trait = education_learning
						has_trait = adventurer
						has_trait = lifestyle_gardener
					}
				}
			}
		}
		weight = {
			value = 40
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					add = {
						value = learning
						multiply = 2
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					add = {
						value = learning
						multiply = 2
						min = 0
					}
				}
			}
		}
	}

	book_subject_cannibal = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:cannibal
			}
			trigger_else_if = { #This trigger will remain restrictive
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = { is_cannibal_trigger = yes }
			}
			trigger_else = {
				scope:owner = { is_cannibal_trigger = yes }
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_subject_cannibal_trigger = yes
						}
						add = 30
					}
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_subject_cannibal_trigger = yes
						}
						add = 30
					}
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
		}
	}

	book_subject_deviant = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:deviant
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = {
					OR = {
						is_deviant_trigger = yes
						has_trait = rakish
						has_trait = lustful
					}
				}
			}
			trigger_else = {
				scope:owner = {
					OR = {
						is_deviant_trigger = yes
						has_trait = rakish
						has_trait = lustful
					}
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_subject_deviant_trigger = yes
						}
						add = 30
					}
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_subject_deviant_trigger = yes
						}
						add = 30
					}
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
		}
	}

	book_subject_torturer = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:torturer
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = {
					OR = { #Torturer or sadistic
						has_trait = torturer
						has_trait = sadistic
					}
				}
			}
			trigger_else = {
				scope:owner = {
					OR = { #Torturer or sadistic
						has_trait = torturer
						has_trait = sadistic
					}
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_subject_torturer_trigger = yes
						}
						add = 30
					}
					add = {
						value = ai_boldness
						multiply = 0.5
						min = 0
					}
					add = {
						value = intrigue
						multiply = 2
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_subject_torturer_trigger = yes
						}
						add = 30
					}
					add = {
						value = ai_boldness
						multiply = 0.5
						min = 0
					}
					add = {
						value = intrigue
						multiply = 2
						min = 0
					}
				}
			}
		}
	}

	book_subject_lunatic = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:lunatic
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = { has_trait = lunatic }
			}
			trigger_else = {
				scope:owner = { has_trait = lunatic }
			}
		}
		weight = {
			value = 50
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
			else = {
				scope:owner = {
					add = {
						value = ai_boldness
						multiply = 0.75
						min = 0
					}
				}
			}
		}
	}

	book_subject_childhood = { # Why are you sponsoring a kid to write??
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:childhood
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = { is_adult = no }
			}
			trigger_else = {
				scope:owner = { is_adult = no }
			}
		}
		weight = {
			value = 500
		}
	}

	book_subject_animals = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:animals
			}
			trigger_else_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = { book_subject_animals_trigger = yes }
			}
			trigger_else = {
				scope:owner = { book_subject_animals_trigger = yes }
			}
		}
		weight = {
			value = 50
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { is_adult = no }
						add = 500
					}
					if = {
						limit = { has_trait = lunatic }
						add = 75
					}
					if = {
						limit = { has_trait = intellect_bad }
						add = 50
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { is_adult = no }
						add = 500
					}
					if = {
						limit = { has_trait = lunatic }
						add = 75
					}
					if = {
						limit = { has_trait = intellect_bad }
						add = 50
					}
				}
			}
		}
	}

	book_subject_mystical_animal = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:mystical_animal
			}
			exists = scope:owner.var:hunted_mystical_animal
		}
		weight = 1
	}

	book_subject_relationship = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:relationship
			}
		}
		weight = 1
	}

	book_subject_dynasty = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:dynasty
			}
		}
		weight = 1
	}

	book_subject_empire = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:empire
			}
		}
		weight = 1
	}

	book_subject_kingdom = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:kingdom
			}
		}
		weight = 1
	}

	book_subject_language_manual = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:language_manual
			}
		}
		weight = 1
	}

	book_subject_alchemy = {
		group = book_subject
		trigger = {
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_subject }
				scope:owner.var:book_artifact_subject = flag:alchemy
			}
		}
		weight = 1
	}

	book_subject_family_epic = {
		group = book_subject
		trigger = {
			exists = scope:owner.var:book_artifact_subject
			scope:owner.var:book_artifact_subject = flag:family_epic
		}
		weight = 1
	}

	book_subject_family_epic_great = {
		group = book_subject
		trigger = {
			exists = scope:owner.var:book_artifact_subject
			scope:owner.var:book_artifact_subject = flag:family_epic_great
		}
		weight = 1
	}


# book_topic

	# misc topics
	book_topic_mystical_animal = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_mystical_animal
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:mystical_animal
			}
		}
		weight = 1
	}

	book_topic_language_manual = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_language_manual
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:language_manual
			}
		}
		weight = 1
	}

	book_topic_soulmate = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_relationship
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:soulmate
			}
		}
		weight = 1
	}

	book_topic_nemesis = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_relationship
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:nemesis
			}
		}
		weight = 1
	}

	book_topic_unification = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_empire
				has_artifact_feature = book_subject_kingdom
			}
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:unification
			}
		}
		weight = 1
	}

	book_topic_creation = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_empire
				has_artifact_feature = book_subject_kingdom
			}
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:creation
			}
		}
		weight = 1
	}

	book_topic_restoration = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_empire
				has_artifact_feature = book_subject_kingdom
			}
			trigger_if = { # If the subject has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:restoration
			}
		}
		weight = 1
	}

	# martial topics
	book_topic_martial_troop_compositions = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_martial
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:martial_strategy
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:martial_troop_compositions
			}
		}
		weight = 1
	}

	book_topic_martial_military_strategies = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_martial
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:martial_strategy
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:martial_military_strategies
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_topic_martial_military_strategies_trigger = yes
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_topic_martial_military_strategies_trigger = yes
						}
						add = 10
					}
				}
			}
		}
	}

	book_topic_martial_ancient_military_campaigns = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_martial
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:martial_strategy
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:martial_ancient_military_campaigns
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_topic_martial_ancient_military_campaigns_trigger = yes
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_topic_martial_ancient_military_campaigns_trigger = yes
						}
						add = 10
					}
				}
			}
		}
	}

	book_topic_martial_military = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_martial
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:martial_strategy
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:military
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				scope:owner.var:book_artifact_author = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:owner } }
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					scope:owner = { book_topic_martial_military_trigger = yes }
				}
				add = 10
			}
		}
	}

	book_topic_martial_duels = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_martial
				has_artifact_feature = book_subject_blademaster
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:martial_chivalry_prowess
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:duels
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_topic_martial_duels_trigger = yes
							has_trait = lifestyle_blademaster
							can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:owner }
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_topic_martial_duels_trigger = yes
						}
						add = 10
					}
				}
			}
		}
	}

	book_topic_martial_chivalry = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_martial
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:martial_chivalry_prowess
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:chivalry
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_topic_martial_chivalry_trigger = yes
						}
						add = 20
					}
					if = {
						limit = {
							culture = { has_cultural_tradition = tradition_chivalry }
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_topic_martial_chivalry_trigger = yes
						}
						add = 10
					}
					if = {
						limit = {
							culture = { has_cultural_tradition = tradition_chivalry }
						}
						add = 20
					}
				}
			}
		}
	}

	# diplomacy topics
	book_topic_diplomacy_court_politics = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_diplomacy
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:diplomacy_court
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:diplomacy_court_politics
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_topic_diplomacy_court_politics_trigger = yes
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_topic_diplomacy_court_politics_trigger = yes
						}
						add = 10
					}
				}
			}
		}
	}

	book_topic_diplomacy_court_alliances = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_diplomacy
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:diplomacy_court
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:diplomacy_court_alliances
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							book_topic_diplomacy_court_alliances_trigger = yes
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							book_topic_diplomacy_court_alliances_trigger = yes
						}
						add = 10
					}
				}
			}
		}
	}

	book_topic_diplomacy_dynasty = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_diplomacy
				has_artifact_feature = book_subject_dynasty
			}
			exists = scope:owner.dynasty
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:diplomacy_court
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:dynasty
			}
		}
		weight = 1
	}

	book_topic_diplomacy_dynasty_big = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_diplomacy
			exists = scope:owner.dynasty
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:diplomacy_court
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:dynasty
			}
		}
		weight = 1
	}

	# Warcraft
	# book_topic_diplomacy_cicero = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_diplomacy
			# scope:owner.culture = { has_cultural_pillar = heritage_latin }
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author.culture = { has_cultural_pillar = heritage_latin }
			# }
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:diplomacy_court
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:cicero
			# }
		# }
		# weight = 1
	# }

	book_topic_diplomacy_art_of_feasting = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_diplomacy
				has_artifact_feature = book_subject_reveler
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:diplomacy_entertainment
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:diplomacy_art_of_feasting
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = {
							has_trait = lifestyle_reveler
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = {
							has_trait = lifestyle_reveler
						}
						add = 10
					}
				}
			}
		}
	}

	# Warcraft
	# book_topic_diplomacy_hitopadesa = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_diplomacy
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:diplomacy_entertainment
			# }
			# OR = {
				# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
					# limit = { exists = scope:owner.var:book_artifact_topic }
					# scope:owner.var:book_artifact_topic = flag:hitopadesa
				# }
				# AND = {
					# scope:owner.faith.religion = religion:hinduism_religion
					# trigger_if = {
						# limit = { exists = scope:owner.var:book_artifact_author }
						# scope:owner.var:book_artifact_author.faith.religion = religion:hinduism_religion
					# }
				# }
				# AND = {
					# exists = scope:owner.capital_province
					# scope:owner.capital_province = {
						# OR = {
							# geographical_region = world_india
							# geographical_region = ghw_region_afghanistan
						# }
					# }
				# }
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_diplomacy_kalila = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_diplomacy
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:diplomacy_entertainment
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:kalila
			# }
			# scope:owner.faith.religion = religion:islam_religion
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author.faith.religion = religion:islam_religion
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_diplomacy_edda = {
		# group = book_topic
		# trigger = {
			# OR = {
				# has_artifact_feature = book_subject_diplomacy
				# has_artifact_feature = book_subject_learning
			# }
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# OR = {
					# scope:owner.var:book_topic_category = flag:diplomacy_entertainment
					# scope:owner.var:book_topic_category = flag:learning_learning
				# }
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:edda
			# }
			# scope:owner.faith.religion = religion:germanic_religion
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author = {
					# faith.religion = religion:germanic_religion
					# has_trait = poet
				# }
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_diplomacy_orkneyinga = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_diplomacy
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:diplomacy_entertainment
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:orkneyinga
			# }
			# scope:owner.faith.religion = religion:germanic_religion
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author.faith.religion = religion:germanic_religion
			# }
		# }
		# weight = 1
	# }

	book_topic_diplomacy_poetry = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_diplomacy
				has_artifact_feature = book_subject_learning
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				OR = {
					scope:owner.var:book_topic_category = flag:diplomacy_entertainment
					scope:owner.var:book_topic_category = flag:learning_learning
				}
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:poetry
			}
			exists = scope:owner.var:book_artifact_author
			scope:owner.var:book_artifact_author = { has_trait = poet }
		}
		weight = 1
	}

	book_topic_diplomacy_jokes = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_diplomacy
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:diplomacy_entertainment
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:jokes
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_diplomacy_jokes_trigger = yes }
						add = 5
					}
					if = {
						limit = { has_trait = lifestyle_reveler }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_diplomacy_jokes_trigger = yes }
						add = 5
					}
					if = {
						limit = { has_trait = lifestyle_reveler }
						add = 10
					}
				}
			}
		}
	}

	# learning topics
	book_topic_learning_theological_treaties = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_learning
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:learning_faith
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:learning_theological_treaties
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_learning_theological_treaties = yes }
						add = 5
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_learning_theological_treaties = yes }
						add = 5
					}
				}
			}
		}
	}

	book_topic_learning_metaphysical_conundrums = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_learning
				AND = {
					has_artifact_feature = book_subject_alchemy
					NOT = { exists = scope:owner.var:book_topic_category }
				}
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:learning_learning
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:learning_metaphysical_conundrums
			}
		}
		weight = 1
	}

	# Warcraft
	# book_topic_learning_aristotle = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_learning
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:learning_learning
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:aristotle
			# }
		# }
		# weight = 1
	# }

	book_topic_learning_anatomy = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_learning
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:learning_learning
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_anatomy
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_trait = lifestyle_physician }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_trait = lifestyle_physician }
						add = 10
					}
				}
			}
		}
	}

	book_topic_learning_tome_collections = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_learning
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:learning_learning
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:learning_tome_collections
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_learning_tome_collections_trigger = yes }
						add = 5
					}
					if = {
						limit = {
							OR = {
								has_trait = intellect_bad
								has_trait = dull
							}
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_learning_tome_collections_trigger = yes }
						add = 5
					}
					if = {
						limit = {
							OR = {
								has_trait = intellect_bad
								has_trait = dull
							}
						}
						add = 20
					}
				}
			}
		}
	}

	book_topic_learning_religious = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_learning
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:learning_faith
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:religious
			}
		}
		weight = 1
	}

	book_topic_learning_religious_big = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_learning
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:learning_faith
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:religious
			}
		}
		weight = 1
	}

	book_topic_learning_prayers = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_learning
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:learning_faith
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:prayers
			}
		}
		weight = 1
	}

	# Warcraft
	# book_topic_learning_hours = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_learning
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:learning_faith
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:hours
			# }
			# scope:owner.faith.religion = religion:christianity_religion
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author.faith.religion = religion:christianity_religion
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_learning_golden_legend = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_learning
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:learning_faith
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:golden_legend
			# }
			# scope:owner.faith.religion = religion:christianity_religion
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author.faith.religion = religion:christianity_religion
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_learning_iliad = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_learning
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:learning_learning
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:iliad
			# }
			# scope:owner.culture = { has_cultural_pillar = heritage_byzantine }
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author.culture = { has_cultural_pillar = heritage_byzantine }
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_learning_mahabharata = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_learning
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:learning_learning
			# }
			# OR = {
				# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
					# limit = { exists = scope:owner.var:book_artifact_topic }
					# scope:owner.var:book_artifact_topic = flag:mahabharata
				# }
				# AND = {
					# scope:owner.faith.religion = religion:hinduism_religion
					# exists = scope:owner.var:book_artifact_author
					# scope:owner.var:book_artifact_author.faith.religion = religion:hinduism_religion
				# }
				# AND = {
					# exists = scope:owner.capital_province
					# scope:owner.capital_province = {
						# OR = {
							# geographical_region = world_india
							# geographical_region = ghw_region_afghanistan
						# }
					# }
				# }
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_learning_mufaddaliyat = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_learning
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:learning_learning
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:mufaddaliyat
			# }
			# scope:owner.faith.religion = religion:islam_religion
			# exists = scope:owner.var:book_artifact_author
			# scope:owner.var:book_artifact_author.faith.religion = religion:islam_religion
			# scope:owner.var:book_artifact_author = { has_trait = scholar }
		# }
		# weight = 1
	# }

	# stewardship topics
	book_topic_stewardship_trade_routes = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_stewardship
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:stewardship_development
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:stewardship_trade_routes
			}
		}
		weight = 1
	}

	book_topic_stewardship_lawmaking = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_stewardship
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:stewardship_rule
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:stewardship_lawmaking
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_stewardship_lawmaking_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_stewardship_lawmaking_trigger = yes }
						add = 10
					}
				}
			}
		}
	}
	
	book_topic_stewardship_best_practices_tax_collectors = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_stewardship
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:stewardship_development
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:stewardship_best_practices_tax_collectors
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_stewardship_best_practices_tax_collectors_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_stewardship_best_practices_tax_collectors_trigger = yes }
						add = 10
					}
				}
			}
		}
	}
	
	book_topic_stewardship_architect = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_stewardship
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:stewardship_development
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:architect
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { has_focus_or_focus_trait_trigger = { FOCUS = stewardship_domain_focus } }
						add = 10
					}
					if = {
						limit = { has_trait = architect }
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { has_focus_or_focus_trait_trigger = { FOCUS = stewardship_domain_focus } }
						add = 10
					}
					if = {
						limit = { has_trait = architect }
						add = 20
					}
				}
			}
		}
	}

	# Warcraft
	# book_topic_stewardship_digest = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_stewardship
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:stewardship_rule
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:digest
			# }
			# OR = {
				# AND = {
					# scope:owner.culture = { has_cultural_pillar = heritage_byzantine }
					# trigger_if = {
						# limit = { exists = scope:owner.var:book_artifact_author }
						# scope:owner.var:book_artifact_author.culture = { has_cultural_pillar = heritage_byzantine }
					# }
				# }
				# AND = {
					# scope:owner.culture = { has_cultural_pillar = heritage_latin }
					# trigger_if = {
						# limit = { exists = scope:owner.var:book_artifact_author }
						# scope:owner.var:book_artifact_author.culture = { has_cultural_pillar = heritage_latin }
					# }
				# }
			# }
		# }
		# weight = 1
	# }

	# Warcraft
	# book_topic_stewardship_speculum = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_stewardship
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_topic_category }
				# scope:owner.var:book_topic_category = flag:stewardship_rule
			# }
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:speculum
			# }
			# scope:owner.culture = { has_cultural_pillar = heritage_latin }
			# trigger_if = {
				# limit = { exists = scope:owner.var:book_artifact_author }
				# scope:owner.var:book_artifact_author.culture = { has_cultural_pillar = heritage_latin }
			# }
		# }
		# weight = 1
	# }

	book_topic_stewardship_admin = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_stewardship
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:stewardship_rule
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:admin
			}
		}
		weight = 1
	}

	book_topic_stewardship_old_ledger = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_stewardship
			exists = scope:owner.var:book_artifact_topic
			scope:owner.var:book_artifact_topic = flag:stewardship_old_ledger #If specified we always pick this, otherwise we never do.
		}
		weight = 100
	}

	# intrigue topics
	book_topic_intrigue_poisons = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_intrigue
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:intrigue_scheme
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:intrigue_poisons
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_intrigue_poisons_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_intrigue_poisons_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_intrigue_punishment = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_intrigue
				has_artifact_feature = book_subject_torturer
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:intrigue_scheme
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:punishment
			}
			exists = scope:owner.var:book_artifact_author
			scope:owner.var:book_artifact_author = { has_trait = torturer }
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_intrigue_punishment_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_intrigue_punishment_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_intrigue_punishment_not_torturer = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_intrigue
				has_artifact_feature = book_subject_torturer
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:intrigue_scheme
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:punishment
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_artifact_author }
				NOT = { scope:owner.var:book_artifact_author = { has_trait = torturer } }
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_intrigue_punishment_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_intrigue_punishment_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_intrigue_seduction = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_intrigue
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:intrigue_seduction
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:seduction
			}
			scope:owner = {
				is_adult = yes #Just to make sure
				trigger_if = {
					limit = { exists = scope:owner.var:book_artifact_author }
					scope:owner.var:book_artifact_author = {
						is_adult = yes #Just to make sure
						NOT = { has_trait = chaste }
					}
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_intrigue_seduction_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_intrigue_seduction_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_intrigue_the_art_of_love = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_intrigue
				has_artifact_feature = book_subject_deviant
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:intrigue_seduction
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:intrigue_the_art_of_love
			}
			scope:owner = {
				is_adult = yes #Just to make sure
				trigger_if = {
					limit = { exists = scope:owner.var:book_artifact_author }
					scope:owner.var:book_artifact_author = {
						is_adult = yes #Just to make sure
						NOT = { has_trait = chaste }
					}
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_intrigue_seduction_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_intrigue_seduction_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_intrigue_fertility = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_intrigue
				has_artifact_feature = book_subject_deviant
			}
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:intrigue_seduction
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:fertility
			}
			scope:owner = {
				is_adult = yes #Just to make sure
				trigger_if = {
					limit = { exists = scope:owner.var:book_artifact_author }
					scope:owner.var:book_artifact_author = {
						is_adult = yes #Just to make sure
						NOT = { has_trait = chaste }
					}
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_intrigue_seduction_trigger = yes }
						add = 10
					}
					if = {
						limit = {
							any_child = { count >= 8 }
						}
						add = 20
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_intrigue_seduction_trigger = yes }
						add = 10
					}
					if = {
						limit = {
							any_child = { count >= 8 }
						}
						add = 20
					}
				}
			}
		}
	}

	# medicine topic
	book_topic_medicine_medicine = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_medicine
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_medicine
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_medicine_herbs = {
		group = book_topic
		trigger = {
			OR = {
				has_artifact_feature = book_subject_medicine
				has_artifact_feature = book_subject_herbalist
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_herbs
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_medicine_herbs_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_medicine_herbs_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_medicine_science = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_medicine
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_science
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_medicine_science_big = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_medicine
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_science
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_medicine_galen = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_medicine
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:galen
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_medicine_witch = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_medicine
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_witch
			}
			trigger_else = {
				exists = scope:owner.var:book_artifact_author
				scope:owner.var:book_artifact_author = { is_witch_trigger = yes }
			}
		}
		weight = {
			value = 10
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_subject_medicine_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	# witch topic
	book_topic_witch_artifact_book_topic_witch_bible = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_witch
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_witch_bible
			}
		}
		weight = 4
	}

	book_topic_witch_worship_horned_god = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_witch
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:worship_horned_god
			}
		}
		weight = 1
	}

	book_topic_witch_love_sorcery = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_witch
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:love_sorcery
			}
			scope:owner = {
				is_adult = yes
				trigger_if = {
					limit = { exists = scope:owner.var:book_artifact_author }
					scope:owner.var:book_artifact_author = {
						is_adult = yes #Just to make sure
					}
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_witch_love_sorcery_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_witch_love_sorcery_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	book_topic_witch_curse_sorcery = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_witch
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:curse_sorcery
			}
			scope:owner = {
				is_adult = yes
				trigger_if = {
					limit = { exists = scope:owner.var:book_artifact_author }
					scope:owner.var:book_artifact_author = {
						is_adult = yes #Just to make sure
					}
				}
			}
		}
		weight = {
			value = 1
			if = {
				limit = {
					exists = scope:owner.var:book_artifact_author
				}
				scope:owner.var:book_artifact_author = {
					if = {
						limit = { book_topic_witch_curse_sorcery_trigger = yes }
						add = 10
					}
				}
			}
			else = {
				scope:owner = {
					if = {
						limit = { book_topic_witch_curse_sorcery_trigger = yes }
						add = 10
					}
				}
			}
		}
	}

	# cannibal topic
	book_topic_cannibal_recipes = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_cannibal
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:cannibal_recipes
			}
		}
		weight = {
			value = 5
		}
	}

	book_topic_artifact_book_topic_cannibal = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_cannibal
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_cannibal
			}
		}
		weight = 1
	}

	# lunatic topic
	book_topic_lunatic_lunatic = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_lunatic
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_lunatic
			}
		}
		weight = 1
	}

	# Warcraft
	# book_topic_lunatic_voynich = {
		# group = book_topic
		# trigger = {
			# has_artifact_feature = book_subject_lunatic
			# trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				# limit = { exists = scope:owner.var:book_artifact_topic }
				# scope:owner.var:book_artifact_topic = flag:artifact_book_voynich
			# }
		# }
		# weight = 1
	# }

	# mystic topics
	book_topic_mystic_mystic = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_mystic
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_mystic
			}
		}
		weight = 1
	}

	# hunter topics
	book_topic_hunter_hunter = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_hunter
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_hunter
			}
		}
		weight = 1
	}

	book_topic_hunter_nature = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_hunter
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_nature
			}
		}
		weight = 1
	}

	# animals topic
	book_topic_animals_your_cat = { # You have a cat whose name we can print
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_animals
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:animals_your_cat
			}
			scope:owner = {
				has_named_cat_trigger = yes
				NOT = { var:story_cycle_cat_name = flag:custom }
			}
		}
		weight = 1
	}

	book_topic_animals_your_cat_no_name = { # You have a cat whose name we CAN'T print
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_animals
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:animals_your_cat
			}
			scope:owner = {
				has_named_cat_trigger = yes
				var:story_cycle_cat_name = flag:custom
			}
		}
		weight = 1
	}

	book_topic_animals_your_dog = { # You have a dog whose name we can print
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_animals
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:animals_your_dog
			}
			scope:owner = {
				has_named_dog_trigger = yes
				NOT = { var:story_cycle_dog_name = flag:custom }
			}
		}
		weight = 1
	}

	book_topic_animals_your_dog_no_name = { # You have a dog whose name we CAN'T can print
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_animals
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:animals_your_dog
			}
			scope:owner = {
				has_named_dog_trigger = yes
				var:story_cycle_dog_name = flag:custom
			}
		}
		weight = 1
	}

	book_topic_animals_animals = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_animals
			scope:owner = {
				has_named_cat_trigger = no
				has_named_dog_trigger = no
			}
		}
		weight = 1
	}

	# childhood topics
	book_topic_childhood_one = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_childhood
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:childhood
			}
			exists = scope:owner.var:book_artifact_author
		}
		weight = 1
	}

	book_topic_childhood_two = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_childhood
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:artifact_book_topic_childhood
			}
			NOT = { exists = scope:owner.var:book_artifact_author }
		}
		weight = 1
	}

	# alchemy topics
	book_topic_alchemy_the_great_book_of_mercy = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_alchemy
			NOT = { exists = scope:owner.var:book_topic_category }
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				#scope:owner.var:book_artifact_topic = flag:the_great_book_of_mercy
				always = no
				#Warcraft
			}
		}
		weight = {
			value = 1
			if = { #An alchemist from the Islamic Golden Age, so more likely to show up if you have a stronger connection to, and easier access to, the materials
				limit = {
					OR = {
						scope:owner = { like_islam_religion_trigger = yes }
						AND = {
							exists = scope:owner.var:book_artifact_author
							scope:owner.var:book_artifact_author = { like_islam_religion_trigger = yes }
						}
					}
				}
				add = 10
			}
		}
	}

	book_topic_alchemy_the_book_of_seventy = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_alchemy
			NOT = { exists = scope:owner.var:book_topic_category }
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				#scope:owner.var:book_artifact_topic = flag:the_book_of_seventy
				always = no
			}
		}
		weight = {
			value = 1
			if = { #An alchemist from the Islamic Golden Age, so more likely to show up if you have a stronger connection to, and easier access to, the materials
				limit = {
					OR = {
						scope:owner = { like_islam_religion_trigger = yes }
						AND = {
							exists = scope:owner.var:book_artifact_author
							scope:owner.var:book_artifact_author = { like_islam_religion_trigger = yes }
						}
					}
				}
				add = 10
			}
		}
	}

	book_topic_alchemy_mercury = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_alchemy
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:mercury
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:mercury
			}
		}
		weight = 1
	}

	book_topic_alchemy_arsenic = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_alchemy
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:arsenic
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:arsenic
			}
		}
		weight = 1
	}

	book_topic_alchemy_gold = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_alchemy
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:gold
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:gold
			}
		}
		weight = 1
	}

	book_topic_alchemy_silver = {
		group = book_topic
		trigger = {
			has_artifact_feature = book_subject_alchemy
			trigger_if = {
				limit = { exists = scope:owner.var:book_topic_category }
				scope:owner.var:book_topic_category = flag:silver
			}
			trigger_if = { # If the topic has been pre-saved from events etc. we make sure it's picked
				limit = { exists = scope:owner.var:book_artifact_topic }
				scope:owner.var:book_artifact_topic = flag:silver
			}
		}
		weight = 1
	}

	book_topic_family_epic = {
		group = book_topic
		trigger = {
			exists = scope:owner.var:book_artifact_topic
			scope:owner.var:book_artifact_topic = flag:family_epic
		}
		weight = 1
	}

	book_topic_family_epic_great = {
		group = book_topic
		trigger = {
			exists = scope:owner.var:book_artifact_topic
			scope:owner.var:book_artifact_topic = flag:family_epic_great
		}
		weight = 1
	}

# book_title
	# misc titles
	book_title_unification = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_unification }
		weight = 1
	}

	book_title_creation = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_creation }
		weight = 1
	}

	book_title_restoration = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_restoration }
		weight = 1
	}

	book_title_mystical_animal = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_mystical_animal }
		weight = 1
	}

	book_title_language_manual = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_language_manual }
		weight = 1
	}

	# martial
	book_title_martial = { #Fallback option that we don't cropping up too often if it's not needed
		group = book_title
		trigger = { has_artifact_feature = book_subject_martial }
		weight = 1
	}

	book_title_martial_military = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_martial_military }
		weight = 1
	}

	book_title_martial_duels = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_martial_duels }
		weight = 1
	}

	book_title_martial_chivalry = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_martial_chivalry }
		weight = 1
	}

	book_title_martial_strategy = {
		group = book_title
		trigger = {
			OR = {
				has_artifact_feature = book_topic_martial_military_strategies
				has_artifact_feature = book_topic_martial_ancient_military_campaigns
			}
		}
		weight = 1
	}

	# diplomacy
	book_title_diplomacy = { #Fallback option that we don't cropping up too often if it's not needed
		group = book_title
		trigger = { has_artifact_feature = book_subject_diplomacy }
		weight = 0.1
	}

	book_title_diplomacy_cicero = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_diplomacy_cicero
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_diplomacy_hitopadesa = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_diplomacy_hitopadesa
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_diplomacy_kalila = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_diplomacy_kalila 
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_diplomacy_edda = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_diplomacy_edda
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_diplomacy_orkneyinga = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_diplomacy_orkneyinga 
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_diplomacy_poetry = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_diplomacy_poetry }
		weight = 1
	}

	book_title_diplomacy_jokes = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_diplomacy_jokes }
		weight = 1
	}

	book_title_diplomacy_feasting = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_diplomacy_art_of_feasting }
		weight = 1
	}

	book_title_diplomacy_court_alliances = {
		group = book_title
		trigger = {
			OR = {
				has_artifact_feature = book_topic_diplomacy_court_alliances
				has_artifact_feature = book_topic_diplomacy_court_politics
			}
		}
		weight = 1
	}

	book_title_diplomacy_dynasty = {
		group = book_title
		trigger = {
			OR = {
				has_artifact_feature = book_topic_diplomacy_dynasty
				has_artifact_feature = book_topic_diplomacy_dynasty_big
			}
		}
		weight = 1
	}

	# stewardship
	book_title_stewardship = { #Fallback option that we don't cropping up too often if it's not needed
		group = book_title
		trigger = { has_artifact_feature = book_subject_stewardship }
		weight = 0.1
	}

	book_title_stewardship_digest = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_stewardship_digest 
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_stewardship_architect = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_stewardship_architect }
		weight = 1
	}

	book_title_stewardship_speculum = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_stewardship_speculum
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_stewardship_admin = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_stewardship_admin }
		weight = 1
	}

	book_title_stewardship_trade_routes = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_stewardship_trade_routes }
		weight = 1
	}

	book_title_stewardship_best_practices_tax_collectors = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_stewardship_best_practices_tax_collectors }
		weight = 1
	}

	book_title_stewardship_lawmaking = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_stewardship_lawmaking }
		weight = 1
	}

	book_title_stewardship_old_ledger = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_stewardship_old_ledger }
		weight = 1
	}
	
	# learning
	book_title_learning = { #Fallback option that we don't cropping up too often if it's not needed
		group = book_title
		trigger = { has_artifact_feature = book_subject_learning }
		weight = 0.1
	}

	book_title_learning_religious = {
		group = book_title
		trigger = {
			OR = {
				has_artifact_feature = book_topic_learning_religious
				has_artifact_feature = book_topic_learning_religious_big
			}
		}
		weight = 1
	}

	book_title_learning_prayers = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_learning_prayers }
		weight = 1
	}

	book_title_learning_hours = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_learning_hours 
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_learning_golden_legend = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_learning_golden_legend
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_learning_aristotle = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_learning_aristotle 
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_learning_anatomy = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_learning_anatomy }
		weight = 1
	}

	book_title_learning_iliad = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_learning_iliad
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_learning_mahabharata = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_learning_mahabharata
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_learning_mufaddaliyat = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_learning_mufaddaliyat
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_learning_theological_treaties = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_learning_theological_treaties }
		weight = 1
	}

	book_title_learning_metaphysical_conundrums = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_learning_metaphysical_conundrums }
		weight = 1
	}

	book_title_learning_tome_collections = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_learning_tome_collections }
		weight = 1
	}

	# intrigue
	book_title_intrigue = { #Fallback option that we don't cropping up too often if it's not needed
		group = book_title
		trigger = { has_artifact_feature = book_subject_intrigue }
		weight = 0.1
	}

	book_title_intrigue_poisons = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_intrigue_poisons }
		weight = 1
	}

	book_title_intrigue_seduction = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_intrigue_seduction }
		weight = 1
	}

	book_title_intrigue_fertility = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_intrigue_fertility }
		weight = 1
	}

	book_title_intrigue_the_art_of_love_one = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_intrigue_the_art_of_love }
		weight = 1
	}

	book_title_intrigue_the_art_of_love_two = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_intrigue_the_art_of_love }
		weight = 1
	}

	book_title_intrigue_punishment = {
		group = book_title
		trigger = {
			OR = {
				has_artifact_feature = book_subject_torturer
				has_artifact_feature = book_topic_intrigue_punishment
				has_artifact_feature = book_topic_intrigue_punishment_not_torturer
			}
		}
		weight = 1
	}

	# witch
	book_title_witch_love_sorcery = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_witch_love_sorcery }
		weight = 1
	}

	book_title_witch_curse_sorcery = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_witch_curse_sorcery }
		weight = 1
	}

	book_title_witch_witch = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_witch }
		weight = 1
	}

	# medicine
	book_title_medicine_science = {
		group = book_title
		trigger = {
			OR = {
				has_artifact_feature = book_topic_medicine_science
				has_artifact_feature = book_topic_medicine_science_big
			}
		}
		weight = 1
	}

	book_title_medicine_galen = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_medicine_galen }
		weight = 1
	}

	book_title_medicine_herbs_one = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_medicine_herbs }
		weight = 1
	}

	book_title_medicine_herbs_two = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_medicine_herbs }
		weight = 1
	}

	book_title_medicine_witch = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_medicine_witch }
		weight = 1
	}

	book_title_medicine_medicine = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_medicine_medicine }
		weight = 1
	}

	# alchemy
	book_title_alchemy_the_great_book_of_mercy = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_alchemy_the_great_book_of_mercy }
		weight = 1
	}

	book_title_alchemy_the_book_of_seventy = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_alchemy_the_book_of_seventy }
		weight = 1
	}

	book_title_alchemy_mercury = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_alchemy_mercury }
		weight = 1
	}

	book_title_alchemy_arsenic = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_alchemy_arsenic }
		weight = 1
	}

	book_title_alchemy_gold = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_alchemy_gold }
		weight = 1
	}

	book_title_alchemy_silver = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_alchemy_silver }
		weight = 1
	}

	# lifestyles
	book_title_reveler_one = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_reveler }
		weight = 1
	}

	book_title_reveler_two = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_reveler }
		weight = 1
	}

	book_title_blademaster = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_blademaster }
		weight = 1
	}

	book_title_hunter_one = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_hunter }
		weight = 1
	}

	book_title_hunter_two = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_hunter }
		weight = 1
	}

	book_title_mystic = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_mystic }
		weight = 1
	}

	book_title_herbalist = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_herbalist }
		weight = 1
	}

	# _lifestyles_
	book_title_cannibal = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_cannibal }
		weight = 1
	}

	book_title_cannibal_recipes = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_cannibal_recipes }
		weight = 1
	}

	book_title_deviant_one = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_deviant }
		weight = 50
	}

	book_title_deviant_two = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_deviant }
		weight = 50
	}

	book_title_deviant_three = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_deviant }
		weight = 1
	}

	# lunatic
	book_title_voynich = {
		group = book_title
		trigger = { #has_artifact_feature = book_topic_lunatic_voynich
			always = no #Warcraft
		}
		weight = 1
	}

	book_title_lunatic_one = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_lunatic }
		weight = 1
	}

	book_title_lunatic_two = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_lunatic }
		weight = 1
	}

	book_title_lunatic_three = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_lunatic }
		weight = 1
	}

	# relationship
	book_title_soulmate = {
		group = book_title
		trigger = {
			has_artifact_feature = book_subject_relationship
			has_artifact_feature = book_topic_soulmate
		}
		weight = 1
	}

	book_title_nemesis = {
		group = book_title
		trigger = {
			has_artifact_feature = book_subject_relationship
			has_artifact_feature = book_topic_nemesis
		}
		weight = 1
	}

	# childhood
	book_title_childhood_one = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_childhood }
		weight = 1
	}

	book_title_childhood_two = {
		group = book_title
		trigger = { has_artifact_feature = book_subject_childhood }
		weight = 1
	}

	# animals
	book_title_animals_your_cat = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_animals_your_cat
			NOT = { scope:owner.var:story_cycle_cat_name = flag:custom }
		}
		weight = 1
	}

	book_title_animals_your_dog = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_animals_your_dog
			NOT = { scope:owner.var:story_cycle_dog_name = flag:custom }
		}
		weight = 1
	}

	book_title_animals_no_name = {
		group = book_title
		trigger = {
			OR = {
				has_artifact_feature = book_topic_animals_your_cat
				has_artifact_feature = book_topic_animals_your_dog
			}
		}
		weight = 1
	}

	book_title_animals = {
		group = book_title
		trigger = { has_artifact_feature = book_topic_animals_animals }
		weight = 1
	}

	# family epic
	book_title_family_epic_song = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_family_epic
			scope:owner.var:composition_type = flag:song
		}
		weight = 1
	}

	book_title_family_epic_chronicle = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_family_epic
			scope:owner.var:composition_type = flag:chronicle
		}
		weight = 1
	}

	book_title_family_epic_poem = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_family_epic
			scope:owner.var:composition_type = flag:poem
		}
		weight = 1
	}

	# family epic great
	book_title_family_epic_great_song = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_family_epic_great
			scope:owner.var:composition_type = flag:song
		}
		weight = 1
	}

	book_title_family_epic_great_chronicle = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_family_epic_great
			scope:owner.var:composition_type = flag:chronicle
		}
		weight = 1
	}

	book_title_tome = {
		group = book_title
		trigger = {
			NOT = { has_artifact_feature_group = book_topic }
		}
		weight = 1
	}

	book_title_family_epic_great_poem = {
		group = book_title
		trigger = {
			has_artifact_feature = book_topic_family_epic_great
			scope:owner.var:composition_type = flag:poem
		}
		weight = 1
	}


# book_cover_material
	book_cover_material_HSB_ivory = {
		group = book_cover_material
		trigger = {
			OR = {
				AND = {
					artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 999 }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
				}
				AND = {
					artifact_value_trigger = { VALUE = scope:wealth MIN = 80 MAX = 999 }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_imported }
				}
			}
		}
		weight = {
			value = 40
			if = {
				limit = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = material_hsb_ivory_native }
				}
				add = 60
			}
		}
	}

	book_cover_material_wood = {
		group = book_cover_material
		weight = 100
	}

	book_cover_material_leather = {
		group = book_cover_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 50 }
		}
		weight = 100
	}

	book_cover_material_velvet = {
		group = book_cover_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 60 MAX = 90 }
			NOT = { artifact_region_trigger = { CHARACTER = scope:owner REGION = material_cloth_no_silk } }
		}
		weight = 50
	}

	book_cover_material_gold = {
		group = book_cover_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 75 MAX = 999 }
		}
		weight = 50
	}

	book_cover_material_silver = {
		group = book_cover_material
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 70 MAX = 100 }
		}
		weight = 50
	}

# book_decoration
	book_decoration_gems = {
		group = book_decoration
		trigger = {
			OR = {
				has_artifact_feature = book_cover_material_silver
				has_artifact_feature = book_cover_material_gold
				has_artifact_feature = book_cover_material_leather
			}
		}
		weight = 100
	}

	book_decoration_gems_and_clasp = {
		group = book_decoration
		trigger = {
			OR = {
				has_artifact_feature = book_cover_material_silver
				has_artifact_feature = book_cover_material_gold
				has_artifact_feature = book_cover_material_leather
			}
		}
		weight = 100
	}

	book_decoration_pattern_embroidered = {
		group = book_decoration
		trigger = {
			has_artifact_feature = book_cover_material_velvet
		}
		weight = 100
	}

	book_decoration_pattern_carved = {
		group = book_decoration
		trigger = {
			has_artifact_feature = book_cover_material_HSB_ivory
		}
		weight = 100
	}

	book_decoration_pattern_painted = {
		group = book_decoration
		weight = 10
	}

#################################################################
# Alchemy Features - Elixirs, Metals, Decoration				#
#################################################################

# elixir_type - what type of elixir it is
	elixir_youth = {
		group = elixir_type
		trigger = {
			artifact_wealth_quality_average_value < 60
		}
		weight = 1
	}
	elixir_immortality = {
		group = elixir_type
		trigger = {
			artifact_wealth_quality_average_value > 50
		}
		weight = 1
	}

# glass_decoration
	glass_decoration_etched_pattern = {
		group = glass_decoration
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 0 MAX = 70 }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = world_middle_east_persia }
			}
		}
		weight = 1
	}
	glass_decoration_inlay_pattern = {
		group = glass_decoration
		trigger = {
			artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 100 }
		}
		weight = 1
	}
	glass_decoration_painted_pattern = {
		group = glass_decoration
		trigger = {
			always = yes
		}
		weight = 1
	}
	glass_decoration_mold_blowing_pattern = {
		group = glass_decoration
		trigger = {
			AND = { 
				artifact_value_trigger = { VALUE = scope:wealth MIN = 20 MAX = 100 }
				artifact_region_trigger = { CHARACTER = scope:owner REGION = world_europe }
			}
		}
		weight = 1
	}
	glass_decoration_enamel_pattern = {
		group = glass_decoration
		trigger = {
			AND = {
				artifact_value_trigger = { VALUE = scope:wealth MIN = 50 MAX = 100 }
				OR = {
					artifact_region_trigger = { CHARACTER = scope:owner REGION = world_middle_east_persia }
					artifact_region_trigger = { CHARACTER = scope:owner REGION = world_africa_north }
				}
			}
		}
		weight = 1
	}
