pay_homage_start = {
	effect = {
		switch = {
			trigger = has_trait
			shy = { add_stress = medium_stress_impact_gain }
			arrogant = { add_stress = medium_stress_impact_gain }
		}
		if = {
			limit = { has_variable = pay_homage_grace }
			remove_variable = pay_homage_grace
		}
		set_variable = {
			name = pay_homage_grace
			value = liege
		}
		liege = {
			if = { # Make sure the AI doesn't spam homage
				limit = {
					NOT = { has_variable = pay_homage_cooldown }
				}
				set_variable = { # To stop AI vassals taking decision all at once
					name = pay_homage_cooldown
					years = 2
				}
			}
			else = {
				remove_variable = pay_homage_cooldown
				set_variable = { # To stop AI vassals taking decision all at once
					name = pay_homage_cooldown
					years = 2
				}
			}
		}
		if = {
			limit = { has_variable = homage_type } # To stop errors
			switch = {
				trigger = var:homage_type
				flag:homage_submission = {} #Submission
				flag:homage_gold = {} #Gold
				flag:homage_hook = {} #Favor
				flag:homage_contract = { # Contract
					if = { # Levies
						limit = {
							vassal_contract_obligation_level:feudal_government_levies < vassal_contract_obligation_level:feudal_government_taxes
							vassal_contract_obligation_level_can_be_increased = feudal_government_levies
						}
						set_variable = {
							name = pay_homage_contract_type
							value = 0
						}
					}
					else_if = { # Gold
						limit = {
							vassal_contract_obligation_level:feudal_government_taxes < vassal_contract_obligation_level:feudal_government_levies
							vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
						}
						set_variable = {
							name = pay_homage_contract_type
							value = 1
						}
					}
					else = {
						if = { # Gold
							limit = { vassal_contract_obligation_level_can_be_increased = feudal_government_taxes }
							set_variable = {
								name = pay_homage_contract_type
								value = 1
							}
						}
						else = { # Levies
							set_variable = {
								name = pay_homage_contract_type
								value = 0
							}
						}
					}
				}
			} 
		}
		scope:homage_liege = {
			every_courtier = {
				limit = { is_close_family_of = prev }
				add_to_list = pay_homage_family_list
			}
			every_spouse = {
				limit = { is_close_family_of = prev }
				add_to_list = pay_homage_family_list
			}
			if = {
				limit = {
					scope:homage_vassal.attraction >= 10
					scope:homage_vassal = {
						might_cheat_on_every_partner_trigger = yes
						NOR = { 
							has_trait = chaste
							has_trait = celibate
						}
					}
					any_in_list = {
						list = pay_homage_family_list
						is_available_ai_adult = yes
						can_start_scheme = {
							type = seduce
							target = scope:homage_vassal
						}
						AND = {	
							might_cheat_on_every_partner_trigger = yes
							NOR = { 
								has_trait = chaste
								has_trait = celibate
							}
							OR = {
								is_attracted_to_gender_of = scope:homage_vassal
								has_perk = unshackled_lust_perk
							}
							trigger_if = {
								limit = { relation_with_character_is_sodomy_in_my_or_lieges_faith_trigger = { CHARACTER = scope:homage_vassal } }
								OR = {
									freely_accepts_sodomy_with_trigger = { CHARACTER = scope:homage_vassal }
									has_perk = unshackled_lust_perk
								}
							}
							trigger_if = {
								limit = { relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = scope:homage_vassal } }
								OR = {
									has_perk = subtle_desire_perk
									accepts_incest_with_trigger = { CHARACTER = scope:homage_vassal }
								}
							}
						}
						scope:homage_vassal = {
							AND = {	
								OR = {
									is_attracted_to_gender_of = prev
									has_perk = unshackled_lust_perk
								}
								trigger_if = {
									limit = { relation_with_character_is_sodomy_in_my_or_lieges_faith_trigger = { CHARACTER = prev } }
									OR = {
										freely_accepts_sodomy_with_trigger = { CHARACTER = prev }
										has_perk = unshackled_lust_perk
									}
								}
								trigger_if = {
									limit = { relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = prev } }
									OR = {
										has_perk = subtle_desire_perk
										accepts_incest_with_trigger = { CHARACTER = prev }
									}
								}
							}
						}
					}
				}
				random_in_list = {
					list = pay_homage_family_list	
					limit = {
						is_available_ai_adult = yes
						can_start_scheme = {
							type = seduce
							target = scope:homage_vassal
						}
						AND = {	
							might_cheat_on_every_partner_trigger = yes
							NOR = { 
								has_trait = chaste
								has_trait = celibate
							}
							OR = {
								is_attracted_to_gender_of = scope:homage_vassal
								has_perk = unshackled_lust_perk
							}
							trigger_if = {
								limit = { relation_with_character_is_sodomy_in_my_or_lieges_faith_trigger = { CHARACTER = scope:homage_vassal } }
								OR = {
									freely_accepts_sodomy_with_trigger = { CHARACTER = scope:homage_vassal }
									has_perk = unshackled_lust_perk
								}
							}
							trigger_if = {
								limit = { relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = scope:homage_vassal } }
								OR = {
									has_perk = subtle_desire_perk
									accepts_incest_with_trigger = { CHARACTER = scope:homage_vassal }
								}
							}
						}
						scope:homage_vassal = {
							AND = {	
								OR = {
									is_attracted_to_gender_of = prev
									has_perk = unshackled_lust_perk
								}
								trigger_if = {
									limit = { relation_with_character_is_sodomy_in_my_or_lieges_faith_trigger = { CHARACTER = prev } }
									OR = {
										freely_accepts_sodomy_with_trigger = { CHARACTER = prev }
										has_perk = unshackled_lust_perk
									}
								}
								trigger_if = {
									limit = { relation_with_character_is_incestuous_in_my_faith_trigger = { CHARACTER = prev } }
									OR = {
										has_perk = subtle_desire_perk
										accepts_incest_with_trigger = { CHARACTER = prev }
									}
								}
							}
						}						
					}
					weight = {
						modifier = {
							factor = 2
							has_trait = lustful
						}
						modifier = {
							factor = 0.5
							OR = {
								AND = {
									is_male = yes
									scope:homage_vassal = { is_male = yes }
								}
								AND = {
									is_female = yes
									scope:homage_vassal = { is_female = yes }
								}
							}
							NOT = {
								faith = { has_doctrine = doctrine_homosexuality_accepted }
							}
						}
						modifier = {
							factor = 2
							age <= 30
						}
						modifier = {
							factor = 4
							is_married = no
						}
						modifier = {
							factor = 2
							is_child_of = scope:homage_liege
						}
						modifier = {
							factor = 2
							is_parent_of = scope:homage_liege
						}
						modifier = {
							factor = 2
							is_spouse_of = scope:homage_liege
						}
					}
					save_scope_as = homage_infatuation
					start_scheme = {
						type = seduce
						target = scope:homage_vassal
					}
				}
			}
		}
	}
}

pay_homage_travel_planner_exit = {
	effect = {
		send_interface_toast = {
			title = pay_homage_costs_refunded
			left_icon = root 
			# Remove variable preventing you from paying homage again
			if = {
				limit = {
					has_variable = pay_homage_grace
					exists = liege
					var:pay_homage_grace = liege
				}
				remove_variable = pay_homage_grace
			}
			# refund any costs
			add_prestige_no_experience = standard_activity_cost
			if = {
				limit = {
					has_variable = pay_homage_gold_value
				}
				add_gold = var:pay_homage_gold_value
			}
			switch = {
				trigger = has_trait
				shy = { add_stress = medium_stress_impact_loss }
				arrogant = { add_stress = medium_stress_impact_loss }
			}
		}
		# Variable cleanup
		if = {
			limit = { has_variable = homage_type }
			remove_variable = homage_type
		}
		# Contract
		if = {
			limit = { has_variable = pay_homage_contract_type }
			remove_variable = pay_homage_contract_type
		}
		# Liege
		if = {
			limit = { has_variable = homage_liege_scope }
			remove_variable = homage_liege_scope
		}
		if = {
			limit = { has_variable = pay_homage_gold_value }
			remove_variable = pay_homage_gold_value
		}
	}
}
