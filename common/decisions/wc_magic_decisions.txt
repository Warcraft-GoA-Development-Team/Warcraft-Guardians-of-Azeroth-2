find_court_mage = { 
	decision_group_type = wc_magic 
	ai_check_interval = 60
	sort_order = 81

	cooldown = { days = 365 }

	desc = { 
		desc = find_court_mage_desc.opening
		triggered_desc = { 
			trigger = { culture = { has_innovation = innovation_archmagi } }
			desc = find_court_mage_desc.archmages
		}
	}

	is_valid_showing_failures_only = { 
		faith = { 
			OR = { 
				has_doctrine_parameter = light_magic_openly_learnable
				has_doctrine_parameter = shadow_magic_openly_learnable
				has_doctrine_parameter = order_magic_openly_learnable
				has_doctrine_parameter = disorder_magic_openly_learnable
				has_doctrine_parameter = life_magic_openly_learnable
				has_doctrine_parameter = death_magic_openly_learnable
				has_doctrine_parameter = elemental_fire_magic_openly_learnable
				has_doctrine_parameter = elemental_water_magic_openly_learnable
				has_doctrine_parameter = elemental_earth_magic_openly_learnable
				has_doctrine_parameter = elemental_air_magic_openly_learnable
			}
		}
	}

	effect = { 
		if = { limit = { culture = { has_innovation = innovation_archmagi } }
			trigger_event =  {
				id = magic_decisions.0002
				days = 3 #0
			}
		}
		else = { 
			trigger_event =  {
				id = magic_decisions.0001
				days = 3 #0
			}
		}
	}

	ai_will_do = {
		base = 100
	}

}

restore_chronomancy_decision = {
	decision_group_type = wc_magic

	ai_check_interval = 60

	is_shown = {
		has_character_flag = chronomancy_active
		OR = {
			has_variable_list = chronomancy_trait_list
			has_variable_list = chronomancy_modifier_list
		}
	}

	effect = {
		custom_tooltip = restore_chronomancy_decision.effect_tt
		trigger_event = wc_magic_spell_events.3001
	}
}

activate_presence_of_mind_decision = {
	decision_group_type = wc_magic

	ai_check_interval = 60

	is_shown = {
		has_variable = wc_presence_of_mind_available
	}

	is_valid_showing_failures_only = {
		custom_tooltip = {
			text = wc_spell_hack_active
			spell_hack_activated_trigger = no
		}
	}

	effect = {
		custom_tooltip = activate_presence_of_mind_decision.effect_tt
		custom_tooltip = activate_presence_of_mind_decision.disable_tt
		remove_variable = wc_presence_of_mind_available
		set_variable = wc_presence_of_mind_activated
	}
}

deactivate_presence_of_mind_decision = {
	decision_group_type = wc_magic

	ai_check_interval = 60

	is_shown = {
		has_variable = wc_presence_of_mind_activated
	}

	effect = {
		custom_tooltip = deactivate_presence_of_mind_decision.effect_tt
		custom_tooltip = deactivate_presence_of_mind_decision.enable_tt
		remove_variable = wc_presence_of_mind_activated
		set_variable = wc_presence_of_mind_available
	}
}

activate_reverse_causality_decision = {
	decision_group_type = wc_magic

	ai_check_interval = 60

	is_shown = {
		has_variable = wc_reverse_causality_available
		NOT = {
			has_variable = reverse_causality_mult
		}
	}

	is_valid_showing_failures_only = {
		custom_tooltip = {
			text = wc_spell_hack_active
			spell_hack_activated_trigger = no
		}
	}

	effect = {
		custom_tooltip = activate_reverse_causality_decision.effect_tt
		custom_tooltip = activate_reverse_causality_decision.disable_tt
		remove_variable = wc_reverse_causality_available
		set_variable = wc_reverse_causality_activated
	}
}

deactivate_reverse_causality_decision = {
	decision_group_type = wc_magic

	ai_check_interval = 60

	is_shown = {
		has_variable = wc_reverse_causality_activated
	}

	effect = {
		custom_tooltip = deactivate_reverse_causality_decision.effect_tt
		custom_tooltip = deactivate_reverse_causality_decision.enable_tt
		remove_variable = wc_reverse_causality_activated
		set_variable = wc_reverse_causality_available
	}
}