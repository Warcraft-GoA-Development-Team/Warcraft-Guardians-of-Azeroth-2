######################################################
################## FAITH CREATION ####################
######################################################

window = {
	name = "faith_creation_window"
	datacontext = "[FaithCreationWindow.GetVassalConversionWindow]"
	datacontext = "[GetVariableSystem]"
	parentanchor = center
	size = { 1300 950 }
	layer = middle

	using = Window_Background
	using = Window_Decoration

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		on_start = "[GetVariableSystem.Set( 'faith_creation_doctrine_page', 'main_group' )]"
		on_start = "[GetVariableSystem.Set( 'faith_creation_icon_selection', 'false' )]"
		on_start = "[GetVariableSystem.Clear('faith_creation_right_view')]"
		on_start = "[GetVariableSystem.Clear('conversion_view_vassals')]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding
			visible = "[Not( GetPlayer.GetFaith.IsUnreformed )]"

			blockoverride "header_text"
			{
				text = "CREATE_FAITH_WINDOW_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[FaithCreationWindow.Close]"
			}

			blockoverride "button_back"
			{
				visible = "[HasViewHistory]"
				onclick = "[OpenFromViewHistory]"
				tooltip = "[GetViewHistoryTooltip]"
			}
		}

		header_pattern = {
			layoutpolicy_horizontal = expanding
			visible = "[GetPlayer.GetFaith.IsUnreformed]"

			blockoverride "header_text"
			{
				text = "REFORM_FAITH_WINDOW_TITLE"
			}

			blockoverride "button_close"
			{
				onclick = "[FaithCreationWindow.Close]"
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			widget = {
				name = "left_side"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				vbox = {
					visible = "[Not(VariableSystem.Exists( 'conversion_view_vassals' ))]"
					spacing = 10

					hbox = {
						name = "name_and_icon"
						margin_top = 15
						spacing = 10

						button_standard = {
							size = { 60 60 }
							visible = "[Not( GetPlayer.GetFaith.IsUnreformed )]"
							onclick = "[GetVariableSystem.Set( 'faith_creation_right_view', 'icon_selection' )]"
							tooltip = "CHANGE_FAITH_ICON"

							highlight_icon = {
								name = "faith_icon"
								visible = "[GetVariableSystem.HasValue( 'faith_creation_icon_selection', 'true' )]"
								parentanchor = center
								size = { 52 52 }
								texture = "[FaithCreationWindow.GetFaithIcon]"
								onclick = "[GetVariableSystem.Set( 'faith_creation_right_view', 'icon_selection' )]"
								tooltip = "CHANGE_FAITH_ICON"
							}

							animation_attention_text = {
								visible = "[Not(GetVariableSystem.HasValue( 'faith_creation_icon_selection', 'true' ))]"
							}
						}

						hbox = {
							visible = "[GetPlayer.GetFaith.IsUnreformed]"
							layoutpolicy_horizontal = expanding

							icon = {
									visible = "[GetPlayer.GetFaith.IsUnreformed]"
									name = "faith_icon"
									size = { 45 45 }
									texture = "[FaithCreationWindow.GetFaithIcon]"
								}

							text_single = {
								name = "faith_name_static"
								visible = "[GetPlayer.GetFaith.IsUnreformed]"
								text = "FAITH_WINDOW_FAITH_NAME"
								default_format = "#high"
								using = Font_Size_Big
							}
						}

						button_standard = {
							name = "faith_name"
							size = { 550 60 }
							visible = "[Not( GetPlayer.GetFaith.IsUnreformed )]"
							onclick = "[GetVariableSystem.Set( 'faith_creation_right_view', 'name_selection' )]"
							tooltip = FAITH_WINDOW_FAITH_NAME_TOOLTIP

							text_multi = {
								name = "faith_name_label"
								size = { 100% 100% }
								margin = { 10 0 }
								fontsize_min = 16
								text = "FAITH_WINDOW_FAITH_NAME"
								default_format = "#high"
								using = Font_Size_Big
								align = center|nobaseline
							}

							button_replace = {
								name = "reset"
								parentanchor = right|vcenter
								position = { -6 0 }
								size = { 40 40 }
							}
						}

						map_color_button = {
							tooltip = "CREATE_FAITH_SELECT_COLOR"
							blockoverride "mcb_click"
							{
								onclick = "[GetVariableSystem.Set( 'faith_creation_right_view', 'color_selection' )]"
							}
							blockoverride "mcb_color"
							{
								tintcolor = "[FaithCreationWindow.GetColor]"
							}
						}						
					}

					divider = {
						layoutpolicy_horizontal = expanding
					}

					vbox = {
						name = "tenets"
						layoutpolicy_horizontal = expanding
						spacing = 15

						text_label_center = {
							text = "[core_tenets|E]"
						}

						hbox = {
							name = "tenets_grid"
							datamodel = "[FaithCreationWindow.GetGroupingHelper( 'core_tenets' ).GetGrouping]"
							spacing = 45

							item = {
								button_group = {
									datacontext = "[GuiFaithCreationDoctrineItem.GetGuiFaithDoctrineItem]"
									datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
									datacontext = "[GuiFaithDoctrineItem.GetFaith]"

									icon = {
										size = { 130 160 }
										scale = 1.5
										parentanchor = center
										visible = "[EqualTo_int32( GuiFaithCreationDoctrineItem.GetSlotIndex, GuiFaithCreationDoctrineItem.GetFaithCreationWindow.GetDoctrineGroupWindow.GetSlotIndex ) ]"
										texture = "gfx/portraits/portrait_glow.dds"
										using = Color_Orange
									}

									container_tenet_item = {
										tooltip = "FAITH_WINDOW_DOCTRINE_CHANGE_TOOLTIP"
									}

									onclick = "[GuiFaithCreationDoctrineItem.GetFaithCreationWindow.GetDoctrineGroupWindow.ShowWindowSortList( GuiFaithCreationDoctrineItem.GetSlotIndex )]"
									onclick = "[GetVariableSystem.Set( 'faith_creation_right_view', 'doctrine_selection' )]"
									onclick = "[GetVariableSystem.Set( 'doctrine_group_name', FaithDoctrine.GetGroup.GetName( GuiFaithDoctrineItem.GetFaith ) )]"
								}
							}
						}
					}

					divider = {
						layoutpolicy_horizontal = expanding
					}

					vbox = {
						name = "doctrines"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						spacing = 15

						text_label_center = {
							text = "[doctrines|E]"
						}

						scrollbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							blockoverride "scrollbox_content"
							{
								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 10

									text_label_left = {
										layoutpolicy_horizontal = expanding
										text = "FAITH_DOCTRINES_IMPORTANT"
										default_format = "#low"
									}

									fixedgridbox = {
										name = "doctrines_grid_main_group"
										datamodel = "[FaithCreationWindow.GetGroupingHelper( 'main_group' ).GetGrouping]"

										flipdirection = yes
										addcolumn = 270
										addrow = 65
										datamodel_wrap = 2

										item = {
											widget_doctrine_selection_item = {
												blockoverride "doctrine_icon_texture"
												{
													texture = "[FaithDoctrine.GetIcon]"
												}
											}
										}
									}
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 10

									text_label_left = {
										layoutpolicy_horizontal = expanding
										text = "FAITH_DOCTRINES_MARRIAGE"
										default_format = "#low"
									}

									fixedgridbox = {
										name = "doctrines_grid_marriage"
										datamodel = "[FaithCreationWindow.GetGroupingHelper( 'marriage' ).GetGrouping]"
										flipdirection = yes
										addcolumn = 270
										addrow = 65
										datamodel_wrap = 2

										item = {
											widget_doctrine_selection_item = {}
										}
									}

								}

								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 10

									text_label_left = {
										layoutpolicy_horizontal = expanding
										text = "FAITH_DOCTRINES_CRIMES"
										default_format = "#low"
									}

									fixedgridbox = {
										name = "doctrines_grid_crimes"
										datamodel = "[FaithCreationWindow.GetGroupingHelper( 'crimes' ).GetGrouping]"

										flipdirection = yes
										addcolumn = 270
										addrow = 65
										datamodel_wrap = 2

										item = {
											widget_doctrine_selection_item = {}
										}
									}
								}

								# Warcraft
								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 10

									text_label_left = {
										layoutpolicy_horizontal = expanding
										text = "FAITH_WC_DOCTRINES_MAGIC"
										default_format = "#low"
									}

									fixedgridbox = {
										name = "wc_doctrines_grid_magic"
										datamodel = "[FaithCreationWindow.GetGroupingHelper( 'wc_magic' ).GetGrouping]"

										flipdirection = yes
										addcolumn = 270
										addrow = 65
										datamodel_wrap = 2

										item = {
											widget_doctrine_selection_item = {}
										}
									}
								}

								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 10

									text_label_left = {
										layoutpolicy_horizontal = expanding
										text = "FAITH_DOCTRINES_CLERGY"
										default_format = "#low"
									}

									fixedgridbox = {
										name = "doctrines_grid_clergy"
										datamodel = "[FaithCreationWindow.GetGroupingHelper( 'clergy' ).GetGrouping]"

										flipdirection = yes
										addcolumn = 270
										addrow = 65
										datamodel_wrap = 2

										item = {
											widget_doctrine_selection_item = {}
										}
									}
								}
							}
						}
					}

					hbox = {
						name = "footer_area"
						layoutpolicy_horizontal = expanding
						margin = { 15 0 }
						margin_bottom = 15

						hbox = {
							name = "sins_and_virtues"
							spacing = 10

							vbox = {
								name = "sins"
								spacing = 3

								hbox = {
									spacing = 5
									icon = {
										texture = "gfx/interface/icons/traits/sin_big.dds"
									}

									text_single = {
										text = "FAITH_WINDOW_SINS"
										align = right|nobaseline
									}
								}

								hbox = {
									name = "virtues_grid"
									datamodel = "[FaithCreationWindow.GetSins]"

									item = {
										icon = {
											datacontext = "[GuiVirtueOrSinItem.GetTrait]"
											size = { 40 40 }
											alwaystransparent = yes
											texture = "[Trait.GetIcon( GetPlayer )]"

											tooltipwidget = {
												using = faith_window_trait_tooltip
											}

											block "tooltip_placement"
											{
												using = tooltip_ne
												tooltip_offset = { 0 20 }
											}
										}
									}
								}
							}

							divider_light = {
								layoutpolicy_vertical = expanding
							}

							vbox = {
								name = "virtues"
								spacing = 3

								hbox = {
									spacing = 5
									icon = {
										texture = "gfx/interface/icons/traits/virtue_big.dds"
									}

									text_single = {
										text = "FAITH_WINDOW_VIRTUES"
										align = nobaseline
									}
								}

								hbox = {
									name = "virtues_grid"
									datamodel = "[FaithCreationWindow.GetVirtues]"

									item = {
										icon = {
											datacontext = "[GuiVirtueOrSinItem.GetTrait]"
											size = { 40 40 }
											alwaystransparent = yes
											texture = "[Trait.GetIcon( GetPlayer )]"

											tooltipwidget = {
												using = faith_window_trait_tooltip
											}

											block "tooltip_placement"
											{
												using = tooltip_ne
												tooltip_offset = { 0 20 }
											}
										}
									}
								}
							}
						}
					}
				}

				# Vassal conversion list
				vassal_conversion_preview = {
					visible = "[VariableSystem.Exists( 'conversion_view_vassals')]"
					size = { 100% 100% }
				}
			}

			divider = {
				layoutpolicy_vertical = expanding
			}

			### RIGHT PANEL
			widget = {
				name = "right_side"
				minimumsize = { 500 0 }
				layoutpolicy_vertical = expanding

				## Main right side view
				vbox = {
					name = "primary_view"
					visible = "[Not( VariableSystem.Exists('faith_creation_right_view') )]"
					margin_bottom = 20

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					spacer = { size = {0 20}}


					vbox = {
						name = "confirm_and_preview"
						layoutpolicy_horizontal = expanding
						spacing = 20
						margin = { 30 0 }

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10
							visible = "[Not( FaithCreationWindow.CanCreateFaith )]"
							text_label_left = {
								layoutpolicy_horizontal = expanding
								text = "FAITH_CREATION_BLOCKERS_HEADER"
								default_format = "#low"
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									autoresize = yes
									max_width = 440
									text = "[FaithCreationWindow.GetCreationBlockers]"
								}

								expand = {}
							}
						}

						vbox = {
							name = "old_faith_tolerance"
							layoutpolicy_horizontal = expanding

							text_label_left = {
								name = "header"
								layoutpolicy_horizontal = expanding
								text = "FAITH_CREATION_TOLERANCE"
								default_format = "#low"
							}

							expand = {
								size = { 0 10 }
							}

							text_single = {
								name = "desc"
								layoutpolicy_horizontal = expanding
								text = "FAITH_CREATION_TOLERANCE_TEXT"
							}
						}


						vbox = {
							name = "realm_adoption"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							text_label_left = {
								layoutpolicy_horizontal = expanding
								name = "header"
								text = "FAITH_CREATION_ADOPTION"
								default_format = "#low"
							}

							expand = {
								size = { 0 10 }
							}

							text_single = {
								layoutpolicy_horizontal = expanding
								name = "desc"
								text = "FAITH_CREATION_ADOPTION_TEXT"
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin = { 0 5 }

								button_standard = {
									name = "see_vassals"
									onclick = "[VariableSystem.Toggle( 'conversion_view_vassals' )]"
									text = "FAITH_CREATION_OPEN_VASSAL_LIST"
									down = "[VariableSystem.HasValue( 'conversion_view_vassals', 'true' )]"
								}

								expand = {}
							}
						}

						vbox = {
							name = "pagan_reformation"
							visible = "[Or( GetPlayer.GetFaith.HasDoctrineByKey( 'unreformed_faith_doctrine' ) , GetPlayer.GetFaith.HasDoctrineByKey( 'west_african_unreformed_faith_doctrine' ) )]"
							layoutpolicy_horizontal = expanding

							text_single = {
								name = "header"
								layoutpolicy_horizontal = expanding
								text = "FAITH_CREATION_PAGAN_REFORM"
								default_format = "#low"
							}

							hbox = {
								layoutpolicy_horizontal = expanding

								text_multi = {
									name = "desc"
									minimumsize = { 0 70 }
									autoresize = yes
									max_width = 440
									text = "FAITH_CREATION_PAGAN_REFORM_TEXT"
								}

								expand = {}
							}
						}

						vbox = {
							name = "theocracy_info"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
							visible = "[Not( ObjectsEqual( GetPlayer.GetFaith.HasParameterByKey( 'lay_clergy' ), FaithCreationWindow.HasParameter( 'lay_clergy' ) ) ) )]"

							text_label_left = {
								layoutpolicy_horizontal = expanding
								name = "header"
								text = "FAITH_CREATION_THEOCRACY_INFO"
								default_format = "#low"
							}

							expand = {
								size = { 0 10 }
							}

							hbox = {
								name = "church_property"
								visible = "[Not( FaithCreationWindow.HasParameter( 'lay_clergy' ) )]"
								layoutpolicy_horizontal = expanding
								spacing = 10

								icon_doctrine = {
									texture = "[GetDoctrine( 'doctrine_theocracy_temporal' ).GetIcon]"
									size = { 35 35 }
								}

								text_multi = {
									name = "desc"
									max_width = 390
									autoresize = yes

									text = "FAITH_CREATION_ADDS_CHURCH_PROPERTY_TEXT"
								}

								expand = {}
							}

							hbox = {
								name = "lay_clergy"
								visible = "[FaithCreationWindow.HasParameter( 'lay_clergy' )]"
								layoutpolicy_horizontal = expanding
								spacing = 10

								icon_doctrine = {
									texture = "[GetDoctrine( 'doctrine_theocracy_lay_clergy' ).GetIcon]"
									size = { 35 35 }
								}

								text_multi = {
									name = "desc"
									max_width = 390
									autoresize = yes

									text = "FAITH_CREATION_ADDS_LAY_CLERGY_TEXT"
								}

								expand = {}
							}
						}

						vbox = {
							name = "head_of_faith_info"
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							visible = "[Not( FaithCreationWindow.HasParameter( 'no_head_of_faith' ) )]"

							text_label_left = {
								layoutpolicy_horizontal = expanding
								name = "header"
								text = "FAITH_CREATION_HEAD_OF_FAITH_INFO"
								default_format = "#low"
							}

							expand = {
								size = { 0 10 }
							}

							hbox = {
								name = "spiritual"
								visible = "[FaithCreationWindow.HasParameter( 'spiritual_head_of_faith' )]"
								layoutpolicy_horizontal = expanding
								spacing = 10

								icon_doctrine = {
									texture = "[GetDoctrine( 'doctrine_spiritual_head' ).GetIcon]"
									size = { 35 35 }
								}

								text_multi = {
									name = "desc"
									max_width = 390
									autoresize = yes

									text = "FAITH_CREATION_ADDS_SPIRITUAL_HEAD_TEXT"
								}

								expand = {}
							}

							hbox = {
								name = "temporal"
								visible = "[FaithCreationWindow.HasParameter( 'temporal_head_of_faith' )]"
								layoutpolicy_horizontal = expanding
								spacing = 10

								icon_doctrine = {
									texture = "[GetDoctrine( 'doctrine_temporal_head' ).GetIcon]"
									size = { 35 35 }
								}

								text_multi = {
									name = "desc"
									max_width = 390
									autoresize = yes

									text = "FAITH_CREATION_ADDS_TEMPORAL_HEAD_TEXT"
								}

								expand = {}
							}
						}


					}

					expand = {}


					vbox = {
						name = "cost"
						tooltip = "FAITH_CREATION_COST_TOOLTIP"

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "FAITH_CREATION_TOTAL_COST"
							default_format = "#high"
							using = Font_Size_Medium
							align = right

							background = {
								visible = "[GreaterThan_int32( FaithCreationWindow.CalcPietyMissing, '(int32)0' )]"
								margin = { 5 0 }
								using = Status_Bad
							}
						}
					}	
					
					spacer = { size = {0 10}}					

					text_multi = {
						align = center
						name = "cooldown"
						layoutpolicy_horizontal = expanding
						text = "FAITH_CREATION_COOLDOWN"
						default_format = "#low"
						using = Font_Size_Medium
						autoresize = yes
						max_width = 400
					}

					spacer = { size = {0 10}}

					button_primary = {
						name = "create_faith"
						size = { 400 60 }
						visible = "[Not( GetPlayer.GetFaith.IsUnreformed )]"

						enabled = "[FaithCreationWindow.CanCreateFaith]"
						onclick = "[FaithCreationWindow.CreateFaith]"

						text = "FAITH_CREATION_CREATE"
						using = Font_Size_Medium

						tooltip = "FAITH_CREATION_BUTTON_TOOLTIP"
					}

					button_primary = {
						name = "reform_faith"
						size = { 400 60 }
						visible = "[GetPlayer.GetFaith.IsUnreformed]"

						enabled = "[FaithCreationWindow.CanCreateFaith]"
						onclick = "[FaithCreationWindow.CreateFaith]"

						text = "FAITH_CREATION_REFORM"
						using = Font_Size_Big

						tooltip = "FAITH_REFORM_BUTTON_TOOLTIP"
					}
				}

				## Name selection
				vbox = {
					name = "name_selection"
					visible = "[VariableSystem.HasValue( 'faith_creation_right_view', 'name_selection' )]"
					margin = { 0 15 }
					spacing = 20

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					text_single = {
						name = "header_label"
						text = "FAITH_CREATION_NAMING_HEADER"
						default_format = "#I"
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						margin = {50 0}
						# The names of these four are referenced in code. If you change them, they'll no longer get blanked after creating a faith
						name_entry_big = {
							blockoverride "label"
							{
								text = "FAITH_CREATION_NAMING_NAME"
							}

							blockoverride "editbox_properties" 
							{
								name = "faith_name_edit"
							    ontextedited = "[FaithCreationWindow.OnEditName]"
							    maxcharacters = 30
							}
						}

						widget = {
							size = { 10 10 }
						}

						name_entry_big = {
							blockoverride "label"
							{
								text = "FAITH_CREATION_NAMING_ADJECTIVE"
							}

							blockoverride "editbox_properties" 
							{
								name = "faith_adjective_edit"
							    ontextedited = "[FaithCreationWindow.OnEditAdjective]"
							    maxcharacters = 30
							}

						}

						widget = {
							size = { 10 10 }
						}

						name_entry_big = {
							blockoverride "label"
							{
								text = "FAITH_CREATION_NAMING_FOLLOWER"
							}

							blockoverride "editbox_properties" 
							{
								name = "faith_adherent_edit"
							    ontextedited = "[FaithCreationWindow.OnEditAdherent]"
							    maxcharacters = 30
							}
						}

						widget = {
							size = { 10 10 }
						}

						name_entry_big = {
							blockoverride "label"
							{
								text = "FAITH_CREATION_NAMING_FOLLOWERS"
							}

							blockoverride "editbox_properties" 
							{
								name = "faith_adherent_plural_edit"
							    ontextedited = "[FaithCreationWindow.OnEditAdherentPlural]"
							    maxcharacters = 30
							}
						}

						widget = {
							size = { 10 10 }
						}


						editbox_standard_with_label = {
							layoutpolicy_horizontal = expanding

							minimumsize = {0 220}

							blockoverride "editbox_label"
							{
								text = "FAITH_CREATION_NAMING_DESC"
							}

							blockoverride "editbox_properties" 
							{
								name = "faith_desc_edit"
								multiline = yes
								ontextedited = "[FaithCreationWindow.OnEditDescription]"
								maxcharacters = 240
							}
						}							
						

					}

					expand = {}


					button_standard = {
						name = "done"
						onclick = "[VariableSystem.Clear( 'faith_creation_right_view' )]"
						text = "DONE"
						default_format = "#high"
					}
				}

				vbox = {
					name = "color_selection"
					visible = "[VariableSystem.HasValue( 'faith_creation_right_view', 'color_selection' )]"
					margin = { 0 20 }
					margin_top = 15
					margin_left = 2
					spacing = 10

					text_label_center = {
						layoutpolicy_horizontal = expanding
						text = "MAP_COLOR_SELECTION_LABEL"
						max_width = 280
					}

					colorpicker_simple = {
						visible = yes
						color = "[FaithCreationWindow.GetColor]"
						oncoloredited = "[FaithCreationWindow.SetColor]"
					}

					expand = {}

					button_standard = {
						name = "done"
						onclick = "[VariableSystem.Clear( 'faith_creation_right_view' )]"
						text = "DONE"
						default_format = "#high"
					}
				}


				## Doctrine selection
				vbox = {
					name = "doctrine_selection"
					visible = "[VariableSystem.HasValue( 'faith_creation_right_view', 'doctrine_selection' )]"
					margin = { 0 15 }
					spacing = 20

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					text_label_center = {
						layoutpolicy_horizontal = expanding
						text = "[VariableSystem.Get( 'doctrine_group_name' )]"
						max_width = 280
					}

					scrollbox = {
						name = "contents"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_content"
						{
							vbox = {
								datacontext = "[FaithCreationWindow.GetDoctrineGroupWindow]"
								datamodel = "[DoctrineGroupWindow.GetDoctrines]"
								layoutpolicy_horizontal = expanding

								item = {
									vbox = {
										layoutpolicy_horizontal = expanding

										button_standard_hover = {
											name = "faith_list_item"
											layoutpolicy_horizontal = expanding
											datacontext = "[GuiFaithCreationDoctrineItem.GetGuiFaithDoctrineItem]"
											datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
											datacontext = "[GuiFaithDoctrineItem.GetFaith]"
											datacontext = "[GetVariableSystem]"
											size = { 430 80 }

											onclick = "[GuiFaithCreationDoctrineItem.GetFaithCreationWindow.SelectDoctrine( GuiFaithCreationDoctrineItem.Self )]"
											onclick = "[VariableSystem.Clear( 'faith_creation_right_view' )]"
											visible = "[GuiFaithCreationDoctrineItem.ShouldDisplay]"
											enabled = "[GuiFaithCreationDoctrineItem.CanPick]"
											down = "[GuiFaithCreationDoctrineItem.IsSelected]"
											tooltip = "FAITH_WINDOW_DOCTRINE_SELECT_TOOLTIP"

											icon_doctrine = {
												name = "doctrine_icon_main"
												visible = "[EqualTo_string( FaithDoctrine.GetGroup.GetGroupingKey, 'main_group' )]"
												texture = "[FaithDoctrine.GetIcon]"
												size = { 60 60 }
												position = { 5 10 }
											}

											icon_doctrine = {
												name = "doctrine_icon_other"
												visible = "[And(Not(EqualTo_string( FaithDoctrine.GetGroup.GetGroupingKey, 'main_group' )), Not(EqualTo_string( FaithDoctrine.GetGroup.GetGroupingKey, 'core_tenets' )))]"
												texture = "[FaithDoctrine.GetGroup.GetIcon]"
												size = { 60 60 }
												position = { 5 10 }
											}

											widget = {
												name = "doctrine_icon_core_bg"
												visible = "[EqualTo_string( FaithDoctrine.GetGroup.GetGroupingKey, 'core_tenets' )]"

												background = {
													using = Background_Area_Dark
													alpha = 0.4
												}

												size = { 45 70 }
												position = { 15 5 }
											}

											icon = {
												name = "doctrine_icon_core"
												visible = "[EqualTo_string( FaithDoctrine.GetGroup.GetGroupingKey, 'core_tenets' )]"
												texture = "[FaithDoctrine.GetIcon]"
												size = { 45 70 }
												position = { 15 5 }
											}

											text_single = {
												name = "doctrine_name"
												position = { 75 25 }
												text = "[FaithDoctrine.GetNameNoTooltip( GuiFaithDoctrineItem.GetFaith )]"
												default_format = "#high"
												using = Font_Size_Medium
												max_width = 270
											}

											text_single = {
												name = "piety_cost"
												position = { 350 23 }
												text = "[piety_i][FaithDoctrine.CalcPietyCostWithFervorDiscount( GuiFaithDoctrineItem.GetFaith )]"
												using = Font_Size_Medium
											}
										}

										divider_light = {
											layoutpolicy_horizontal = expanding
										}
									}
								}
							}
						}
					}

					button_standard = {
						name = "cancel"
						onclick = "[VariableSystem.Clear( 'faith_creation_right_view' )]"
						text = "CANCEL"
						default_format = "#high"
					}
				}


				## Icon selection
				vbox = {
					name = "icon_selection"
					visible = "[VariableSystem.HasValue( 'faith_creation_right_view', 'icon_selection' )]"
					margin = { 0 15 }
					spacing = 20

					state = {
						name = _show
						using = Animation_FadeIn_Quick
					}

					state = {
						name = _hide
						alpha = 0
					}

					text_single = {
						name = "header_label"
						text = "SELECT_FAITH_ICON"
						default_format = "#I"
					}

					scrollbox = {
						name = "contents"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						blockoverride "scrollbox_content"
						{
							fixedgridbox = {
								name = "icons_grid"
								datamodel = "[FaithCreationWindow.GetFaithIcons]"
								size = { 500 240 }
								addcolumn = 60
								addrow = 70
								datamodel_wrap = 8
								flipdirection = yes

								item = {
									button_normal = {
										size = { 60 60 }
										texture = "[GuiFaithIcon.GetIconTexture]"
										onclick = "[GuiFaithIcon.GetFaithCreationWindow.SelectFaithIcon( GuiFaithIcon.GetIconName )]"
										onclick = "[GetVariableSystem.Set( 'faith_creation_icon_selection', 'true' )]"
										tooltip = "SELECT_FAITH_ICON_TOOLTIP"

										glow = {
											using = Color_Orange
											visible = "[GuiFaithIcon.IsSelected]"

											glow_radius = 5
											using = Glow_Standard
										}
									}
								}
							}
						}
					}

					button_standard = {
						name = "close"
						onclick = "[VariableSystem.Clear( 'faith_creation_right_view' )]"
						text = "DONE"
						default_format = "#high"
					}
				}
			}
		}
	}
}

template faith_creation_doctrine_grid
{
	datamodel_wrap = 2
	flipdirection = yes
	addcolumn = 350
	addrow = 65
	item = {
		button_group = {
			name = "doctrine_list_item"
			tooltip = "FAITH_WINDOW_DOCTRINE_CHANGE_TOOLTIP"
			datacontext = "[GuiFaithCreationDoctrineItem.GetGuiFaithDoctrineItem]"
			datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
			onclick = "[GuiFaithCreationDoctrineItem.GetFaithCreationWindow.GetDoctrineGroupWindow.ShowWindow( GuiFaithCreationDoctrineItem.GetSlotIndex )]"
			onclick = "[GetVariableSystem.Set( 'faith_creation_right_view', 'doctrine_selection' )]"
			onclick = "[GetVariableSystem.Set( 'doctrine_group_name', FaithDoctrine.GetGroup.GetName( GuiFaithDoctrineItem.GetFaith ) )]"
			down = "[GetVariableSystem.HasValue( 'faith_creation_right_view', 'doctrine_selection' )]"

			button_standard_hover = {
				position = { 0 0 }
				size = { 350 80 }
				name = "select_doctrine"
				down = "[And(GetVariableSystem.HasValue( 'doctrine_group_name', FaithDoctrine.GetGroup.GetName( GuiFaithDoctrineItem.GetFaith ) ), GetVariableSystem.HasValue( 'faith_creation_right_view', 'doctrine_selection' ))]"
			}

			icon = {
				name = "doctrine_group_icon"
				size = { 60 60 }
				position = { 5 5 }
				texture = "[FaithDoctrine.GetGroup.GetIcon]"
			}

			text_single = {
				name = "doctrine_group_name"
				autoresize = yes
				position = { 80 7 }
				align = left
				text = "[FaithDoctrine.GetGroup.GetName( GuiFaithDoctrineItem.GetFaith )]"
			}

			text_single = {
				name = "doctrine_name"
				position = { 80 33 }
				align = left
				text = "[FaithDoctrine.GetName( GuiFaithDoctrineItem.GetFaith )]"
			}
		}
	}
}

template faith_window_trait_tooltip
{
	object_tooltip_pop_out = {
		blockoverride "header_additions"
		{
			hbox = {
				margin_right = 5
				margin_top = 5
				
				icon = {
					size = { 52 52 }
					texture = "[Trait.GetIcon( GetPlayer )]"
					tintcolor = "[TooltipInfo.GetTintColor]"
				}
			}
		}
		blockoverride "title_text"
		{
			text = "[Trait.GetNameNoTooltip( GetPlayer )]"
		}
		blockoverride "concept_link" {
			text = [trait|E]
		}
		blockoverride "description_text"
		{
			text = "[GuiVirtueOrSinItem.GetFullDescription]"
		}
	}
}

types "FaithCreation"
{
	type widget_doctrine_selection_item = button_standard_hover {
		size = { 240 53 }
		tooltip = "FAITH_WINDOW_DOCTRINE_CHANGE_TOOLTIP"
		datacontext = "[GuiFaithCreationDoctrineItem.GetGuiFaithDoctrineItem]"
		datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
		onclick = "[GuiFaithCreationDoctrineItem.GetFaithCreationWindow.GetDoctrineGroupWindow.ShowWindow( GuiFaithCreationDoctrineItem.GetSlotIndex )]"
		onclick = "[GetVariableSystem.Set( 'faith_creation_right_view', 'doctrine_selection' )]"
		onclick = "[GetVariableSystem.Set( 'doctrine_group_name', FaithDoctrine.GetGroup.GetName( GuiFaithDoctrineItem.GetFaith ) )]"
		down = "[And(GetVariableSystem.HasValue( 'doctrine_group_name', FaithDoctrine.GetGroup.GetName( GuiFaithDoctrineItem.GetFaith ) ), GetVariableSystem.HasValue( 'faith_creation_right_view', 'doctrine_selection' ))]"

		background = {
			using = Background_Area
			margin = { 5 5 }
		}

		hbox = {
			name = "faith_list_item"
			datacontext = "[GuiFaithDoctrineItem.GetDoctrine]"
			spacing = 5
			using = tooltip_nw
			tooltip = "FAITH_WINDOW_DOCTRINE_TOOLTIP"

			icon_doctrine = {
				name = "doctrine_icon"
				size = { 50 50 }
				block "doctrine_icon_texture"
				{
					texture = "[FaithDoctrine.GetGroup.GetIcon]"
				}

				alpha = "[Select_float( GetPlayer.GetFaith.HasDoctrine( GuiFaithDoctrineItem.GetDoctrine ), '(float)0.4', '(float)1.0' )]"
			}

			vbox = {
				layoutpolicy_horizontal = expanding

				text_single = {
					name = "doctrine_group_name"
					text = "[FaithDoctrine.GetGroup.GetName( GuiFaithDoctrineItem.GetFaith )]"
					align = left
					default_format = "#low"
					layoutpolicy_horizontal = expanding
					autoresize = no
					fontsize_min = 12
				}

				text_single = {
					name = "faith_name"
					text = "[FaithDoctrine.GetNameNoTooltip( GuiFaithDoctrineItem.GetFaith )]"
					datacontext = "[GuiFaithDoctrineItem.GetFaith]"
					layoutpolicy_horizontal = expanding
					elide = right
					autoresize = no
					fontsize_min = 12
					align = left
				}
			}
		}
	}

	type vassal_conversion_preview = widget {
		name = "vassal_conversion_preview_list"

		vbox = {
			margin = { 0 15 }
			spacing = 5

			text_label_center = {
				name = "header"
				text = "[vassals|E]"
				using = Font_Size_Medium
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 10 0 }

				datacontext = "[VassalConversionWindow.GetVassalList]"

				widget = {
					name = "sort_area"
					size = { 0 33 }
					layoutpolicy_horizontal = expanding

					hbox = {
						margin_left = 8
						spacing = 5

						text_single = {
							text = "SORT_BY"
							align = nobaseline
						}

						dropdown_sort_characterlist = {}

						button_standard = {
							name = "sort_order"
							size = { 25 25 }
							tooltip = "CHARACTER_SORT_BY"
							onclick = "[CharacterSelectionList.RevertSortOrder]"

							button_icon = {
								texture = "gfx/interface/icons/flat_icons/sort_icon.dds"
								framesize = { 66 66 }
								size = { 25 25 }
								frame = "[BoolTo1And2(CharacterSelectionList.GetSortOrder)]"
								alwaystransparent = yes
							}
						}

						expand = {}
					}
				}
			}

			scrollbox = {
				name = "list_area"
				layoutpolicy_horizontal = growing
				layoutpolicy_vertical = growing

				blockoverride "scrollbox_content"
				{
					visible = "[GreaterThan_int32( VassalConversionWindow.GetNumberOfVassals, '(int32)0' )]"

					vbox = {
						name = "vassals_grid"
						datacontext = "[VassalConversionWindow.GetVassalList]"
						datamodel = "[CharacterSelectionList.GetList]"
						layoutpolicy_horizontal = expanding

						item = {

							vbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding

								divider = {
									layoutpolicy_horizontal = expanding
								}

								hbox = {
									datacontext = "[CharacterListItem.GetCharacter]"
									layoutpolicy_horizontal = expanding
									margin = { 10 0 }
									spacing = 10

									tooltip = "[CharacterListItem.GetText('tooltip')]"

									portrait_head = {
										using = tooltip_ws

										blockoverride "coa" {}
									}

									coa_realm_small_crown = {
										#visible = "[Character.HasLandedTitles]"
									}

									vbox = {
										layoutpolicy_horizontal = expanding

										text_single = {
											name = "name"
											layoutpolicy_horizontal = expanding
											text = "[Character.GetUINameNoTooltip]"
											using = Font_Size_Medium
										}

										### acceptance
										text_single = {
											name = "acceptance"
											layoutpolicy_horizontal = expanding
											text = "[CharacterListItem.GetText( 'acceptance' )]"
											tooltip = "[CharacterListItem.GetText( 'acceptance_desc' )]"
										}
									}
								}
							}
						}
					}
				}

				vbox = {
					visible = "[EqualTo_int32( VassalConversionWindow.GetNumberOfVassals, '(int32)0' )]"
					text_single = {
						text = "NO_CONVERSION_VASSALS_TO_DISPLAY"
					}
				}
			}

			vbox = {
				margin_top = 10

				block "footer" {}

				button_standard = {
					name = "close"
					text = "CLOSE_LABEL"
					onclick = "[VariableSystem.Toggle( 'conversion_view_vassals' )]"
				}
			}


		}
	}
}
