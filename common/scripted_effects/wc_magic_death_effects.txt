init_death_spells_effect = {
    # add_to_global_variable_list = { name = death_spells target = flag:raise_dead } # Casted through other means
    add_to_global_variable_list = { name = death_spells target = flag:death_coil }
    add_to_global_variable_list = { name = death_spells target = flag:death_grip }
    add_to_global_variable_list = { name = death_spells target = flag:give_disease }
    add_to_global_variable_list = { name = death_spells target = flag:death_and_decay }
    add_to_global_variable_list = { name = death_spells target = flag:cripple }
    add_to_global_variable_list = { name = death_spells target = flag:improved_body }
    add_to_global_variable_list = { name = death_spells target = flag:coagulation }
    add_to_global_variable_list = { name = death_spells target = flag:blood_boil }
    add_to_global_variable_list = { name = death_spells target = flag:strangulate }
    add_to_global_variable_list = { name = death_spells target = flag:supreme_raise_dead }
    add_to_global_variable_list = { name = death_spells target = flag:army_of_the_dead }
    add_to_global_variable_list = { name = death_spells target = flag:epidemic }
    add_to_global_variable_list = { name = death_spells target = flag:crimson_binding }
}

init_raise_undead_types_effect = {
    add_to_global_variable_list = { name = raise_dead_types target = flag:undead }
    add_to_global_variable_list = { name = raise_dead_types target = flag:ghoul }
    add_to_global_variable_list = { name = raise_dead_types target = flag:abomination }
    add_to_global_variable_list = { name = raise_dead_types target = flag:banshee }
    add_to_global_variable_list = { name = raise_dead_types target = flag:vampire }
}

init_supreme_raise_dead_types_effect = {
    add_to_global_variable_list = { name = supreme_raise_dead_types target = flag:revenant }
    add_to_global_variable_list = { name = supreme_raise_dead_types target = flag:lich }
}

cast_raise_dead_effect = {
    if = {
        limit = { exists = var:raise_dead_recipient }
        var:raise_dead_recipient = {
            save_temporary_scope_as = first_recipient
        }

        save_scope_value_as = {
            name = raise_dead_type
            value = var:raise_dead_type
        }

        var:raise_dead_type ?= {
            save_scope_as = raise_dead_type
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:raise_dead
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient ?= {
            save_temporary_scope_as = first_recipient
        }

        var:current_raise_dead_type = {
            save_scope_as = raise_dead_type
        }
    }

    scope:first_recipient ?= {
        show_as_tooltip = {
            switch = {
                trigger = scope:raise_dead_type

                flag:undead = { add_trait = being_undead }
                flag:abomination = { set_trait_rank = { trait = race rank = 21 } }
                flag:banshee = { set_trait_rank = { trait = race rank = 84 } }
                flag:ghoul = { set_trait_rank = { trait = race rank = 85 } }
                flag:vampire = { set_trait_rank = { trait = race rank = 86 } }
            }
        }

        custom_tooltip = {
            text = raise_dead_tt
            wc_resurrect_CHARACTER_with_STATUS_effect = { CHARACTER = scope:first_recipient STATUS = undead }
            scope:resurrected_character ?= {
                root = { add_courtier = prev }
                switch = {
                    trigger = scope:raise_dead_type

                    flag:undead = { add_trait = being_undead }
                    flag:abomination = { set_trait_rank = { trait = race rank = 21 } }
                    flag:banshee = { set_trait_rank = { trait = race rank = 84 } }
                    flag:ghoul = { set_trait_rank = { trait = race rank = 85 } }
                    flag:vampire = { set_trait_rank = { trait = race rank = 86 } }
                }
            }
        }

        root = {
            remove_variable = raise_dead_type
        }
    }
}

cast_death_coil_effect = {
    if = {
        limit = { exists = var:death_coil_recipient }
        var:death_coil_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:death_coil
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }

    scope:first_recipient ?= {
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_death_coil_duration_days_value
            }
        }
        if = {
            limit = {
                has_trait = being_undead
            }
            add_character_modifier = {
                modifier = wc_death_coil_positive_modifier
                days = wc_current_spell_duration
            }
            if = {
                limit = {
                    NOT = {
                        this = root
                    }
                }
                add_opinion = {
                    modifier = wc_casted_helpful_spell
                    target = root
                }
            }
        }
        else = {
            save_scope_value_as = {
                name = spell_dodge_chance
                value = wc_death_magic_resistance_dodge_value
            }
            if = {
                limit = {
                    NOT = {
                        this = root
                    }
                }
                add_opinion = {
                    modifier = wc_casted_harmful_spell
                    target = root
                }
            }
            random_list = {
                90 = {
                    add_character_modifier = {
                        modifier = wc_death_coil_negative_modifier
                        days = wc_current_spell_duration
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_hit
                                left_icon = scope:first_recipient
                                right_icon = root
                                custom_tooltip = wc_death_coil_hit_tt
                            }
                        }
                    }
                }
                10 = {
                    custom_tooltip = wc_death_coil_resist_tt
                    modifier = {
                        is_alive = yes
                        add = scope:spell_dodge_chance
                    }
                    hidden_effect = {
                        root = {
                            send_interface_toast = {
                                title = wc_spell_dodged
                                left_icon = scope:first_recipient
                                right_icon = root
                                custom_tooltip = wc_death_coil_dodge
                            }
                        }
                    }
                }
            }
        }
    }
}

cast_death_grip_effect = {
    if = {
        limit = { exists = var:death_grip_recipient }
        var:death_grip_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:death_grip
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_death_grip_duration_days_value
            }
        }
        if = {
            limit = {
                root = {
                    is_in_army = yes
                }
            }
            root.location = {
                save_scope_as = caster_location
            }

            custom_tooltip = {
                text = death_grip_movement_tt
                if = {
                    limit = {
                        NOT = {
                            location = scope:caster_location
                        }
                    }

                    location = {
                        ordered_neighboring_province = {
                            order_by = {
                                value = "squared_distance(scope:caster_location)"
                                multiply = -1
                            }
                            save_scope_as = target_location
                        }
                    }

                    set_army_location = scope:target_location
                }
            }

            army_commander = {
                add_character_modifier = {
                    modifier = wc_death_grip_modifier
                    days = wc_current_spell_duration
                }

                hidden_effect = {
                    commanding_army ?= {
                        remove_commander = yes
                        assign_commander = prev
                    }
                }
            }
        }
    }
}

cast_give_disease_effect = {
    if = {
        limit = { exists = var:give_disease_recipient }
        var:give_disease_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:give_disease
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        custom_tooltip = give_disease_tt
        if = {
            limit = {
                root = {
                    has_variable = give_disease_type
                }
            }
            root = {
                var:give_disease_type = {
                    save_scope_as = disease
                }
                remove_variable = give_disease_type
            }

            switch = {
                trigger = scope:disease

                flag:ill = { contract_disease_notify_effect  = { DISEASE = ill } }
                flag:dysentery = { contract_disease_notify_effect  = { DISEASE = dysentery } }
                flag:consumption = { contract_disease_notify_effect  = { DISEASE = consumption } }
                flag:great_pox = { contract_disease_notify_effect  = { DISEASE = great_pox } }
                flag:leper = { contract_disease_notify_effect  = { DISEASE = leper } }
                flag:lovers_pox = { contract_disease_notify_effect  = { DISEASE = lovers_pox } }
                flag:measles = { contract_disease_notify_effect  = { DISEASE = measles } }
                flag:pneumonic = { contract_disease_notify_effect  = { DISEASE = pneumonic } }
                flag:smallpox = { contract_disease_notify_effect  = { DISEASE = smallpox } }
                flag:typhus = { contract_disease_notify_effect  = { DISEASE = typhus } }
                flag:frost_fever = { contract_disease_notify_effect  = { DISEASE = frost_fever } }
                flag:blood_plague = { contract_disease_notify_effect  = { DISEASE = blood_plague } }
                flag:crypt_fever = { contract_disease_notify_effect  = { DISEASE = crypt_fever } }
            }

            add_opinion = {
                modifier = wc_plagued_me
                target = root
            }
        }
        else = {
            hidden_effect = {
                root = {
                    wc_change_mana_by_value_effect = {
                        CHANGE = add
                        VALUE = wc_spell_give_disease_cost_mana_value
                    }
                }
            }
        }
    }
}

cast_death_and_decay_effect = {
    if = {
        limit = { exists = var:death_and_decay_recipient }
        var:death_and_decay_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:death_and_decay
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        root = {
            save_scope_as = caster
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_death_and_decay_duration_days_value
            }
        }

        add_county_modifier = {
            modifier = wc_death_and_decay_county_modifier
            desc = wc_death_and_decay_county_modifier_caster_desc
            days = wc_current_spell_duration
        }

        set_variable = {
            name = death_and_decay_caster
            value = root
            days = wc_current_spell_duration
        }

        hidden_effect = {
            save_scope_as = county

            trigger_event = {
                on_action = wc_death_and_decay_county_pulse
            }
        }
    }
}

apply_character_death_and_decay_effect = {
    if = {
        limit = {
            NOT = {
                has_character_modifier = wc_death_and_decay_character_modifier
            }
        }
        add_character_modifier = {
            modifier = wc_death_and_decay_character_modifier
        }

        hidden_effect = {
            commanding_army ?= {
                remove_commander = yes
                assign_commander = prev
            }
        }

        trigger_event = {
            on_action = wc_death_and_decay_removal_pulse
            months = 1
        }
    }
}

remove_character_death_and_decay_effect = {
    if = {
        limit = {
            has_character_modifier = wc_death_and_decay_character_modifier
        }

        remove_character_modifier = wc_death_and_decay_character_modifier

        hidden_effect = {
            commanding_army ?= {
                remove_commander = yes
                assign_commander = prev
            }
        }
    }
}

cast_cripple_effect = {
    if = {
        limit = { exists = var:cripple_recipient }
        var:cripple_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:cripple
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_cripple_duration_days_value
            }
        }

        save_scope_value_as = {
            name = spell_dodge_chance
            value = wc_death_magic_resistance_dodge_value
        }

        random_list = {
            70 = {
                add_character_modifier = {
                    modifier = wc_cripple_modifier
                    days = wc_current_spell_duration
                }
                hidden_effect = {
                    root = {
                        send_interface_toast = {
                            title = wc_spell_hit
                            left_icon = scope:this_recipient
                            right_icon = root
                            custom_tooltip = wc_cripple_hit_tt
                        }
                    }
                }
            }
            30 = {
                custom_tooltip = wc_cripple_resist_tt
                modifier = {
                    is_alive = yes
                    add = scope:spell_dodge_chance
                }
                hidden_effect = {
                    root = {
                        send_interface_toast = {
                            title = wc_spell_dodged
                            left_icon = scope:this_recipient
                            right_icon = root
                            custom_tooltip = wc_cripple_dodge
                        }
                    }
                }
            }
        }
    }
}

cast_improved_body_effect = {
    if = {
        limit = { exists = var:improved_body_recipient }
        var:improved_body_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:improved_body
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        random_list = {
            33 = {
                modifier = {
                    add = death_magic_lifestyle_perks
                    always = yes
                }
                if = {
                    limit = {
                        has_trait = beauty_good
                        root = {
                            has_trait_rank = {
                                trait = beauty_good
                                character < scope:this_recipient
                            }
                        }
                    }
                    root = {
                        improve_body_rank_effect = { TRAIT = beauty }
                    }
                }
                else_if = {
                    limit = {
                        has_trait = intellect_good
                        root = {
                            has_trait_rank = {
                                trait = intellect_good
                                character < scope:this_recipient
                            }
                        }
                    }
                    root = {
                        root = {
                            improve_body_rank_effect = { TRAIT = intellect }
                        }
                    }
                }
                else_if = {
                    limit = {
                        has_trait = physique_good
                        root = {
                            has_trait_rank = {
                                trait = physique_good
                                character < scope:this_recipient
                            }
                        }
                    }
                    root = {
                        root = {
                            improve_body_rank_effect = { TRAIT = physique }
                        }
                    }
                }
                else = {
                    random_character_trait = {
                        limit = {
                            improved_body_correct_trait_trigger = { CASTER = root }
                        }

                        root = { add_trait = prev }
                    }
                }
                override_death_killer_effect = { death_reason = death_experiment killer = root }
            }
            33 = {
                modifier = {
                    factor = 0
                    has_trait = wounded_3
                }
                increase_wounds_effect = { REASON = experiment }
            }
            33 = {
                modifier = {
                    add = 33
                    has_trait = wounded_3
                }
                override_death_killer_effect = { death_reason = death_experiment killer = root }
            }
        }
    }
}

improve_body_rank_effect = {
    if = {
        limit = {
            has_trait = $TRAIT$_bad
        }
        change_trait_rank = {
            trait = $TRAIT$_bad
            rank = -1
        }
    }
    else = {
        change_trait_rank = {
            trait = $TRAIT$_good
            rank = 1
        }
    }
}

cast_coagulation_effect = {
    if = {
        limit = { exists = var:coagulation_recipient }
        var:coagulation_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:coagulation
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {

        # Look at ranks first
        if = {
            limit = {
                OR = { # current_spell_rank is for tooltips
                    AND = {
                        exists = var:coagulation_rank
                        var:coagulation_rank = 3
                    }
                    AND = {
                        NOT = {
                            exists = var:coagulation_rank
                        }
                        exists = var:current_spell_rank
                        var:current_spell_rank = 3
                    }
                }
            }
            scope:this_recipient = {
                if = {
                    limit = {
                        target_has_major_injury_trigger = yes
                    }
                    remove_major_injury_effect =  yes
                }
                else_if = {
                    limit = {
                        target_has_magic_injury_trigger = yes
                    }
                    remove_magic_injury_effect = { REDUCE_SEVERITY = yes }
                }
                else = {
                    custom_tooltip = wc_dispel_no_effect_tooltip
                }
            }
        }
        else_if = {
            limit = {
                OR = {
                    AND = {
                        exists = var:coagulation_rank
                        var:coagulation_rank = 2
                    }
                    AND = {
                        NOT = {
                            exists = var:coagulation_rank
                        }
                        exists = var:current_spell_rank
                        var:current_spell_rank = 2
                    }
                }
            }
            scope:this_recipient = {
                if = {
                    limit = {
                        target_has_poison_trigger = yes
                    }
                    remove_poison_effect = yes
                }
                else = {
                    custom_tooltip = wc_dispel_no_effect_tooltip
                }
            }
        }
        else_if = {
            limit = {
                OR = {
                    AND = {
                        exists = var:coagulation_rank
                        var:coagulation_rank = 1
                    }
                    AND = {
                        NOT = {
                            exists = var:coagulation_rank
                        }
                        exists = var:current_spell_rank
                        var:current_spell_rank = 1
                    }
                }
            }
            scope:this_recipient = {
                if = {
                    limit = {
                        target_has_injury_trigger = yes
                    }
                    remove_injury_effect = { REDUCE_SEVERITY = yes }
                }
                else = {
                    custom_tooltip = wc_dispel_no_effect_tooltip
                }
            }
        }
    }
}

cast_blood_boil_effect = {
    if = {
        limit = { exists = var:blood_boil_recipient }
        var:blood_boil_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:blood_boil
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }
    if = {
        limit = {
            exists = scope:this_recipient
            OR = {
                any_war_enemy = {
                    any_army = {
                        exists = army_commander
                        army_commander = scope:this_recipient.army_commander
                    }
                }
            }
        }
        scope:this_recipient.army_commander = {
            if = {
                limit = {
                    NOT = {
                        has_trait = blood_plague
                    }
                }

                save_scope_value_as = {
                    name = spell_dodge_chance
                    value = wc_death_magic_resistance_dodge_value
                }
                random_list = {
                    100 = {
                        add_trait = blood_plague
                        add_opinion = {
                            modifier = wc_plagued_me
                            target = root
                        }
                        hidden_effect = {
                            save_temporary_scope_as = dodger
                            root = {
                                send_interface_toast = {
                                    title = wc_spell_hit
                                    left_icon = prev
                                    right_icon = root
                                    custom_tooltip = wc_blood_boil_hit_tt
                                }
                            }
                        }
                    }
                    20 = {
                        custom_tooltip = wc_blood_boil_resist_tt
                        modifier = {
                            is_alive = yes
                            add = scope:spell_dodge_chance
                        }
                        hidden_effect = {
                            save_temporary_scope_as = dodger
                            root = {
                                send_interface_toast = {
                                    title = wc_spell_dodged
                                    left_icon = prev
                                    right_icon = root
                                    custom_tooltip = wc_blood_boil_dodge
                                }
                            }
                        }
                    }
                }
            }
        }

        custom_tooltip = {
            text = wc_spell_blood_boil_knights_tt
            scope:this_recipient.army_owner = {
                every_knight = {
                    limit = {
                        exists = knight_army
                        knight_army = scope:this_recipient
                    }

                    add_to_list = knights
                }
            }
            scope:this_recipient.army_commander = {
                every_knight = {
                    limit = {
                        exists = knight_army
                        knight_army = scope:this_recipient
                    }

                    add_to_list = knights
                }
            }
            every_in_list = {
                list = knights
                if = {
                    limit = {
                        NOT = {
                            has_trait = blood_plague
                        }
                    }

                    save_scope_value_as = {
                        name = spell_dodge_chance
                        value = wc_death_magic_resistance_dodge_value
                    }
                    random_list = {
                        100 = {
                            add_trait = blood_plague
                            add_opinion = {
                                modifier = wc_plagued_me
                                target = root
                            }
                            hidden_effect = {
                                save_temporary_scope_as = dodger
                                root = {
                                    send_interface_toast = {
                                        title = wc_spell_hit
                                        left_icon = prev
                                        right_icon = root
                                        custom_tooltip = wc_blood_boil_hit_tt
                                    }
                                }
                            }
                        }
                        20 = {
                            custom_tooltip = wc_blood_boil_resist_tt
                            modifier = {
                                is_alive = yes
                                add = scope:spell_dodge_chance
                            }
                            hidden_effect = {
                                save_temporary_scope_as = dodger
                                root = {
                                    send_interface_toast = {
                                        title = wc_spell_dodged
                                        left_icon = prev
                                        right_icon = root
                                        custom_tooltip = wc_blood_boil_dodge
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

cast_strangulate_effect = {
    if = {
        limit = { exists = var:strangulate_recipient }
        var:strangulate_recipient = {
            save_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:strangulate
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        root = {
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_strangulate_duration_days_value
            }
        }

        add_character_modifier = {
            modifier = wc_strangulate_modifier
            days = wc_current_spell_duration
        }
    }
}

cast_supreme_raise_dead_effect = {
    if = {
        limit = { exists = var:supreme_raise_dead_recipient }
        var:supreme_raise_dead_recipient = {
            save_temporary_scope_as = first_recipient
        }

        save_scope_value_as = {
            name = supreme_raise_dead_type
            value = var:supreme_raise_dead_type
        }

        var:raise_dead_type ?= {
            save_scope_as = raise_dead_type
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:supreme_raise_dead
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = first_recipient
        }

        var:current_raise_dead_type ?= {
            save_scope_as = raise_dead_type
        }
    }

    scope:first_recipient ?= {
        show_as_tooltip = {
            switch = {
                trigger = scope:raise_dead_type

                flag:revenant = { set_trait_rank = { trait = race rank = 87 } }
                flag:lich = { set_trait_rank = { trait = race rank = 22 } }
            }
        }

        if = {
            limit = {
                is_alive = no
            }
            custom_tooltip = {
                text = raise_dead_tt
                wc_resurrect_CHARACTER_with_STATUS_effect = { CHARACTER = scope:first_recipient STATUS = undead }
                scope:resurrected_character ?= {
                    root = { add_courtier = prev }
                    save_scope_as = new_target
                }
            }
        }
        else = {
            save_scope_as = new_target
        }

        hidden_effect = {
            scope:new_target ?= {
                switch = {
                    trigger = scope:raise_dead_type

                    flag:revenant = { set_trait_rank = { trait = race rank = 87 } }
                    flag:lich = { set_trait_rank = { trait = race rank = 22 } }
                }
            }
        }

        root = {
            remove_variable = raise_dead_type
        }
    }
}

cast_army_of_the_dead_effect = {
    if = {
        limit = { exists = var:army_of_the_dead_recipient }
        var:army_of_the_dead_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:army_of_the_dead
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }

    scope:first_recipient ?= {
        root = {
            save_scope_value_as = {
                name = army_strength
                value = wc_spell_army_of_the_dead_strenght_value
            }
            spawn_army = {
                uses_supply = no
                inheritable = yes
                name = raised_undead_troops
                levies = scope:army_strength
                location = scope:first_recipient.title_province
                origin = scope:first_recipient.title_province
            }
        }
        change_development_level = {
            subtract = scope:first_recipient.development_level
        }
    }
}

cast_epidemic_effect = {
    if = {
        limit = { exists = var:epidemic_recipient }
        var:epidemic_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:epidemic
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = first_recipient
        }
    }

    scope:first_recipient ?= {
        custom_tooltip = epidemic_tt
        if = {
            limit = {
                root = {
                    has_variable = epidemic_type
                }
            }
            root = {
                var:epidemic_type = {
                    save_scope_as = disease
                }
                remove_variable = epidemic_type
            }

            title_province = {
                switch = {
                    trigger = scope:disease

                    flag:smallpox = { create_epidemic_outbreak = { type = smallpox intensity = major } }
                    flag:bubonic_plague = { create_epidemic_outbreak = { type = bubonic_plague intensity = major } }
                    flag:consumption = { create_epidemic_outbreak = { type = consumption intensity = major } }
                    flag:measles = { create_epidemic_outbreak = { type = measles intensity = major } }
                    flag:dysentery = { create_epidemic_outbreak = { type = dysentery intensity = major } }
                    flag:ergotism = { create_epidemic_outbreak = { type = ergotism intensity = major } }
                    flag:typhus = { create_epidemic_outbreak = { type = typhus intensity = major } }
                    flag:frost_fever = { create_epidemic_outbreak = { type = frost_fever intensity = major } }
                    flag:blood_plague = { create_epidemic_outbreak = { type = blood_plague intensity = major } }
                    flag:crypt_fever = { create_epidemic_outbreak = { type = crypt_fever intensity = major } }
                }
            }

            county.holder = {
                add_opinion = {
                    modifier = wc_plagued_me
                    target = root
                }
            }
        }
        else = {
            hidden_effect = {
                root = {
                    wc_change_mana_by_value_effect = {
                        CHANGE = add
                        VALUE = wc_spell_epidemic_cost_mana_value
                    }
                    remove_character_flag = any_ritual_cd
                }
            }
        }
    }
}

cast_crimson_binding_effect = {
    if = {
        limit = { exists = var:crimson_binding_recipient }
        var:crimson_binding_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }
    else_if = {
        limit = {
            exists = var:current_spell_name
            var:current_spell_name = flag:crimson_binding
            exists = var:spellbook_open
            exists = var:spell_recipient
        }
        var:spell_recipient = {
            save_temporary_scope_as = this_recipient
        }
    }

    scope:this_recipient ?= {
        root = {
            save_scope_as = caster
            save_temporary_scope_value_as = {
                name = duration
                value = wc_spell_crimson_binding_duration_days_value
            }

            set_variable = {
                name = crimson_binding_target
                value = scope:this_recipient
                days = wc_current_spell_duration
            }
        }

        add_character_modifier = {
            modifier = wc_crimson_binding_modifier
            desc = wc_death_and_decay_county_modifier_caster_desc
            days = wc_current_spell_duration
        }
    }
}