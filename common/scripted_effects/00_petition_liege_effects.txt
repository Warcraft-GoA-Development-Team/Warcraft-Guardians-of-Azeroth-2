
#Effects used in Petitions

### Council

# Save most fitting council seat incumbent
petition_liege_0101_councillor_scope_first_effect = {
	if = {
		limit = { exists = scope:petition_liege.cp:councillor_$ROLE$ }
		scope:petition_liege.cp:councillor_$ROLE$ = { save_scope_as = second_party }
	}
}

# Save 2nd most fitting council seat incumbent
petition_liege_0101_councillor_scope_second_effect = {
	if = {
		limit = { exists = scope:petition_liege.cp:councillor_$ROLE$ }
		scope:petition_liege.cp:councillor_$ROLE$ = { save_scope_as = second_councillor }
	}
}

# Give most fitting council seat
petition_liege_0101_first_seat_effect = {
	if = {
		limit = {
			exists = scope:second_party
			scope:second_party = { is_councillor = yes }
		}
		scope:petition_liege = { fire_councillor = scope:second_party }
		scope:second_party = {
			progress_towards_rival_effect = {
				CHARACTER = scope:petition_vassal
				REASON = rival_council_seat
				OPINION = 0
			}
			add_opinion = {
				target = scope:petition_vassal
				modifier = annoyed_opinion
				opinion = -10
			}
			add_opinion = {
				target = scope:petition_liege
				modifier = annoyed_opinion
				opinion = -10
			}
		}
	}
	scope:petition_liege = {
		switch = {
			trigger = scope:petition_vassal.var:petition_liege_council_first
			flag:chancellor = {
				assign_councillor_type = {
					type = councillor_chancellor
					target = scope:petition_vassal
				}
			}
			flag:marshal = {
				assign_councillor_type = {
					type = councillor_marshal
					target = scope:petition_vassal
				}
			}
			flag:steward = {
				assign_councillor_type = {
					type = councillor_steward
					target = scope:petition_vassal
				}
			}
			flag:spymaster = {
				assign_councillor_type = {
					type = councillor_spymaster
					target = scope:petition_vassal
				}
			}
			flag:court_chaplain = {
				assign_councillor_type = {
					type = councillor_court_chaplain
					target = scope:petition_vassal
				}
			}
		}
	}
	scope:petition_vassal = {
		petition_liege_block_firing_councillor_effect = { COURT_OWNER = scope:petition_liege }
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.council_seat
				left_icon = scope:petition_liege
				right_icon = scope:second_party
				custom_tooltip = council_appointment_toast_desc_vassal
				custom_tooltip = petition_liege_block_firing_councillor_effect_tt
				show_as_tooltip = {
					reverse_add_opinion = {
						target = scope:second_party
						modifier = annoyed_opinion
						opinion = -10
					}
				}
			}
		}
	}
	scope:petition_liege = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.council_seat
				left_icon = scope:petition_vassal
				right_icon = scope:second_party
				custom_tooltip = council_appointment_toast_desc_liege
				custom_tooltip = petition_liege_block_firing_councillor_effect_tt
				show_as_tooltip = {
					reverse_add_opinion = {
						target = scope:second_party
						modifier = annoyed_opinion
						opinion = -10
					}
				}
			}
		}
	}
}

# Give 2nd most fitting council seat
petition_liege_0101_second_seat_effect = {
	if = {
		limit = {
			exists = scope:second_councillor
			scope:second_councillor = { is_councillor = yes }
		}
		scope:petition_liege = { fire_councillor = scope:second_councillor }
		scope:second_councillor = {
			progress_towards_rival_effect = {
				CHARACTER = scope:petition_vassal
				REASON = rival_council_seat
				OPINION = 0
			}
			add_opinion = {
				target = scope:petition_vassal
				modifier = annoyed_opinion
				opinion = -10
			}
			add_opinion = {
				target = scope:petition_liege
				modifier = annoyed_opinion
				opinion = -10
			}
		}
	}
	scope:petition_liege = {
		switch = {
			trigger = scope:petition_vassal.var:petition_liege_council_second
			flag:chancellor = {
				assign_councillor_type = {
					type = councillor_chancellor
					target = scope:petition_vassal
				}
			}
			flag:marshal = {
				assign_councillor_type = {
					type = councillor_marshal
					target = scope:petition_vassal
				}
			}
			flag:steward = {
				assign_councillor_type = {
					type = councillor_steward
					target = scope:petition_vassal
				}
			}
			flag:spymaster = {
				assign_councillor_type = {
					type = councillor_spymaster
					target = scope:petition_vassal
				}
			}
			flag:court_chaplain = {
				assign_councillor_type = {
					type = councillor_court_chaplain
					target = scope:petition_vassal
				}
			}
		}
	}
	scope:petition_vassal = {
		petition_liege_block_firing_councillor_effect = { COURT_OWNER = scope:petition_liege }
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.council_seat
				left_icon = scope:petition_liege
				right_icon = scope:second_councillor
				custom_tooltip = council_appointment_toast_desc_vassal
				custom_tooltip = petition_liege_block_firing_councillor_effect_tt
				show_as_tooltip = {
					reverse_add_opinion = {
						target = scope:second_councillor
						modifier = annoyed_opinion
						opinion = -10
					}
				}
			}
		}
	}
	scope:petition_liege = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.council_seat
				left_icon = scope:petition_vassal
				right_icon = scope:second_councillor
				custom_tooltip = council_appointment_toast_desc_liege
				custom_tooltip = petition_liege_block_firing_councillor_effect_tt
				show_as_tooltip = {
					reverse_add_opinion = {
						target = scope:second_councillor
						modifier = annoyed_opinion
						opinion = -10
					}
				}
			}
		}
	}
}

# Grant selected seat and remove incumbent
petition_liege_0101_council_seat_effect = {
	scope:petition_liege = {
		stress_impact = {
			compassionate = minor_stress_impact_gain
		}
		if = {
			limit = {
				scope:petition_vassal = { has_variable = petition_liege_council_first }
			}
			petition_liege_0101_first_seat_effect = yes
		}
		else = { petition_liege_0101_second_seat_effect = yes }
		if = {
			limit = {
				scope:petition_vassal = { has_variable = petition_liege_council_first }
				exists = scope:second_party
			}
			scope:second_party = {
				hidden_effect = {
					send_interface_toast = {
						title = petition_liege.0101.t.council_seat
						left_icon = scope:petition_vassal
						right_icon = scope:petition_liege
						custom_tooltip = council_appointment_toast_desc_replaced
					}
				}
			}
		}
		else_if = {
			limit = { exists = scope:second_councillor }
			scope:second_councillor = {
				hidden_effect = {
					send_interface_toast = {
						title = petition_liege.0101.t.council_seat
						left_icon = scope:petition_vassal
						right_icon = scope:petition_liege
						custom_tooltip = council_appointment_toast_desc_replaced
					}
				}
			}
		}

	}
}

# Block petitioner from being fired
petition_liege_block_firing_councillor_effect = {
	scope:petition_vassal = {
		custom_tooltip = petition_liege_block_firing_councillor_effect_tt
		set_variable = {
			name = block_fire_councillor
			value = $COURT_OWNER$
			years = council_position_locked_value
		}
	}
}

### Debt
# Pay inverse of gold to petitioner
petition_liege_0101_pay_debt_effect = {
	scope:petition_liege = {
		stress_impact = {
			greedy = minor_stress_impact_gain
			profligate = minor_stress_impact_loss
			improvident = minor_stress_impact_loss
		}
		pay_short_term_gold = {
	 		target = scope:petition_vassal
	 		gold = petitioner_debt_positivization_value
	 	}
	}
}

### War Aid
petition_liege_0101_war_aid_effect = {
	scope:petition_liege = {
		stress_impact = {
			craven = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
	}
	if = {
		limit = {
			scope:petition_vassal = { has_variable = petition_liege_war_aid_join } 
		}
		if = {
			limit = {
				scope:petition_vassal = { is_attacker_in_war = scope:petition_war }
			}
			scope:petition_war = { add_attacker = scope:petition_liege }
		}
		else = {
			scope:petition_war = { add_defender = scope:petition_liege }
		}
	}
	else = {
		scope:petition_liege = { remove_short_term_gold = petitioner_war_aid_levies_cost_value }
		scope:petition_vassal = {
			spawn_army = {
				inheritable = no
				name = petition_liege_war_aid_troops
				levies = petitioner_war_aid_levies_value
				location = scope:petition_vassal.capital_province
				war = scope:petition_war
			}
		}
	}
}

### Vassal War
# End all vassal wars
petition_liege_0101_end_all_wars_effect = {
	scope:petition_liege = {
		stress_impact = {
			craven = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			diplomat = minor_stress_impact_loss
		}
	}
	scope:petition_vassal = {
		every_character_war = {
			limit = { 
				OR = {
					AND = {
						primary_attacker = scope:petition_vassal
						primary_defender = { is_vassal_of = scope:petition_liege }
					}
					AND = {
						primary_defender = scope:petition_vassal
						primary_attacker = { is_vassal_of = scope:petition_liege }
					}
				}
			}
			save_temporary_scope_as = this_war
			show_as_tooltip = {	end_war = white_peace }
			primary_attacker = {
				add_truce_both_ways = {
					character = scope:this_war.primary_defender
					years = 5
					war = scope:this_war
					result = white_peace
				}	
			}
			hidden_effect = { end_war = white_peace } # For tooltip ordering, so that we can display the addition of a truce after the war ends instead of before.
		}
	}
	scope:second_party = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.end_war
				left_icon = scope:petition_vassal
				right_icon = scope:petition_liege
				custom_tooltip = vassal_war_toast_desc_second_party
			}
		}
	}
}

### Faction War
petition_liege_0101_faction_dismantle_effect = {
	scope:petition_liege = {
		stress_impact = {
			shy = minor_stress_impact_gain
			diplomat = minor_stress_impact_loss
		}
	}
	scope:vassal_faction = {
		faction_target = {
			add_opinion = {
				target = ROOT
				modifier = grateful_opinion
				opinion = 10
			}
		}
		if = {
			limit = {
			 	exists = special_character
			 	NOT = {
			 		any_faction_member = { THIS = scope:vassal_faction.special_character }
			 	}
			}
			special_character = {
				add_opinion = {
					target = scope:petition_liege
					modifier = angry_opinion
					opinion = -10
				}
			}
		}
		if = {
			limit = { faction_is_at_war = no }
			every_faction_member = {
				custom = hold_court_8260_faction_member_tt
				add_faction_cooldown_effect = { YEARS = faction_war_white_peace_cooldown }
				add_opinion = {
					target = scope:petition_liege
					modifier = angry_opinion
					opinion = -10
				}
			}
			destroy_faction = yes
		}
		else = {
			every_faction_member = {
				custom = hold_court_8260_faction_member_tt
				add_faction_cooldown_effect = { YEARS = faction_war_defeat_cooldown }
				add_opinion = {
					target = scope:petition_liege
					modifier = angry_opinion
					opinion = -25
				}
			}
			faction_war = { end_war = defender }
		}
	}
}

### Control
petition_liege_0101_county_control_effect = {
	scope:petition_liege = {
		stress_impact = {
			lazy = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		remove_short_term_gold = medium_gold_value
	}
	every_in_list = {
		list = petition_liege_county_control_list
		limit = { holder = scope:petition_vassal }
		custom = petition_liege_0101_county_control_effect_tt
		change_county_control = 10
		add_county_modifier = {
			modifier = petition_liege_county_control_modifier
			years = 5
		}
		custom_tooltip = petition_liege_county_control_modifier_tt
	}
}

### Convert
petition_liege_0101_county_convert_effect = {
	scope:petition_liege = {
		stress_impact = {
			cynical = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		remove_short_term_gold = medium_gold_value
	}
	every_in_list = {
		list = petition_liege_county_convert_list
		limit = {
			holder = scope:petition_vassal
			NOT = { county.faith = ROOT.faith }
		}
		custom = petition_liege_0101_county_convert_effect_tt
		add_county_modifier = {
			modifier = petition_liege_county_convert_modifier
			years = 5
		}
		custom_tooltip = petition_liege_county_convert_modifier_tt
	}
}

### Opinion
petition_liege_0101_county_opinion_effect = {
	scope:petition_liege = {
		stress_impact = {
			base = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			reclusive = minor_stress_impact_gain
		}
	}
	every_in_list = {
		list = petition_liege_county_opinion_list
		limit = {
			holder = scope:petition_vassal
			county_opinion <= -25
		}
		custom = petition_liege_0101_county_opinion_effect_tt
		add_county_modifier = {
			modifier = petition_liege_county_opinion_modifier
			years = 5
		}
	}
}

### Fortify
petition_liege_0101_fortify_border_effect = {
	scope:petition_liege = {
		stress_impact = {
			brave = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			architect = minor_stress_impact_loss
		}
		remove_short_term_gold = medium_gold_value
	}
	every_in_list = {
		list = petition_liege_fortify_border_list
		limit = {
			holder = scope:petition_vassal
		}
		custom = petition_liege_0101_fortify_border_effect_tt
		add_county_modifier = {
			modifier = petition_liege_fortify_border_modifier
			years = 5
		}
	}
}

### Title Liege
petition_liege_0101_title_liege_effect = {
	scope:petition_liege = {
		stress_impact = {
			greedy = medium_stress_impact_gain
		}
	}
	create_title_and_vassal_change = {
		type = granted
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:petition_claim = {
		change_title_holder_include_vassals = {
			holder = scope:petition_vassal
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	scope:petition_vassal = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.title_liege
				left_icon = scope:petition_liege
				show_as_tooltip = {
					scope:petition_vassal = { get_title = scope:petition_claim }
				}
			}
		}
	}
	scope:petition_liege = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.title_liege
				left_icon = scope:petition_vassal
				show_as_tooltip = {
					scope:petition_vassal = { get_title = scope:petition_claim }
				}
			}
		}
	}
}

### Title Vassal
petition_liege_0101_title_vassal_effect = {
	scope:petition_liege = { 
		add_tyranny = minor_tyranny_gain
		stress_impact = {
			compassionate = minor_stress_impact_gain
		}
	}
	create_title_and_vassal_change = {
		type = granted
		save_scope_as = change
		add_claim_on_loss = yes
	}
	scope:petition_claim = {
		change_title_holder = {
			holder = scope:petition_vassal
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	scope:second_party = {
		progress_towards_rival_effect = {
			CHARACTER = scope:petition_vassal
			REASON = rival_council_seat
			OPINION = 0
		}
		add_opinion = {
			target = scope:petition_vassal
			modifier = angry_opinion
			opinion = -20
		}
		add_opinion = {
			target = scope:petition_liege
			modifier = revoked_title
			opinion = -20
		}
	}
	scope:petition_vassal = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.title_vassal
				left_icon = scope:petition_liege
				right_icon = scope:second_party
				show_as_tooltip = {
					scope:petition_vassal = { get_title = scope:petition_claim }
				}
			}
		}
	}
	scope:petition_liege = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.title_vassal
				left_icon = scope:petition_vassal
				right_icon = scope:second_party
				show_as_tooltip = {
					scope:petition_vassal = { get_title = scope:petition_claim }
				}
			}
		}
	}
	scope:second_party = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.title_vassal
				left_icon = scope:petition_vassal
				right_icon = scope:petition_liege
				show_as_tooltip = {
					scope:petition_vassal = { get_title = scope:petition_claim }
				}
			}
		}
	}
	scope:petition_claim = {
		set_variable = {
			name = petition_title_cooldown
			years = 5
		}
	}
}

### Construct City
petition_liege_0101_construct_city_effect = {
	scope:petition_liege = {
		stress_impact = {
			greedy = medium_stress_impact_gain
			architect = minor_stress_impact_loss
			profligate = minor_stress_impact_loss
			improvident = minor_stress_impact_loss
		}
		remove_short_term_gold = main_building_tier_1_cost
	}
	scope:petition_construct = {
		begin_create_holding = {
			type = city_holding
			refund_cost = { gold = 0 }
		}
	}
	scope:petition_vassal = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.construct_city
				left_icon = scope:petition_liege
				show_as_tooltip = {
					scope:petition_construct = {
						begin_create_holding = {
			  				type = city_holding
			  				refund_cost = { gold = 0 }
			  			}
					}
				}
			}
		}
	}
}

### Construct Temple
petition_liege_0101_construct_temple_effect = {
	scope:petition_liege = {
		stress_impact = {
			greedy = medium_stress_impact_gain
			architect = minor_stress_impact_loss
			profligate = minor_stress_impact_loss
			improvident = minor_stress_impact_loss
		}
		remove_short_term_gold = main_building_tier_1_cost 
	}
	scope:petition_construct = {
		begin_create_holding = {
			type = church_holding
			refund_cost = { gold = 0 }
		}
	}
	scope:petition_vassal = {
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.construct_temple
				left_icon = scope:petition_liege
				show_as_tooltip = {
					scope:petition_construct = {
						begin_create_holding = {
			  				type = church_holding
			  				refund_cost = { gold = 0 }
			  			}
					}
				}	
			}
		}
	}
}

### Development
petition_liege_0101_development_effect = {
	scope:petition_liege = {
		stress_impact = {
			greedy = medium_stress_impact_gain
		}
		capital_province.county = { change_development_level = -2 }
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.development
				left_icon = scope:petition_vassal
				show_as_tooltip = {
					capital_province.county = { change_development_level = -2 }
				}	
			}
		}
	}
	scope:petition_vassal = {
		capital_province.county = {
			change_development_level = 2
			add_county_modifier = {
				modifier = petition_liege_development_modifier
				years = 5
			}
		}
		hidden_effect = {
			send_interface_toast = {
				title = petition_liege.0101.t.development
				left_icon = scope:petition_liege
				show_as_tooltip = {
					capital_province.county = {
						change_development_level = 2
						add_county_modifier = {
							modifier = petition_liege_development_modifier
							years = 5
						}
					}
				}	
			}
		}
	}
}

### Grandeur/Renown
petition_pos_grandeur_renown_effect = {
	if = {
		limit = { petition_liege_medium_cost_trigger = yes }
		scope:petition_liege = { change_current_court_grandeur = minor_court_grandeur_gain }
	}
	else_if = {
		limit = { petition_liege_high_cost_trigger = yes }
		scope:petition_liege = { change_current_court_grandeur = medium_court_grandeur_gain }
	}
	if = {
		limit = { scope:petition_liege.dynasty = scope:petition_vassal.dynasty }
		scope:petition_liege.dynasty = { add_dynasty_prestige = minor_dynasty_prestige_value }
	}
	else = {
		scope:petition_liege.dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
		scope:petition_vassal.dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_gain }
	}
}

petition_neg_grandeur_renown_effect = {
	scope:petition_liege = {
		change_current_court_grandeur = minor_court_grandeur_loss
		dynasty = { add_dynasty_prestige = miniscule_dynasty_prestige_loss }
	}
}

### Run relevant effects for request
petition_type_outcome_effect = {
	switch = {
		trigger = scope:petition_vassal.var:petition_type
		flag:council_seat = { petition_liege_0101_council_seat_effect = yes }
		flag:pay_debt = { petition_liege_0101_pay_debt_effect = yes }
		flag:war_aid = {petition_liege_0101_war_aid_effect = yes }
		flag:vassal_war = { petition_liege_0101_end_all_wars_effect = yes }
		flag:faction_war = { petition_liege_0101_faction_dismantle_effect = yes }
		flag:county_control = { petition_liege_0101_county_control_effect = yes }
		flag:county_convert = { petition_liege_0101_county_convert_effect = yes }
		flag:county_opinion = { petition_liege_0101_county_opinion_effect = yes }
		flag:fortify_border = { petition_liege_0101_fortify_border_effect = yes }
		flag:title_liege = { petition_liege_0101_title_liege_effect = yes }
		flag:title_vassal = {
			if = {
				limit = { 
					scope:second_party = { is_ai = no }
				}
				scope:second_party = { trigger_event = petition_liege.0501 }
				custom_description_no_bullet = {
					text = petition_liege_second_if_tt
					object = scope:second_party
				}
				scope:second_party = {
					show_as_tooltip = { petition_liege_0101_title_vassal_effect = yes }
				}
			}
			else = { petition_liege_0101_title_vassal_effect = yes }
		}
		flag:construct_city = { petition_liege_0101_construct_city_effect = yes }
		flag:construct_temple = { petition_liege_0101_construct_temple_effect = yes }
		flag:development = { petition_liege_0101_development_effect = yes }
	}
	petition_pos_grandeur_renown_effect = yes
}

### Bribes
# Pay gold to liege
petition_liege_0101_petitioner_pays_gold_bribe_effect = {
	scope:petition_vassal = {				
		pay_short_term_gold = {
			target = scope:petition_liege
			gold = scope:petition_vassal.medium_gold_value
		}
	}
}

# Grant favor to liege
petition_liege_0101_petitioner_gives_favor_hook_effect = {
	scope:petition_liege = {
		add_hook = {
			target = scope:petition_vassal
			type = favor_hook
			years = 10
		}
	}	
}

# Remove petitioner from factions
petition_liege_0101_petitioner_blocked_from_factions_effect = {
	scope:petition_vassal = {
		leave_faction = joined_faction
		add_faction_cooldown_effect = { YEARS = 10 }
	}
}

# Increase contractual obligations
petition_liege_0101_petitioner_contract_increase_effect = {
	if = {
		limit = {
			vassal_contract_obligation_level:feudal_government_levies < vassal_contract_obligation_level:feudal_government_taxes
			vassal_contract_obligation_level_can_be_increased = feudal_government_levies
		}
		vassal_contract_increase_obligation_level = feudal_government_levies
	}
	else_if = {
		limit = {
			vassal_contract_obligation_level:feudal_government_taxes < vassal_contract_obligation_level:feudal_government_levies
			vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
		}
		vassal_contract_increase_obligation_level = feudal_government_taxes
	}
	else = {
		if = {
			limit = { vassal_contract_obligation_level_can_be_increased = feudal_government_taxes }
			vassal_contract_increase_obligation_level = feudal_government_levies
		}
		else = { vassal_contract_increase_obligation_level = feudal_government_taxes }
	}
	hidden_effect = { set_vassal_contract_modification_blocked = yes }
}

petition_skill_duel_lose_effect = {
	send_interface_toast = {
		title = petition_liege.0401.failure
		left_icon = scope:petition_liege
		#show_as_tooltip = {
		#	activity = { complete_activity = yes }
		#}
	}
}

petition_skill_duel_effect = {
	duel = {
		skill = $SKILL$
		target = $TARGET$
		8 = {
			desc = petition_liege.0401.success
			compare_modifier = {
				value = scope:duel_value
				multiplier = 0.5
			}
			hidden_effect = { petition_type_outcome_effect = yes }
			custom_tooltip = petition_liege_accept_tt
			reverse_add_opinion = {
				target = $TARGET$
				modifier = annoyed_opinion
				opinion = -10
			}
		}
		12 = {
			desc = petition_liege.0401.failure
			petition_skill_duel_lose_effect = yes
		}
	}
}
