namespace = ep3_travel_option_events

# Recruit Wanderer
ep3_travel_option_events.0001 = {
	type = character_event
	title = ep3_travel_option_events.0001.t
	desc = {
		desc = ep3_travel_option_events.0001.intro
		first_valid = { # What they are
			triggered_desc = {
				trigger = {
					exists = scope:court_physician_court_position
				}
				desc = ep3_travel_option_events.0001.court_physician_court_position
			}
			triggered_desc = {
				trigger = {
					exists = scope:bodyguard_court_position
				}
				desc = ep3_travel_option_events.0001.bodyguard_court_position
			}
			triggered_desc = {
				trigger = {
					exists = scope:travel_leader_court_position
				}
				desc = ep3_travel_option_events.0001.travel_leader_court_position
			}
			triggered_desc = {
				trigger = {
					exists = scope:second_camp_officer
				}
				desc = ep3_travel_option_events.0001.second_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:quartermaster_camp_officer
				}
				desc = ep3_travel_option_events.0001.quartermaster_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:armorer_camp_officer
				}
				desc = ep3_travel_option_events.0001.armorer_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:chief_forager_camp_officer
				}
				desc = ep3_travel_option_events.0001.chief_forager_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:master_thief_camp_officer
				}
				desc = ep3_travel_option_events.0001.master_thief_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:head_porter_camp_officer
				}
				desc = ep3_travel_option_events.0001.head_porter_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:head_groom_camp_officer
				}
				desc = ep3_travel_option_events.0001.head_groom_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:huntperson_camp_officer
				}
				desc = ep3_travel_option_events.0001.huntperson_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:kennelperson_camp_officer
				}
				desc = ep3_travel_option_events.0001.kennelperson_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:chief_engineer_camp_officer
				}
				desc = ep3_travel_option_events.0001.chief_engineer_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:witness_camp_officer
				}
				desc = ep3_travel_option_events.0001.witness_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:person_haggler_camp_officer
				}
				desc = ep3_travel_option_events.0001.person_haggler_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:camp_cook_camp_officer
				}
				desc = ep3_travel_option_events.0001.camp_cook_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:master_bard_camp_officer
				}
				desc = ep3_travel_option_events.0001.master_bard_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:stooge_camp_officer
				}
				desc = ep3_travel_option_events.0001.stooge_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:master_of_arms_camp_officer
				}
				desc = ep3_travel_option_events.0001.master_of_arms_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:light_cavalry_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.light_cavalry_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:camelry_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.camelry_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:elephantry_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.elephantry_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:heavy_cavalry_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.heavy_cavalry_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:horse_archer_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.horse_archer_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:archer_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.archer_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:heavy_infantry_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.heavy_infantry_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:light_infantry_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.light_infantry_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:pike_captain_camp_officer
				}
				desc = ep3_travel_option_events.0001.pike_captain_camp_officer
			}
			triggered_desc = {
				trigger = {
					exists = scope:master_of_spoils_camp_officer
				}
				desc = ep3_travel_option_events.0001.master_of_spoils_camp_officer
			}
			desc = ep3_travel_option_events.0001.fallback
		}
		first_valid = { # How good they are/salary expectations
			triggered_desc = {
				trigger = {
					exists = scope:excellent_aptitude
				}
				desc = ep3_travel_option_events.0001.excellent
			}
			triggered_desc = {
				trigger = {
					exists = scope:good_aptitude
				}
				desc = ep3_travel_option_events.0001.good
			}
			triggered_desc = {
				trigger = {
					exists = scope:average_aptitude
				}
				desc = ep3_travel_option_events.0001.average
			}
			triggered_desc = {
				trigger = {
					exists = scope:poor_aptitude
				}
				desc = ep3_travel_option_events.0001.poor
			}
			desc = ep3_travel_option_events.0001.terrible
		}
	}
	theme = travel
	left_portrait = {
		character = root
		animation = steward
	}
	right_portrait = {
		character = scope:local_character
		triggered_animation = {
			trigger = {
				exists = scope:bodyguard_court_position
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = hero_flex
		}
		triggered_animation = {
			trigger = {
				exists = scope:pike_captain_camp_officer
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = celebrate_spear
		}
		triggered_animation = {
			trigger = {
				exists = scope:master_of_spoils_camp_officer
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = spymaster
		}
		triggered_animation = {
			trigger = {
				OR = {
					exists = scope:light_cavalry_captain_camp_officer
					exists = scope:light_infantry_captain_camp_officer
					exists = scope:heavy_infantry_captain_camp_officer
					exists = scope:heavy_cavalry_captain_camp_officer
				}
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = marshal
		}
		triggered_animation = {
			trigger = {
				exists = scope:master_bard_camp_officer
			}
			animation = instrument_active
		}
		triggered_animation = {
			trigger = {
				exists = scope:stooge_camp_officer
			}
			animation = anger
		}
		triggered_animation = {
			trigger = {
				exists = scope:huntperson_camp_officer
			}
			animation = hunting_knife_start
		}
		triggered_animation = {
			trigger = {
				OR = {
					exists = scope:archer_captain_camp_officer
					exists = scope:horse_archer_captain_camp_officer
				}
			}
			animation = hunting_longbow_aim_arrow_default
		}
		triggered_animation = {
			trigger = {
				exists = scope:master_thief_camp_officer
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = scheme
		}
		triggered_animation = {
			trigger = {
				exists = scope:court_physician_court_position
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = physician
		}
		triggered_animation = {
			trigger = {
				exists = scope:travel_leader_court_position
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = survey
		}
		triggered_animation = {
			trigger = {
				exists = scope:excellent_aptitude
				OR = {
					exists = scope:excellent_aptitude
					exists = scope:good_aptitude
				}
			}
			animation = obsequious_bow
		}
		triggered_animation = {
			trigger = {
				OR = {
					exists = scope:good_aptitude
					exists = scope:average_aptitude
				}
			}
			animation = debating
		}
		animation = beg
	}

	trigger = {
		NOT = { has_character_flag = had_talent_event }
		is_landless_adventurer = yes
		any_pool_character = {
			province = root.location
			is_available_healthy_ai_adult = yes
			NOR = {
				has_character_flag = denied_recruitment
				has_relation_rival = root
			}
			OR = {
				AND = {
					root = { can_employ_court_position_type = court_physician_court_position }
					would_be_valid_for_court_position = {
						court_position = court_physician_court_position
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = bodyguard_court_position }
					would_be_valid_for_court_position = {
						court_position = bodyguard_court_position
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = travel_leader_court_position }
					would_be_valid_for_court_position = {
						court_position = travel_leader_court_position
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = second_camp_officer }
					would_be_valid_for_court_position = {
						court_position = second_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = quartermaster_camp_officer }
					would_be_valid_for_court_position = {
						court_position = quartermaster_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = armorer_camp_officer }
					would_be_valid_for_court_position = {
						court_position = armorer_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = chief_forager_camp_officer }
					would_be_valid_for_court_position = {
						court_position = chief_forager_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = master_thief_camp_officer }
					would_be_valid_for_court_position = {
						court_position = master_thief_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = head_porter_camp_officer }
					would_be_valid_for_court_position = {
						court_position = head_porter_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = head_groom_camp_officer }
					would_be_valid_for_court_position = {
						court_position = head_groom_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = huntperson_camp_officer }
					would_be_valid_for_court_position = {
						court_position = huntperson_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = kennelperson_camp_officer }
					would_be_valid_for_court_position = {
						court_position = kennelperson_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = chief_engineer_camp_officer }
					would_be_valid_for_court_position = {
						court_position = chief_engineer_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = witness_camp_officer }
					would_be_valid_for_court_position = {
						court_position = witness_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = person_haggler_camp_officer }
					would_be_valid_for_court_position = {
						court_position = person_haggler_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = camp_cook_camp_officer }
					would_be_valid_for_court_position = {
						court_position = camp_cook_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = master_bard_camp_officer }
					would_be_valid_for_court_position = {
						court_position = master_bard_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = stooge_camp_officer }
					would_be_valid_for_court_position = {
						court_position = stooge_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = master_of_arms_camp_officer }
					would_be_valid_for_court_position = {
						court_position = master_of_arms_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = light_cavalry_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = light_cavalry_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = camelry_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = camelry_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = elephantry_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = elephantry_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = heavy_cavalry_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = heavy_cavalry_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = horse_archer_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = horse_archer_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = archer_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = archer_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = heavy_infantry_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = heavy_infantry_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = light_infantry_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = light_infantry_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = pike_captain_camp_officer }
					would_be_valid_for_court_position = {
						court_position = pike_captain_camp_officer
						employer = root
					}
				}
				AND = {
					root = { can_employ_court_position_type = master_of_spoils_camp_officer }
					would_be_valid_for_court_position = {
						court_position = master_of_spoils_camp_officer
						employer = root
					}
				}
			}
		}
	}
	
	weight_multiplier = {
		base = 1
		modifier = {
			factor = 5
			domicile ?= { has_domicile_parameter = camp_better_scout_for_talent }
		}
		modifier = {
			factor = 3
			any_courtier = {
				count <= 3
			}
		}
		modifier = {
			factor = 0.025
			NOT = {
				any_pool_character = {
					province = root.location
					is_available_healthy_ai_adult = yes
					NOR = {
						has_character_flag = denied_recruitment
						has_relation_rival = root
					}
					OR = {
						AND = {
							root = { can_employ_court_position_type = court_physician_court_position }
							would_be_valid_for_court_position = {
								court_position = court_physician_court_position
								employer = root
							}
							aptitude:court_physician_court_position >= 2
						}
						AND = {
							root = { can_employ_court_position_type = bodyguard_court_position }
							would_be_valid_for_court_position = {
								court_position = bodyguard_court_position
								employer = root
							}
							aptitude:bodyguard_court_position >= 2
						}
						AND = {
							root = { can_employ_court_position_type = travel_leader_court_position }
							would_be_valid_for_court_position = {
								court_position = travel_leader_court_position
								employer = root
							}
							aptitude:travel_leader_court_position >= 2
						}
						AND = {
							root = { can_employ_court_position_type = second_camp_officer }
							would_be_valid_for_court_position = {
								court_position = second_camp_officer
								employer = root
							}
							aptitude:second_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = quartermaster_camp_officer }
							would_be_valid_for_court_position = {
								court_position = quartermaster_camp_officer
								employer = root
							}
							aptitude:quartermaster_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = armorer_camp_officer }
							would_be_valid_for_court_position = {
								court_position = armorer_camp_officer
								employer = root
							}
							aptitude:armorer_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = chief_forager_camp_officer }
							would_be_valid_for_court_position = {
								court_position = chief_forager_camp_officer
								employer = root
							}
							aptitude:chief_forager_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = master_thief_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_thief_camp_officer
								employer = root
							}
							aptitude:master_thief_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = head_porter_camp_officer }
							would_be_valid_for_court_position = {
								court_position = head_porter_camp_officer
								employer = root
							}
							aptitude:head_porter_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = head_groom_camp_officer }
							would_be_valid_for_court_position = {
								court_position = head_groom_camp_officer
								employer = root
							}
							aptitude:head_groom_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = huntperson_camp_officer }
							would_be_valid_for_court_position = {
								court_position = huntperson_camp_officer
								employer = root
							}
							aptitude:huntperson_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = kennelperson_camp_officer }
							would_be_valid_for_court_position = {
								court_position = kennelperson_camp_officer
								employer = root
							}
							aptitude:kennelperson_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = chief_engineer_camp_officer }
							would_be_valid_for_court_position = {
								court_position = chief_engineer_camp_officer
								employer = root
							}
							aptitude:chief_engineer_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = witness_camp_officer }
							would_be_valid_for_court_position = {
								court_position = witness_camp_officer
								employer = root
							}
							aptitude:witness_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = person_haggler_camp_officer }
							would_be_valid_for_court_position = {
								court_position = person_haggler_camp_officer
								employer = root
							}
							aptitude:person_haggler_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = camp_cook_camp_officer }
							would_be_valid_for_court_position = {
								court_position = camp_cook_camp_officer
								employer = root
							}
							aptitude:camp_cook_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = master_bard_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_bard_camp_officer
								employer = root
							}
							aptitude:master_bard_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = stooge_camp_officer }
							would_be_valid_for_court_position = {
								court_position = stooge_camp_officer
								employer = root
							}
							aptitude:stooge_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = master_of_arms_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_of_arms_camp_officer
								employer = root
							}
							aptitude:master_of_arms_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = light_cavalry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = light_cavalry_captain_camp_officer
								employer = root
							}
							aptitude:light_cavalry_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = camelry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = camelry_captain_camp_officer
								employer = root
							}
							aptitude:camelry_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = elephantry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = elephantry_captain_camp_officer
								employer = root
							}
							aptitude:elephantry_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = heavy_cavalry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = heavy_cavalry_captain_camp_officer
								employer = root
							}
							aptitude:heavy_cavalry_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = horse_archer_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = horse_archer_captain_camp_officer
								employer = root
							}
							aptitude:horse_archer_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = archer_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = archer_captain_camp_officer
								employer = root
							}
							aptitude:archer_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = heavy_infantry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = heavy_infantry_captain_camp_officer
								employer = root
							}
							aptitude:heavy_infantry_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = light_infantry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = light_infantry_captain_camp_officer
								employer = root
							}
							aptitude:light_infantry_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = pike_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = pike_captain_camp_officer
								employer = root
							}
							aptitude:pike_captain_camp_officer >= 2
						}
						AND = {
							root = { can_employ_court_position_type = master_of_spoils_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_of_spoils_camp_officer
								employer = root
							}
							aptitude:master_of_spoils_camp_officer >= 2
						}
					}
				}
			}
		}
	}

	immediate = {
		location = { save_scope_as = location }
		random_pool_character = {
			province = root.location
			limit = {
				is_available_healthy_ai_adult = yes
				NOR = {
					has_relation_rival = root
					has_character_flag = denied_recruitment
				}
				OR = {
					AND = {
						root = { can_employ_court_position_type = court_physician_court_position }
						would_be_valid_for_court_position = {
							court_position = court_physician_court_position
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = bodyguard_court_position }
						would_be_valid_for_court_position = {
							court_position = bodyguard_court_position
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = travel_leader_court_position }
						would_be_valid_for_court_position = {
							court_position = travel_leader_court_position
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = second_camp_officer }
						would_be_valid_for_court_position = {
							court_position = second_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = quartermaster_camp_officer }
						would_be_valid_for_court_position = {
							court_position = quartermaster_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = armorer_camp_officer }
						would_be_valid_for_court_position = {
							court_position = armorer_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = chief_forager_camp_officer }
						would_be_valid_for_court_position = {
							court_position = chief_forager_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = master_thief_camp_officer }
						would_be_valid_for_court_position = {
							court_position = master_thief_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = head_porter_camp_officer }
						would_be_valid_for_court_position = {
							court_position = head_porter_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = head_groom_camp_officer }
						would_be_valid_for_court_position = {
							court_position = head_groom_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = huntperson_camp_officer }
						would_be_valid_for_court_position = {
							court_position = huntperson_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = kennelperson_camp_officer }
						would_be_valid_for_court_position = {
							court_position = kennelperson_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = chief_engineer_camp_officer }
						would_be_valid_for_court_position = {
							court_position = chief_engineer_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = witness_camp_officer }
						would_be_valid_for_court_position = {
							court_position = witness_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = person_haggler_camp_officer }
						would_be_valid_for_court_position = {
							court_position = person_haggler_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = camp_cook_camp_officer }
						would_be_valid_for_court_position = {
							court_position = camp_cook_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = master_bard_camp_officer }
						would_be_valid_for_court_position = {
							court_position = master_bard_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = stooge_camp_officer }
						would_be_valid_for_court_position = {
							court_position = stooge_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = master_of_arms_camp_officer }
						would_be_valid_for_court_position = {
							court_position = master_of_arms_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = light_cavalry_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = light_cavalry_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = camelry_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = camelry_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = elephantry_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = elephantry_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = heavy_cavalry_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = heavy_cavalry_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = horse_archer_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = horse_archer_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = archer_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = archer_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = heavy_infantry_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = heavy_infantry_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = light_infantry_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = light_infantry_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = pike_captain_camp_officer }
						would_be_valid_for_court_position = {
							court_position = pike_captain_camp_officer
							employer = root
						}
					}
					AND = {
						root = { can_employ_court_position_type = master_of_spoils_camp_officer }
						would_be_valid_for_court_position = {
							court_position = master_of_spoils_camp_officer
							employer = root
						}
					}
				}
			}
			weight = {
				base = 1
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = court_physician_court_position }
						court_physician_validity_trigger = { EMPLOYER = root }
						aptitude:court_physician_court_position >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = court_physician_court_position }
						court_physician_validity_trigger = { EMPLOYER = root }
						aptitude:court_physician_court_position >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = bodyguard_court_position }
						bodyguard_validity_trigger = { EMPLOYER = root }
						aptitude:bodyguard_court_position >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = bodyguard_court_position }
						bodyguard_validity_trigger = { EMPLOYER = root }
						aptitude:bodyguard_court_position >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = travel_leader_court_position }
						aptitude:travel_leader_court_position >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = travel_leader_court_position }
						aptitude:travel_leader_court_position >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = second_camp_officer }
						aptitude:second_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = second_camp_officer }
						aptitude:second_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = quartermaster_camp_officer }
						aptitude:quartermaster_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = quartermaster_camp_officer }
						aptitude:quartermaster_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = armorer_camp_officer }
						aptitude:armorer_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = armorer_camp_officer }
						aptitude:armorer_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = chief_forager_camp_officer }
						aptitude:chief_forager_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = chief_forager_camp_officer }
						aptitude:chief_forager_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = master_thief_camp_officer }
						aptitude:master_thief_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = master_thief_camp_officer }
						aptitude:master_thief_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = head_porter_camp_officer }
						aptitude:head_porter_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = head_porter_camp_officer }
						aptitude:head_porter_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = head_groom_camp_officer }
						aptitude:head_groom_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = head_groom_camp_officer }
						aptitude:head_groom_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = huntperson_camp_officer }
						aptitude:huntperson_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = huntperson_camp_officer }
						aptitude:huntperson_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = kennelperson_camp_officer }
						aptitude:kennelperson_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = kennelperson_camp_officer }
						aptitude:kennelperson_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = chief_engineer_camp_officer }
						aptitude:chief_engineer_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = chief_engineer_camp_officer }
						aptitude:chief_engineer_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = witness_camp_officer }
						aptitude:witness_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = witness_camp_officer }
						aptitude:witness_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = person_haggler_camp_officer }
						aptitude:person_haggler_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = person_haggler_camp_officer }
						aptitude:person_haggler_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = camp_cook_camp_officer }
						aptitude:camp_cook_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = camp_cook_camp_officer }
						aptitude:camp_cook_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = master_bard_camp_officer }
						aptitude:master_bard_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = master_bard_camp_officer }
						aptitude:master_bard_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = stooge_camp_officer }
						aptitude:stooge_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = stooge_camp_officer }
						aptitude:stooge_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = master_of_arms_camp_officer }
						aptitude:master_of_arms_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = master_of_arms_camp_officer }
						aptitude:master_of_arms_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = light_cavalry_captain_camp_officer }
						aptitude:light_cavalry_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = light_cavalry_captain_camp_officer }
						aptitude:light_cavalry_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = camelry_captain_camp_officer }
						aptitude:camelry_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = camelry_captain_camp_officer }
						aptitude:camelry_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = elephantry_captain_camp_officer }
						aptitude:elephantry_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = elephantry_captain_camp_officer }
						aptitude:elephantry_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = heavy_cavalry_captain_camp_officer }
						aptitude:heavy_cavalry_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = heavy_cavalry_captain_camp_officer }
						aptitude:heavy_cavalry_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = horse_archer_captain_camp_officer }
						aptitude:horse_archer_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = horse_archer_captain_camp_officer }
						aptitude:horse_archer_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = archer_captain_camp_officer }
						aptitude:archer_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = archer_captain_camp_officer }
						aptitude:archer_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = heavy_infantry_captain_camp_officer }
						aptitude:heavy_infantry_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = heavy_infantry_captain_camp_officer }
						aptitude:heavy_infantry_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = light_infantry_captain_camp_officer }
						aptitude:light_infantry_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = light_infantry_captain_camp_officer }
						aptitude:light_infantry_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = pike_captain_camp_officer }
						aptitude:pike_captain_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = pike_captain_camp_officer }
						aptitude:pike_captain_camp_officer >= 3
					}
				}
				modifier = {
					add = 10
					AND = {
						root = { can_employ_court_position_type = master_of_spoils_camp_officer }
						aptitude:master_of_spoils_camp_officer >= 4
					}
				}
				modifier = {
					add = 5
					AND = {
						root = { can_employ_court_position_type = master_of_spoils_camp_officer }
						aptitude:master_of_spoils_camp_officer >= 3
					}
				}
			}
			save_scope_as = local_character
			assign_quirk_effect = yes
			random_list = {
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = court_physician_court_position }
							court_physician_validity_trigger = { EMPLOYER = root }
						}
					}
					modifier = {
						factor = 10
						aptitude:court_physician_court_position >= 4
					}
					modifier = {
						factor = 5
						aptitude:court_physician_court_position >= 3
					}
					modifier = {
						factor = 2
						aptitude:court_physician_court_position >= 2
					}
					save_scope_as = court_physician_court_position
					if = {
						limit = { aptitude:court_physician_court_position >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:court_physician_court_position >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:court_physician_court_position >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:court_physician_court_position >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = bodyguard_court_position }
							bodyguard_validity_trigger = { EMPLOYER = root }
						}
					}
					modifier = {
						factor = 10
						aptitude:bodyguard_court_position >= 4
					}
					modifier = {
						factor = 5
						aptitude:bodyguard_court_position >= 3
					}
					modifier = {
						factor = 2
						aptitude:bodyguard_court_position >= 2
					}
					save_scope_as = bodyguard_court_position
					if = {
						limit = { aptitude:bodyguard_court_position >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:bodyguard_court_position >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:bodyguard_court_position >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:bodyguard_court_position >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = travel_leader_court_position }
							travel_leader_validity_trigger = { EMPLOYER = root }
						}
					}
					modifier = {
						factor = 10
						aptitude:travel_leader_court_position >= 4
					}
					modifier = {
						factor = 5
						aptitude:travel_leader_court_position >= 3
					}
					modifier = {
						factor = 2
						aptitude:travel_leader_court_position >= 2
					}
					save_scope_as = travel_leader_court_position
					if = {
						limit = { aptitude:travel_leader_court_position >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:travel_leader_court_position >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:travel_leader_court_position >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:travel_leader_court_position >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = second_camp_officer }
							would_be_valid_for_court_position = {
								court_position = second_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:second_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:second_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:second_camp_officer >= 2
					}
					save_scope_as = second_camp_officer
					if = {
						limit = { aptitude:second_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:second_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:second_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:second_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = quartermaster_camp_officer }
							would_be_valid_for_court_position = {
								court_position = quartermaster_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:quartermaster_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:quartermaster_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:quartermaster_camp_officer >= 2
					}
					save_scope_as = quartermaster_camp_officer
					if = {
						limit = { aptitude:quartermaster_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:quartermaster_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:quartermaster_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:quartermaster_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = armorer_camp_officer }
							would_be_valid_for_court_position = {
								court_position = armorer_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:armorer_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:armorer_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:armorer_camp_officer >= 2
					}
					save_scope_as = armorer_camp_officer
					if = {
						limit = { aptitude:armorer_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:armorer_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:armorer_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:armorer_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = chief_forager_camp_officer }
							would_be_valid_for_court_position = {
								court_position = chief_forager_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:chief_forager_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:chief_forager_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:chief_forager_camp_officer >= 2
					}
					save_scope_as = chief_forager_camp_officer
					if = {
						limit = { aptitude:chief_forager_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:chief_forager_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:chief_forager_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:chief_forager_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = master_thief_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_thief_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:master_thief_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:master_thief_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:master_thief_camp_officer >= 2
					}
					save_scope_as = master_thief_camp_officer
					if = {
						limit = { aptitude:master_thief_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:master_thief_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:master_thief_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:master_thief_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = head_porter_camp_officer }
							would_be_valid_for_court_position = {
								court_position = head_porter_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:head_porter_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:head_porter_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:head_porter_camp_officer >= 2
					}
					save_scope_as = head_porter_camp_officer
					if = {
						limit = { aptitude:head_porter_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:head_porter_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:head_porter_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:head_porter_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = head_groom_camp_officer }
							would_be_valid_for_court_position = {
								court_position = head_groom_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:head_groom_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:head_groom_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:head_groom_camp_officer >= 2
					}
					save_scope_as = head_groom_camp_officer
					if = {
						limit = { aptitude:head_groom_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:head_groom_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:head_groom_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:head_groom_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = huntperson_camp_officer }
							would_be_valid_for_court_position = {
								court_position = huntperson_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:huntperson_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:huntperson_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:huntperson_camp_officer >= 2
					}
					save_scope_as = huntperson_camp_officer
					if = {
						limit = { aptitude:huntperson_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:huntperson_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:huntperson_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:huntperson_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = kennelperson_camp_officer }
							would_be_valid_for_court_position = {
								court_position = kennelperson_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:kennelperson_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:kennelperson_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:kennelperson_camp_officer >= 2
					}
					save_scope_as = kennelperson_camp_officer
					if = {
						limit = { aptitude:kennelperson_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:kennelperson_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:kennelperson_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:kennelperson_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = chief_engineer_camp_officer }
							would_be_valid_for_court_position = {
								court_position = chief_engineer_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:chief_engineer_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:chief_engineer_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:chief_engineer_camp_officer >= 2
					}
					save_scope_as = chief_engineer_camp_officer
					if = {
						limit = { aptitude:chief_engineer_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:chief_engineer_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:chief_engineer_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:chief_engineer_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = witness_camp_officer }
							would_be_valid_for_court_position = {
								court_position = witness_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:witness_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:witness_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:witness_camp_officer >= 2
					}
					save_scope_as = witness_camp_officer
					if = {
						limit = { aptitude:witness_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:witness_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:witness_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:witness_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = person_haggler_camp_officer }
							would_be_valid_for_court_position = {
								court_position = person_haggler_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:person_haggler_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:person_haggler_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:person_haggler_camp_officer >= 2
					}
					save_scope_as = person_haggler_camp_officer
					if = {
						limit = { aptitude:person_haggler_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:person_haggler_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:person_haggler_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:person_haggler_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = camp_cook_camp_officer }
							would_be_valid_for_court_position = {
								court_position = camp_cook_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:camp_cook_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:camp_cook_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:camp_cook_camp_officer >= 2
					}
					save_scope_as = camp_cook_camp_officer
					if = {
						limit = { aptitude:camp_cook_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:camp_cook_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:camp_cook_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:camp_cook_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = master_bard_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_bard_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:master_bard_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:master_bard_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:master_bard_camp_officer >= 2
					}
					save_scope_as = master_bard_camp_officer
					if = {
						limit = { aptitude:master_bard_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:master_bard_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:master_bard_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:master_bard_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = stooge_camp_officer }
							would_be_valid_for_court_position = {
								court_position = stooge_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:stooge_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:stooge_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:stooge_camp_officer >= 2
					}
					save_scope_as = stooge_camp_officer
					if = {
						limit = { aptitude:stooge_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:stooge_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:stooge_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:stooge_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = master_of_arms_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_of_arms_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:master_of_arms_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:master_of_arms_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:master_of_arms_camp_officer >= 2
					}
					save_scope_as = master_of_arms_camp_officer
					if = {
						limit = { aptitude:master_of_arms_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:master_of_arms_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:master_of_arms_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:master_of_arms_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = light_cavalry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = light_cavalry_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:light_cavalry_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:light_cavalry_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:light_cavalry_captain_camp_officer >= 2
					}
					save_scope_as = light_cavalry_captain_camp_officer
					if = {
						limit = { aptitude:light_cavalry_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:light_cavalry_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:light_cavalry_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:light_cavalry_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = camelry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = camelry_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:camelry_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:camelry_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:camelry_captain_camp_officer >= 2
					}
					save_scope_as = camelry_captain_camp_officer
					if = {
						limit = { aptitude:camelry_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:camelry_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:camelry_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:camelry_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = elephantry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = elephantry_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:elephantry_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:elephantry_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:elephantry_captain_camp_officer >= 2
					}
					save_scope_as = elephantry_captain_camp_officer
					if = {
						limit = { aptitude:elephantry_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:elephantry_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:elephantry_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:elephantry_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = heavy_cavalry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = heavy_cavalry_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:heavy_cavalry_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:heavy_cavalry_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:heavy_cavalry_captain_camp_officer >= 2
					}
					save_scope_as = heavy_cavalry_captain_camp_officer
					if = {
						limit = { aptitude:heavy_cavalry_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:heavy_cavalry_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:heavy_cavalry_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:heavy_cavalry_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = horse_archer_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = horse_archer_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:horse_archer_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:horse_archer_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:horse_archer_captain_camp_officer >= 2
					}
					save_scope_as = horse_archer_captain_camp_officer
					if = {
						limit = { aptitude:horse_archer_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:horse_archer_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:horse_archer_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:horse_archer_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = archer_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = archer_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:archer_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:archer_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:archer_captain_camp_officer >= 2
					}
					save_scope_as = archer_captain_camp_officer
					if = {
						limit = { aptitude:archer_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:archer_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:archer_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:archer_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = heavy_infantry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = heavy_infantry_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:heavy_infantry_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:heavy_infantry_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:heavy_infantry_captain_camp_officer >= 2
					}
					save_scope_as = heavy_infantry_captain_camp_officer
					if = {
						limit = { aptitude:heavy_infantry_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:heavy_infantry_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:heavy_infantry_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:heavy_infantry_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = light_infantry_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = light_infantry_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:light_infantry_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:light_infantry_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:light_infantry_captain_camp_officer >= 2
					}
					save_scope_as = light_infantry_captain_camp_officer
					if = {
						limit = { aptitude:light_infantry_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:light_infantry_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:light_infantry_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:light_infantry_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = pike_captain_camp_officer }
							would_be_valid_for_court_position = {
								court_position = pike_captain_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:pike_captain_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:pike_captain_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:pike_captain_camp_officer >= 2
					}
					save_scope_as = pike_captain_camp_officer
					if = {
						limit = { aptitude:pike_captain_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:pike_captain_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:pike_captain_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:pike_captain_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
				10 = {
					trigger = {
						AND = {
							root = { can_employ_court_position_type = master_of_spoils_camp_officer }
							would_be_valid_for_court_position = {
								court_position = master_of_spoils_camp_officer
								employer = root
							}
						}
					}
					modifier = {
						factor = 10
						aptitude:master_of_spoils_camp_officer >= 4
					}
					modifier = {
						factor = 5
						aptitude:master_of_spoils_camp_officer >= 3
					}
					modifier = {
						factor = 2
						aptitude:master_of_spoils_camp_officer >= 2
					}
					save_scope_as = master_of_spoils_camp_officer
					if = {
						limit = { aptitude:master_of_spoils_camp_officer >= 4 }
						save_scope_as = excellent_aptitude
					}
					else_if = {
						limit = { aptitude:master_of_spoils_camp_officer >= 3 }
						save_scope_as = good_aptitude
					}
					else_if = {
						limit = { aptitude:master_of_spoils_camp_officer >= 2 }
						save_scope_as = average_aptitude
					}
					else_if = {
						limit = { aptitude:master_of_spoils_camp_officer >= 1 }
						save_scope_as = poor_aptitude
					}
					else = { save_scope_as = terrible_aptitude }
				}
			}
		}
		if = {
			limit = {
				domicile ?= { has_domicile_parameter = camp_better_scout_for_talent }
			}
			add_character_flag = {
				flag = had_talent_event
				months = 2
			}
		}
		else = {
			add_character_flag = {
				flag = had_talent_event
				months = 4
			}
		}
	}

	option = {
		name = ep3_travel_option_events.0001.a
		hidden_effect = {
			scope:local_character = { add_to_court_and_entourage_effect = yes }
		}
		show_as_tooltip = {
			add_courtier = scope:local_character 
		}
		if = {
			limit = {
				has_perk = benevolent_intent_perk
			}
			reverse_add_opinion = {
				modifier = grateful_opinion
				target = scope:local_character
				opinion = 60
			}
		}
		else = {
			reverse_add_opinion = {
				modifier = grateful_opinion
				target = scope:local_character
				opinion = 35
			}
		}
		if = {
			limit = {
				exists = scope:court_physician_court_position
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = court_physician_court_position
			}
		}
		else_if = {
			limit = {
				exists = scope:bodyguard_court_position
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = bodyguard_court_position
			}
		}
		else_if = {
			limit = {
				exists = scope:travel_leader_court_position
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = travel_leader_court_position
			}
		}
		else_if = {
			limit = {
				exists = scope:second_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = second_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:quartermaster_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = quartermaster_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:armorer_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = armorer_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:chief_forager_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = chief_forager_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_thief_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_thief_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:head_porter_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = head_porter_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:head_groom_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = head_groom_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:huntperson_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = huntperson_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:kennelperson_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = kennelperson_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:chief_engineer_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = chief_engineer_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:witness_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = witness_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:person_haggler_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = person_haggler_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:camp_cook_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = camp_cook_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_bard_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_bard_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:stooge_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = stooge_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_of_arms_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_of_arms_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:light_cavalry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = light_cavalry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:camelry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = camelry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:elephantry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = elephantry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:heavy_cavalry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = heavy_cavalry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:horse_archer_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = horse_archer_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:archer_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = archer_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:heavy_infantry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = heavy_infantry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:light_infantry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = light_infantry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:pike_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = pike_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_of_spoils_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_of_spoils_camp_officer
			}
		}
		
		# Aptitude
		if = {
			limit = {
				exists = scope:excellent_aptitude
			}
			custom_tooltip = excellent.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				pay_short_term_gold = {
					target = scope:local_character
					gold = 65
				}
			}
			else = {
				pay_short_term_gold = {
					target = scope:local_character
					gold = 125
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:good_aptitude
			}
			custom_tooltip = good.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				pay_short_term_gold = {
					target = scope:local_character
					gold = 35
				}
			}
			else = {
				pay_short_term_gold = {
					target = scope:local_character
					gold = 75
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:average_aptitude
			}
			custom_tooltip = average.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				pay_short_term_gold = {
					target = scope:local_character
					gold = 25
				}
			}
			else = {
				pay_short_term_gold = {
					target = scope:local_character
					gold = 50
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:poor_aptitude
			}
			custom_tooltip = poor.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				pay_short_term_gold = {
					target = scope:local_character
					gold = 10
				}
			}
			else = {
				pay_short_term_gold = {
					target = scope:local_character
					gold = 20
				}
			}
		}
		else = {
			custom_tooltip = terrible.aptitude_tt
			pay_short_term_gold = {
				target = scope:local_character
				gold = 1
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				gold <= 500
			}
		}
	}
	option = {
		name = ep3_travel_option_events.0001.provisions
		show_as_unavailable = { always = yes }
		trigger = {
			trigger_if = {
				limit = {
					exists = scope:excellent_aptitude
				}
				trigger_if = {
					limit = {
						has_perk = large_levies_perk
					}
					domicile.provisions >= 500
				}
				trigger_else = {
					domicile.provisions >= 1000
				}
			}
			trigger_else_if = {
				limit = {
					exists = scope:good_aptitude
				}
				trigger_if = {
					limit = {
						has_perk = large_levies_perk
					}
					domicile.provisions >= 400
				}
				trigger_else = {
					domicile.provisions >= 800
				}
			}
			trigger_else_if = {
				limit = {
					exists = scope:average_aptitude
				}
				trigger_if = {
					limit = {
						has_perk = large_levies_perk
					}
					domicile.provisions >= 300
				}
				trigger_else = {
					domicile.provisions >= 600
				}
			}
			trigger_else_if = {
				limit = {
					exists = scope:poor_aptitude
				}
				trigger_if = {
					limit = {
						has_perk = large_levies_perk
					}
					domicile.provisions >= 150
				}
				trigger_else = {
					domicile.provisions >= 300
				}
			}
			trigger_else = {
				trigger_if = {
					limit = {
						has_perk = large_levies_perk
					}
					domicile.provisions >= 50
				}
				trigger_else = {
					domicile.provisions >= 100
				}
			}
		}
		
		hidden_effect = {
			scope:local_character = { add_to_court_and_entourage_effect = yes }
		}
		show_as_tooltip = {
			add_courtier = scope:local_character 
		}
		if = {
			limit = {
				has_perk = benevolent_intent_perk
			}
			reverse_add_opinion = {
				modifier = grateful_opinion
				target = scope:local_character
				opinion = 35
			}
		}
		else = {
			reverse_add_opinion = {
				modifier = grateful_opinion
				target = scope:local_character
				opinion = 10
			}
		}
		if = {
			limit = {
				exists = scope:court_physician_court_position
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = court_physician_court_position
			}
		}
		else_if = {
			limit = {
				exists = scope:bodyguard_court_position
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = bodyguard_court_position
			}
		}
		else_if = {
			limit = {
				exists = scope:travel_leader_court_position
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = travel_leader_court_position
			}
		}
		else_if = {
			limit = {
				exists = scope:second_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = second_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:quartermaster_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = quartermaster_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:armorer_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = armorer_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:chief_forager_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = chief_forager_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_thief_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_thief_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:head_porter_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = head_porter_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:head_groom_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = head_groom_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:huntperson_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = huntperson_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:kennelperson_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = kennelperson_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:chief_engineer_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = chief_engineer_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:witness_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = witness_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:person_haggler_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = person_haggler_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:camp_cook_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = camp_cook_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_bard_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_bard_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:stooge_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = stooge_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_of_arms_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_of_arms_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:light_cavalry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = light_cavalry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:camelry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = camelry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:elephantry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = elephantry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:heavy_cavalry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = heavy_cavalry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:horse_archer_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = horse_archer_captain_camp_officer
			}
		}
		else_if = {
			limit = { 
				exists = scope:archer_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = archer_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:heavy_infantry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = heavy_infantry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:light_infantry_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = light_infantry_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:pike_captain_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = pike_captain_camp_officer
			}
		}
		else_if = {
			limit = {
				exists = scope:master_of_spoils_camp_officer
			}
			appoint_court_position = {
				recipient = scope:local_character
				court_position = master_of_spoils_camp_officer
			}
		}
		
		# Aptitude
		if = {
			limit = {
				exists = scope:excellent_aptitude
			}
			custom_tooltip = excellent.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				domicile = {
					change_provisions = -500
				}
			}
			else = {
				domicile = {
					change_provisions = -1000
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:good_aptitude
			}
			custom_tooltip = good.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				domicile = {
					change_provisions = -400
				}
			}
			else = {
				domicile = {
					change_provisions = -800
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:average_aptitude
			}
			custom_tooltip = average.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				domicile = {
					change_provisions = -300
				}
			}
			else = {
				domicile = {
					change_provisions = -600
				}
			}
		}
		else_if = {
			limit = {
				exists = scope:poor_aptitude
			}
			custom_tooltip = poor.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				domicile = {
					change_provisions = -150
				}
			}
			else = {
				domicile = {
					change_provisions = -300
				}
			}
		}
		else = {
			custom_tooltip = terrible.aptitude_tt
			if = {
				limit = {
					has_perk = large_levies_perk
				}
				domicile = {
					change_provisions = -50
				}
			}
			else = {
				domicile = {
					change_provisions = -100
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
	option = {
		name = ep3_travel_option_events.0001.b
		scope:local_character = {
			add_character_flag = {
				flag = denied_recruitment
				years = 5
			}
		}
		ai_chance = {
			base = 0
		}
	}
}

ep3_travel_option_events.0002 = { # Entourage member gets married
	hidden = yes
	
	cooldown = { months = 3 }
	
	trigger = {
		any_courtier = {
			is_physically_able_adult = yes
			is_married = no
			is_concubine = no
			can_marry_trigger = yes
			can_have_children = yes
			NOR = {
				is_close_family_of = root
				has_relation_lover = root
			}
			save_temporary_scope_as = lonely_courtier
		}
		OR = {
			scope:lonely_courtier = {
				any_relation = {
					type = lover
					is_courtier_of = root
					is_physically_able_adult = yes
					is_married = no
					is_concubine = no
					can_marry_trigger = yes
					can_have_children = yes
					can_marry_character_trigger = { CHARACTER = scope:lonely_courtier }
					NOR = {
						is_close_family_of = root
						has_relation_lover = root
					}
					NOT = { this = scope:lonely_courtier }
				}
			}
			any_pool_character = {
				province = root.location
				can_have_children_with = { CHARACTER = scope:lonely_courtier }
				is_physically_able_adult = yes
				#Warcraft
				age <= age_35_value
				is_married = no
				can_marry_trigger = yes
				can_have_children = yes
				can_marry_character_trigger = { CHARACTER = scope:lonely_courtier }
				is_concubine = no
			}
		}
	}
	
	immediate = {
		random_courtier = {
			limit = {
				is_physically_able_adult = yes
				is_married = no
				is_concubine = no
				can_marry_trigger = yes
				can_have_children = yes
				NOR = {
					is_close_family_of = root
					has_relation_lover = root
				}
				save_temporary_scope_as = lonely_courtier
				OR = {
					any_relation = {
						type = lover
						is_courtier_of = root
						is_physically_able_adult = yes
						is_married = no
						is_concubine = no
						can_marry_trigger = yes
						can_have_children = yes
						can_marry_character_trigger = { CHARACTER = scope:lonely_courtier }
						NOR = {
							is_close_family_of = root
							has_relation_lover = root
						}
						NOT = { this = scope:lonely_courtier }
					}
					any_pool_character = {
						province = root.location
						can_have_children_with = { CHARACTER = scope:lonely_courtier }
						is_physically_able_adult = yes
						#Warcraft
						age <= age_35_value
						is_married = no
						can_marry_trigger = yes
						can_have_children = yes
						can_marry_character_trigger = { CHARACTER = scope:lonely_courtier }
						is_concubine = no
					}
				}
			}
			save_scope_as = courtier_to_marry
			if = {
				limit = {
					any_relation = {
						type = lover
						is_courtier_of = root
						is_physically_able_adult = yes
						is_married = no
						is_concubine = no
						can_marry_trigger = yes
						can_have_children = yes
						can_marry_character_trigger = { CHARACTER = scope:courtier_to_marry }
						NOR = {
							is_close_family_of = root
							has_relation_lover = root
						}
						NOT = { this = scope:courtier_to_marry }
					}
				}
				random_relation = {
					type = lover
					limit = {
						is_courtier_of = root
						is_physically_able_adult = yes
						is_married = no
						is_concubine = no
						can_marry_trigger = yes
						can_have_children = yes
						can_marry_character_trigger = { CHARACTER = scope:courtier_to_marry }
						NOR = {
							is_close_family_of = root
							has_relation_lover = root
						}
						NOT = { this = scope:courtier_to_marry }
					}
					save_scope_as = marriage_material
				}
			}
			else = {
				random_pool_character = {
					province = root.location
					limit = {
						can_have_children_with = { CHARACTER = scope:lonely_courtier }
						is_physically_able_adult = yes
						#Warcraft
						age <= age_35_value
						is_married = no
						can_marry_trigger = yes
						can_have_children = yes
						can_marry_character_trigger = { CHARACTER = scope:lonely_courtier }
						is_concubine = no
					}
					save_scope_as = marriage_material
				}
			}
		}
		send_interface_message = {
			type = send_interface_message_good
			title = ep3_travel_option_events.0002.title

			left_icon = scope:courtier_to_marry
			right_icon = scope:marriage_material
			
			scope:courtier_to_marry = {
				if = {
					limit = {
						is_female = yes
						is_lowborn = no
					}
					marry_matrilineal = scope:marriage_material
				}
				else = {
					marry = scope:marriage_material
				}
				add_opinion = {
					target = root
					modifier = kindness_opinion
					opinion = 30
				}
			}
			scope:marriage_material = {
				add_opinion = {
					target = root
					modifier = kindness_opinion
					opinion = 30
				}
			}
			add_prestige = minor_prestige_gain
		}
	}
}

ep3_travel_option_events.0003 = { # Entourage member friendship
	hidden = yes
	
	cooldown = { months = 2 }
	
	trigger = {
		any_courtier = {
			is_physically_able = yes
			#Warcraft
			age >= age_8_value
			num_of_relation_friend = 0
			save_temporary_scope_as = courtier_searching_for_friend
		}
		any_courtier = {
			is_physically_able = yes
			#Warcraft
			age >= age_8_value
			num_of_relation_friend = 0
			NOT = {
				this = scope:courtier_searching_for_friend
			}
			can_set_relation_friend_trigger = { CHARACTER = scope:courtier_searching_for_friend }
			OR = {
				NOR = {
					is_close_family_of = root
					is_consort_of = root
				}
				AND = {
					is_close_family_of = root
					scope:courtier_searching_for_friend = { is_close_family_of = root }
				}
				AND = {
					is_consort_of = root
					scope:courtier_searching_for_friend = { is_consort_of = root }
				}
			}
			OR = {
				AND = {
					is_adult = yes
					scope:courtier_searching_for_friend = { is_adult = yes }
				}
				AND = {
					is_adult = no
					scope:courtier_searching_for_friend = { is_adult = no }
				}
			}
			OR = {
				number_of_personality_traits_in_common = {
					target = scope:courtier_searching_for_friend
					value >= 2
				}
				trait_compatibility = {
					target = scope:courtier_searching_for_friend
					value >= 50
				}
				opinion = {
					target = scope:courtier_searching_for_friend
					value >= 35
				}
				number_of_opposing_personality_traits = {
					target = scope:courtier_searching_for_friend
					value <= 0
				}
			}
		}
	}
	
	immediate = {
		random_courtier = {
			limit = {
				is_physically_able = yes
				#Warcraft
				age >= age_8_value
				num_of_relation_friend = 0
				save_temporary_scope_as = courtier_searching_for_friend
				root = {
					any_courtier = {
						is_physically_able = yes
						#Warcraft
						age >= age_8_value
						num_of_relation_friend = 0
						NOT = {
							this = scope:courtier_searching_for_friend
						}
						can_set_relation_friend_trigger = { CHARACTER = scope:courtier_searching_for_friend }
						OR = {
							NOR = {
								is_close_family_of = root
								is_consort_of = root
							}
							AND = {
								is_close_family_of = root
								scope:courtier_searching_for_friend = { is_close_family_of = root }
							}
							AND = {
								is_consort_of = root
								scope:courtier_searching_for_friend = { is_consort_of = root }
							}
						}
						OR = {
							AND = {
								is_adult = yes
								scope:courtier_searching_for_friend = { is_adult = yes }
							}
							AND = {
								is_adult = no
								scope:courtier_searching_for_friend = { is_adult = no }
							}
						}
						OR = {
							number_of_personality_traits_in_common = {
								target = scope:courtier_searching_for_friend
								value >= 2
							}
							trait_compatibility = {
								target = scope:courtier_searching_for_friend
								value >= 50
							}
							opinion = {
								target = scope:courtier_searching_for_friend
								value >= 35
							}
							number_of_opposing_personality_traits = {
								target = scope:courtier_searching_for_friend
								value <= 0
							}
						}
					}
				}
			}
			save_scope_as = courtier_to_befriend
			root = {
				random_courtier = {
					limit = {
						is_physically_able = yes
						#Warcraft
						age >= age_8_value
						num_of_relation_friend = 0
						NOT = {
							this = scope:courtier_to_befriend
						}
						can_set_relation_friend_trigger = { CHARACTER = scope:courtier_to_befriend }
						OR = {
							NOR = {
								is_close_family_of = root
								is_consort_of = root
							}
							AND = {
								is_close_family_of = root
								scope:courtier_to_befriend = { is_close_family_of = root }
							}
							AND = {
								is_consort_of = root
								scope:courtier_to_befriend = { is_consort_of = root }
							}
						}
						OR = {
							AND = {
								is_adult = yes
								scope:courtier_to_befriend = { is_adult = yes }
							}
							AND = {
								is_adult = no
								scope:courtier_to_befriend = { is_adult = no }
							}
						}
						OR = {
							number_of_personality_traits_in_common = {
								target = scope:courtier_to_befriend
								value >= 2
							}
							trait_compatibility = {
								target = scope:courtier_to_befriend
								value >= 50
							}
							opinion = {
								target = scope:courtier_to_befriend
								value >= 35
							}
							number_of_opposing_personality_traits = {
								target = scope:courtier_to_befriend
								value <= 0
							}
						}
					}
					save_scope_as = friend_target
				}
			}
		}
		send_interface_message = {
			type = send_interface_message_good
			title = ep3_travel_option_events.0003.title

			left_icon = scope:courtier_to_befriend
			right_icon = scope:friend_target
			
			scope:courtier_to_befriend = {
				set_random_friendship_reason = { TARGET = scope:friend_target }
				add_opinion = {
					target = root
					modifier = kindness_opinion
					opinion = 15
				}
			}
			scope:friend_target = {
				add_opinion = {
					target = root
					modifier = kindness_opinion
					opinion = 15
				}
			}
			add_prestige = minor_prestige_gain
		}
	}
}

ep3_travel_option_events.0004 = { # Entourage member lovers
	hidden = yes
	
	cooldown = { months = 2 }
	
	trigger = {
		any_courtier = {
			is_physically_able_adult = yes
			might_cheat_on_every_partner_trigger = yes
			NOR = {
				has_sexuality = asexual
				has_trait = celibate
				has_trait = chaste
			}
			OR = {
				num_of_relation_lover = 0
				has_trait = lustful
			}
			NOR = {
				is_close_family_of = root
				has_relation_lover = root
			}
			save_temporary_scope_as = loving_courtier
		}
		OR = {
			any_courtier = {
				NOT = {
					this = scope:loving_courtier
				}
				is_physically_able_adult = yes
				trigger_if = {
					limit = {
						scope:loving_courtier = { is_married = yes }
					}
					is_consort_of = scope:loving_courtier
				}
				trigger_else = {
					is_married = no
					is_concubine = no
					might_cheat_on_every_partner_trigger = yes
					trait_compatibility = {
						target = scope:loving_courtier
						value >= medium_positive_trait_compatibility
					}
					#age <= scope:loving_courtier.age_plus_5
					#age >= scope:loving_courtier.age_minus_10
				}
				NOR = {
					has_sexuality = asexual
					has_trait = celibate
					has_trait = chaste
				}
				OR = {
					num_of_relation_lover = 0
					has_trait = lustful
					is_consort_of = scope:loving_courtier
				}
				NOR = {
					is_close_family_of = root
					has_relation_lover = root
					is_close_or_extended_family_of = scope:loving_courtier
				}
				can_set_relation_lover_trigger = { CHARACTER = scope:loving_courtier }
				is_attracted_to_gender_of = scope:loving_courtier
				scope:loving_courtier = { is_attracted_to_gender_of = prev }
			}
			any_pool_character = {
				province = root.location
				NOT = {
					this = scope:loving_courtier
				}
				is_physically_able_adult = yes
				trigger_if = {
					limit = {
						scope:loving_courtier = { is_married = yes }
					}
					is_consort_of = scope:loving_courtier
				}
				trigger_else = {
					is_married = no
					is_concubine = no
					might_cheat_on_every_partner_trigger = yes
					trait_compatibility = {
						target = scope:loving_courtier
						value >= medium_positive_trait_compatibility
					}
					#age <= scope:loving_courtier.age_plus_5
					#age >= scope:loving_courtier.age_minus_10
				}
				NOR = {
					has_sexuality = asexual
					has_trait = celibate
					has_trait = chaste
				}
				OR = {
					num_of_relation_lover = 0
					has_trait = lustful
					is_consort_of = scope:loving_courtier
				}
				NOR = {
					is_close_family_of = root
					has_relation_lover = root
					is_close_or_extended_family_of = scope:loving_courtier
				}
				can_set_relation_lover_trigger = { CHARACTER = scope:loving_courtier }
				is_attracted_to_gender_of = scope:loving_courtier
				scope:loving_courtier = { is_attracted_to_gender_of = prev }
			}
		}
	}
	
	immediate = {
		random_courtier = {
			limit = {
				is_physically_able_adult = yes
				might_cheat_on_every_partner_trigger = yes
				NOR = {
					has_sexuality = asexual
					has_trait = celibate
					has_trait = chaste
				}
				OR = {
					num_of_relation_lover = 0
					has_trait = lustful
				}
				NOR = {
					is_close_family_of = root
					has_relation_lover = root
				}
				save_temporary_scope_as = loving_courtier
				OR = {
					root = {
						any_courtier = {
							NOT = {
								this = scope:loving_courtier
							}
							is_physically_able_adult = yes
							trigger_if = {
								limit = {
									scope:loving_courtier = { is_married = yes }
								}
								is_consort_of = scope:loving_courtier
							}
							trigger_else = {
								is_married = no
								is_concubine = no
								might_cheat_on_every_partner_trigger = yes
								trait_compatibility = {
									target = scope:loving_courtier
									value >= medium_positive_trait_compatibility
								}
								#age <= scope:loving_courtier.age_plus_5
								#age >= scope:loving_courtier.age_minus_10
							}
							NOR = {
								has_sexuality = asexual
								has_trait = celibate
								has_trait = chaste
							}
							OR = {
								num_of_relation_lover = 0
								has_trait = lustful
								is_consort_of = scope:loving_courtier
							}
							NOR = {
								is_close_family_of = root
								has_relation_lover = root
								is_close_or_extended_family_of = scope:loving_courtier
							}
							can_set_relation_lover_trigger = { CHARACTER = scope:loving_courtier }
							is_attracted_to_gender_of = scope:loving_courtier
							scope:loving_courtier = { is_attracted_to_gender_of = prev }
						}
					}
					any_pool_character = {
						province = root.location
						NOT = {
							this = scope:loving_courtier
						}
						is_physically_able_adult = yes
						trigger_if = {
							limit = {
								scope:loving_courtier = { is_married = yes }
							}
							is_consort_of = scope:loving_courtier
						}
						trigger_else = {
							is_married = no
							is_concubine = no
							might_cheat_on_every_partner_trigger = yes
							trait_compatibility = {
								target = scope:loving_courtier
								value >= medium_positive_trait_compatibility
							}
							#age <= scope:loving_courtier.age_plus_5
							#age >= scope:loving_courtier.age_minus_10
						}
						NOR = {
							has_sexuality = asexual
							has_trait = celibate
							has_trait = chaste
						}
						OR = {
							num_of_relation_lover = 0
							has_trait = lustful
							is_consort_of = scope:loving_courtier
						}
						NOR = {
							is_close_family_of = root
							has_relation_lover = root
							is_close_or_extended_family_of = scope:loving_courtier
						}
						can_set_relation_lover_trigger = { CHARACTER = scope:loving_courtier }
						is_attracted_to_gender_of = scope:loving_courtier
						scope:loving_courtier = { is_attracted_to_gender_of = prev }
					}
				}
			}
			save_scope_as = courtier_to_love
			if = {
				limit = {
					root = {
						any_courtier = {
							NOT = {
								this = scope:courtier_to_love
							}
							is_physically_able_adult = yes
							trigger_if = {
								limit = {
									scope:courtier_to_love = { is_married = yes }
								}
								is_consort_of = scope:courtier_to_love
							}
							trigger_else = {
								is_married = no
								is_concubine = no
								might_cheat_on_every_partner_trigger = yes
								trait_compatibility = {
									target = scope:courtier_to_love
									value >= medium_positive_trait_compatibility
								}
								#age <= scope:courtier_to_love.age_plus_5
								#age >= scope:courtier_to_love.age_minus_10
							}
							NOR = {
								has_sexuality = asexual
								has_trait = celibate
								has_trait = chaste
							}
							OR = {
								num_of_relation_lover = 0
								has_trait = lustful
								is_consort_of = scope:courtier_to_love
							}
							NOR = {
								is_close_family_of = root
								has_relation_lover = root
								is_close_or_extended_family_of = scope:courtier_to_love
							}
							can_set_relation_lover_trigger = { CHARACTER = scope:courtier_to_love }
							is_attracted_to_gender_of = scope:courtier_to_love
							scope:courtier_to_love = { is_attracted_to_gender_of = prev }
						}
					}
				}
				root = {
					random_courtier = {
						limit = {
							NOT = {
								this = scope:courtier_to_love
							}
							is_physically_able_adult = yes
							trigger_if = {
								limit = {
									scope:courtier_to_love = { is_married = yes }
								}
								is_consort_of = scope:courtier_to_love
							}
							trigger_else = {
								is_married = no
								is_concubine = no
								might_cheat_on_every_partner_trigger = yes
								trait_compatibility = {
									target = scope:courtier_to_love
									value >= medium_positive_trait_compatibility
								}
								#age <= scope:courtier_to_love.age_plus_5
								#age >= scope:courtier_to_love.age_minus_10
							}
							NOR = {
								has_sexuality = asexual
								has_trait = celibate
								has_trait = chaste
							}
							OR = {
								num_of_relation_lover = 0
								has_trait = lustful
								is_consort_of = scope:courtier_to_love
							}
							NOR = {
								is_close_family_of = root
								has_relation_lover = root
								is_close_or_extended_family_of = scope:courtier_to_love
							}
							can_set_relation_lover_trigger = { CHARACTER = scope:courtier_to_love }
							is_attracted_to_gender_of = scope:courtier_to_love
							scope:courtier_to_love = { is_attracted_to_gender_of = prev }
						}
						save_scope_as = pls_love_me
					}
				}
			}
			else = {
				random_pool_character = {
					province = root.location
					limit = {
						NOT = {
							this = scope:courtier_to_love
						}
						is_physically_able_adult = yes
						trigger_if = {
							limit = {
								scope:courtier_to_love = { is_married = yes }
							}
							is_consort_of = scope:courtier_to_love
						}
						trigger_else = {
							is_married = no
							is_concubine = no
							might_cheat_on_every_partner_trigger = yes
							trait_compatibility = {
								target = scope:courtier_to_love
								value >= medium_positive_trait_compatibility
							}
							#age <= scope:courtier_to_love.age_plus_5
							#age >= scope:courtier_to_love.age_minus_10
						}
						NOR = {
							has_sexuality = asexual
							has_trait = celibate
							has_trait = chaste
						}
						OR = {
							num_of_relation_lover = 0
							has_trait = lustful
							is_consort_of = scope:courtier_to_love
						}
						NOR = {
							is_close_family_of = root
							has_relation_lover = root
							is_close_or_extended_family_of = scope:courtier_to_love
						}
						can_set_relation_lover_trigger = { CHARACTER = scope:courtier_to_love }
						is_attracted_to_gender_of = scope:courtier_to_love
						scope:courtier_to_love = { is_attracted_to_gender_of = prev }
					}
					save_scope_as = pls_love_me
				}
			}
		}
		send_interface_message = {
			type = send_interface_message_good
			title = ep3_travel_option_events.0004.title

			left_icon = scope:courtier_to_love
			right_icon = scope:pls_love_me
			
			scope:courtier_to_love = {
				set_random_lover_reason = { TARGET = scope:pls_love_me }
				hidden_effect = {
					random_secret = {
						limit = {
							secret_type = secret_lover
							secret_target = scope:pls_love_me
						}
						reveal_to_without_events_effect = { CHARACTER = root }
					}
				}
				add_opinion = {
					target = root
					modifier = kindness_opinion
					opinion = 15
				}
			}
			if = {
				limit = {
					scope:pls_love_me = {
						NOT = {
							is_courtier_of = root
						}
					}
				}
				hidden_effect = {
					scope:pls_love_me = { add_to_court_and_entourage_effect = yes }
				}
				show_as_tooltip = {
					add_courtier = scope:pls_love_me 
				}
			}
			scope:pls_love_me = {
				add_opinion = {
					target = root
					modifier = kindness_opinion
					opinion = 15
				}
			}
			add_prestige = minor_prestige_gain
		}
	}
}
