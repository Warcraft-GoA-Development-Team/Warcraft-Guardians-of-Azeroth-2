######################################################
##################### FACTIONS #######################
######################################################

window = {
	name = "factions_window"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	
	# Warcraft
	visible = "[And(IsGameViewOpen('factions_window'), Not(GetVariableSystem.HasValue( 'right_window_open', 'pol_factions' )))]"

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		# Warcraft
		on_start = "[GetVariableSystem.Set( 'right_window_open', 'factions' )]"

		on_start = "[GetVariableSystem.Set( 'factions_view_tabs', 'against_you' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		# Warcraft
		on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'factions' ) )]"

		on_finish = "[GetVariableSystem.Set( 'factions_view_tabs', 'against_you' )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "FACTIONS_WINDOW"
					}

					blockoverride "button_close"
					{
						onclick = "[FactionsWindow.Close]"
					}
				}

				hbox = {
					visible = "[Not(GetPlayer.IsIndependentRuler)]"
					layoutpolicy_horizontal = expanding

					button_tab = {
						name = "targeting_factions"
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'factions_view_tabs', 'against_you' )]"
						down = "[GetVariableSystem.HasValue( 'factions_view_tabs', 'against_you' )]"

						text = "FACTIONS_WINDOW_TARGETING_FACTIONS"
						using = tooltip_above
					}

					button_tab = {
						name = "my_factions"
						layoutpolicy_horizontal = expanding
						visible = "[Not(GetPlayer.IsIndependentRuler)]"

						onclick = "[GetVariableSystem.Set( 'factions_view_tabs', 'against_liege' )]"
						down = "[GetVariableSystem.HasValue( 'factions_view_tabs', 'against_liege' )]"

						text = "FACTIONS_WINDOW_MY_FACTIONS"

						using = tooltip_above
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						texture = "gfx/interface/skinned/illustrations/faction_bg.dds"
						fittype = end
						alpha = 0.7
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					# Outer container for factions against player character
					scrollbox = {
						name = "against_you"
						visible = "[GetVariableSystem.HasValue( 'factions_view_tabs', 'against_you' )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						using = Animation_Tab_Switch

						blockoverride "scrollbox_content"
						{
							vbox = {
								layoutpolicy_horizontal = expanding
								margin_bottom = 15
								spacing = 10

								text_label_center = {
									visible = "[GetPlayer.IsIndependentRuler]"
									text = "FACTIONS_WINDOW_TARGETING_FACTIONS"
								}

								## Factions against Me
								vbox = {
									name = "targeting_factions"
									layoutpolicy_horizontal = expanding
									spacing = 5

									vbox = {
										name = "targeting_factions_grid"
										datamodel = "[FactionsWindow.GetTargetingFactions]"
										visible = "[FactionsWindow.HasTargetingFactions]"
										layoutpolicy_horizontal = expanding
										spacing = 5

										item = {
											vbox_faction_item = {
												layoutpolicy_horizontal = expanding
											}
										}
									}

									text_multi = {
										name = "no_factions_against_me"
										visible = "[Not(FactionsWindow.HasTargetingFactions)]"
										layoutpolicy_horizontal = expanding
										minimumsize = { 0 110  }

										text = "FACTIONS_WINDOW_NOT_FACTION_AGAINST"
										default_format = "#low;italic"
										align = center

										background = {
											using = Background_Area
										}
									}

									vbox = {
										layoutpolicy_horizontal = expanding
										margin = { 10 5 }
										spacing = 10

										background = {
											using = Background_Area_With_Header
										}

										text_single = {
											text = "FACTIONS_WINDOW_CASSALC_CANT_CREATE_JOIN"
										}

										dynamicgridbox = {
											name = "cant_join_creater_members_grid"
											datamodel = "[FactionsWindow.GetCantCreateOrJoinFactionVassals]"
											datamodel_wrap = 4
											flipdirection = yes

											item = {
												container = {
													datacontext = "[CantCreateOrJoinFactionVassal.GetVassal]"

													portrait_head = {
														blockoverride "portrait_button_template_tooltip" {
															tooltip = "[CantCreateOrJoinFactionVassal.GetTooltip]"
														}
													}

													icon = {
														size = { 60 60 }
														parentanchor = top|right
														texture = "gfx/interface/icons/faction_type/claimant_faction.dds"
														visible = "[CantCreateOrJoinFactionVassal.IsSoftBlock]"
														
														modify_texture = {
															texture = "gfx/interface/colors/colors_textured.dds"
															blend_mode = add
															framesize = { 96 96 }

															block "master_color_frame" {
																frame = 5
															}
														}
													}
												}
											}
										}

										text_multi = {
											text = "FACTIONS_WINDOW_CREATE_JOIN_EXPLANATION"
											autoresize = yes
											max_width = 500
											default_format = "#weak"
											margin = { 15 10 }
											margin_top = 0
										}
									}
								}

							}
						}
					}

					# Outer container for factions against players liege
					scrollbox = {
						name = "against_liege"
						visible = "[GetVariableSystem.HasValue( 'factions_view_tabs', 'against_liege' )]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						using = Animation_Tab_Switch

						blockoverride "scrollbox_content"
						{
							spacing = 20

							vbox = {
								visible = "[Not(GetPlayer.IsIndependentRuler)]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								text_label_center = {
									text = "FACTION_WINDOW_JOINED_FACTIONS"
								}

								vbox = {
									name = "joined_factions"
									datamodel = "[FactionsWindow.GetJoinedFactions]"
									visible = "[FactionsWindow.IsInAnyFaction]"
									layoutpolicy_horizontal = expanding

									item = {
										vbox_faction_item = {
											layoutpolicy_horizontal = expanding
										}
									}
								}

								text_multi = {
									name = "not_in_factions"
									visible = "[Not(FactionsWindow.IsInAnyFaction)]"
									layoutpolicy_horizontal = expanding
									minimumsize = { 0 110  }

									text = "FACTIONS_WINDOW_NOT_IN_FACTION"
									default_format = "#low;italic"
									align = center

									background = {
										using = Background_Area
									}
								}

								# Factions to Join
								vbox = {
									name = "joinable_factions"
									visible = "[FactionsWindow.CanJoinAnyFaction]"
									datamodel = "[FactionsWindow.GetJoinableFactions]"
									layoutpolicy_horizontal = expanding

									item = {
										vbox_faction_item = {
											layoutpolicy_horizontal = expanding
										}
									}
								}

								# Joined Factions
								text_multi = {
									name = "joined"
									visible = "[Not(FactionsWindow.CanJoinAnyFaction)]"
									layoutpolicy_horizontal = expanding
									minimumsize = { 0 110  }

									text = "FACTIONS_WINDOW_NOT_JOINABLE_FACTION"
									default_format = "#low;italic"
									align = center

									background = {
										using = Background_Area
									}
								}
							}

							# Potential factions
							vbox = {
								name = "potential_factions"
								layoutpolicy_horizontal = expanding
								spacing = 5

								text_label_center = {
									text = "FACTION_WINDOW_FACTIONS_TO_CREATE"
									default_format = "#low"
								}

								vbox = {
									name = "creatable_factions"
									datamodel = "[FactionsWindow.GetCreateFactionItems]"
									visible = "[FactionsWindow.CanCreateAnyFaction]"
									layoutpolicy_horizontal = growing
									spacing = 3
									margin = { 20 0 }

									item = {
										button_standard = {
											layoutpolicy_horizontal = growing
											name = "create_faction"
											enabled = "[CreateFactionItem.CanPlayerCreateFaction]"
											text = "[CreateFactionItem.GetCreateFactionText]"
											tooltip = "[CreateFactionItem.BuildCreateFactionTooltip]"
											onclick = "[CreateFactionItem.CreateFaction]"
										}
									}
								}

								text_multi = {
									name = "not_creatable_factions"
									visible = "[Not(FactionsWindow.CanCreateAnyFaction)]"
									layoutpolicy_horizontal = expanding
									minimumsize = { 0 110  }

									text = "FACTIONS_WINDOW_NOT_CREATABLE_FACTION"
									default_format = "#low;italic"
									align = center

									background = {
										using = Background_Area
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################

types  FactionWindow
{
	type vbox_faction_item = vbox {
		name = "faction_item"
		datacontext = "[FactionItem.GetFaction]"
		layoutpolicy_horizontal = expanding
		margin_top = 3

		background = {
			using = Background_Area_With_Header
		}

		text_single = {
			layoutpolicy_horizontal = expanding
			text = "[Faction.GetName]"
			autoresize = no
			default_format = "#high"
			align = center
			using = tooltip_nw
			max_width = 495
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin_top = 5

			# Faction Leader / Claimant
			widget = {
				size = { 120 120 }
				name = "leader"

				# Dangerous faction
				background = {
					visible = "[Faction.IsDangerous]"
					using = Status_Bad
					alpha = 0.5
					margin = { -5 0 }
				}

				icon_flat_standard = {
					visible = "[Not( Faction.HasSpecialCharacter )]"
					size = { 120 120 }
					texture = "[Faction.GetIcon]"
				}

				portrait_head = {
					datacontext = "[Faction.GetSpecialCharacter]"
					visible = "[Faction.HasSpecialCharacter]"
					parentanchor = center

					blockoverride "opinion_box" {}
					blockoverride "status_icons" {}
				}

				coa_title_tiny = {
					position = { 75 5 }
					datacontext = "[Faction.GetSpecialTitle]"
					visible = "[And( Faction.GetShowSpecialTitle, Faction.HasSpecialTitle )]"
				}

				text_label_center = {
					visible = "[Faction.HasSpecialCharacter]"
					parentanchor = bottom|hcenter
					text = "[Faction.GetSpecialCharacterTitle]"
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				margin_top = 10

				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[Faction.GetShortEffectDescription]"
					autoresize = no
				}

				### Discontent and power // Not at war
				vbox = {
					visible = "[Not(Faction.IsAtWar)]"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 10
					spacing = 5

					### Power
					widget = {
						name = "power_widget"
						size = { 0 60 }
						layoutpolicy_horizontal = expanding
						tooltip = "[FactionItem.GetPowerTooltip]"

						text_single = {
							position = { 3 0 }
							text = "FACTIONS_WINDOW_POWER"
							using = Font_Size_Medium
						}

						text_single = {
							parentanchor =  top|right
							position = { -3 0 }
							text = "[FactionItem.GetPower|%0V]"
							default_format = "#high"
						}

						widget = {
							name = "progressbar_power_holder"
							size = { 100% 30 }
							position = { 0 25 }

							progressbar_red = {
								visible = "[And( FactionItem.IsPowerThresholdVisible, Not(FactionItem.HasEnoughPower))]"
								size = { 100% 25 }
								position = { 0 1 }
								max = 1
								value = "[FactionItem.GetPowerPushPercentage]"
								noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
							}

							progressbar_red = {
								visible = "[Or( Not( FactionItem.IsPowerThresholdVisible), FactionItem.HasEnoughPower )]"
								size = { 100% 25 }
								position = { 0 1 }
								max = 1
								value = "[FactionItem.GetPowerPushPercentage]"
								noprogresstexture = "gfx/interface/progressbars/progress_blue_bg.dds"
							}

							container = {
								visible = "[FactionItem.IsPowerThresholdVisible]"
								widgetanchor = top|hcenter
								position = "[FactionItem.GetPowerThresholdPosition]"
								alwaystransparent = yes

								icon = {
									parentanchor = top|hcenter
									alwaystransparent = yes
									texture = "gfx/interface/window_factions/faction_progress_threshold.dds"
								}
							}
						}
					}

					# Discontent
					vbox = {
						margin_left = 3
						layoutpolicy_horizontal = expanding

						hbox = {
							name = "discontent_widget"
							layoutpolicy_horizontal = expanding
							tooltip = "[FactionItem.GetDiscontentTooltip]"

							text_single = {
								text = "FACTIONS_WINDOW_DISCONTENT"
								using = Font_Size_Medium
							}
							icon = {
								visible = "[FactionItem.IsDiscontentIncreasing]"
								texture = "gfx/interface/icons/icon_trend_arrow.dds"
								framesize = { 22 22 }
								frame = 1
							}
							icon = {
								visible = "[FactionItem.IsDiscontentDecreasing]"
								texture = "gfx/interface/icons/icon_trend_arrow.dds"
								framesize = { 22 22 }
								frame = 2
							}
							expand = {}
						}

						text_single = {
							visible = "[FactionItem.IsDiscontentIncreasing]"
							layoutpolicy_horizontal = expanding
							text = "FACTIONS_WINDOW_DISCONTENT_INCREASING"
						}

						text_single = {
							visible = "[FactionItem.IsDiscontentAtMax]"
							layoutpolicy_horizontal = expanding
							text = "FACTIONS_WINDOW_DISCONTENT_CAN_SEND"
						}

						text_single = {
							visible = "[Not( Or( FactionItem.IsDiscontentAtMax, FactionItem.IsDiscontentIncreasing) )]"
							layoutpolicy_horizontal = expanding
							text = "FACTIONS_WINDOW_DISCONTENT_TO_WEAK"
						}

					}
				}


				### Faction at war
				hbox = {
					layoutpolicy_horizontal = expanding
					expand = {}

					vbox = {
						name = "faction_in_war"
						visible = "[Faction.IsAtWar]"
						margin_top = -20
						spacing = -30

						icon = {
							texture = "gfx/interface/window_factions/faction_at_war.dds"
						}

						text_single = {
							text = "FACTIONS_WINDOW_FACTION_AT_WAR"
							align = center
							using = Font_Size_Medium
						}
					}

					expand = {}
				}
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 15 5 }
			margin_top = 10

			expand = {}

			button_standard = {
				visible = "[And( FactionItem.IsPlayerLeader, Not( Faction.IsAtWar ) )]"
				name = "press_demands_button"
				enabled = "[FactionItem.CanPressDemands]"
				text = "FACTION_WINDOW_PRESS_DEMANDS"
				tooltip = "[FactionItem.BuildPressDemandsTooltip]"
				onclick = "[FactionItem.PressDemmands]"
			}
		}


		### Faction members

		# Member buttons
		hbox = {
			name = "faction_buttons"
			layoutpolicy_horizontal = expanding
			margin = { 15 0 }
			margin_bottom = 15
			spacing = 3

			button_group = {
				onclick = "[FactionItem.ShowHideMembersFrame]"

				button_expand = {
					name = "show_members"
					frame = "[FactionItem.GetShowMembersFrame]"

					using = tooltip_ws
					tooltip = "[FactionItem.GetShowHideMembersTooltip]"
				}

				text_single = {
					text = "[FactionItem.GetMembersString]"
					align = nobaseline
					position = { 25 0 }
				}
			}

			expand = {}

			button_standard = {
				name = "leave"
				visible = "[FactionItem.IsPlayerMember]"
				text = "FACTION_WINDOW_LEAVE"
				onclick = "[FactionItem.LeaveFaction]"
				enabled = "[FactionItem.CanLeaveFaction]"
				tooltip = "[FactionItem.BuildLeaveFactionTooltip]"
			}

			button_standard = {
				name = "add_member"
				visible = "[FactionItem.IsPlayerMember]"
				onclick = "[FactionItem.ShowPotentialMembers]"
				text = "FACTION_ADD_MEMBER"
				tooltip = "FACTION_ADD_MEMBER_TT"
			}

			icon = {
				name = "cannot_join"
				visible = "[FactionItem.ShowCannotJoin]"
				size = { 30 30 }
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				tooltip = "PLAYER_CANNOT_JOIN_FACTION_OF_THIS_TYPE"
			}

			button_standard = {
				name = "join"
				visible = "[FactionItem.ShowJoinButton]"
				enabled = "[FactionItem.CanJoinFaction]"
				onclick = "[FactionItem.JoinFaction]"
				text = "FACTION_WINDOW_JOIN"
				tooltip = "[FactionItem.BuildJoinFactionTooltip]"
			}
		}

		# Members
		vbox = {
			name = "faction_members"
			visible = "[FactionItem.AreMembersVisible]"
			layoutpolicy_horizontal = expanding
			margin = { 0 10 }

			background = {
				using = Background_Area
				margin_bottom = 5
			}

			fixedgridbox = {
				name = "character_member_grid"
				visible = "[FactionItem.HasCharacterMembers]"
				addcolumn = 80
				addrow = 90
				datamodel = "[FactionItem.GetCharacterMembers]"
				datamodel_wrap = 6
				flipdirection = yes

				item = {
					container = {
						datacontext = "[FactionCharacterMember.GetMember]"

						portrait_head_small = {
							position = { 0 -0 }
							parentanchor = top|left

							blockoverride "portrait_button_template_tooltip"
							{
								tooltip = "FACTION_WINDOW_MEMBER_TOOLTIP"
							}
						}

						warning_icon = {
							name = "portrait_opinion_bg"
							visible = "[FactionCharacterMember.IsAtWarAgainstTarget]"
							parentanchor = top|left
							position = { -5 15 }
							size = { 25 25 }
						}
					}
				}
			}

			fixedgridbox = {
				name = "title_member_grid"
				datamodel = "[FactionItem.GetCountyMembers]"
				visible = "[FactionItem.HasCountyMembers]"
				addcolumn = 75
				addrow = 70
				datamodel_wrap = 6
				flipdirection = yes

				item = {
					container = {
						datacontext = "[FactionCountyMember.GetMember]"
						tooltip = "FACTION_WINDOW_COUNTY_MEMBER_TT"

						button_icon = {
							name = "county_faction_member"
							size = { 68 68 }
							onclick = "[Title.SelectTitle]"
							using = State_Title_MouseEntry
							texture = "gfx/interface/icons/faction_type/peasants.dds"
						}

						widget = {
							name = "opinion"
							position = { 20 2 }
							size = { 35 26 }
							parentanchor = bottom
							tooltip = "FACTIONS_WINDOW_COUNTY_OPINION_TOOLTIP"

							text_single= {
								position = { 10 -10 }
								parentanchor = center
								text = "FACTIONS_WINDOW_COUNTY_OPINION"
							}
						}

						coa_title_tiny = {
							position = { 0 32 }
						}
					}
				}
			}
		}
	}
}
