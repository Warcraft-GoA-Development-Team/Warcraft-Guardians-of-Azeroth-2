# Reactive Advice

action_reactive_advice_mercenaries = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_mercenaries }
				NOT = { any_hired_mercenary = { always = yes } }
				OR = {
					any_character_war = {
						defender_war_score < -25
						casus_belli = {
							primary_defender = root
						}
					}
					any_character_war = {
						attacker_war_score < -25
						casus_belli = {
							primary_attacker = root
						}
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_mercenaries
				actor = root
			}
		}
	}
	effect = {
		start_tutorial_lesson = reactive_advice_mercenaries
	}
}

action_reactive_advice_succession = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_succession }
				has_character_flag = tutorial_reactive_advice_succession
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_succession
				actor = root
			}
		}
	}
	effect = {
		start_tutorial_lesson = reactive_advice_succession
	}
}

action_reactive_advice_bastards = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_bastards }
				has_character_flag = tutorial_reactive_advice_bastards
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_bastards
				actor = root
			}
		}
	}
	effect = {
		start_tutorial_lesson = reactive_advice_bastards
	}
}

action_reactive_advice_protecting_against_hostile_schemes = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_protecting_against_hostile_schemes }
				years_from_game_start >= 1
				OR = {
					any_targeting_scheme = {
						is_hostile = yes
					}
					AND = {
						exists = cp:councillor_spymaster
						cp:councillor_spymaster = {
							opinion = {
								target = root
								value < -20
							}
						}
					}
					NOT = { exists = cp:councillor_spymaster }
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_protecting_against_hostile_schemes
				actor = root
			}
		}
	}
	effect = {
		start_tutorial_lesson = reactive_advice_protecting_against_hostile_schemes
	}
}

action_reactive_advice_protect_against_factions = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_protect_against_factions }
				any_targeting_faction = {
					always = yes
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_protect_against_factions
				actor = root
			}
		}
	}
	effect = {
		start_tutorial_lesson = reactive_advice_protect_against_factions
	}
}

action_reactive_advice_imprisoned = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_imprisoned }
				is_imprisoned = yes
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_imprisoned
				actor = root
			}
		}
	}
	effect = {
		start_tutorial_lesson = reactive_advice_imprisoned
	}
}

action_reactive_advice_county_control = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_county_control }
				any_held_title = {
					tier = tier_county
					county_control < 80
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_county_control
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_county_control
	}
}

action_reactive_advice_bankruptcy = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_bankruptcy }
				gold < 0
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_bankruptcy
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_bankruptcy
	}
}

action_reactive_advice_rightful_liege = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_rightful_liege }
				years_from_game_start >= 4 # For pacing reasons
				is_at_war = no
				any_vassal = {
					highest_held_title_tier > 1
					is_landed = yes
					primary_title = {
						save_temporary_scope_as = primary_vassal_title
						trigger_if = { # Counts are only Rightful Vassals if you hold their De Jure Duchy.
							limit = {
								tier = tier_county
							}
							root = {
								any_held_title = {
									count = all
									NOT = { this = scope:primary_vassal_title.de_jure_liege }
								}
							}
						}
						trigger_else_if = { # Dukes are Rightful Vassals if you hold their De Jure Kingdom *OR* Empire.
							limit = {
								tier = tier_duchy
							}
							root = {
								any_held_title = {
									count = all
									NOT = { is_de_jure_liege_or_above_target = scope:primary_vassal_title }
								}
							}
						}
						trigger_else_if = { # Kings are only Rightful Vassals if you hold their De Jure Empire.
							limit = {
								tier = tier_kingdom
							}
							root = {
								any_held_title = {
									count = all
									NOT = { this = scope:primary_vassal_title.de_jure_liege }
								}
							}
						}
						trigger_else = {
							always = no
						}
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_rightful_liege
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_rightful_liege
	}
}

action_reactive_advice_bishop_endorsement = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_bishop_endorsement }
				years_from_game_start >= 1
				faith = { has_doctrine = doctrine_theocracy_temporal }
				exists = cp:councillor_court_chaplain
				cp:councillor_court_chaplain = {
					is_ai = yes
					opinion = {
						target = root
						value <= 0
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_bishop_endorsement
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_bishop_endorsement
	}
}

action_reactive_advice_encyclopedia = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_encyclopedia }		
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_encyclopedia
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_encyclopedia
	}
}

action_reactive_advice_religion = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_religion }	
				years_from_game_start >= 3 # For pacing reasons	
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_religion
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_religion
	}
}

action_reactive_advice_dynamic_culture = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_dynamic_culture }	
				years_from_game_start >= 5 # For pacing reasons	
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_dynamic_culture
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_dynamic_culture
	}
}

action_reactive_advice_fabricate_claim = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_fabricate_claim }
				is_at_war = no
				#NOT = { any_claim = { always = yes } }
				NOT = {
					any_neighboring_and_across_water_top_liege_realm_owner = {
						root = {
							# Must have a valid display CB.
							has_any_display_cb_on = prev
							
							# Can be suggested at most for rulers 1 tier above (e.g., Counts can have Dukes suggested, but never Kings.)
							tier_difference = {
								target = prev
								value >= -1
							}

							# Must not be allied to or have truce with recipient.
							NOR = {
								is_allied_to = prev
								has_truce = prev
							}
						}	
					}
				}
				any_character_to_title_neighboring_county = {
					exists = this
					save_temporary_scope_as = this_title
					root = {
						NOT = { has_claim_on = scope:this_title } # We do not already have a claim on this county.
						NOT = {
							any_claim = {
								is_de_jure_liege_or_above_target = scope:this_title # We do not already have a claim on a title which includes this county.
							}
						}
						NOT = {
							any_held_title = {
								is_de_jure_liege_or_above_target = scope:this_title # County does not already belong to us De Jure (because then we already have a CB for it).
							}
						}
						NOT = {
							faith = {
								faith_hostility_level = {
									target = scope:this_title.holder.top_liege.faith
									value >= 2 # Holy Wars generally allowed in this case, so we don't need to fabricate.
								}
							}
						}
						NOR = {
							# Don't fabricate claims on our allies!
							is_allied_to = scope:this_title.holder
							is_allied_to = scope:this_title.holder.top_liege
						}
					}	
					
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_fabricate_claim
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_fabricate_claim
	}
}

action_reactive_advice_education = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_education }
				is_at_war = no
				exists = player_heir
				player_heir = {
					dynasty = root.dynasty
					is_adult = no
					num_of_relation_guardian = 0
					exists = liege
					liege = root
					root = {
						is_character_interaction_valid = {
							recipient = prev
							interaction = educate_child_interaction
						}
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_education
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_education
	}
}

action_reactive_advice_tooltip_modes = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_tooltip_modes }
				years_from_game_start >= 2 # For pacing reasons
				is_at_war = no
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_tooltip_modes
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_tooltip_modes
	}
}

action_perk_bonus_cap_modes = {
	type = tutorial
	icon = generic_reactive_advice
	
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_perk_bonus_cap }
				OR = {
					AND = {
						exists = var:current_sound_foundations_value
						var:current_sound_foundations_value >= sound_foundations_max
					}
					AND = {
						exists = var:current_embassies_perk_value
						var:current_embassies_perk_value >= embassies_max
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_perk_bonus_cap_modes
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_perk_bonus_cap
	}
}

action_reactive_advice_varangian_adventure = {
	type = tutorial
	icon = generic_reactive_advice
	
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_varangian_adventure }
				any_independent_ruler = {
					in_diplomatic_range = root
					save_temporary_scope_as = target_ruler
					root = {
						has_cb_on = {
							target = scope:target_ruler
							cb = fp1_varangian_adventurer_conquest
						}
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_varangian_adventure
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_varangian_adventure
	}
}

action_reactive_advice_court_positions = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_court_positions }	
				years_from_game_start >= 7 # For pacing reasons	
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_court_positions
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_court_positions
	}
}


action_reactive_advice_artifact_inventory = {
	type = tutorial
	icon = generic_reactive_advice
	soundeffect = "event:/SFX/UI/Notifications/TopBar/sfx_ui_notifications_topbar_reactive_advice"
	check_create_action = {
		if = {
			limit = {
				should_show_tutorial_alert = { LESSON = reactive_advice_artifact_inventory }	

				any_character_artifact = {
					NOR = {
						artifact_slot_type = sculpture
						artifact_slot_type = pedestal
						artifact_slot_type = wall_big
						artifact_slot_type = wall_small
						artifact_slot_type = throne
						artifact_slot_type = book
					}
				}
			}
			try_create_important_action = {
				important_action_type = action_reactive_advice_artifact_inventory
				actor = root
			}
		}
	}

	effect = {
		start_tutorial_lesson = reactive_advice_artifact_inventory 
	}
}
