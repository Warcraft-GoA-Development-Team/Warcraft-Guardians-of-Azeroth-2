##################################################
# #Interaction

fp2_ritual_best_friendship_interactions_ai_accept_modifier = {
	# Actual opinion gives our base.
	opinion_modifier = {
		who = scope:recipient
		opinion_target = scope:actor
		desc = AI_OPINION_REASON
	}
	# Weight up for personality values.
	ai_value_modifier = {
		who = scope:recipient
		ai_sociability = {
			if = {
				limit = {
					scope:recipient = {
						NOT = { ai_sociability = 0 }
					}
				}
				value = 0.5
			}
		}
		ai_honor = {
			if = {
				limit = {
					scope:recipient = {
						NOT = { ai_honor = 0 }
					}
				}
				value = 0.5
			}
		}
	}
	# Specific trait preferences.
	## Shy mildly dislikes.
	modifier = {
		add = -5
		has_trait = shy
		desc = PROPOSE_BEST_FRIEND_OPINION_TRAIT_SHY
	}
	## Arbitrary *loathes*.
	modifier = {
		add = -30
		has_trait = arbitrary
		desc = PROPOSE_BEST_FRIEND_OPINION_TRAIT_ARBITRAY
	}
	## Gregarious likes.
	modifier = {
		add = 10
		has_trait = gregarious
		desc = PROPOSE_BEST_FRIEND_OPINION_TRAIT_GREGARIOUS
	}
	## Just loves.
	modifier = {
		add = 30
		has_trait = just
		desc = PROPOSE_BEST_FRIEND_OPINION_TRAIT_JUST
	}
	# Apply tier differences.
	## King -> Baron.
	modifier = {
		desc = AI_REFUSAL_RANK_DIFFERENCE
		scope:actor = {
			tier_difference = {
				target = scope:recipient
				value >= 4
			}
		}
		add = 75
	}
	## Duke -> Baron.
	modifier = {
		desc = AI_REFUSAL_RANK_DIFFERENCE
		scope:actor = {
			tier_difference = {
				target = scope:recipient
				value = 3
			}
		}
		add = 50
	}
	## Count -> Baron.
	modifier = {
		desc = AI_REFUSAL_RANK_DIFFERENCE
		scope:actor = {
			tier_difference = {
				target = scope:recipient
				value = 2
			}
		}
		add = 25
	}
	## King <- Baron.
	modifier = {
		desc = AI_REFUSAL_RANK_DIFFERENCE
		scope:actor = {
			tier_difference = {
				target = scope:recipient
				value = -2
			}
		}
		add = -100
	}
	## Duke <- Baron.
	modifier = {
		desc = AI_REFUSAL_RANK_DIFFERENCE
		scope:actor = {
			tier_difference = {
				target = scope:recipient
				value = -3
			}
		}
		add = -75
	}
	## Count <- Baron.
	modifier = {
		desc = AI_REFUSAL_RANK_DIFFERENCE
		scope:actor = {
			tier_difference = {
				target = scope:recipient
				value <= -4
			}
		}
		add = -50
	}
	# And a bit of extra oomph if you're looking outwards anyway.
	modifier = {
		desc = AI_ACCEPTANCE_FOREIGN_AFFAIRS_FOCUS
		scope:recipient = { has_focus = diplomacy_foreign_affairs_focus }
		add = 25
	}
}

fp2_ritual_best_friendship_interactions_ai_chance_modifier = {
	# Traits improve this somewhat.
	modifier = {
		add = 25
		has_trait = gregarious
	}
	# Factor for opinion.
	modifier = {
		add = 50
		scope:actor = {
			opinion = {
				target = scope:recipient
				value >= medium_positive_opinion
			}
		}
	}
	modifier = {
		add = 100
		scope:actor = {
			opinion = {
				target = scope:recipient
				value >= very_high_positive_opinion
			}
		}
	}
	# And a bit of extra oomph if you're looking outwards anyway.
	modifier = {
		add = 25
		scope:actor = { has_focus = diplomacy_foreign_affairs_focus }
	}
}

bg_play_move_type_effect_extraneous_advantages_self_modifier = {
	# Landless wrong-gendered noble characters have more time to play games (and, at least by accounts we can read, did, a *lot*).
	modifier = {
		add = 20
		is_ruler = no
		exists = dynasty
		NOT = {
			can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:bg_myself }
		}
	}
	# Board game enthusiast cultures do very slightly better at all times.
	modifier = {
		add = 10
		culture = { has_cultural_parameter = may_challenge_to_board_games }
	}
	# TIT-34022
	modifier = {
		add = 5
		any_equipped_character_artifact = { has_variable = can_be_used_for_board_games }
	}
}

bg_play_move_type_effect_extraneous_advantages_opponent_modifier = {
	# Landless wrong-gendered noble characters have more time to play games (and, at least by accounts we can read, did, a *lot*).
	modifier = {
		add = 20
		is_ruler = no
		exists = dynasty
		NOT = {
			can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:bg_opponent }
		}
	}
	# Board game enthusiast cultures do very slightly better at all times.
	modifier = {
		add = 10
		culture = { has_cultural_parameter = may_challenge_to_board_games }
	}
	# TIT-34022
	modifier = {
		add = 5
		any_equipped_character_artifact = { has_variable = can_be_used_for_board_games }
	}
}

bg_ai_weight_choices_by_skill_modifier = {
	# Their skills
	## Prefer their stronger skills
	### Reduce this if they're good at the game, & know you have a strong counter.
	# Your skills
	## If they're good at the game, and have a good skill that counters you, they should prefer that.
	# AI values
	## Standard personalities favouring different moves affair.
	## If they have the board gamer trait or their skills are above a certain threshold, they disgard these entirely.

	# Skills.
	## If you're abysmal at board games, you only ever pick your highest skill.
	modifier = {
		add = 1000
		highest_skill = $SKILL$
		trigger_if = {
			limit = {
				OR = {
					scope:bg_skill_a = flag:prowess
					scope:bg_skill_b = flag:prowess
					scope:bg_skill_c = flag:prowess
				}
			}
			$SKILL$ >= prowess
		}
		$CHARACTER$.bg_cumulative_skill_score_value < bg_bad_player_threshold_value
	}
	## If you're bad at board games, you roughly weigh your options but still tend to pick the heighest.
	modifier = {
		add = {
			value = $SKILL$
			# A small multiplier means that bad players are more affected by their personality values.
			multiply = 5
		}
		$CHARACTER$.bg_cumulative_skill_score_value >= bg_bad_player_threshold_value
		$CHARACTER$.bg_cumulative_skill_score_value < bg_average_player_threshold_value
	}
	modifier = {
		add = 100
		highest_skill = $SKILL$ 
		trigger_if = {
			limit = {
				OR = {
					scope:bg_skill_a = flag:prowess
					scope:bg_skill_b = flag:prowess
					scope:bg_skill_c = flag:prowess
				}
			}
			$SKILL$ >= prowess
		}
		$CHARACTER$.bg_cumulative_skill_score_value >= bg_bad_player_threshold_value
		$CHARACTER$.bg_cumulative_skill_score_value < bg_average_player_threshold_value
	}
	## If you're average at board games, decently weight your raw skill.
	modifier = {
		add = {
			value = $SKILL$
			multiply = 10
		}
		$CHARACTER$.bg_cumulative_skill_score_value >= bg_average_player_threshold_value
		$CHARACTER$.bg_cumulative_skill_score_value < bg_good_player_threshold_value
	}
	## If you're good at board games, consider the role of likely counters.
	modifier = {
		add = {
			value = $SKILL$
			# A larger multiplier means that excellent players are only slightly moved by their personality values.
			multiply = 20
		}
		$CHARACTER$.bg_cumulative_skill_score_value >= bg_good_player_threshold_value
	}
	modifier = {
		add = {
			value = $SKILL$
			# Focus on trying to use counters where appropriate if we've met these triggers.
			multiply = 40
		}
		$CHARACTER$.bg_cumulative_skill_score_value >= bg_good_player_threshold_value
		OR = {
			# Countering scope:bg_skill_a.
			AND = {
				scope:bg_skill_a = flag:$SKILL$
				scope:bg_skill_b = flag:diplomacy
				scope:bg_opponent = {
					highest_skill = diplomacy
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						diplomacy >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_a = flag:$SKILL$
				scope:bg_skill_b = flag:martial
				scope:bg_opponent = {
					highest_skill = martial
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						martial >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_a = flag:$SKILL$
				scope:bg_skill_b = flag:stewardship
				scope:bg_opponent = {
					highest_skill = stewardship
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						stewardship >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_a = flag:$SKILL$
				scope:bg_skill_b = flag:intrigue
				scope:bg_opponent = {
					highest_skill = intrigue
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						intrigue >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_a = flag:$SKILL$
				scope:bg_skill_b = flag:learning
				scope:bg_opponent = {
					highest_skill = learning
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						learning >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_a = flag:$SKILL$
				scope:bg_skill_b = flag:prowess
				scope:bg_opponent = {
					prowess >= diplomacy
					prowess >= martial
					prowess >= stewardship
					prowess >= intrigue
					prowess >= learning
				}
			}
			# Countering scope:bg_skill_b.
			AND = {
				scope:bg_skill_b = flag:$SKILL$
				scope:bg_skill_c = flag:diplomacy
				scope:bg_opponent = {
					highest_skill = diplomacy
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						diplomacy >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_b = flag:$SKILL$
				scope:bg_skill_c = flag:martial
				scope:bg_opponent = {
					highest_skill = martial
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						martial >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_b = flag:$SKILL$
				scope:bg_skill_c = flag:stewardship
				scope:bg_opponent = {
					highest_skill = stewardship
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						stewardship >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_b = flag:$SKILL$
				scope:bg_skill_c = flag:intrigue
				scope:bg_opponent = {
					highest_skill = intrigue
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						intrigue >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_b = flag:$SKILL$
				scope:bg_skill_c = flag:learning
				scope:bg_opponent = {
					highest_skill = learning
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						learning >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_b = flag:$SKILL$
				scope:bg_skill_c = flag:prowess
				scope:bg_opponent = {
					prowess >= diplomacy
					prowess >= martial
					prowess >= stewardship
					prowess >= intrigue
					prowess >= learning
				}
			}
			# Countering scope:bg_skill_c.
			AND = {
				scope:bg_skill_c = flag:$SKILL$
				scope:bg_skill_a = flag:diplomacy
				scope:bg_opponent = {
					highest_skill = diplomacy
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						diplomacy >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_c = flag:$SKILL$
				scope:bg_skill_a = flag:martial
				scope:bg_opponent = {
					highest_skill = martial
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						martial >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_c = flag:$SKILL$
				scope:bg_skill_a = flag:stewardship
				scope:bg_opponent = {
					highest_skill = stewardship
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						stewardship >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_c = flag:$SKILL$
				scope:bg_skill_a = flag:intrigue
				scope:bg_opponent = {
					highest_skill = intrigue
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						intrigue >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_c = flag:$SKILL$
				scope:bg_skill_a = flag:learning
				scope:bg_opponent = {
					highest_skill = learning
					trigger_if = {
						limit = {
							OR = {
								scope:bg_skill_a = flag:prowess
								scope:bg_skill_b = flag:prowess
								scope:bg_skill_c = flag:prowess
							}
						}
						learning >= prowess
					}
				}
			}
			AND = {
				scope:bg_skill_c = flag:$SKILL$
				scope:bg_skill_a = flag:prowess
				scope:bg_opponent = {
					prowess >= diplomacy
					prowess >= martial
					prowess >= stewardship
					prowess >= intrigue
					prowess >= learning
				}
			}
		}
	}
	# AI values taken care of in the option block, as these vary from skill to skill.
}

#################################################
# Struggles

fp2_struggle_set_ai_agenda_common_modifiers = {
	# Auto-balance due to nb of agents towards Hostility
	modifier = {
		factor = {
			value = 1
			subtract =  {
				value = root.var:agents_for_$INTENT$
				multiply = 0.05
			}
			min = 0.1
		}
	}
	# Internal drama creator: try to have a different stance than your liege
	modifier = {
		exists = liege
		liege = {
			has_character_flag = agenda_towards_$INTENT$
		}
		factor = 0.5
	}

	# Rival consistency: try to have the same stance
	modifier = {
		factor = {
			value = 1
			every_relation = {
				type = rival
				limit = { has_character_flag = agenda_towards_$INTENT$ }
				add = -0.1
			}
			min = 0.1
		}
	}

	# Nemesis consistency: try to have the same stance
	modifier = {
		factor = {
			value = 1
			every_relation = {
				type = nemesis
				limit = { has_character_flag = agenda_towards_$INTENT$ }
				add = -0.2
			}
			min = 0.1
		}
	}

	# Friends consistency: try to have the same stance
	modifier = {
		factor = {
			value = 1
			every_relation = {
				type = friend
				limit = { has_character_flag = agenda_towards_$INTENT$ }
				add = 0.1
			}
		}
	}

	# Lover consistency: try to have the same stance
	modifier = {
		factor = {
			value = 1
			every_relation = {
				type = lover
				limit = { has_character_flag = agenda_towards_$INTENT$ }
				add = 0.1
			}
		}
	}

	# Best Friends consistency: try to have the same stance
	modifier = {
		factor = {
			value = 1
			every_relation = {
				type = best_friend
				limit = { has_character_flag = agenda_towards_$INTENT$ }
				add = 0.2
			}
		}
	}

	# Soulmates consistency: try to have the same stance
	modifier = {
		factor = {
			value = 1
			every_relation = {
				type = soulmate
				limit = { has_character_flag = agenda_towards_$INTENT$ }
				add = 0.2
			}
		}
	}

	# Phase specific modifiers
	fp2_struggle_set_ai_agenda_$PHASE$_modifiers = yes

}

fp2_struggle_set_ai_agenda_compromise_modifiers = {

	# can trigger the ending decision: strong push
	#modifier ={
	#	can_execute_decision = struggle_iberia_ending_compromise_decision
	#	factor = 5
	#}

	# AI personality: Compassion, Negative Boldness, Negative Zeal, Negative Vengefulness, Negative greed
	ai_value_modifier = {
		who = this
		ai_compassion = 0.1
		ai_zeal = -0.1
		ai_boldness = -0.1
		ai_vengefulness = -0.1
		ai_greed = -0.1
	}
}

fp2_struggle_set_ai_agenda_conciliation_modifiers = {
	# Weak AI wants to go for Conciliation

	# can trigger the ending decision
	#modifier ={
	#	can_execute_decision = struggle_iberia_ending_conciliation_decision
	#	factor = 5
	#}

	# AI personality: Compassion, Negative Boldness, Negative Zeal, Negative Vengefulness, Negative greed
	ai_value_modifier = {
		who = this
		ai_compassion = 0.1
		ai_zeal = -0.1
		ai_boldness = -0.1
		ai_vengefulness = -0.1
		ai_greed = -0.1
	}
}

fp2_struggle_set_ai_agenda_hostility_modifiers = {
	# High tier rulers are more likely to go down that road
	modifier = {
		highest_held_title_tier >= tier_kingdom
		factor = 1.5
	}

	# People with lots of claim will want to lean towards Hostility; Polish: boost depends on the Title tier of the claim
	modifier = {
		any_claim = {
			count > 0
		}
		factor = {
			value = 1
			every_claim ={
				add = 0.2
			}
		}
	}

	# Strong AI wants to fight openly

	# can trigger the ending decision
	#modifier ={
	#	can_execute_decision = struggle_iberia_ending_hostility_decision
	#	factor = 5
	#}

	# AI personality: Zeal, Greed, Vengefulness, Boldness
	ai_value_modifier = {
		who = this
		ai_zeal = 0.1
		ai_boldness = 0.11
		ai_vengefulness = 0.11
		ai_greed = 0.11
	}
}

fp2_struggle_set_ai_agenda_opportunity_modifiers = {
	# AI personality: Greed, Vengefulness, Boldness
	ai_value_modifier = {
		who = this
		ai_boldness = 0.1
		ai_vengefulness = 0.1
		ai_greed = 0.1
	}
}

fp2_council_toledo_attendee_modifier = {
	modifier = {
		factor = 4
		has_trait = theologian
	}
	modifier = {
		factor = 10
		is_vassal_or_below_of = root
	}
	#modifier = {
	#	factor = 20
	#	faith = { fp2_struggle_faith_is_mozarabic_trigger = yes }
	#}
	modifier = {
		factor = 2
		has_trait = ambitious
	}
	#modifier = {
	#	factor = 2
	#	faith = { fp2_struggle_faith_is_mozarabic_trigger = yes }
	#}
	modifier = {
		factor = 0.5
		is_councillor = yes
		liege.primary_title.tier <= tier_county
	}
	modifier = {
		factor = 0.5
		is_landed = yes
	}
	modifier = {
		factor = 0.5
		opinion = {
			target = root
			value < 50
		}
	}
	modifier = {
		factor = 2
		opinion = {
			target = root
			value >= 50
		}
	}
	modifier = {
		factor = 0.5
		faith = {
			faith_hostility_level = {
				target = root.faith
				value >= faith_astray_level
			}
		}
	}
	modifier = {
		factor = 0.25
		faith = {
			faith_hostility_level = {
				target = root.faith
				value >= faith_hostile_level
			}
		}
	}
	modifier = {
		factor = 0
		faith = {
			faith_hostility_level = {
				target = root.faith
				value = faith_evil_level
			}
		}
	}
}

fp2_contracting_ally_modifier = {
	modifier = {
		scope:target = {
			trigger_if = {
				limit = { is_attacker = $WARMONGER$ }
				$WARJOINER$ = { is_allied_to = scope:target.primary_defender }
			}
			trigger_else = { $WARJOINER$ = { is_allied_to = scope:target.primary_attacker } }
		}

		add = {
			value = -500
			add = { # In theory, a -1 honour character will totally ignore this, which is awesome, while a +1 honour will double it!
				value = {
					value = ai_honor
					multiply = -1 # We need to invert honour for this to work as intended
				}
				multiply = 5
			}
		}
		desc = OA_AI_LOYALTY_TOWARDS_ALLIES_REASON
	}
}
