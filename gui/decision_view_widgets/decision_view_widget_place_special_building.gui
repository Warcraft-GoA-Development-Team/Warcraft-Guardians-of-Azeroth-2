# Decision view widget to create a holy order
# Required controller: create_holy_order

flowcontainer = {
	name = "decision_view_widget_place_special_building"
	direction = vertical
	minimumsize = { 514 -1 }
	maximumsize = { 514 -1 }
	ignoreinvisible = yes
	margin_top = 15

	flowcontainer = {
		direction = horizontal
		ignoreinvisible = yes
		parentanchor = hcenter

		text_single = {
			visible = "[And(DecisionViewWidgetCreateHolyOrder.IsCreate, DecisionViewWidgetCreateHolyOrder.HasCurrentCapital)]"
			parentanchor = vcenter
			fontsize_min = 14
			text = "PLACE_SPECIAL_BUILDING_DECISION_DESTINATION_LABEL"
		}

		spacer = {
			size = { 5 5 }
		}

		text_single = {
			visible = "[DecisionViewWidgetCreateHolyOrder.HasCurrentCapital]"
			parentanchor = vcenter
			fontsize_min = 14
			default_format = "#high"
			text = "[DecisionViewWidgetCreateHolyOrder.GetCurrentCapital.GetNameNoTier]"
		}

		widget = { size = { 15 0 } }

		button_standard = {
			name = "change_capital"
			minimumsize = { 200 0 }
			
			onclick = "[DecisionViewWidgetCreateHolyOrder.OnSelectCapital]"
			onclick = "[GetVariableSystem.Set('special_building', 'true')]"
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
			enabled = "[DecisionViewWidgetCreateHolyOrder.HasValidBaronies]"
			tooltip = "LEASE_OUT_BARONIES_TOOLTIP"

			text_single = {
				visible = "[And(DecisionViewWidgetCreateHolyOrder.IsCreate, DecisionViewWidgetCreateHolyOrder.HasCurrentCapital)]"
				text = "PLACE_SPECIAL_BUILDING_DECISION_SELECT_DESTINATION"
				parentanchor = left|vcenter
				align = nobaseline
				position = { 10 0 }
				fontsize_min = 14
			}

			button_change = {
				visible = "[DecisionViewWidgetCreateHolyOrder.HasCurrentCapital]"
				parentanchor = right|vcenter
				position = { -5 0 }
				alwaystransparent = yes
				size = { 25 25 }
			}

			button_select_arrow = {
				visible = "[Not(DecisionViewWidgetCreateHolyOrder.HasCurrentCapital)]"
				parentanchor = right|vcenter
				position = { -5 0 }
				alwaystransparent = yes
				size = { 25 25 }
			}
		}
	}
}
