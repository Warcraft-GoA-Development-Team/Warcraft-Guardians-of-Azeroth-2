namespace = theramore_events

#theramore_events.001 = {
#	type = character_event
#	hidden = yes
#	
#	immediate = {
#		
#	}
#}

##################################
########## Jaina Events ##########
##################################
scripted_effect find_alternate_jaina_effect = {
	random_ruler = {
		limit = {
			is_independent_ruler = no
			highest_held_title_tier >= tier_county
			culture = {
				OR = {
					has_cultural_pillar = heritage_gilnean
					has_cultural_pillar = heritage_arathi
				}
			}
			NOT = { this = root }
			NAND = {
				exists = involved_activity
				involved_activity = {
					OR = {
						has_activity_type = activity_type:activity_arthas_expedition
						has_activity_type = activity_type:activity_arthas_expedition_non_dlc
					}
				}
			}
			is_ai = yes
		}
		weight = {
			base = 1
			modifier = {
				add = 30
				OR = {
					diplomacy >= 20
					martial >= 20
					stewardship >= 20
					intrigue >= 20
					learning >= 20
				}
			}
			modifier = {
				add = 90
				OR = {
					diplomacy >= 30
					martial >= 30
					stewardship >= 30
					intrigue >= 30
					learning >= 30
				}
			}
		}
		trigger_event = { id = theramore_events.001 days = 7 }
	}
}

theramore_events.001 = { #Hello Medivh
	type = character_event
	title = theramore_sm_events.001.t
	desc = theramore_sm_events.001.desc
	theme = travel_diplomacy
	override_background = {
		reference = sm_dalaran_background
	}
	left_portrait = {
		character = root
		animation = eyeroll
	}
	right_portrait = {
		character = character:5000
		animation = chaplain
	}

	option = {
		name = theramore_sm_events.001.a
		trigger_event = {
			id = theramore_events.002
			days = { 20 30 }
		}
		custom_tooltip = theramore_events.001.tooltip.a

		hidden_effect = {
			if = {
				limit = {
					exists = involved_activity
				}
				remove_from_activity = involved_activity
				set_location_to_default = yes
			}
			if = {
				limit = {
					is_ruler = yes
				}
				i_need_a_knight_effect = yes
				i_need_a_knight_effect = yes
				i_need_a_knight_effect = yes
				i_need_a_knight_effect = yes
			}
			save_scope_value_as = {
				name = agreed_jaina
				value = yes
			}
		}
		ai_chance = {
			base = 1
		}
	}
	option = {
		name = theramore_sm_events.001.b
		hidden_effect = {
			remove_trait = cannot_mary_historical
			#in case player decides to stay in Dalaran for whatever reason
			find_alternate_jaina_effect = yes
			add_character_flag = {
				flag = already_invited_theramore
				years = 1
			}
		}
		custom_tooltip = theramore_events.001.tooltip.b
		ai_chance = {
			base = 0
		}
	}

	after = {
		if = {
			limit = { exists = scope:agreed_jaina }
			save_scope_as = letter_sender
			invite_person_to_expedition = { scope_name = person_1 invite_in_days = 4 }
			invite_person_to_expedition = { scope_name = person_2 invite_in_days = 8 }
			invite_person_to_expedition = { scope_name = person_3 invite_in_days = 12 }
		}
	}
}
theramore_events.002 = { #We are in storm 1
	type = character_event
	title = theramore_sm_events.002.t
	desc = theramore_sm_events.002.desc
	theme = travel_sea
	override_background = {
		reference = sm_ship_in_storm_1
	}
	left_portrait = {
		character = root
		animation = stress
	}

	immediate = {
		save_scope_as = fleet_captain
		trigger_event = {
			id = theramore_events.003
			days = { 15 30 }
		}
		if = {
			limit = {
				has_variable_list = theramorean_comrades
			}
			every_in_list = {
				variable = theramorean_comrades
				trigger_event = {
					id = theramore_events.203
					days = 1
				}
			}
		}
	}

	option = {
		name = theramore_sm_events.002.a
		set_variable = { name = my_destination_1 value = flag:northrend }

		ai_chance = {
			base = 1
		}
	}
	option = {
		name = theramore_sm_events.002.b
		set_variable = { name = my_destination_1 value = flag:kalimdor }

		ai_chance = {
			base = 8
		}
	}
	option = {
		name = theramore_sm_events.002.c
		set_variable = { name = my_destination_1 value = flag:pandaria }

		ai_chance = {
			base = 1
		}
	}
}
theramore_events.003 = { #We are in storm 2
	type = character_event
	title = theramore_sm_events.003.t
	desc = theramore_sm_events.003.desc
	theme = travel_sea
	override_background = {
		reference = sm_ship_in_storm_2
	}
	left_portrait = {
		character = root
		animation = worry
	}

	immediate = {
		trigger_event = {
			id = theramore_events.004
			days = { 15 30 }
		}
		if = {
			limit = {
				has_variable_list = theramorean_comrades
			}
			every_in_list = {
				variable = theramorean_comrades
				trigger_event = {
					id = theramore_events.204
					days = 1
				}
			}
		}
	}

	option = {#c_kamagua northrend east
		name = theramore_sm_events.003.a
		trigger = { var:my_destination_1 = flag:northrend }
		set_variable = { name = my_destination_2 value = flag:n_east }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_echnus northrend west
		name = theramore_sm_events.003.b
		trigger = { var:my_destination_1 = flag:northrend }
		set_variable = { name = my_destination_2 value = flag:n_west }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_feicu_dao pandaria east
		name = theramore_sm_events.003.a
		trigger = { var:my_destination_1 = flag:pandaria }
		set_variable = { name = my_destination_2 value = flag:p_east }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_lei_gong pandaria west
		name = theramore_sm_events.003.b
		trigger = { var:my_destination_1 = flag:pandaria }
		set_variable = { name = my_destination_2 value = flag:p_west }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_thok zandalar
		name = theramore_sm_events.003.c
		trigger = { var:my_destination_1 = flag:pandaria }
		set_variable = { name = my_destination_2 value = flag:p_zand }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_mystwood kalimdor north
		name = theramore_sm_events.003.d
		trigger = { var:my_destination_1 = flag:kalimdor }
		set_variable = { name = my_destination_2 value = flag:k_north }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_dulized kalimdor south
		name = theramore_sm_events.003.e
		trigger = { var:my_destination_1 = flag:kalimdor }
		set_variable = { name = my_destination_2 value = flag:k_south }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_xonulzis durotar
		name = theramore_sm_events.003.f
		trigger = { var:my_destination_1 = flag:kalimdor }
		set_variable = { name = my_destination_2 value = flag:k_durotar }

		ai_chance = {
			base = 1
		}
	}
	option = {#c_theramore
		name = theramore_sm_events.003.g
		trigger = { var:my_destination_1 = flag:kalimdor }
		set_variable = { name = my_destination_2 value = flag:k_theramore }

		ai_chance = {
			base = 1
		}
	}
}
theramore_events.004 = { #We settle - we attack
	type = character_event
	title = theramore_sm_events.004.t
	desc = theramore_sm_events.004.desc
	theme = realm
	override_background = {
		reference = new_home_theramore
	}
	left_portrait = {
		character = root
		animation = aggressive_spear
	}

	immediate = {
		switch = {
			trigger = var:my_destination_2
			flag:n_east = { title:c_kamagua = { save_scope_as = new_theramore_capital } hidden_effect = { culture:theramore = { remove_culture_tradition = tradition_wetlanders add_culture_tradition = tradition_winter_warriors } } }#c_kamagua northrend east
			flag:n_west = { title:c_echnus = { save_scope_as = new_theramore_capital } hidden_effect = { culture:theramore = { remove_culture_tradition = tradition_wetlanders add_culture_tradition = tradition_winter_warriors } } }#c_echnus northrend west
			flag:p_east = { title:c_feicu_dao = { save_scope_as = new_theramore_capital } }#c_feicu_dao pandaria east
			flag:p_west = { title:c_lei_gong = { save_scope_as = new_theramore_capital } hidden_effect = { culture:theramore = { remove_culture_tradition = tradition_wetlanders add_culture_tradition = tradition_hill_dwellers } } }#c_lei_gong pandaria west
			flag:p_zand = { title:c_thok = { save_scope_as = new_theramore_capital } hidden_effect = { culture:theramore = { remove_culture_tradition = tradition_wetlanders add_culture_tradition = tradition_jungle_dwellers } } }#c_thok zandalar
			flag:k_north = { title:c_mystwood = { save_scope_as = new_theramore_capital } hidden_effect = { culture:theramore = { remove_culture_tradition = tradition_wetlanders add_culture_tradition = tradition_forest_folk } } }#c_mystwood kalimdor north
			flag:k_south = { title:c_dulized = { save_scope_as = new_theramore_capital } hidden_effect = { culture:theramore = { remove_culture_tradition = tradition_wetlanders add_culture_tradition = tradition_dryland_dwellers } } }#c_dulized kalimdor south
			flag:k_durotar = { title:c_xonulzis = { save_scope_as = new_theramore_capital } hidden_effect = { culture:theramore = { remove_culture_tradition = tradition_wetlanders add_culture_tradition = tradition_hill_dwellers } } }#c_xonulzis durotar
			flag:k_theramore = { title:c_theramore = { save_scope_as = new_theramore_capital } }#c_theramore
		}
		remove_variable = my_destination_1
		remove_variable = my_destination_2
		give_land_to_settler = { TO_WHO = root COUNTY_NAME = scope:new_theramore_capital GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
		if = { #ai cant handle to win with only one county
			limit = { is_ai = yes }
			scope:new_theramore_capital = {
				random_neighboring_county = {
					give_land_to_settler = { TO_WHO = root COUNTY_NAME = this GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
				}
			}
		}
		hidden_effect = {
			get_rid_of_all_titles_in_region_effect = { REGION = world_eastern_kingdoms WHO_GIVES = root }
			remove_trait = cannot_mary_historical
		}
		scope:new_theramore_capital = {
			hidden_effect = { change_development_level = 4 change_county_control = 40 }
			title_province = {
				if = {
					limit = {
						has_holding_type = tribal_holding
					}
					set_holding_type = castle_holding
					hidden_effect = { generate_building = yes }
				}
				hidden_effect = { generate_building = yes }
			}
		}
	}

	option = {
		name = theramore_sm_events.004.a
		add_prestige = 1000
		add_gold = 600
		
		scope:new_theramore_capital.duchy = {
			every_de_jure_county_holder = {
				limit = { NOT = { this = root } }
				top_liege = { add_to_list = potential_war_targets }
			}
		}
		every_in_list = {
			list = potential_war_targets
			root = {
				start_war = {
					cb = migration_theramore_war
					target = prev.top_liege
					target_title = scope:new_theramore_capital.duchy
				}
			}
		}
		if = {
			limit = { is_at_war_as_attacker = yes }
			random_character_war = {
				save_temporary_scope_as = this_war
			}
			spawn_army = {
				uses_supply = no
				inheritable = yes
				name = remnants_of_alliance_troops
				levies = {
					value = 2400
				}
				location = capital_province
				origin = capital_province
				war = scope:this_war
			}
		}
		else = {
			show_as_tooltip = { #war scope doesnt exist before clicking option, so it will be empty other way
				spawn_army = {
					uses_supply = no
					inheritable = yes
					name = remnants_of_alliance_troops
					levies = {
						value = 2400
					}
					location = capital_province
					origin = capital_province
				}
			}
		}
		spawn_army = {
			uses_supply = no
			inheritable = yes
			name = remnants_of_alliance_troops
			levies = {
				value = 1355
			}
			men_at_arms = {
				type = armored_footmen
				stacks = 5
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 2
			}
			men_at_arms = {
				type = aerial_unit
				stacks = 4
			}
			men_at_arms = {
				type = armored_horsemen
				stacks = 2
			}
			men_at_arms = {
				type = caster_unit
				stacks = 3
			}
			men_at_arms = {
				type = trebuchet
				stacks = 2
			}
			location = capital_province
			origin = capital_province
		}
	}
}
theramore_events.005 = { #Ve von
	type = character_event
	title = theramore_sm_events.005.t
	desc = theramore_sm_events.005.desc
	theme = realm
	override_background = {
		reference = new_home_theramore
	}
	left_portrait = {
		character = root
		animation = happiness
	}

	immediate = {
		remove_global_variable = theramore_started
		set_culture = culture:theramore
		save_scope_as = theramore_ruler
		hidden_effect = {
			every_courtier_or_guest = {
				set_culture = culture:theramore
			}
			if = {
				limit = { has_game_rule = wc_theramore_mechanic_on }
				global_var:global_theramorian_rulers = {
					add_to_variable_list = {
						name = theramorian_rulers
						target = root
					}
				}
				give_variable_and_parties_for_new_theramore_ruler = yes
			}
			
			every_sub_realm_county = {
				limit = { holder = root NOR = { culture = culture:theramore culture = culture:lordaeronian } }
				set_county_faith = root.faith
				set_county_culture = culture:theramore
				change_development_level = 4 change_county_control = 40
				title_province = {
					if = {
						limit = {
							has_holding_type = tribal_holding
						}
						set_holding_type = castle_holding
					}
					generate_building = yes
				}
			}
		}
		if = {
			limit = { NOT = { has_global_variable = founded_theramore } }
			every_player = {
				limit = { NOT = { this = root } }
				trigger_event = {
					id = theramore_events.006
					days = 1
				}
			}
			set_global_variable = founded_theramore
		}
	}
	option = {
		name = theramore_sm_events.005.a
		add_prestige_level = 2
		custom_tooltip = {
			text = theramore_sm_events_005_tooltip
			scope:new_theramore_duchy = {
				set_color_from_title = title:b_theramore
				set_coa = d_theramore
				set_title_name = d_theramore
				title_capital_county = {
					set_title_name = d_theramore
					set_coa = d_theramore
					title_province.barony = {
						set_title_name = d_theramore
					}
				}
			}
		}
	}
}

theramore_events.006 = { #Notification to other players
	type = character_event
	title = theramore_sm_events.006.t
	desc = theramore_sm_events.006.desc
	theme = travel_sea
	override_background = {
		reference = sm_ship_in_storm_1
	}
	left_portrait = {
		character = scope:theramore_ruler
		animation = war_attacker
	}

	option = {
		name = theramore_sm_events.006.a
	}
}

###################################
########## Arthas Events ##########
###################################

theramore_events.100 = { #Hello Medivh
	type = activity_event
	title = theramore_events.100.t
	desc = theramore_events.100.desc
	theme = hunt_activity
	override_background = {
		reference = wilderness_forest
	}
	left_portrait = {
		character = root
		animation = eyeroll
	}
	right_portrait = {
		character = character:5000
		animation = chaplain
	}

	option = {
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = { scope:activity = { has_activity_option = { category = special_type option = ae_save_your_people } } }
						desc = theramore_sm_events.001.a
					}
					desc = theramore_events.100.a
				}
			}
		}

		ai_chance = {
			base = 1
		}
	}
}

theramore_events.101 = { #Notification of sail
	type = character_event
	title = theramore_events.101.t
	desc = theramore_events.101.desc
	theme = travel_diplomacy
	override_background = {
		reference = sm_dalaran_background
	}
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = root.var:my_second_half
		animation = flirtation_left
	}

	immediate = {
		if = {
			limit = {
				var:my_second_half ?= { is_alive = yes }
			}
		}
		else = {
			# set my_second_half by another character
			find_alternative_for_my_jaina = yes
		}
		add_character_flag = {
			flag = already_invited_theramore
			years = 1
		}
		#We are jainas her own second half
		var:my_second_half = {
			set_variable = { name = my_second_half value = root }
			trigger_event = theramore_events.102
			add_character_flag = {
				flag = already_invited_theramore
				years = 1
			}
		}

		trigger_event = { id = theramore_events.103 days = 15 }
	}

	option = {
		name = theramore_events.101.a
		#Disinheritance, should be even you dynasty head, so you wont inherit calia's lands
		add_trait = disinherited
		if = {
			limit = { NOT = { dynasty.dynast = root } }
			if = {
				limit = { is_ai = yes }
				add_opinion = {
					modifier = disinherited_opinion
					target = dynasty.dynast
				}
			}
			reverse_add_opinion = {
				modifier = disappointed_opinion
				target = dynasty.dynast
				opinion = -75
			}
		}
	}

	after = {
		save_scope_as = letter_sender
		invite_person_to_expedition = { scope_name = person_1 invite_in_days = 4 }
		invite_person_to_expedition = { scope_name = person_2 invite_in_days = 8 }
		invite_person_to_expedition = { scope_name = person_3 invite_in_days = 12 }
	}
}
# Same for Jaina
theramore_events.102 = { #Notification of sail
	type = character_event
	title = theramore_events.101.t
	desc = theramore_events.101.desc
	theme = travel_diplomacy
	override_background = {
		reference = sm_dalaran_background
	}
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = root.var:my_second_half
		animation = happiness
	}

	option = {
		name = theramore_events.101.a
	}
}

theramore_events.103 = { #We are in storm
	type = character_event
	title = theramore_sm_events.002.t
	desc = theramore_sm_events.002.desc
	theme = travel_sea
	override_background = {
		reference = sm_ship_in_storm_1
	}
	left_portrait = {
		character = root
		animation = celebrate_hammer
	}
	right_portrait = {
		character = root.var:my_second_half
		animation = shock
	}

	immediate = {
		trigger_event = {
			id = theramore_events.104
			days = { 35 45 }
		}
		save_scope_as = fleet_captain
		if = {
			limit = {
				has_variable_list = theramorean_comrades
			}
			every_in_list = {
				variable = theramorean_comrades
				trigger_event = {
					id = theramore_events.203
					days = 1
				}
			}
		}
	}

	option = {
		name = theramore_events.103.a
		random_list = {
			9 = {  }
			1 = { add_trait = wounded_1 }
		}
		var:my_second_half ?= { random_list = { 9 = { } 1 = { add_trait = wounded_1 } } }
		custom_tooltip = {
			text = theramore_events.103.tooltip
			every_courtier = {
				limit = { NOT = { this = root.var:my_second_half } }
				random_list = {
					9 = {  }
					1 = { add_trait = wounded_1 }
				}
			}
		}

		ai_chance = {
			base = 1
		}
	}
}

theramore_events.104 = { #We settle - we attack
	type = character_event
	title = theramore_events.104.t
	desc = theramore_sm_events.004.desc
	theme = realm
	override_background = {
		reference = new_home_theramore
	}
	left_portrait = {
		character = root
		animation = aggressive_sword
	}
	right_portrait = {
		character = root.var:my_second_half
		animation = aggressive_spear
	}

	immediate = {
		if = {
			limit = {
				var:my_second_half ?= { is_alive = yes }
			}
		}
		else = {
			# just in case our jaina died
			find_alternative_for_my_jaina = yes
		}
		#show_as_tooltip, it must be done in jaina event, other way she will get wrong localization
		# General Theramore title:k_dustwallow, with Arthas more people would come compared to only with Jaina, so he deserves a kingdom
		custom_tooltip = {
			text = theramore_dustwallow_tooltip
			set_global_variable = theramore_kingdom_created
			title:k_dustwallow = {
				set_coa = d_theramore
				set_title_name = d_theramore
				set_color_from_title = title:b_theramore
			}
		}
		#East Theramore d_theramore c_theramore
		custom_tooltip = theramore_eastern_tooltip
		#North Theramore d_brackenwall c_blackhoof
		custom_tooltip = theramore_northern_tooltip
		#South Theramore d_quagmire c_quagmire
		custom_tooltip = theramore_southern_tooltip
		# Then we make all real
		title:c_theramore = { save_scope_as = theramore_arthas_capital }
		title:c_beezil = { save_scope_as = theramore_jaina_capital }

		give_land_to_settler = { TO_WHO = root COUNTY_NAME = scope:theramore_arthas_capital GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
		give_land_to_settler = { TO_WHO = root.var:my_second_half COUNTY_NAME = scope:theramore_jaina_capital GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
		hidden_effect = {
			if = { #ai cant handle to win with only one county
				limit = { is_ai = yes }
				title:c_sentry_point = {
					give_land_to_settler = { TO_WHO = root COUNTY_NAME = this GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
				}
			}
			if = {
				limit = { var:my_second_half = { is_ai = yes } }
				title:c_direhorn = {
					give_land_to_settler = { TO_WHO = root.var:my_second_half COUNTY_NAME = this GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
				}
			}
			# Get rid of all eastern kingdom lands
			get_rid_of_all_titles_in_region_effect = { REGION = world_eastern_kingdoms WHO_GIVES = root }
		}
		scope:theramore_arthas_capital = {
			hidden_effect = { change_development_level = 4 change_county_control = 40 }
			title_province = {
				if = {
					limit = {
						has_holding_type = tribal_holding
					}
					set_holding_type = castle_holding
					hidden_effect = { generate_building = yes }
				}
				hidden_effect = { generate_building = yes }
			}
		}
		scope:theramore_jaina_capital = {
			hidden_effect = { change_development_level = 4 change_county_control = 40 }
			title_province = {
				if = {
					limit = {
						has_holding_type = tribal_holding
					}
					set_holding_type = castle_holding
					hidden_effect = { generate_building = yes }
				}
				hidden_effect = { generate_building = yes }
			}
		}
		give_land_to_settler = { TO_WHO = root COUNTY_NAME = title:k_dustwallow GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = no }
		hidden_effect = {
			remove_trait = cannot_mary_historical
			var:my_second_half = { remove_trait = cannot_mary_historical }
		}
	}

	option = {
		name = theramore_events.104.a
		add_prestige = 1000
		add_gold = 500
		
		scope:theramore_arthas_capital.duchy = {
			every_de_jure_county_holder = {
				limit = { NOT = { this = root } }
				top_liege = { add_to_list = potential_war_targets }
			}
		}
		every_in_list = {
			list = potential_war_targets
			root = {
				start_war = {
					cb = migration_theramore_war
					target = prev.top_liege
					target_title = scope:theramore_arthas_capital.duchy
				}
			}
		}
		if = {
			limit = { is_at_war_as_attacker = yes }
			random_character_war = {
				save_temporary_scope_as = this_war
			}
			spawn_army = {
				uses_supply = no
				inheritable = yes
				name = remnants_of_alliance_troops
				levies = {
					value = 2400
				}
				location = capital_province
				origin = capital_province
				war = scope:this_war
			}
		}
		else = {
			show_as_tooltip = { #war scope doesnt exist before clicking option, so it will be empty other way
				spawn_army = {
					uses_supply = no
					inheritable = yes
					name = remnants_of_alliance_troops
					levies = {
						value = 2400
					}
					location = capital_province
					origin = capital_province
				}
			}
		}
		spawn_army = {
			uses_supply = no
			inheritable = yes
			name = remnants_of_alliance_troops
			levies = {
				value = 1355
			}
			men_at_arms = {
				type = armored_footmen
				stacks = 5
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 2
			}
			men_at_arms = {
				type = aerial_unit
				stacks = 4
			}
			men_at_arms = {
				type = armored_horsemen
				stacks = 2
			}
			men_at_arms = {
				type = caster_unit
				stacks = 3
			}
			men_at_arms = {
				type = trebuchet
				stacks = 2
			}
			location = capital_province
			origin = capital_province
		}
	}

	after = {
		var:my_second_half = { trigger_event = { id = theramore_events.105 days = 1 } }
		trigger_event = { id = theramore_events.106 days = 3 }
	}
}

theramore_events.105 = { #We settle - we attack
	type = character_event
	title = theramore_events.104.t
	desc = theramore_sm_events.004.desc
	theme = realm
	override_background = {
		reference = new_home_theramore
	}
	left_portrait = {
		character = root
		animation = aggressive_spear
	}
	right_portrait = {
		character = root.var:my_second_half
		animation = aggressive_sword
	}

	immediate = {
		# General Theramore title:k_dustwallow, with Arthas more people would come compared to only with Jaina, so he deserves a kingdom
		custom_tooltip = theramore_dustwallow_tooltip
		#East Theramore d_theramore c_theramore
		custom_tooltip = {
			text = theramore_eastern_tooltip
			title:d_theramore = {
				set_color_from_title = title:b_chimalis
				set_coa = custom_eastern_theramore
				set_title_name = eastern_theramore_name
				title_capital_county = {
					set_title_name = d_theramore
					set_coa = custom_eastern_theramore
					title_province.barony = {
						set_title_name = d_theramore
					}
				}
			}
		}
		#North Theramore d_brackenwall c_blackhoof
		custom_tooltip = {
			text = theramore_northern_tooltip
			title:d_brackenwall = {
				set_color_from_title = title:b_blackhoof
				set_coa = custom_northern_theramore
				set_title_name = northern_theramore_name
				title_capital_county = {
					set_coa = custom_northern_theramore
				}
			}
		}
		#South Theramore d_quagmire c_quagmire
		custom_tooltip = {
			text = theramore_southern_tooltip
			title:d_quagmire = {
				set_color_from_title = title:b_quagmire
				set_coa = custom_southern_theramore
				set_title_name = southern_theramore_name
				title_capital_county = {
					set_coa = custom_southern_theramore
				}
			}
		}
		show_as_tooltip = {
			# Then we make all real
			title:c_theramore = { save_scope_as = theramore_arthas_capital }
			title:c_beezil = { save_scope_as = theramore_jaina_capital }

			give_land_to_settler = { TO_WHO = root.var:my_second_half COUNTY_NAME = scope:theramore_arthas_capital GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
			give_land_to_settler = { TO_WHO = root COUNTY_NAME = scope:theramore_jaina_capital GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = yes }
			give_land_to_settler = { TO_WHO = root.var:my_second_half COUNTY_NAME = title:k_dustwallow GIVE_INDEPENDENCY = yes ADD_CLAIM_ON_LOSS = no }
		}
		hidden_effect = {
			get_rid_of_all_titles_in_region_effect = { REGION = world_eastern_kingdoms WHO_GIVES = root }
		}
	}

	option = {
		name = theramore_events.104.a
		add_prestige = 1000
		add_gold = 500
		
		scope:theramore_jaina_capital.duchy = {
			every_de_jure_county_holder = {
				limit = { NOT = { this = root } }
				top_liege = { add_to_list = potential_war_targets }
			}
		}
		every_in_list = {
			list = potential_war_targets
			root = {
				start_war = {
					cb = migration_theramore_war
					target = prev.top_liege
					target_title = scope:theramore_jaina_capital.duchy
				}
			}
		}
		if = {
			limit = { is_at_war_as_attacker = yes }
			random_character_war = {
				save_temporary_scope_as = this_war
			}
			spawn_army = {
				uses_supply = no
				inheritable = yes
				name = remnants_of_alliance_troops
				levies = {
					value = 2400
				}
				location = capital_province
				origin = capital_province
				war = scope:this_war
			}
		}
		else = {
			show_as_tooltip = { #war scope doesnt exist before clicking option, so it will be empty other way
				spawn_army = {
					uses_supply = no
					inheritable = yes
					name = remnants_of_alliance_troops
					levies = {
						value = 2400
					}
					location = capital_province
					origin = capital_province
				}
			}
		}
		spawn_army = {
			uses_supply = no
			inheritable = yes
			name = remnants_of_alliance_troops
			levies = {
				value = 1355
			}
			men_at_arms = {
				type = armored_footmen
				stacks = 5
			}
			men_at_arms = {
				type = light_horsemen
				stacks = 2
			}
			men_at_arms = {
				type = aerial_unit
				stacks = 4
			}
			men_at_arms = {
				type = armored_horsemen
				stacks = 2
			}
			men_at_arms = {
				type = caster_unit
				stacks = 3
			}
			men_at_arms = {
				type = trebuchet
				stacks = 2
			}
			location = capital_province
			origin = capital_province
		}
	}
}

theramore_events.106 = { #Marriage
	type = character_event
	title = theramore_events.106.t
	desc = {
		desc = theramore_events.106.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_relation_lover = var:my_second_half
						has_relation_potential_lover = var:my_second_half
						has_relation_soulmate = var:my_second_half
					}
				}
				desc = theramore_events.106.desc.love
			}
			desc = theramore_events.106.desc.normal
		}
	}
	theme = lover_relation
	override_background = {
		reference = new_home_theramore
	}
	left_portrait = {
		character = root
		animation = love
	}
	right_portrait = {
		character = root.var:my_second_half
		animation = personality_rational
	}

	trigger = {
		var:my_second_half = { is_alive = yes is_married = no is_adult = yes }
		is_married = no
		is_adult = yes
		trigger_if = {
			limit = {
				is_male = yes
			}
			var:my_second_half = { is_female = yes age < 40 }
		}
		trigger_else = {
			age < 45
			var:my_second_half = { is_male = yes }
		}
	}

	option = {
		name = theramore_events.106.a
		if = {
			limit = { has_ep2_dlc_trigger = yes }
			custom_tooltip = theramore_events.106.grand_wedding
		}
		show_as_tooltip = {
			random_list = {
				8 = {
					if = { # tooltips dont accept variables so i have to do this?
						limit = { is_male = yes }
						custom_tooltip = theramore_events.106.tooltip.she.a
					}
					else = { custom_tooltip = theramore_events.106.tooltip.he.a }
					var:my_second_half = {
						create_title_and_vassal_change = {
							type = swear_fealty
							save_scope_as = changing_liege
						}
						change_liege = {
							liege = root
							change = scope:changing_liege
						}
						resolve_title_and_vassal_change = scope:changing_liege
					}
				}
				2 = {
					if = {
						limit = { is_male = yes }
						custom_tooltip = theramore_events.106.tooltip.she.b
					}
					else = { custom_tooltip = theramore_events.106.tooltip.he.b }
					if = { limit = { has_relation_soulmate = var:my_second_half } remove_relation_soulmate = var:my_second_half }
					else_if = { limit = { has_relation_lover = var:my_second_half } remove_relation_lover = var:my_second_half }
				}
			}
		}
		var:my_second_half = { trigger_event = { id = theramore_events.107 days = 1 } }

		ai_chance = {
			base = 1
		}
	}
	option = {
		name = theramore_events.106.b
		

		ai_chance = {
			base = 0
		}
	}
}

theramore_events.107 = { #Marriage
	type = character_event
	title = theramore_events.106.t
	desc = {
		desc = theramore_events.106.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_relation_lover = var:my_second_half
						has_relation_potential_lover = var:my_second_half
						has_relation_soulmate = var:my_second_half
					}
				}
				desc = theramore_events.106.desc.love
			}
			desc = theramore_events.106.desc.normal
		}
	}
	theme = lover_relation
	override_background = {
		reference = new_home_theramore
	}
	left_portrait = {
		character = root
		animation = love
	}
	right_portrait = {
		character = root.var:my_second_half
		animation = personality_rational
	}

	trigger = {
		var:my_second_half = { is_alive = yes is_married = no }
		is_married = no
	}

	option = {
		name = theramore_events.107.a
		save_scope_as = spouse1
		var:my_second_half = { save_scope_as = spouse2 }
		if = {
			limit = {
				has_ep2_dlc_trigger = yes
			}
			if = {
				limit = {
					scope:spouse2 = { is_male = yes }
				}
				create_grand_wedding_betrothal = {
					SPOUSE_1 = scope:spouse2
					SPOUSE_2 = scope:spouse1
					HOST = scope:spouse2
					PROMISEE = scope:spouse1
				}
			}
			else = {
				scope:spouse2 = { create_betrothal_matrilineal = scope:spouse1 }
				set_grand_wedding_betrothal_variables = {
					SPOUSE_1 = scope:spouse2
					SPOUSE_2 = scope:spouse1
					HOST = scope:spouse2
					PROMISEE = scope:spouse1
				}
			}
		}
		else_if = {
			limit = {
				scope:spouse2 = { is_male = yes }
			}
			marry = scope:spouse2
		}
		else = {
			marry_matrilineal = scope:spouse2
		}
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = changing_liege
		}
		change_liege = {
			liege = var:my_second_half
			change = scope:changing_liege
		}
		resolve_title_and_vassal_change = scope:changing_liege
		if = {
			limit = { NOT = { faith = var:my_second_half.faith } is_independent_ruler = no }
			custom_tooltip = {
				text = theramore_events.107.tooltip.contract
				vassal_contract_set_obligation_level = {
					type = religious_rights
					level = 1
				}
			}
		}
		var:my_second_half = {
			send_interface_toast = {
				title = theramore_events.107.a
				left_icon = root.var:my_second_half
				right_icon = root
			}
			every_character_war = {
				limit = {
					is_war_leader = prev
					root = {
						NOR = {
							is_at_war_with = prev.primary_defender
							is_at_war_with = prev.primary_attacker
						}
					}
				}
				hidden_effect = {
					set_called_to = root
				}
				if = {
					limit = {
						is_attacker = prev
					}
					add_attacker = root
				}
			}
		}
		hidden_effect = {
			every_character_war = {
				limit = {
					is_war_leader = root
					scope:spouse2 ?= {
						NOR = {
							is_at_war_with = prev.primary_defender
							is_at_war_with = prev.primary_attacker
						}
					}
				}
				hidden_effect = {
					set_called_to = scope:spouse2
				}
				if = {
					limit = {
						is_attacker = root
					}
					add_attacker = scope:spouse2
				}
			}
		}

		ai_chance = {
			base = 8
		}
	}
	option = {
		name = theramore_events.107.b
		var:my_second_half = {
			send_interface_toast = {
				title = theramore_events.107.b
				left_icon = root.var:my_second_half
				right_icon = root
			}
		}
		if = { limit = { has_relation_soulmate = var:my_second_half } remove_relation_soulmate = var:my_second_half }
		else_if = { limit = { has_relation_lover = var:my_second_half } remove_relation_lover = var:my_second_half }
		if = {
			limit = {
				is_ai = yes
			}
			add_opinion = {
				modifier = keeps_bothering_me_opinion
				target = root.var:my_second_half
				opinion = -30
				years = 10
			}
		}

		ai_chance = {
			base = 2
		}
	}
}

theramore_events.110 = { #Ve von
	type = character_event
	title = theramore_sm_events.005.t
	desc = theramore_events.110.desc
	theme = realm
	override_background = {
		reference = new_home_theramore
	}
	left_portrait = {
		character = root
		animation = drink_goblet
	}
	right_portrait = {
		character = var:my_second_half
		animation = happiness
	}

	immediate = {
		remove_global_variable = theramore_started
		set_culture = culture:theramore
		save_scope_as = theramore_ruler
		var:my_second_half = { save_scope_as = theramore_ruler2 }
		hidden_effect = {
			every_courtier_or_guest = {
				set_culture = culture:theramore
			}
			if = {
				limit = { is_independent_ruler = yes has_game_rule = wc_theramore_mechanic_on }
				global_var:global_theramorian_rulers = {
					add_to_variable_list = {
						name = theramorian_rulers
						target = root
					}
				}
				give_variable_and_parties_for_new_theramore_ruler = yes
			}
			every_sub_realm_county = {
				limit = { holder = root NOR = { culture = culture:theramore culture = culture:lordaeronian } }
				set_county_faith = root.faith
				set_county_culture = culture:theramore
				
				change_development_level = 4 change_county_control = 40
				title_province = {
					if = {
						limit = {
							has_holding_type = tribal_holding
						}
						set_holding_type = castle_holding
					}
					generate_building = yes
				}
			}
		}
		if = {
			limit = { NOT = { has_global_variable = founded_theramore } }
			every_player = {
				limit = { NOR = { this = scope:theramore_ruler this = scope:theramore_ruler2 } }
				trigger_event = {
					id = theramore_events.111
					days = 1
				}
			}
			set_global_variable = founded_theramore
		}
	}
	option = {
		name = theramore_events.110.a
		add_prestige_level = 2
	}
}

theramore_events.111 = { #Notification to other players
	type = character_event
	title = theramore_sm_events.006.t
	desc = theramore_events.111.desc
	theme = travel_sea
	override_background = {
		reference = sm_ship_in_storm_1
	}
	left_portrait = {
		character = scope:theramore_ruler
		animation = celebrate_sword
	}
	right_portrait = {
		character = scope:theramore_ruler2
		animation = war_attacker
	}

	option = {
		name = theramore_sm_events.006.a
	}
}

#########################################
########### Theramore calling ###########
#########################################

theramore_events.200 = {
	type = letter_event
	opening = {
		desc = theramore_events.200.opening.a
	}
	desc = theramore_events.200.opening
	sender = scope:letter_sender

	option = { #We go
		name = theramore_events.200.a

		custom_tooltip = theramore_events.001.tooltip.a

		if = {
			limit = { exists = dynasty NOT = { dynasty.dynast = root } }
			add_trait = disinherited
		}
		add_prestige = 500

		save_scope_as = accepted_person
		scope:letter_sender = {
			trigger_event = {
				id = theramore_events.201
				days = 1
			}
		}

		ai_chance = {
			base = 2
			modifier = {
				add = 15
				OR = {
					is_at_war = yes
					top_liege ?= { is_at_war = yes }
				}
			}
			modifier = {
				add = 15
				OR = {
					has_trait = eccentric #love adventure
					has_trait = zealous #believe medivh
					has_trait = compassionate #defend my people
				}
			}
		}
	}
	option = { #We stay
		name = theramore_events.100.a

		custom_tooltip = theramore_events.001.tooltip.b
		
		if = {
			limit = {
				exists = liege
				NOT = { liege = root }
			}
			reverse_add_opinion = {
				target = liege
				modifier = loyal_servant
				opinion = 30
			}
		}

		ai_chance = {
			base = 1
		}
	}
}

theramore_events.201 = {
	type = letter_event
	opening = {
		desc = theramore_events.201.opening.a
	}
	desc = theramore_events.201.opening
	sender = scope:accepted_person

	option = {
		name = theramore_events.201.a
		reverse_add_opinion = {
			target = scope:accepted_person
			modifier = loyal_servant
			opinion = 30
		}
		add_to_variable_list = { name = theramorean_comrades target = scope:accepted_person }
		if = {
			limit = { is_ai = yes }
			add_opinion = {
				target = scope:accepted_person
				modifier = relieved_opinion
				opinion = 30
			}
		}
	}
}
theramore_events.203 = { #We are in storm 1
	type = character_event
	title = theramore_sm_events.002.t
	desc = theramore_events.203.desc
	theme = travel_sea
	override_background = {
		reference = sm_ship_in_storm_1
	}
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:fleet_captain
		animation = worry
	}

	option = {
		name = theramore_events.203.a

		ai_chance = {
			base = 1
		}
	}
}

theramore_events.204 = { #We are in storm 2
	type = character_event
	title = theramore_sm_events.003.t
	desc = theramore_events.204.desc
	theme = travel_sea
	override_background = {
		reference = sm_ship_in_storm_2
	}
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:fleet_captain
		animation = war_attacker
	}

	option = {
		name = theramore_events.204.a

		ai_chance = {
			base = 1
		}
	}
}

# Theramore mechanic related
theramore_events.300 = {
	type = character_event
	hidden = yes
	
	immediate = {
		theramore_reward_courtier = { TEMPLATE = knight_errant_character }
	}
}
theramore_events.301 = {
	type = character_event
	hidden = yes
	
	immediate = {
		theramore_reward_courtier = { TEMPLATE = physician_excellent_character_template }
	}
}