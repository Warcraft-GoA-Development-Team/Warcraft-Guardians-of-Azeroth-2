types ProgressBars {
	type wc_progressbar_current_mana = progressbar {
		size = { 25 25 }
		direction = vertical
		value = 50
		progresstexture = "gfx/interface/icons/currencies/icon_full_mana_crystal.dds"
		noprogresstexture = "gfx/interface/icons/currencies/icon_empty_mana_crystal.dds"
	}
}
types Breakdowns {
	type widget_mana_breakdown_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no

		using = DefaultTooltipBackground

		vbox = {
			layoutpolicy_horizontal = expanding
			set_parent_size_to_minimum = yes
			restrictparent_min = yes
			minimumsize = { 280 0 }

			margin = { 15 10 }
			spacing = 20

			vbox = {
				layoutpolicy_horizontal = expanding
				alwaystransparent = no

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "RESOURCES_MANA_BREAKDOWN_HEADER_LINE"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "RESOURCES_MANA_BREAKDOWN_REGENERATION_LINE"
								tooltip = "[Scope.GetScriptValueDesc('wc_mana_regeneration_value')]"
							}
						}
					}
				}
				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "RESOURCES_MANA_MODIFIERS_HEADER_LINE"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "RESOURCES_MANA_PLAYER_BREAKDOWN_PROWESS_LINE"
							}
						}
					}
				}
				vbox = {
					layoutpolicy_horizontal = expanding
					# margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "RESOURCES_MAX_MANA_BREAKDOWN_HEADER_LINE"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "[Scope.GetScriptValueDesc('wc_max_mana_value')]"
							}
						}
					}
				}
			}
			vbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5

				divider_light = { layoutpolicy_horizontal = expanding }

				text_single = {
					layoutpolicy_horizontal = expanding
					text = "RESOURCES_MANA_BREAKDOWN_PERCENTAGE_LINE"
				}
				hbox = {
					layoutpolicy_horizontal = expanding
					margin_left = -3

					progressbar_standard = {
						layoutpolicy_horizontal = expanding
						size = { -1 15 }
						value = "[FixedPointToProgressbarValue(Scope.ScriptValue('wc_current_mana_percent_value'))]"
					}
				}
			}
		}
	}
	type known_spells_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no
		
		using = DefaultTooltipBackground
		vbox = {
			max_width = 200
			layoutpolicy_horizontal = expanding
			restrictparent_min = yes
			margin = { 20 10 }
			spacing = 20

			vbox = {
				layoutpolicy_horizontal = expanding
				alwaystransparent = no

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "KNOWN_SPELLS_TEXT"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					dynamicgridbox = {
						datamodel = "[GetPlayer.MakeScope.GetList( 'known_spells' )]"
						item = {
							text_single = {
								margin_bottom = 5
								layoutpolicy_horizontal = expanding
								text = "SPELL_IN_LIST_TEXT"
								tooltipwidget = {
									widget_spell_breakdown_tooltip = {}
								}
							}
						}
					}
				}
			}
		}
	}
	type widget_spell_breakdown_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no
		
		using = DefaultTooltipBackground

		vbox = {
			max_width = 400
			layoutpolicy_horizontal = expanding
			restrictparent_min = yes
			margin = { 15 10 }
			spacing = 20

			vbox = {
				layoutpolicy_horizontal = expanding
				alwaystransparent = no

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "SPELL_TYPE"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "[Localize(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_type')))]"
							}
						}
					}
				}
				vbox = {
					layoutpolicy_horizontal = expanding
					spacing = 5
					margin_bottom = 10

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "SPELL_TARGETS"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "[Localize(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_targets')))]"
							}
						}
					}
				}
				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "SPELL_EFFECTS"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_multi = {
								parentanchor = left
								autoresize = yes
								max_width = 400
								layoutpolicy_horizontal = expanding
								text = "[Localize(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_effects')))]"
							}
						}
					}
				}
				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
					layoutpolicy_horizontal = expanding
						text = "SPELL_CD_CT"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10 
							text_single = {
								layoutpolicy_horizontal = expanding
								text = "NO_CD_TEXT"
								visible = "[EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_cooldown_value'))), '(CFixedPoint)0')]"
								tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_cooldown_value')))]"
							}
							text_single = {
								layoutpolicy_horizontal = expanding
								text = "SPELL_CD_TEXT"
								tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_cooldown_value')))]"
							}
							text_single = {
								layoutpolicy_horizontal = expanding
								visible = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_cast_time_value'))), '(CFixedPoint)0'))]"
								text = "SPELL_CT_TEXT"
								tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_cast_time_value')))]"
							}
							text_single = {
								layoutpolicy_horizontal = expanding
								visible = "[EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_cast_time_value'))), '(CFixedPoint)0')]"
								text = "NO_CT_TEXT"
								tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_cast_time_value')))]"
							}
							text_single = {
								layoutpolicy_horizontal = expanding
								text = "SPELL_DUR_TEXT"
								visible = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.ScriptValue(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_duration_days_value'))), '(CFixedPoint)0'))]"
								tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc(Concatenate('wc_spell_',Concatenate(Scope.GetFlagName, '_duration_days_value')))]"
							}
						}
					}
				}
			}
		}

	}
	type widget_hp_breakdown_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no

		using = DefaultTooltipBackground
		vbox = {
			layoutpolicy_horizontal = expanding
			set_parent_size_to_minimum = yes
			restrictparent_min = yes
			minimumsize = { 280 0 }

			margin = { 20 10 }

			vbox = {
				layoutpolicy_horizontal = expanding
				alwaystransparent = no
				margin_bottom = 10
				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "RESOURCES_HP_BREAKDOWN_HEADER_LINE"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}
				}
				
				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					hbox = {
						layoutpolicy_horizontal = expanding

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "RESOURCES_HP_BREAKDOWN_REGENERATION_LINE"
						}
					}
					
					hbox = {
						layoutpolicy_horizontal = expanding
						text_single = {
							align = left
							text = "[Scope.GetScriptValueDesc('wc_hp_replenishment_value')]"
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					spacing = 10 
					margin_bottom = 10
					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 10

						text_single = {
							layoutpolicy_horizontal = expanding
							text = "RESOURCES_HP_BREAKDOWN_BASE_LINE"
							default_format = "#T"

							background = {
								using = Background_Area
								margin = { 10 0 }
								margin_bottom = 5
							}
						
						}
					}

					hbox = {
						layoutpolicy_horizontal = expanding
						spacing = 10
						text_single = {
							text = "[Character.GetHealthInfo]"
						}
					}
					divider_light = { layoutpolicy_horizontal = expanding }
					text_single = {
						layoutpolicy_horizontal = expanding
						text = "RESOURCES_HP_BREAKDOWN_PERCENTAGE_LINE"
					}
					hbox = {
						layoutpolicy_horizontal = expanding
						margin_left = -3
	
						progressbar_standard = {
							layoutpolicy_horizontal = expanding
							size = { -1 15 }
							value = "[FixedPointToProgressbarValue(Scope.ScriptValue('wc_current_hp_percent_value'))]"
						}
					}
				}
			}
		}
	}
	type widget_mp_breakdown_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no

		using = DefaultTooltipBackground
		vbox = {
			layoutpolicy_horizontal = expanding
			set_parent_size_to_minimum = yes
			restrictparent_min = yes
			minimumsize = { 280 0 }

			margin = { 15 10 }
			spacing = 20

			vbox = {
				layoutpolicy_horizontal = expanding
				alwaystransparent = no

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5
					text_single = {
						layoutpolicy_horizontal = expanding
						text = "MAGICAL_PROWESS_TEXT"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						spacing = 10
						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "[Scope.GetScriptValueDesc('wc_mp_value')]"
							}
						}
						text_single = {
							layoutpolicy_horizontal = expanding
							text = "MAGICAL_PROWESS_EFFECT"
						}
					}
				}
			}
		}
	}
	type widget_current_spell_casting_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no
		using = DefaultTooltipBackground

		vbox = {
			layoutpolicy_horizontal = expanding
			restrictparent_min = yes
			margin = { 15 10 }
			spacing = 20

			vbox = {
				layoutpolicy_horizontal = expanding
				alwaystransparent = no

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "CASTING_TEXT"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "REMAINING_CT_TEXT"
							}

							
						}
					}
				}
				
				
			}
		}
	}
	type widget_current_spell_cd_tooltip = widget {
		size = { 50 50 }
		alwaystransparent = no
		using = DefaultTooltipBackground

		vbox = {
			layoutpolicy_horizontal = expanding
			restrictparent_min = yes
			margin = { 15 10 }
			spacing = 20

			vbox = {
				layoutpolicy_horizontal = expanding
				alwaystransparent = no

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 10
					spacing = 5

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "CD_TEXT"
						default_format = "#T"

						background = {
							using = Background_Area
							margin = { 10 0 }
							margin_bottom = 5
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding

						hbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								layoutpolicy_horizontal = expanding
								text = "REMAINING_CD_TEXT"
							}
						}
					}
				}
			}
		}
	}
}