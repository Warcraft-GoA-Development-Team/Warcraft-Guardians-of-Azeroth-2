enforce_the_brotherhood_scripted_effect = {
	# Display simplified results.
	custom_tooltip = create_holy_order_decision_effect_message
	# Select a random county.
	title:c_northshire.holder = {
		random_held_title = {
			limit = {
				tier = tier_county
				title_province = { geographical_region = world_eastern_kingdoms_azeroth_azeroth }
				any_county_province = {
					OR = {
						has_holding = no
						has_holding_type = castle_holding
						has_holding_type = city_holding
					}
				}
			}
			save_scope_as = designated_county
		}
	}
	
	# Select an appropriate barony.
	## If there's an empty space in the capital, we create a castle.
	if = {
		limit = {
			scope:designated_county = {
				any_county_province = { has_holding = no }
			}
		}
		scope:designated_county = {
			random_county_province = {
				limit = { has_holding = no }
				set_holding_type = castle_holding
				barony = { save_scope_as = leased_barony }
			}
		}
	}
	## Otherwise, grab an existing non-capital castle/city.
	else = {
		scope:designated_county = {
			random_county_province = {
				limit = {
					is_county_capital = no
					OR = {
						has_holding_type = castle_holding
						has_holding_type = city_holding
					}
				}
				barony = { save_scope_as = leased_barony }
			}
		}
	}
	# Create a suitable leader for the Brotherhood
	create_character = {
		template = wc_northshire_deacon
		location = scope:leased_barony.title_province
		save_scope_as = leader
	}
	# Create the actual holy order.
	create_holy_order_neutral_effect = {
		LEADER = scope:leader
		CAPITAL = scope:leased_barony
		NEW_HO_SCOPE = new_holy_order
		FOUNDER = scope:founder
	}
	hidden_effect = {
		scope:leader = {
			add_trait = order_member
			add_piety_level = 2
			add_gold = holy_order_starting_gold
			every_courtier = { add_trait = order_member }
		}
	}
	## Give it some buildings.
	hidden_effect = {
		scope:leased_barony.title_province = {
			# Walls & Towers.
			if = {
				limit = {
					NOT = { has_building_or_higher = curtain_walls_01 }
				}
				# If it doesn't have a free building slot, give it one.
				if = {
					limit = { free_building_slots = 0 }
					add_province_modifier = extra_building_slot
				}
				# Add the building.
				add_building = curtain_walls_01
			}
			# Barracks.
			if = {
				limit = {
					NOT = { has_building_or_higher = barracks_01 }
				}
				# If it doesn't have a free building slot, give it one.
				if = {
					limit = { free_building_slots = 0 }
					add_province_modifier = extra_building_slot
				}
				# Add the building.
				add_building = barracks_01
			}
			# Military Camps.
			if = {
				limit = {
					NOT = { has_building_or_higher = military_camps_01 }
				}
				# If it doesn't have a free building slot, give it one.
				if = {
					limit = { free_building_slots = 0 }
					add_province_modifier = extra_building_slot
				}
				# Add the building.
				add_building = military_camps_01
			}
		}
	}
	# And the Deacon of the Brotherhood certainly looks favourably on their patron.
	## Hidden because the title doesn't play nicely with characters created in the same immediate block.
	hidden_effect = {
		scope:abbot = { set_relation_friend = { reason = friend_enforce_the_brotherhood target = scope:leader } }
	}
	# Mark the Brotherhood as existing & make them easily accessible
	set_global_variable = {
		name = brotherhood_of_northshire_title
		value = scope:leader.primary_title
	}
	# Some minor misc effects.
	create_holy_order_effect = yes
	scope:leader.primary_title = { set_coa = ho_brotherhood_of_northshire }
	# Flag the Brotherhood as enforced.
	hidden_effect = {
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:flag_enforced_brotherhood
		}
	}
}

brotherhood_of_northshire_join_the_war_scripted_effect = {
	scope:founder = {
		every_character_war = {
			limit = {
				primary_defender = scope:founder
				primary_attacker = { is_crisis_trigger = yes } 
				NOT = { is_participant = scope:abbot }
			}
			hidden_effect = {
				set_called_to = scope:abbot
			}
			add_defender = scope:abbot
		}
	}
}

enforce_the_brotherhood_decision_tooltip_effect = {
	# Standard info.
	custom_tooltip = create_holy_order_decision_effect_message
	create_holy_order_effect = yes
}

create_silver_hand_scripted_effect = {
	# Find/Create a suitable leader for the Silver Hand
	every_living_character = {
		limit = {
			is_lore_silver_hand_paladin = yes
			NOT = { this = scope:founder }
		}
		count = 1
		save_scope_as = leader
	}
	if = {
		limit = {
			NOT = { exists = scope:leader }
		}
		create_character = { # same template
			template = wc_northshire_deacon
			location = scope:leased_barony.title_province
			save_scope_as = leader
		}
	}
	# Find Duchy and give to leader
	title:d_andorhal = {
		set_de_jure_liege_title = title:d_order_of_the_silver_hand
		scope:leader = {
			set_primary_title_to = title:d_order_of_the_silver_hand
		}
	}
	# Mark the Silver Hand  as existing & make them easily accessible
	set_global_variable = {
		name = silver_hand_title
		value = scope:leader.primary_title
	}
	# Some minor misc effects.
	create_holy_order_effect = yes
	# d_order_of_the_silver_hand
	# Flag the Silver Hand  as enforced.
	hidden_effect = {
		add_to_global_variable_list = {
			name = unavailable_unique_decisions
			target = flag:flag_silver_hand_creation
		}
	}
}