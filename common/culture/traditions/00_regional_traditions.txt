################################
# REGIONAL CULTURAL TRADITIONS #
################################

tradition_byzantine_succession = {
	category = regional

	layers = {
		0 = intrigue
		1 = mediterranean
		4 = crown.dds
	}
	
	is_shown = {
		# Warcraft
		always = no
		# End of Warcraft
	}
	can_pick = {
		# Warcraft
		always = no
		# End of Warcraft
		
		custom_tooltip = {
			text = cannot_have_tradition_court_eunuchs
			NOT = { any_in_list = { list = traits this = flag:tradition_court_eunuchs } }
		}
		custom_tooltip = {
			text = cannot_have_tradition_merciful_blindings
			NOT = { any_in_list = { list = traits this = flag:tradition_merciful_blindings } }
		}
	}
	
	parameters = {
		can_blind_prisoners = yes
		can_castrate_prisoners = yes
		eunuch_trait_bonuses = yes
		can_appoint_chief_eunuch = yes
		physical_disfigurement_blocks_inheritance = yes #Actually only blocks claimants and reduce score in elective. Also includes infertility for tooltip reasons.
		children_can_be_born_in_the_purple = yes
		disloyal_trait_more_common = yes
	}
	character_modifier = {
		eligible_child_opinion = 20
		short_reign_duration_mult = 0.5
		hostile_scheme_power_mult = 0.25
		ai_amenity_target_baseline = 0.75
		ai_amenity_spending = 1
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_courtly }
						any_in_list = { list = traits this = flag:ethos_communal }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_courtly_or_communal_desc
				}
			}
			# Warcraft removing
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}

	ai_will_do = { value = 100 }
}

tradition_lords_of_the_elephant = {
	category = regional

	# Warcraft
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_innovation = innovation_elephantry
					has_cultural_pillar = heritage_argusean
				}
				desc = tradition_lords_of_the_elephant_desc
			}
			desc = tradition_lords_of_the_elephant_regional_desc
		}
	}
	# End of Warcraft

	layers = {
		0 = learning
		1 = indian
		4 = elephant.dds
	}
	
	is_shown = {
		OR = {
			# Warcraft
			AND = {
				any_culture_county = {
					title_province = {
						geographical_region = world_innovation_elephants
					}
				}
				can_unlock_innovation_elephantry_trigger = yes
			}
			can_unlock_innovation_war_dinosaur_trigger = yes
			
			has_innovation = innovation_elephantry
			has_innovation = innovation_war_dinosaur
		}
	}
	can_pick = {
		OR = {
			has_innovation = innovation_elephantry
			has_innovation = innovation_war_dinosaur
		}
	}
	
	parameters = {
		can_recruit_jungle_specialist = yes
		elephant_pens_building_bonuses = yes
		elephant_bonuses_for_rank_4_education = yes
	}
	character_modifier = {
		elephant_cavalry_recruitment_cost_mult = -0.15
		elephant_cavalry_maintenance_mult = -0.15
		elephant_cavalry_toughness_mult = 0.1
		elephant_cavalry_damage_mult = 0.1
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_bellicose }
						any_in_list = { list = traits this = flag:ethos_courtly }
						any_in_list = { list = traits this = flag:ethos_stoic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_bellicose_stoic_or_courtly_desc
				}
			}
			if = {
				limit = {
					NOT = {
						any_culture_county = {
							any_county_province = {
								count >= 3
								has_building_or_higher = elephant_pens_02
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = elephant_pens_percentage_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		
		# Warcraft
		if = {
			limit = { 
				scope:character = { 
					OR = {
						like_elekks_trigger = no 
						can_unlock_innovation_war_dinosaur_trigger = yes
					}
				}
			}
			multiply = 0
		}
	}
}

# tradition_african_tolerance = {
	# category = regional

	# layers = {
		# 0 = diplo
		# 1 = mena
		# 4 = diplomat.dds
	# }
	
	# is_shown = {
		# OR = { # For cultures with any heritage from western or central Africa
			# like_heritage_berber_trigger = yes
			# like_heritage_west_african_trigger = yes
			# like_heritage_central_african_trigger = yes
			# like_heritage_sahelian_trigger = yes
			# like_heritage_senegambian_trigger = yes
			# like_heritage_akan_trigger = yes
			# like_heritage_yoruba_trigger = yes
		# }
		# NOT = {
			# any_in_list = { list = traits this = flag:tradition_steppe_tolerance }
		# }
	# }
	# can_pick = {
	# }
	
	# parameters = {
		# less_likely_to_force_conversion = yes
	# }
	# character_modifier = {
		# different_faith_opinion = 10
		# different_faith_county_opinion_mult = -0.25
	# }
	
	# cost = {
		# prestige = {
			# add = {
				# value = tradition_base_cost
				# desc = BASE
				# format = "BASE_VALUE_FORMAT"
			# }
			# if = {
				# limit = {
					# NOR = {
						# any_in_list = { list = traits this = flag:ethos_egalitarian }
						# any_in_list = { list = traits this = flag:ethos_communal }
					# }
				# }
				# add = {
					# value = tradition_incompatible_ethos_penalty
					# desc = not_communal_or_egalitarian_desc
				# }
			# }
			# if = {
				# limit = {
					# trigger_if = {
						# limit = {
							# scope:character = {
								# is_ai = no
							# }
						# }
						# NOT = {
							# any_culture_global = {
								# count >= 5
								# cultural_acceptance = { target = prev value >= 50 }
							# }
						# }
					# }
					# trigger_else = {
						# always = no
					# }
				# }
				# add = {
					# value = tradition_unfulfilled_criteria_penalty
					# desc = five_accepted_cultures_desc
				# }
			# }
			
			# multiply = tradition_replacement_cost_if_relevant
		# }
	# }

	# ai_will_do = {
		# value = 100
		# if = {
			# limit = {
				# OR = {
					# any_in_list = { list = traits this = flag:tradition_zealous_people }
					# any_in_list = { list = traits this = flag:tradition_by_the_sword }
				# }
			# }
			# multiply = 0
		# }
	# }
# }

# tradition_the_witenagemot = {
	# category = regional

	# layers = {
		# 0 = diplo
		# 1 = western
		# 4 = council.dds
	# }
	
	# is_shown = {
		# OR = {
			# like_heritage_west_germanic_trigger = yes
			# like_heritage_brythonic_trigger = yes
			# like_heritage_goidelic_trigger = yes
		# }
	# }
	# can_pick = {
		# OR = {
			# like_heritage_west_germanic_trigger = yes
			# like_heritage_brythonic_trigger = yes
			# like_heritage_goidelic_trigger = yes
		# }
	# }
	
	# parameters = {
		# witenagemot_succession_enabled = yes
	# }
	# character_modifier = {
		# monthly_prestige_gain_per_happy_powerful_vassal_mult = 0.04
	# }
	# doctrine_character_modifier = {
		# name = tradition_the_witenagemot_name
		# doctrine = doctrine_theocracy_temporal
		# realm_priest_opinion = 15
	# }
	
	# cost = {
		# prestige = {
			# add = {
				# value = tradition_base_cost
				# desc = BASE
				# format = "BASE_VALUE_FORMAT"
			# }
			# if = {
				# limit = {
					# NOR = {
						# any_in_list = { list = traits this = flag:ethos_bureaucratic }
						# any_in_list = { list = traits this = flag:ethos_stoic }
					# }
				# }
				# add = {
					# value = tradition_incompatible_ethos_penalty
					# desc = not_stoic_or_bureaucratic_desc
				# }
			# }
			# if = {
				# limit = {
					# NOT = {
						# scope:character = {
							# any_councillor = {
								# percent = 1
								# opinion = {
									# target = prev
									# value >= 0
								# }
							# }
						# }
					# }
				# }
				# add = {
					# value = tradition_unfulfilled_criteria_penalty
					# desc = councillor_with_negative_opinion_desc
				# }
			# }
			
			# multiply = tradition_replacement_cost_if_relevant
		# }
	# }

	# ai_will_do = {
		# value = 100
		# if = {
			# limit = {
				# any_in_list = { list = traits this = flag:tradition_things }
			# }
			# multiply = 0
		# }
	# }
# }

tradition_things = {
	category = regional

	layers = {
		0 = learning
		1 = western
		4 = council.dds
	}
	
	is_shown = {
		# Warcraft
		like_north_germanic_group_trigger = yes
		#End of Warcraft
	}
	can_pick = {
		# Warcraft
		like_north_germanic_group_trigger = yes
		#End of Warcraft
	}
	
	parameters = {
		scandinavian_elective_enabled = yes
		trait_county_opinion_modifiers = yes
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_bureaucratic }
						any_in_list = { list = traits this = flag:ethos_bellicose }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_bellicose_or_bureaucratic_desc
				}
			}
			if = {
				limit = {
					NOT = {
						scope:character = {
							any_sub_realm_county = {
								county_opinion < 0
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = counties_with_low_county_opinion_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		
		# Warcraft - No  Witenagemot
		#if = {
		#	limit = {
		#		any_in_list = { list = traits this = flag:tradition_the_witenagemot }
		#	}
		#	multiply = 0
		#}
		# End of Warcraft 
	}
}

tradition_caravaneers = {
	category = regional

	layers = {
		0 = diplo
		1 = mena
		4 = camel.dds
	}
	
	is_shown = {
		# Warcraft
		any_culture_county = {
			title_province = {
				OR = {
					geographical_region = custom_deserts
					geographical_region = custom_oasis
				}
			}
		}
	}
	
	parameters = {
		wanderers_gain_extra_economic_skills = yes
		more_likely_to_leave_court = yes
	}
	
	character_modifier = {
		movement_speed = 0.05
		diplomatic_range_mult = 0.2
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					# Warcraft
					NOR = {
						any_in_list = { list = traits this = flag:ethos_egalitarian }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_egalitarian_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}

	ai_will_do = { value = 100 }
}

tradition_horse_lords = {
	category = regional

	layers = {
		0 = martial
		1 = mena
		4 = horses.dds
	}

	is_shown = {
		# Warcraft
		can_have_tradition_horse_lords_trigger = yes
		# End of Warcraft
	}
	
	can_pick = {
		# Warcraft
		custom_description = {
			text = culture_title_in_plains_desc
			always = no
			any_culture_county = {
				percent >= 0.4
				any_county_province = {
					OR = {
						geographical_region = world_innovation_camels
						geographical_region = world_pandaria_townlong_steppes
						geographical_region = world_kalimdor_central
						geographical_region = world_kalimdor_south_thousand_needles
					}
				}
			}
		}
	}
	
	parameters = {
		# Warcraft
		# unlock_maa_horse_archers = yes
		# End of Warcraft
		can_recruit_open_specialist = yes
	}

	character_modifier = {
		light_cavalry_damage_mult = 0.1
		light_cavalry_screen_mult = 0.1
		steppe_cancel_negative_supply = yes
		supply_duration = 1
		movement_speed = 0.1
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					# Warcraft
					NOT = {
						any_in_list = { list = traits this = flag:ethos_bellicose }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_bellicose_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
			#if = {
			#	limit = {
			#		NOR = {
			#			like_turkic_group_trigger = yes
			#			like_mongolic_group_trigger = yes
			#		}
			#	}
			#	add = {
			#		value = tradition_unfulfilled_criteria_penalty
			#		desc = steppe_heritage_reduction_desc
			#	}
			#}
		}
	}
	
	ai_will_do = {
		value = 100

		# Warcraft
		if = {
			limit = {
				NOT = { any_in_list = { list = traits this = flag:ethos_bellicose } }
			}
			multiply = 0
		}
		# End of Warcraft
	}
}

tradition_saharan_nomads = {
	category = regional

	layers = {
		0 = learning
		1 = mena
		4 = desert.dds
	}
	
	is_shown = {
		any_culture_county = {
			title_province = {
				# Warcraft
				geographical_region = custom_oasis
				# End of Warcraft
			}
		}
	}
	
	can_pick = {
		any_culture_county = {
			title_province = {
				# Warcraft
				geographical_region = custom_oasis
				# End of Warcraft
			}
		}
	}
	
	character_modifier = {
		light_cavalry_maintenance_mult = -0.25
		light_cavalry_recruitment_cost_mult = -0.25
		oasis_development_growth_factor = 0.1
		movement_speed = 0.1
	}
	province_modifier = {
		oasis_construction_gold_cost = -0.25
		desert_construction_gold_cost = -0.15
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_spiritual }
						any_in_list = { list = traits this = flag:ethos_stoic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_stoic_or_spiritual_desc
				}
			}
			# Warcraft - Removing
			# End of Warcraft
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = { value = 100 }
}

# Warcraft
# tradition_visigothic_codes = {}
# End of Warcraft

tradition_himalayan_settlers = {
	category = regional

	layers = {
		0 = learning
		1 = indian
		4 = mountain.dds
	}
	
	is_shown = { #Replaces Mountain Homes
		# Warcraft
		like_heritage_tibetan_trigger = yes
		NOT = { has_cultural_tradition = tradition_mountain_homes }
		# End of Warcraft
	}
	can_pick = {
		# Warcraft
		any_culture_county = {
			title_province = {
				geographical_region = world_pandaria_north
			}
		}
		# End of Warcraft
	}

	parameters = {
		unlock_maa_mountaineer = yes
		rough_terrain_expert_trait_more_common = yes
		mountain_trait_bonuses = yes
		can_recruit_mountain_specialist = yes
	}

	character_modifier = {
		mountains_development_growth_factor = 0.2
	}
	province_modifier = {
		mountains_construction_gold_cost = -0.15
		mountains_holding_construction_gold_cost = -0.15
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_spiritual }
						any_in_list = { list = traits this = flag:ethos_communal }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_communal_or_spiritual_desc
				}
			}
			# Warcraft - Removing
			# End of Warcraft
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		if = {
			limit = {
				NOT = {
					scope:character = {
						any_sub_realm_county = {
							percent >= 0.4
							title_province = {
								# Warcraft
								geographical_region = world_pandaria_north
								# End of Warcraft
							}
						}
					}
				}
			}
			multiply = 0
		}
	}
}

tradition_desert_nomads = {
	category = regional

	layers = {
		0 = martial
		1 = mena
		4 = camel.dds
	}
	
	is_shown = {
		# Warcraft
		any_culture_county = {
			title_province = { geographical_region = world_innovation_camels }
		}
		# End of Warcraft
	}
	can_pick = {
		custom_tooltip = {
			text = culture_in_camel_region_desc
			any_culture_county = {
				any_county_province = {
					geographical_region = world_innovation_camels
				}
			}
		}
	}
	
	parameters = {
		desert_warrior_trait_is_better = yes
	}
	character_modifier = {
		camel_cavalry_maintenance_mult = -0.2
		camel_cavalry_recruitment_cost_mult = -0.2
	}
	province_modifier = {
		desert_tax_mult = 0.1
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_spiritual }
						any_in_list = { list = traits this = flag:ethos_stoic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_stoic_or_spiritual_desc
				}
			}
			if = {
				limit = {
					NOT = {
						any_culture_county = {
							percent >= camel_percentage_multiplier_value
							any_county_province = {
								geographical_region = world_innovation_camels
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = culture_in_camel_region_percentage_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		if = {
			limit = {
				NOT = {
					scope:character = {
						any_sub_realm_county = {
							title_province = {
								OR = {
									geographical_region = world_innovation_camels
									# Warcraft
									geographical_region = world_kalimdor_south_silithus
									# End of Warcraft
								}
							}
						}
					}
				}
			}
			multiply = 0
		}
	}
}

tradition_mountaineer_ruralism = {
	category = regional

	layers = {
		0 = martial
		1 = western
		4 = mountain.dds
	}
	
	is_shown = {
		# Warcraft
		OR = {
			has_cultural_pillar = heritage_northern
			any_culture_county = {
				title_province = { 
					geographical_region = world_northrend_grizzly_hills 
				}
			}
		}
		# End of Warcraft
	}
	
	can_pick = {
		NOT = {
			has_cultural_tradition = tradition_mountain_homes
		}
		custom_description = {
			text = culture_in_mountains_desc
			any_culture_county = {
				any_county_province = {
					OR = {
						terrain = mountains
						terrain = desert_mountains
					}
				}
			}
		}
	}
	
	parameters = {
		# Warcraft
		# unlock_maa_zbrojnosh = yes
		# End of Warcraft
		hill_farms_building_bonuses = yes
		rough_terrain_expert_trait_more_common = yes
		mountain_trait_bonuses = yes
		can_recruit_mountain_specialist = yes
	}

	county_modifier = {
		hills_development_growth_factor = 0.1
		mountains_development_growth_factor = 0.1
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOT = {
						any_in_list = { list = traits this = flag:ethos_stoic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_stoic_desc
				}
			}
			if = {
				limit = {
					NOT = {
						any_culture_county = {
							percent >= 0.3
							any_county_province = {
								terrain = mountains
							}
						}
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = mountain_true_percentage_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
		if = {
			limit = {
				NOT = {
					scope:character = {
						any_sub_realm_county = {
							culture = scope:character.culture
							any_county_province = {
								OR = {
									terrain = mountains
									terrain = hills
								}
							}
						}
					}
				}
			}
			multiply = 0
		}
	}
}

# tradition_steppe_tolerance = {
	# category = regional

	# layers = {
		# 0 = intrigue
		# 1 = mena
		# 4 = greeting.dds
	# }
	
	# is_shown = {
		# NOR = {
			# any_in_list = { list = traits this = flag:tradition_african_tolerance }
			# any_in_list = { list = traits this = flag:tradition_religion_blending }
		# }
		# OR = {
			# like_mongolic_group_trigger = yes
			# like_turkic_group_trigger = yes
		# }
	# }
	# can_pick = {
		# custom_tooltip = {
			# text = culture_in_steppe_desc
			# any_culture_county = {
				# percent >= 0.4
				# any_county_province = {
					# steppe_region_trigger = yes
				# }
			# }
		# }
	# }

	# parameters = { #easily convert and don't force conversion
		# more_easily_converted = yes 
		# less_likely_to_force_conversion = yes 
	# }

	# character_modifier = { # easier to self-convert and create or reform faith
		# faith_creation_piety_cost_mult = -0.2
		# faith_conversion_piety_cost_mult = -0.2
		# different_faith_opinion = 10
		# different_faith_county_opinion_mult = -0.25 # reduced penalty for different faiths (note this appears confusing in the UI right now)
	# }

	# cost = {
		# prestige = {
			# add = {
				# value = tradition_base_cost
				# desc = BASE
				# format = "BASE_VALUE_FORMAT"
			# }
			# if = {
				# limit = {
					# NOR = {
						# any_in_list = { list = traits this = flag:ethos_bellicose }
						# any_in_list = { list = traits this = flag:ethos_egalitarian }
						# any_in_list = { list = traits this = flag:ethos_communal }
					# }
				# }
				# add = {
					# value = tradition_incompatible_ethos_penalty
					# desc = not_bellicose_egalitarian_or_communal_desc
				# }
			# }
			# # No extra cost here, since we have a fairly restrictive can_pick block.
			
			# multiply = tradition_replacement_cost_if_relevant
		# }
	# }
	
	# ai_will_do = {
		# value = 100
		# if = {
			# limit = {
				# any_in_list = { list = traits this = flag:ethos_spiritual }
			# }
			# multiply = 0.25
		# }
	# }
# }

# Warcraft
tradition_nubian_warrior_queens = {
	category = regional

	layers = {
		0 = intrigue
		1 = mediterranean
		4 = crown.dds
	}
	
	is_shown = {
		# Warcraft
		culture_prefer_female_warriors_trigger = yes
		# End of Warcraft
	}
	
	can_pick = {
		# Warcraft
		custom_tooltip = {
			text = female_preference_law_faith_or_culture_trigger
			
			scope:character = {
				scope:character = { is_male = no }
				primary_title = {
					NOR = {
						has_title_law = male_only_law
						has_title_law = male_preference_law
					}
				}
				NOR = {
					has_realm_law = male_only_law
					has_realm_law = male_preference_law
				}
			}
		}
		# End of Warcraft
	}

	parameters = {
		gender_equal_inheritance = yes
		female_only_inheritance = yes
		female_preference_inheritance = yes
		prowess_from_martial_education = yes
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			if = {
				limit = {
					NOT = {
						any_in_list = { list = traits this = flag:ethos_egalitarian }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_egalitarian_desc
				}
			}
			if = {
				limit = {
					trigger_if = {
						limit = {
							scope:character = {
								is_ai = no
							}
						}
						NAND = {
							any_ruler = {
								count >= 3
								culture = prev
								primary_title.tier > tier_barony
								is_male = yes
							}
							any_ruler = {
								count >= 3
								culture = prev
								primary_title.tier > tier_barony
								is_female = yes
							}
						}
					}
					trigger_else = {
						always = yes
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = three_gender_rulers_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = { value = 100 }
}
