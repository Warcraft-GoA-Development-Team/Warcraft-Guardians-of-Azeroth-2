namespace = travel_danger_events

##########################################################
# Travel Danger Terrain Events							#
# travel_danger_events - 9000-9999						#
# by Alexander Oltner								 			#
##########################################################

travel_danger_events.9000 = { # Wetlands, Floodplains, Forest, Jungle: Blood-sucking Insect Swarm
	type = character_event
	title = travel_danger_events.9000.t
	desc = travel_danger_events.9000.desc
	theme = travel_danger

	left_portrait = {
		character = root
		animation = stress
	}

	right_portrait = {
		character = scope:mosquito_victim
		animation = wedding_objection_start
	}
	
	trigger = {
		is_available_travelling_adult = yes
		is_location_valid_for_travel_event_on_land = yes

		location = {
			NOR = {
				has_province_modifier = winter_normal_modifier
				has_province_modifier = winter_harsh_modifier
			}
			OR = {
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = wetlands
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = floodplains
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = forest
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = taiga
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = jungle
				}
			}
		}

		current_travel_plan = {
			any_entourage_character = {
				is_physically_able_adult = yes
			}
		}
	}

	cooldown = { months = 1 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					is_physically_able_adult = yes
				}
				weight = {
					base = 1
					modifier = {
						add = 5
						has_relation_rival = root
					}
					modifier = {
						add = 5
						has_trait = bleeder
					}
					modifier = {
						add = 5
						has_trait = physique_bad
					}
				}
				save_scope_as = mosquito_victim
			}
		}
		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 7
		}
	}

	option = {
		name = travel_danger_events.9000.deviant
		trigger = {
			has_trait = deviant
		}
		trait = deviant
		
		stress_impact = {
			base = massive_stress_impact_loss
		}
		
		add_character_modifier = {
			modifier = drained_by_mosquitoes_modifier
			years = 3
		}
		add_character_modifier = {
			modifier = diplomacy_majesty_4090_no_raiment_modifier
			years = 1
		}
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				add_opinion = {
					target = root
					modifier = cruelty_opinion
					opinion = -25
				}
				add_character_modifier = {
					modifier = drained_by_mosquitoes_modifier
					years = 3
				}
				add_character_modifier = {
					modifier = diplomacy_majesty_4090_no_raiment_modifier
					years = 1
				}
			}
		}
	}

	option = {
		name = travel_danger_events.9000.herbalist
		trigger = {
			OR = {
				has_trait = lifestyle_herbalist
				has_trait = witch
				has_trait = lifestyle_physician
			}
		}
		trait = lifestyle_herbalist
		trait = witch
		trait = lifestyle_physician
		
		hidden_effect = {
			traveler_danger_xp_effect = {
				MIN = 3
				MAX = 7
			}
		}
		
		random = {
			chance = 10
			send_interface_toast = {
				title = drained_by_mosquitoes_modifier
				left_icon = root
				add_character_modifier = {
					modifier = drained_by_mosquitoes_modifier
					years = 3
				}
			}
		}
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				add_opinion = {
					target = root
					modifier = thankful_opinion
					opinion = 25
				}
				random = {
					chance = 10
					add_character_modifier = {
						modifier = drained_by_mosquitoes_modifier
						years = 3
					}
				}
			}
		}

		ai_chance = {
			base = 1000
		}
	}

	option = {
		name = travel_danger_events.9000.a
		
		stress_impact = {
			base = minor_stress_impact_gain
			sadistic = medium_stress_impact_gain
			callous = medium_stress_impact_gain
		}
		
		random = {
			chance = 75
			send_interface_toast = {
				title = drained_by_mosquitoes_modifier
				left_icon = root
				add_character_modifier = {
					modifier = drained_by_mosquitoes_modifier
					years = 3
				}
			}
		}
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				random = {
					chance = 75
					add_character_modifier = {
						modifier = drained_by_mosquitoes_modifier
						years = 3
					}
				}
			}
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
	}

	option = {
		name = travel_danger_events.9000.b
		
		stress_impact = {
			base = medium_stress_impact_gain
			compassionate = massive_stress_impact_gain
			just = medium_stress_impact_gain
			generous = medium_stress_impact_gain
			content = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
			sadistic = major_stress_impact_loss
			callous = major_stress_impact_loss
		}
		
		scope:mosquito_victim = {
			add_opinion = {
				target = root
				modifier = cruelty_opinion
				opinion = -40
			}
			add_character_modifier = {
				modifier = drained_by_mosquitoes_modifier
				years = 6
			}
			add_character_modifier = {
				modifier = diplomacy_majesty_4090_no_raiment_modifier
				years = 1
			}
		}
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				limit = {
					NOT = { this = scope:mosquito_victim }
				}
				random = {
					chance = 50
					add_character_modifier = {
						modifier = drained_by_mosquitoes_modifier
						years = 3
					}
				}
			}
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOR = {
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

travel_danger_events.9010 = { # All terrains: Wagon Wheel breaks
	type = character_event
	title = travel_danger_events.9010.t
	desc = travel_danger_events.9010.desc
	theme = travel_danger

	left_portrait = {
		character = root
		animation = disapproval
	}

	right_portrait = {
		character = scope:irritated_character
		animation = personality_irrational
	}
	
	trigger = {
		is_available_travelling_adult = yes
		is_location_valid_for_travel_event_on_land = yes

		location = {
			NOT = {
				has_sea_danger_type = { TRAVEL = root.current_travel_plan }
			}
		}

		current_travel_plan = {
			any_entourage_character = {
				is_physically_able_adult = yes
			}
		}
	}

	cooldown = { months = 1 }

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = root_scope
		location = {
			save_scope_as = location
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					is_physically_able_adult = yes
				}
				weight = {
					base = 1
					modifier = {
						add = {
							value = ai_energy
							multiply = -1
						}
					}
					modifier = {
						add = 500
						has_trait = lazy
					}
				}
				save_scope_as = irritated_character
			}
		}
		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 7
		}
	}

	option = {
		name = travel_danger_events.9010.strong
		trigger = {
			OR = {
				has_trait = strong
				has_trait = physique_good
			}
		}
		trait = strong
		
		add_prestige = minor_prestige_gain
		
		current_travel_plan = {
			delay_travel_plan = {
				days = 2 
			}
		}

		ai_chance = {
			base = 1000
		}
	}

	option = {
		name = travel_danger_events.9010.a
		
		current_travel_plan = {
			delay_travel_plan = {
				days = 5
			}
		}

		ai_chance = {
			base = 25
		}
	}

	option = {
		name = travel_danger_events.9010.b
		
		add_prestige = minor_prestige_loss
		
		current_travel_plan = {
			delay_travel_plan = {
				days = 2
			}
		}
		
		stress_impact = {
			arrogant = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = arrogant
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}

travel_danger_events.9020 = { # Sea, Desert, War: Emaciated
	type = character_event
	title = travel_danger_events.9020.t
	desc = {
		desc = travel_danger_events.9020.desc.first
		first_valid = {
			triggered_desc = {
				trigger = {
					location = {
						OR = {
							travel_danger_type = {
								travel_plan = root.current_travel_plan
								type = army
							}
							travel_danger_type = {
								travel_plan = root.current_travel_plan
								type = occupation
							}
							travel_danger_type = {
								travel_plan = root.current_travel_plan
								type = siege
							}
						}
					}
				}
				desc = travel_danger_events.9020.desc.war
			}
			desc = travel_danger_events.9020.desc.other
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_trait = content
						has_trait = temperate
					}
					NOR = {
						has_trait = comfort_eater
						has_trait = gluttonous
					}
				}
				desc = travel_danger_events.9020.desc.last.alt
			}
			desc = travel_danger_events.9020.desc.last
		}
	}
	theme = travel_danger

	left_portrait = {
		character = root
		animation = shock
	}

	right_portrait = {
		character = scope:emaciated_character
		animation = stress
	}
	
	trigger = {
		is_available_travelling_adult = yes
		
		culture = {
			NOR = {
				has_cultural_tradition = tradition_saharan_nomads
				has_cultural_tradition = tradition_desert_nomads
			}
		}

		location = {
			OR = {
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = desert
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					terrain = sea
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					type = army
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					type = occupation
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					type = siege
				}
			}
		}

		current_travel_plan = {
			any_entourage_character = {
				is_physically_able_adult = yes
			}
		}
	}

	cooldown = { months = 1 }

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 0.1
			culture = {
				NOR = {
					has_cultural_tradition = tradition_dryland_dwellers
					has_cultural_tradition = tradition_caravaneers
				}
			}
		}
	}

	immediate = {
		mp_delay_travel_plan = { DAYS = 90 }
		save_scope_as = root_scope
		location = {
			save_scope_as = location
			select_root_vegetable_effect = yes
		}
		current_travel_plan = {
			random_entourage_character = {
				limit = {
					is_physically_able_adult = yes
				}
				weight = {
					base = 1
					modifier = {
						add = current_weight
					}
				}
				save_scope_as = emaciated_character
			}
		}
		traveler_danger_xp_effect = {
			MIN = 10
			MAX = 15
		}
	}

	option = {
		name = travel_danger_events.9020.cannibal
		trigger = {
			OR = {
				has_trait = sadistic
				has_trait = arbitrary
				has_trait = gluttonous
				has_trait = callous
				is_cannibal_trigger = yes
			}
		}
		trait = cannibal
		trait = sadistic
		trait = arbitrary
		trait = gluttonous
		trait = callous
		
		scope:emaciated_character = {
			override_death_effect = {
				death_reason = death_vanished 
			}
		}
		
		give_cannibal_secret_or_trait_effect = yes
		custom_tooltip = cannibalicus_maximus
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				give_cannibal_secret_or_trait_effect = yes
				
				if = {
					limit = {
						any_secret = {
							secret_type = secret_cannibal
							NOT = { is_known_by = root }
						}
					}
					random_secret = {
						limit = {
							secret_type = secret_cannibal
							NOT = { is_known_by = root }
						}
						reveal_to = root
					}
				}
				if = {
					limit = {
						root = {
							any_secret = {
								secret_type = secret_cannibal
								NOT = { is_known_by = prev }
							}
						}
					}
					root = {
						random_secret = {
							limit = {
								secret_type = secret_cannibal
								NOT = { is_known_by = prev }
							}
							reveal_to = prev
						}
					}
				}
			}
		}

		ai_chance = {
			base = 1
			modifier = {
				add = 999
				is_cannibal_trigger = yes
			}
			modifier = {
				add = 2
				has_trait = gluttonous
			}
		}
	}

	option = {
		name = travel_danger_events.9020.hunter
		trigger = {
			has_trait = lifestyle_hunter
		}
		trait = lifestyle_hunter
		
		random_list = {
			70 = {
				send_interface_toast = {
					title = hunter_xp_gain_message
					add_trait_xp = {
						trait = lifestyle_hunter
						track = hunter
						value = 5
					}
				}
			}
			30 = {
				send_interface_toast = {
					title = emaciated_modifier
					left_icon = root
					add_character_modifier = {
						modifier = emaciated_modifier
						years = 3
					}
					hidden_effect = {
						change_current_weight = -50
					}
					current_travel_plan = {
						every_entourage_character = {
							custom = every_entourage_tt
							add_character_modifier = {
								modifier = emaciated_modifier
								years = 3
							}
							hidden_effect = {
								change_current_weight = -50
							}
						}
					}
				}
			}
		}

		ai_chance = {
			base = 1000
		}
	}

	option = {
		name = travel_danger_events.9020.a
		
		add_character_modifier = {
			modifier = emaciated_modifier
			years = 3
		}
		hidden_effect = {
			change_current_weight = -50
		}
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				add_character_modifier = {
					modifier = emaciated_modifier
					years = 3
				}
				hidden_effect = {
					change_current_weight = -50
				}
			}
		}
		
		stress_impact = {
			arrogant = medium_stress_impact_gain
		}
		
		ai_chance = {
			base = 100
			modifier = {
				add = -50
				has_trait = arrogant
			}
		}
	}

	option = {
		name = travel_danger_events.9020.b
		
		add_prestige = major_prestige_loss
		add_piety = major_piety_loss
		
		current_travel_plan = {
			every_entourage_character = {
				custom = every_entourage_tt
				add_character_modifier = {
					modifier = emaciated_modifier
					years = 3
				}
				add_opinion = {
					target = root
					modifier = cruelty_opinion
					opinion = -35
				}
				hidden_effect = {
					change_current_weight = -50
				}
			}
		}
		
		stress_impact = {
			humble = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			content = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = humble
					has_trait = compassionate
					has_trait = content
					has_trait = just
				}
			}
		}
	}

	after = {
		mp_resume_travel_plan = yes
	}
}
