### Called when succession has happened - to fill the select-your-destiny character lists.
# Scopes:
# root: previous (dead) character
# scope:predecessor - previous (dead) character
# scope:heir - current player heir (which is the current player character at this point)
#
# Expected return set scopes:
# scope:main_destiny_types - list of flags of available main destiny character types (they may be empty)
# scope:random_destiny_types - list of flags of available random destiny character types (they may be empty)
# scope:<flag_of_destiny_type> - character available for destiny
on_player_select_destiny_setup = {
	effect = {
		add_to_list = {
			name = main_destiny_types
			value = flag:interesting_destiny_character
		}
		add_to_list = {
			name = main_destiny_types
			value = flag:favorite_destiny_character
		}
		add_to_list = {
			name = main_destiny_types
			value = flag:hard_difficulty_destiny_character
		}

		root.dynasty = {
			every_dynasty_member = {
				limit = {
					is_alive = yes
					NOR = {
						has_trait = incapable
						health <= 2.5
						is_hostage = yes
						this = root
						this = scope:heir
						government_has_flag = government_is_republic
						government_has_flag = government_is_theocracy
					}
					trigger_if = {
						limit = {
							is_ruler = yes
						}
						highest_held_title_tier >= tier_county
						primary_title = {
							is_mercenary_company = no
							is_holy_order = no
						}
					}
					is_ai = yes
				}
				add_to_list = destiny_candidates
			}
		}

		#####################################################
		# First Option: A normal-hard difficulty character, #
		# Your Favorite Child if they are landed,           #
		# otherwise a character up to 500 difficulty score  #
		#####################################################
		if = {
			limit = {
				any_relation = {
					type = favorite_child
					is_landed = yes
					NOR = {
						has_trait = incapable
						government_has_flag = government_is_republic
						government_has_flag = government_is_theocracy
					}
					highest_held_title_tier >= tier_county
					primary_title = {
						is_mercenary_company = no
						is_holy_order = no
					}
				}
			}
			random_relation = {
				type = favorite_child
				save_scope_as = interesting_destiny_character
			}
		}
		else_if = {
			limit = {
				any_in_list = {
					list = destiny_candidates
					is_landed = yes
					character_difficulty_value <= 150
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_landed = yes
					character_difficulty_value <= 150
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = interesting_destiny_character
			}
		}
		else_if = {
			limit = {
				any_in_list = {
					list = destiny_candidates
					is_landed = yes
					character_difficulty_value <= 500
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_landed = yes
					character_difficulty_value <= 500
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = interesting_destiny_character
			}
		}
		else = {
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					has_dlc_feature = roads_to_power
					OR = {
						AND = {
							is_ruler = no
							is_adult = yes
						}
						government_has_flag = government_is_landless_adventurer
					}
					character_difficulty_value <= 500
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = interesting_destiny_character
			}
		}

		#####################################################
		# Second Option: A very hard+ difficulty character, #
		# otherwise a character up to 500 difficulty score  #
		#####################################################
		if = {
			limit = {
				scope:interesting_destiny_character ?= {
					character_difficulty_value <= 150
				}
				any_in_list = {
					list = destiny_candidates
					is_landed = yes
					is_adult = yes
					character_difficulty_value <= 300
					character_difficulty_value > 150
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_landed = yes
					is_adult = yes
					character_difficulty_value <= 300
					character_difficulty_value > 150
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = favorite_destiny_character
			}
		}
		else_if = {
			limit = {
				scope:interesting_destiny_character ?= {
					character_difficulty_value <= 150
				}
				any_in_list = {
					list = destiny_candidates
					is_landed = yes
					character_difficulty_value <= 300
					character_difficulty_value > 150
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_landed = yes
					character_difficulty_value <= 300
					character_difficulty_value > 150
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = favorite_destiny_character
			}
		}
		else_if = {
			limit = {
				any_in_list = {
					list = destiny_candidates
					is_landed = yes
					is_adult = yes
					character_difficulty_value <= 300
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_landed = yes
					is_adult = yes
					character_difficulty_value <= 300
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = favorite_destiny_character
			}
		}
		else_if = {
			limit = {
				any_in_list = {
					list = destiny_candidates
					is_landed = yes
					character_difficulty_value <= 300
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_landed = yes
					character_difficulty_value <= 300
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = favorite_destiny_character
			}
		}
		else_if = {
			limit = {
				any_in_list = {
					list = destiny_candidates
					is_adult = yes
					is_landed = yes
					character_difficulty_value <= 500
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_adult = yes
					is_landed = yes
					character_difficulty_value <= 300
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = favorite_destiny_character
			}
		}
		else_if = {
			limit = {
				any_in_list = {
					list = destiny_candidates
					is_landed = yes
					character_difficulty_value <= 500
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
			}
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					is_landed = yes
					character_difficulty_value <= 500
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = favorite_destiny_character
			}
		}
		else = {
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					trigger_if = {
						limit = {
							has_dlc_feature = roads_to_power
						}
						OR = {
							AND = {
								is_ruler = no
								is_adult = yes
							}
							government_has_flag = government_is_landless_adventurer
						}
					}
					trigger_else = {
						is_landed = yes
					}
					character_difficulty_value <= 500
					NAND = {
						exists = scope:interesting_destiny_character
						this = scope:interesting_destiny_character
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = favorite_destiny_character
			}
		}

		##################################################
		# Third Option: Landless/Adventurer if Allowed,  #
		# Your Favorite Child if they are unlanded,      #
		# otherwise another landed interesting character #
		##################################################
		if = {
			limit = {
				any_relation = {
					type = favorite_child
					has_dlc_feature = roads_to_power
					OR = {
						is_ruler = no
						government_has_flag = government_is_landless_adventurer
					}
					NOR = {
						AND = {
							exists = scope:interesting_destiny_character
							this = scope:interesting_destiny_character
						}
						AND = {
							exists = scope:favorite_destiny_character
							this = scope:favorite_destiny_character
						}
						has_trait = incapable
					}
				}
			}
			random_relation = {
				type = favorite_child
				save_scope_as = hard_difficulty_destiny_character
			}
		}
		else = {
			ordered_in_list = {
				list = destiny_candidates
				limit = {
					trigger_if = {
						limit = {
							has_dlc_feature = roads_to_power
						}
						OR = {
							AND = {
								is_ruler = no
								is_adult = yes
							}
							government_has_flag = government_is_landless_adventurer
						}
					}
					trigger_else = {
						is_landed = yes
					}
					character_difficulty_value <= 500
					NOR = {
						AND = {
							exists = scope:interesting_destiny_character
							this = scope:interesting_destiny_character
						}
						AND = {
							exists = scope:favorite_destiny_character
							this = scope:favorite_destiny_character
						}
					}
				}
				order_by = {
					value = 1
					add = destiny_score_interest
				}
				save_scope_as = hard_difficulty_destiny_character
			}
		}

		# Random destiny selection
		add_to_list = {
			name = random_destiny_types
			value = flag:random_landed_child
		}
		add_to_list = {
			name = random_destiny_types
			value = flag:random_descendant
		}
		add_to_list = {
			name = random_destiny_types
			value = flag:random_close_family
		}
		add_to_list = {
			name = random_destiny_types
			value = flag:random_close_or_extended_family
		}
		add_to_list = {
			name = random_destiny_types
			value = flag:random_dynasty_member
		}
		if = {
			limit = {
				has_dlc_feature = roads_to_power
			}
			add_to_list = {
				name = random_destiny_types
				value = flag:random_landed
			}
			add_to_list = {
				name = random_destiny_types
				value = flag:random_adventurer
			}
		}
		
		# Pick a random dynasty member
		random_list = {
			50 = {
				trigger = {
					has_dlc_feature = roads_to_power
				}
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						OR = {
							is_landed = yes
							AND = {
								is_ruler = no
								is_adult = yes
							}
							government_has_flag = government_is_landless_adventurer
						}
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_dynasty_member
				}
			}
			50 = {
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						is_landed = yes
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_dynasty_member
				}
			}
		}
		
		# Pick a random descendant
		random_list = {
			50 = {
				trigger = {
					has_dlc_feature = roads_to_power
				}
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						OR = {
							is_landed = yes
							AND = {
								is_ruler = no
								is_adult = yes
							}
							government_has_flag = government_is_landless_adventurer
						}
						OR = {
							is_child_of = root
							is_grandchild_of = root
							is_great_grandchild_of = root
						}
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_descendant
				}
			}
			50 = {
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						is_landed = yes
						OR = {
							is_child_of = root
							is_grandchild_of = root
							is_great_grandchild_of = root
						}
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_descendant
				}
			}
		}
		
		# Pick a random close family member
		random_list = {
			50 = {
				trigger = {
					has_dlc_feature = roads_to_power
				}
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						OR = {
							is_landed = yes
							AND = {
								is_ruler = no
								is_adult = yes
							}
							government_has_flag = government_is_landless_adventurer
						}
						is_close_family_of = root
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_close_family
				}
			}
			50 = {
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						is_landed = yes
						is_close_family_of = root
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_close_family
				}
			}
		}
		
		# Pick a random close or extended family member
		random_list = {
			50 = {
				trigger = {
					has_dlc_feature = roads_to_power
				}
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						OR = {
							is_landed = yes
							AND = {
								is_ruler = no
								is_adult = yes
							}
							government_has_flag = government_is_landless_adventurer
						}
						is_close_or_extended_family_of = root
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_close_or_extended_family
				}
			}
			50 = {
				random_in_list = {
					list = destiny_candidates
					limit = {
						character_difficulty_value <= 500
						is_landed = yes
						is_close_or_extended_family_of = root
					}
					weight = {
						base = 300
						modifier = {
							add = destiny_score_interest
						}
						modifier = {
							add = -250
							is_adult = no
						}
					}
					save_scope_as = random_close_or_extended_family
				}
			}
		}

		random_in_list = {
			list = destiny_candidates
			limit = {
				is_landed = yes
				is_child_of = root
			}
			weight = {
				base = 300
			}
			save_scope_as = random_landed_child
		}
		
		random_in_list = {
			list = destiny_candidates
			limit = {
				character_difficulty_value <= 500
				is_landed = yes
			}
			weight = {
				base = 300
				modifier = {
					add = destiny_score_interest
				}
				modifier = {
					add = -250
					is_adult = no
				}
			}
			save_scope_as = random_landed
		}

		random_in_list = {
			list = destiny_candidates
			limit = {
				character_difficulty_value <= 500
				OR = {
					AND = {
						is_ruler = no
						is_adult = yes
					}
					government_has_flag = government_is_landless_adventurer
				}
			}
			weight = {
				base = 300
				modifier = {
					add = destiny_score_interest
				}
				modifier = {
					add = -250
					is_adult = no
				}
			}
			save_scope_as = random_adventurer
		}

		if = {
			limit = {
				exists = flag:interesting_destiny_character
				exists = flag:hard_difficulty_destiny_character
				exists = flag:favorite_destiny_character
				exists = flag:random_close_family
				exists = flag:random_dynasty_member
				exists = flag:random_landed_child
				exists = flag:random_descendant
				exists = flag:random_close_or_extended_family
				exists = flag:random_adventurer
				exists = flag:random_landed
			}
			# This exists to tell the script checker that, yes, we are using these...
		}
	}
}

### Called when player has confirmed their selection of a destiny character
# Scopes:
# root: destiny character (is already current player)
# scope:destiny_type_flag - flag of selected destiny type
# scope:previous_player_character - previous player character
# scope:previous_player_heir - previous player heir
on_player_select_destiny_confirmed = {
	effect = {
		if = {
			limit = {
				is_ruler = no
			}
			create_landless_adventurer_title_effect = {
				REASON = flag:voluntary
				FLAVOR_CHAR = root
			}
		}
		if = {
			limit = {
				NOT = {
					exists = global_var:achievement_quantum_leap_count_tracker
				}
			}
			set_global_variable = {
				name = achievement_quantum_leap_count_tracker
				value = 1
			}
		}
		else_if = {
			limit = {
				exists = global_var:achievement_quantum_leap_count_tracker
			}
			change_global_variable = {
				name = achievement_quantum_leap_count_tracker
				add = 1
			}
		}
		if = {
			limit = {
				is_landed = yes
				highest_held_title_tier = tier_empire
			}
			add_achievement_global_variable_effect = {
				VARIABLE = rags_to_riches_to_rags_to_riches_first_empire
				VALUE = yes
			}
		}
		if = {
			limit = {
				is_ai = no
				is_landed = yes
				highest_held_title_tier = tier_empire
				exists = global_var:rags_to_riches_to_rags_to_riches_adventurer
			}
			#WARCRAFT
			# add_achievement_global_variable_effect = {
			# 	VARIABLE = finished_rags_to_riches_to_rags_to_riches_achievement
			# 	VALUE = yes
			# }
		}
    }
}
