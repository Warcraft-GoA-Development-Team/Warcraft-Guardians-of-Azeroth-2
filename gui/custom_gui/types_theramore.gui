types theramoretypes
{
	type button_reward = button_normal
	{
		texture = "gfx/interface/icons/theramore_rewards/wc_reward.dds"
		size = { 188 54 }
		color = {1 1 1 0.7}

		gfxtype = togglepushbuttongfx
		effectname = "NoHighlight"

		upframe = 1
		uphoverframe = 2
		uppressedframe = 2
		#downframe = 3
		#downhoverframe = 3
		#downpressedframe = 3
		#disableframe = 3

		spriteType = Corneredtiled
		spriteborder = { 3 3 }
		framesize = { 259 74 }

		buttonText = {
			text_single = {
				#size = { 100% 100% }
				autoresize = no
				margin = { 30 0 }
				default_format = "#clickable;medium;color:{0.1,0.1,0.1,1}"
				align = center|nobaseline
				position = { 25 0 }
				max_width = 140
			}
		}

		#modify_texture = {
		#	name = "overlay"
		#	texture = "gfx/interface/buttons/button_standard_overlay.dds"
		#	spriteType = Corneredstretched
		#	spriteborder = { 3 3 }
		#	blend_mode = overlay
		#	alpha = 0.3
		#}

		block "disabled"
		{
			highlight_icon = {
				size = { 100% 100% }
				gfxtype = togglepushbuttongfx
				effectname = "NoHighlight"
				texture = "gfx/interface/buttons/button_disabled_stripes.dds"
				spriteType = Corneredtiled
				spriteborder = { 2 2 }
				framesize  = { 238 63 }

				upframe = 1
				uphoverframe = 1
				uppressedframe = 1
				downframe = 1
				downhoverframe = 1
				downpressedframe = 1
				disableframe = 2

				alpha = 0.4

				modify_texture = {
					name = "overlay"
					texture = "gfx/interface/buttons/button_standard_overlay.dds"
					spriteType = Corneredstretched
					spriteborder = { 3 3 }
					blend_mode = overlay
				}

				block "button_standard_mouseover" {}
			}
		}

		highlight_icon = {
			size = { 100% 100% }
			gfxtype = togglepushbuttongfx
			effectname = "NoHighlight"
			texture = "gfx/interface/buttons/button_mouseover.dds"
			spriteType = Corneredstretched
			spriteborder = { 20 20 }
			framesize  = { 238 63 }

			upframe = 1
			uphoverframe = 2
			uppressedframe = 1
			downframe = 1
			downhoverframe = 1
			downpressedframe = 1
			disableframe = 1

			alpha = 0.5

			block "button_standard_mouseover" {}
		}

		margin_widget = {
			size = { 100% 100% }
			margin = { 3 3 }

			block "vignette"
			{
				icon = {
					name = "vignette"
					size = { 100% 100% }
					alpha = 0.2
					texture = "gfx/interface/component_masks/mask_vignette.dds"
					color = { 0.15 0.15 0.15 1 }
				}
			}
		}
	}
	type settlers_button = button_normal {
		size = { 60 60 }
		#onclick = "[GetVariableSystem.Toggle( 'hello_theramore_window' )]"

		button_round = { #_round
			name = "theramore_icon"
			visible = yes
			parentanchor = center
			size = { 60 60 }
			alpha = 0.90
			block "click_button" {
				#onclick = "[GetVariableSystem.Clear( 'hello_theramore_window' )]"
				#onclick = "[GetScriptedGui('open_theramore_window').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
			}
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"
			color = { 0.05 0.05 0.5 1 }
			blockoverride "button_bg_color"
			{
				color = { 0.4 0.4 0.4 1 }
			}

			state = {
				name = _mouse_enter
				using = Animation_Curve_Default
				duration = 0.05
				scale = 1.1
				alpha = 1
			}
			state = {
				name = _mouse_leave
				using = Animation_Curve_Default
				duration = 0.05
				scale = 1
				alpha = 0.90
			}

			block "settler_exact_button" {
				highlight_icon = {
					name = "struggle_icon"
					parentanchor = center
					size = { 44 44 }
					#position = { 0 5 }
					texture = "gfx/interface/icons/struggle_banners/theramore_banner.dds"
					alpha = 1
				}
			}
		}
	}
	type widget_vassal_list_item_custom = widget {
		#datacontext = "[CharacterListItem.GetCharacter]"
		size = { 200 180 }

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			#margin = { 0 0 }

			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 10

				background = {
					using = Assembly_background
					color = { 0 0.20 0.25 0.8 }
				}

				portrait_head_small = {}
				
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin_right = 10

					hbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 5

							vbox = {
								layoutpolicy_horizontal = expanding
								minimumsize = { 0 30 }

								background = {
									using = Background_Area_Characterlist
									color = { 0.2 0.2 0.2 0.75 }
									margin = { 8 0 }
									margin_left = 15

									using = Mask_Rough_Edges
								}

								text_single = {
									layoutpolicy_horizontal = expanding
									text = "[Character.GetTitledFirstNameNoTooltipRegnal] [Character.GetHouse.GetBaseNameNoTooltip]"
									using = Font_Size_Medium
									autoresize = no
									fontsize_min = 13
									align = nobaseline
									#default_format = "#medium;color:{0.1,0.1,0.1,1}"
								}
								text_single = {
									layoutpolicy_horizontal = expanding
									visible = "[Character.IsRuler]" #
									text = "[Concatenate(Concatenate('(', Character.GetPrimaryTitle.GetNameNoTooltip),')')]"
									using = Font_Size_Medium
									autoresize = no
									fontsize_min = 13
									align = nobaseline
								}
							}

							text_single = {
								name = "character_relation"
								#visible = "[Character.GetLiege.IsLocalPlayer]"
								layoutpolicy_horizontal = expanding
								text = "[Character.GetRelationToString(GetPlayer)]"
								default_format = "#low;color:{0.1,0.1,0.1,1}"
								autoresize = no
								fontsize_min = 13
								align = nobaseline
							}
							
						}
						
					}

					expand = {}
				}
				
			}
			hbox = {
				layoutpolicy_horizontal = expanding
				spacing = 5
				background = {
					using = Government_acts
					color = {0.05 0.15 0.3 0.8}
				}

				text_single = {
					text = "REALM_WINDOW_SIZE"
					margin_left = 5
					tooltip = "REALM_WINDOW_SIZE_TT"
					#layoutpolicy_horizontal = expanding
					align = nobaseline
					#visible = "[NotEqualTo_int32(Character.GetPrimaryTitle.GetTierFrame, '(int32)0')]" #nonbaron
					default_format = "#medium;color:{0.01,0.01,0.01,1}"

				}

				text_single = {
					visible = "[Character.IsPowerfulVassal]"
					text = "[powerful_vassal|V]"
					layoutpolicy_horizontal = expanding
					align = nobaseline
					autoresize = no
					margin_left = 5
				}

				expand = {}

				#hbox_skills_grid = {}
			}
			expand = {}
		}
	}
	type button_standard_tot = button_normal
	{
		texture = "gfx/interface/buttons/button_standart_tot.dds"
		size = { 170 33 }
		color = {0.04 0.06 0.88 0.95}

		gfxtype = togglepushbuttongfx
		effectname = "NoHighlight"

		upframe = 1
		uphoverframe = 2
		uppressedframe = 3
		downframe = 4
		downhoverframe = 4
		downpressedframe = 4
		disableframe = 7

		spriteType = Corneredtiled
		spriteborder = { 3 3 }
		framesize = { 252 80 }

		buttonText = {
			text_single = {
				size = { 100% 100% }
				autoresize = no
				margin = { 10 0 }
				default_format = "#clickable;medium;color:{0.1,0.1,0.1,1}"
				align = center|nobaseline
			}
		}

		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/buttons/button_standard_overlay.dds"
			spriteType = Corneredstretched
			spriteborder = { 3 3 }
			blend_mode = overlay
			alpha = 0.3
		}

		block "disabled"
		{
			highlight_icon = {
				size = { 100% 100% }
				gfxtype = togglepushbuttongfx
				effectname = "NoHighlight"
				texture = "gfx/interface/buttons/button_disabled_stripes.dds"
				spriteType = Corneredtiled
				spriteborder = { 2 2 }
				framesize  = { 238 63 }

				upframe = 1
				uphoverframe = 1
				uppressedframe = 1
				downframe = 1
				downhoverframe = 1
				downpressedframe = 1
				disableframe = 2

				alpha = 0.4

				modify_texture = {
					name = "overlay"
					texture = "gfx/interface/buttons/button_standard_overlay.dds"
					spriteType = Corneredstretched
					spriteborder = { 3 3 }
					blend_mode = overlay
				}

				block "button_standard_mouseover" {}
			}
		}

		highlight_icon = {
			size = { 100% 100% }
			gfxtype = togglepushbuttongfx
			effectname = "NoHighlight"
			texture = "gfx/interface/buttons/button_mouseover.dds"
			spriteType = Corneredstretched
			spriteborder = { 20 20 }
			framesize  = { 238 63 }

			upframe = 1
			uphoverframe = 2
			uppressedframe = 1
			downframe = 1
			downhoverframe = 1
			downpressedframe = 1
			disableframe = 1

			alpha = 0.5

			block "button_standard_mouseover" {}
		}

		margin_widget = {
			size = { 100% 100% }
			margin = { 3 3 }

			block "vignette"
			{
				icon = {
					name = "vignette"
					size = { 100% 100% }
					alpha = 0.2
					texture = "gfx/interface/component_masks/mask_vignette.dds"
					color = { 0.15 0.15 0.15 1 }
				}
			}
		}
	}
	type dark_button_standard_tot = button_normal
	{
		texture = "gfx/interface/buttons/button_standart_tot.dds"
		size = { 170 33 }
		color = {0.9 0.6 0.4 0.95}

		gfxtype = togglepushbuttongfx
		effectname = "NoHighlight"

		upframe = 1
		uphoverframe = 2
		uppressedframe = 3
		downframe = 4
		downhoverframe = 4
		downpressedframe = 4
		disableframe = 7

		spriteType = Corneredtiled
		spriteborder = { 3 3 }
		framesize = { 252 80 }

		buttonText = {
			text_single = {
				size = { 100% 100% }
				autoresize = no
				margin = { 10 0 }
				default_format = "#clickable;medium;color:{0.1,0.1,0.1,1}"
				align = center|nobaseline
			}
		}

		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/buttons/button_standard_overlay.dds"
			spriteType = Corneredstretched
			spriteborder = { 3 3 }
			blend_mode = overlay
			alpha = 0.3
		}

		block "disabled"
		{
			highlight_icon = {
				size = { 100% 100% }
				gfxtype = togglepushbuttongfx
				effectname = "NoHighlight"
				texture = "gfx/interface/buttons/button_disabled_stripes.dds"
				spriteType = Corneredtiled
				spriteborder = { 2 2 }
				framesize  = { 238 63 }

				upframe = 1
				uphoverframe = 1
				uppressedframe = 1
				downframe = 1
				downhoverframe = 1
				downpressedframe = 1
				disableframe = 2

				alpha = 0.4

				modify_texture = {
					name = "overlay"
					texture = "gfx/interface/buttons/button_standard_overlay.dds"
					spriteType = Corneredstretched
					spriteborder = { 3 3 }
					blend_mode = overlay
				}

				block "button_standard_mouseover" {}
			}
		}

		highlight_icon = {
			size = { 100% 100% }
			gfxtype = togglepushbuttongfx
			effectname = "NoHighlight"
			texture = "gfx/interface/buttons/button_mouseover.dds"
			spriteType = Corneredstretched
			spriteborder = { 20 20 }
			framesize  = { 238 63 }

			upframe = 1
			uphoverframe = 2
			uppressedframe = 1
			downframe = 1
			downhoverframe = 1
			downpressedframe = 1
			disableframe = 1

			alpha = 0.5

			block "button_standard_mouseover" {}
		}

		margin_widget = {
			size = { 100% 100% }
			margin = { 3 3 }

			block "vignette"
			{
				icon = {
					name = "vignette"
					size = { 100% 100% }
					alpha = 0.2
					texture = "gfx/interface/component_masks/mask_vignette.dds"
					color = { 0.15 0.15 0.15 1 }
				}
			}
		}
	}
	type portrait_hud_tot = portrait_button {
		name = "tutorial_highlight_bottom_left_portrait_button"
		size = { 240 240 }
		
		gfxtype = portraitbuttongfx
		shaderfile = "gfx/FX/jomini/gui_portrait.shader"
		effectname = "NoHighlight"
		background = {
			using = Assembly_background
			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_vertical_up.dds"
				blend_mode = alphamultiply
				alpha = 0.8
			}
		}
		widget = {
			size = { 70 82 }
			position = { 3 3 }
			parentanchor = top|left
			background = {
				texture = "gfx/interface/icons/struggle_banners/theramore_banner2.dds"
			}
		}
		background = {
			block "empty_character" {}
			texture = "gfx/portraits/portrait_frame_te.dds"
			color = {0.05 0.05 0.05 1}
			margin = { 7 7 }
		}
		background = {
			block "empty_character" {}
			texture = "gfx/portraits/portrait_frame_te.dds"
			visible = "[GetPlayer.GetHouse.MakeScope.Var('window_light_mode').IsSet]"
			color = {0.04 0.06 0.58 1}
			margin = { 7 7 }
		}
		state = {
			name = _mouse_enter
			on_start = "[Character.OnMouseEnter]"
			#scale = 1.01
			using = Animation_Curve_Default
			duration = 0.05
			alpha = 1
		}
		state = {
			name = _mouse_leave
			on_start = "[Character.OnMouseLeave]"
			using = Animation_Curve_Default
			duration = 0.05
			#scale = 1.2
			alpha = 0.97
		}
		onclick = "[DefaultOnCharacterClick(Character.GetID)]"
		onrightclick = "[DefaultOnCharacterRightClick(Character.GetID)]"
		button_ignore = none

		clicksound = "event:/SFX/UI/Character/sfx_ui_character_portrait_select"
		oversound = "event:/SFX/UI/Character/sfx_ui_character_portrait_pointer_over"

		portrait_texture = "[Character.GetAnimatedPortrait('environment_hud', 'camera_shoulders', 'idle', PdxGetWidgetScreenSize(PdxGuiWidget.Self))]"
		background_texture = "gfx/portraits/portrait_transparent.dds"
		texture = "gfx/portraits/portrait_transparent.dds"
		mask = "gfx/portraits/portrait_mask_blank.dds"

		highlight_icon = {
			name = "prison_bars"
			visible = "[Character.IsImprisoned]"
			size = { 100% 100% }
			effectname = "NoHighlight"
			texture = "gfx/portraits/portrait_prison_shoulders.dds"
			position = { 25 0 }

			modify_texture = {
				name = "mask"
				texture = "gfx/portraits/portrait_mask_head.dds"
				spriteType = Corneredstretched
				blend_mode = alphamultiply
				rotate_uv = 180
			}
		}

		using = tooltip_es
		tooltip_visible = no

		tooltipwidget = {
			cooltip_type = {
				blockoverride "interaction_info"
				{
					text = "CHARACTER_TOOLTIP_INSTRUCTION"
				}
			}
		}
		
		tooltip_offset = { -10 0 }
		tooltip_verticalbehavior = slide
		tooltip_horizontalbehavior = mirror
	}
	type button_theramore_banner = button_normal {
		name = "theramore_banner"
		size = { 65 71 }#size = { 78 86 } this size if directly into hud.gui near war buttons
		#onclick = "[GetVariableSystem.Toggle( 'hello_theramore_window' )]"

		#onmousehierarchyenter = "[HighlightStruggle( Struggle.Self )]"
		#onmousehierarchyleave = "[ClearHighlightedStruggleBorder]"

		button = {
			name = "theramore_icon"
			visible = yes
			parentanchor = center
			size = { 65 71 }#size = { 78 86 } hud.gui
			onclick = "[GetVariableSystem.Toggle( 'hello_theramore_window' )]"
			onclick = "[GetScriptedGui('open_theramore_window').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End)]"
			clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_select"

			icon = {
				name = "ending_struggle_decision_glow"
				visible = "[And(GetPlayer.GetTopLiege.GetPrimaryTitle.MakeScope.Var('te_task_type').IsSet, Not(GetPlayer.GetHouse.MakeScope.Var('remove_glowing_mode').IsSet))]"
				parentanchor = center
				size = { 100% 100% }
				texture = "gfx/interface/icons/struggle_banners/te_banner_glow.dds"

				state = {
					trigger_on_create = yes
					name = a
					next = b

					using = Animation_Curve_Default
					duration = 1
					alpha = 1
				}

				state = {
					name = b
					next = a

					using = Animation_Curve_Default
					duration = 1.6
					alpha = 0.2
				}
			}

			block "texture" {
				#visible = "[Struggle.IsInterloperCharacter(Character.Self)]"
				texture = "gfx/interface/icons/struggle_banners/te_interloper_banner.dds"
			}

			datacontext = "[GetPlayer]"
			#tooltipwidget = struggle_tooltip

			##Show animation
			state = {
				name = _show
				next = banner_default
				using = Animation_FadeIn_Quick
				bezier = { 1 0 0.5 0.5 }
				size = { 65 71 }#size = { 86 88 } hui.gui
				alpha = 1
				trigger_on_create = yes
			}

			state = {
				name = banner_default
				using = Animation_FadeIn_Standard
				#size = { 78 82 } #hud.gui
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Standard
				bezier = { 1 0 0.5 0.5 }
				size = { 45 51 }#size = { 66 70 } hud.gui
				alpha = 0
			}

			##Shimmer
			modify_texture = {
				name = "shimmer_struggle_banner"
				#visible = "[Struggle.HasPossibleEndingDecision]"
				texture = "gfx/interface/component_effects/effect_shimmer.dds"
				blend_mode = colordodge
				translate_uv = { 1 1 }
			}

			state = {
				name = shimmer
				next = pause
				trigger_on_create = yes
				delay = 0.5
				bezier = { 0 0.9 1 0.4 }

				modify_texture = {
					name = "shimmer_struggle_banner"
					translate_uv = { 1 1 }
					alpha = 0.5
				}
			}

			state = {
				name = pause
				duration = 0.8

				modify_texture = {
					name = "shimmer_struggle_banner"
					translate_uv = { -1 -1 }
					alpha = 0.5
				}
			}

			##Pulse glow
			glow = {
				name = "glow_defined"
				glow_radius = 3
				using = Glow_Standard
				using = Color_Orange
				glow_alpha = 0
			}

			state = {
				name = struggle_pulse_glow
				next = struggle_pulse_glow_stop
				using = Animation_FadeIn_Quick
				bezier = { 1 0 0.5 0.5 }
				glow_alpha = 1
			}

			state = {
				name = struggle_pulse_glow_stop
				bezier = { 1 0 0.5 0.5 }
				duration = 0.3
				glow_alpha = 0
			}

			#white fill
			state = {
				name = struggle_pulse_icon
				next = struggle_pulse_icon_stop
				using = Animation_FadeIn_Quick
				bezier = { 1 0 0.5 0.5 }

				modify_texture = {
					name = "white_icon"
					alpha = 1
				}
			}

			state = {
				name = struggle_pulse_icon_stop
				bezier = { 1 0 0.5 0.5 }
				duration = 0.3

				modify_texture = {
					name = "white_icon"
					alpha = 0
				}
			}

			modify_texture = {
				name = "white_icon"
				texture = "gfx/interface/component_masks/mask_rough_edges.dds"
				blend_mode = colordodge
				alpha = 0
			}

			highlight_icon = {
				name = "struggle_icon"
				parentanchor = center
				size = { 38 46 }#size = { 44 54 } for hud.gui
				#position = { 0 5 }
				texture = "gfx/interface/icons/struggle_banners/theramore_banner.dds" #Theramore?
				alpha = 1

				state = {
					name = _show
					next = icon_default
					using = Animation_FadeIn_Quick
					bezier = { 1 0 0.5 0.5 }
					size = { 40 48 }#size = { 48 57 }
					alpha = 1
					trigger_on_create = yes
				}

				state = {
					name = icon_default
					using = Animation_FadeIn_Standard
					size = { 38 46 }#size = { 44 54 }
				}
			}
		}
	}
	type scrollbox_custom = scrollarea {
		size = { 100 100 }

		scrollbarpolicy_horizontal = always_off

		scrollbar_vertical = {
			using = Scrollbar_Vertical_ToT
		}

		block "scrollbox_background"
		{
			background = {
				using = Background_Area
			}
		}

		scrollwidget = {
			block "scrollbox_replace_vbox"
			{
				vbox = {
					block "scrollbox_margins"
					{
						using = Scrollbox_Margins
					}

					block "scrollbox_content"
					{
						debug_square = {}
					}

					text_single = {
						#layoutpolicy_vertical = expanding
						default_format = "#low;italic"

						block "scrollbox_empty"
						{
							visible = no
						}
					}

					block "scrollbox_expand"
					{
						expand = {
							layoutpolicy_vertical = growing
						}
					}
				}
			}
		}
	}
	type vbox_character_row_item_theramore = vbox {
		hbox = {
			layoutpolicy_horizontal = expanding

			using = Animation_Character_Window_Refresh

			block "gridbox" {
				
			}

			block "find_partner" {}

			expand = {}
		}
		widget = {
			size = { 380 40 }
			text_single = {
				text = "reward_te_additional_gui"
				default_format = "#medium;color:{0.1,0.1,0.1,1}"
				minimumsize = { 100 40 }
				using = Font_Type_Flavor
				using = Font_Size_Big
				max_width = 370
			}
		}

		expand = {}
	}
}