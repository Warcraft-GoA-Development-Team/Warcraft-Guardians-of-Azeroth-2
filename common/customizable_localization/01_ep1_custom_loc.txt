# Do they want to do it or are they already doing it?
InspirationTypeDescriptionFuturePresent = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_type_desc_present
	}

	text = {
		localization_key = inspiration_type_desc_future
	}
}

InspirationWritePresentFuture = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_desc_write_present
	}

	text = {
		localization_key = inspiration_desc_write_future
	}
}

InspirationForgePresentFuture = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_desc_forge_present
	}

	text = {
		localization_key = inspiration_desc_forge_future
	}
}

InspirationWeavePresentFuture = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_desc_weave_present
	}

	text = {
		localization_key = inspiration_desc_weave_future
	}
}

InspirationGoPresentFuture = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_desc_go_present
	}

	text = {
		localization_key = inspiration_desc_go_future
	}
}

InspirationCreatePresentFuture = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_desc_create_present
	}

	text = {
		localization_key = inspiration_desc_create_future
	}
}

InspirationMakePresentFuture = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_desc_make_present
	}

	text = {
		localization_key = inspiration_desc_make_future
	}
}

InspirationStudyPresentFuture = {
	type = character

	text = {
		trigger = {
			inspiration = {
				exists = inspiration_sponsor
			}
		}
		localization_key = inspiration_desc_study_present
	}

	text = {
		localization_key = inspiration_desc_study_future
	}
}

InspirationTypeDescription = {
	type = character

	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = book_inspiration
			}
			exists = var:book_subject #For this one we look at ArtifactBookSubject so we can use the same loc key here and in the artifact's desc
		}
		localization_key = book_subject_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = book_inspiration
			}
		}
		localization_key = book_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = weapon_inspiration
			}
			exists = var:artifact_weapon_type
		}
		localization_key = weapon_set_type_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = weapon_inspiration
			}
		}
		localization_key = weapon_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = armor_inspiration
			}
			OR = {
				exists = scope:armor_type
				exists = var:artifact_armor_type
			}
		}
		localization_key = armor_set_type_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = armor_inspiration
			}
			NOR = {
				exists = var:artifact_armor_type
				exists = scope:armor_type
			}
		}
		localization_key = armor_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = weaver_inspiration
				inspiration_owner = { has_variable = banner_commission}
			}
		}
		localization_key = weaver_inspiration_description_banner
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = weaver_inspiration
			}
			exists = var:artifact_tapestry_scene
		}
		localization_key = weaver_inspiration_description_set_scene
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = weaver_inspiration
			}
		}
		localization_key = weaver_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = adventure_inspiration
			}
			exists = var:adventure_destination
		}
		localization_key = adventure_inspiration_description_destination
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = adventure_inspiration
			}
		}
		localization_key = adventure_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = artisan_inspiration
			}
			exists = var:artifact_artisan_type
		}
		localization_key = artisan_inspiration_description_set_type
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = artisan_inspiration
			}
		}
		localization_key = artisan_inspiration_description
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = smith_inspiration
			}
			exists = var:artifact_smith_type
		}
		localization_key = smith_inspiration_description_set_type
	}
	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = smith_inspiration
			}
		}
		localization_key = smith_inspiration_description
	}
	#Alchemy is added as separate instances here since they need different sentence starters 
	text = { 
		trigger = {
			inspiration = {
				has_inspiration_type = alchemy_inspiration
			}
			exists = var:artifact_alchemy_type
			var:artifact_alchemy_type = flag:alchemy_type_elixirs
		}
		localization_key = inspiration_alchemy_type_elixirs
	}

	text = { 
		trigger = {
			inspiration = {
				has_inspiration_type = alchemy_inspiration
			}
			exists = var:artifact_alchemy_type
			var:artifact_alchemy_type = flag:alchemy_type_metals
		}
		localization_key = inspiration_alchemy_type_metals
	}

	text = { 
		trigger = {
			inspiration = {
				has_inspiration_type = alchemy_inspiration
			}
			exists = var:artifact_alchemy_type
			var:artifact_alchemy_type = flag:alchemy_type_panacea
		}
		localization_key = inspiration_alchemy_type_panacea
	}
	
	text = { 
		trigger = {
			inspiration = {
				has_inspiration_type = alchemy_inspiration
			}
			exists = var:artifact_alchemy_type
			var:artifact_alchemy_type = flag:alchemy_type_immortality
		}
		localization_key = inspiration_alchemy_type_immortality
	}

	text = {
		trigger = {
			inspiration = {
				has_inspiration_type = alchemy_inspiration
			}
		}
		localization_key = alchemy_inspiration_description
	}
}

InspirationTypeDescriptionPast = {
	type = character

	text = {
		trigger = {
			var:created_artifact_type = flag:weapon
		}
		localization_key = weapon_inspiration_description_past
	}
	text = {
		trigger = {
			var:created_artifact_type = flag:armor
		}
		localization_key = armor_inspiration_description_past
	}
	text = {
		trigger = {
			var:created_artifact_type = flag:book
		}
		localization_key = book_inspiration_description_past
	}
	text = {
		trigger = {
			var:created_artifact_type = flag:weaver
		}
		localization_key = weaver_inspiration_description_past
	}
	text = {
		trigger = {
			var:created_artifact_type = flag:adventure
		}
		localization_key = adventure_inspiration_description_past
	}
	text = {
		trigger = {
			var:created_artifact_type = flag:artisan
		}
		localization_key = artisan_inspiration_description_past
	}
	text = {
		trigger = {
			var:created_artifact_type = flag:smith
		}
		localization_key = smith_inspiration_description_past
	}
	text = {
		trigger = {
			var:created_artifact_type = flag:alchemy
		}
		localization_key = alchemy_inspiration_description_past
	}
}

# Artisan (in here instead of by the other artifact custom locs because this one is only of use in the inspiration since it's not one single effect used in the completion event but many different ones, depending)
InspirationArtisanType = {
	type = character

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_chest
		}
		localization_key = inspiration_artisan_type_chest
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_box
		}
		localization_key = inspiration_artisan_type_box
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_sculpture
		}
		localization_key = inspiration_artisan_type_sculpture
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_cabinet
			NOR = {
				artifact_use_indian_building_visuals_trigger = yes
				artifact_use_mena_building_visuals_trigger = yes
			}
		}
		localization_key = inspiration_artisan_type_cabinet
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_cabinet
			artifact_use_indian_building_visuals_trigger = yes
		}
		localization_key = inspiration_artisan_type_diwan
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_cabinet
			artifact_use_mena_building_visuals_trigger = yes
		}
		localization_key = inspiration_artisan_type_table
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_throne
		}
		localization_key = inspiration_artisan_type_throne
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_scientific_apparatus
		}
		localization_key = inspiration_artisan_type_scientific_apparatus
	}

	text = { #
		trigger = {
			var:artifact_artisan_type = flag:artisan_type_urn
		}
		localization_key = inspiration_artisan_type_urn
	}
}

# Smith (in here instead of by the other artifact custom locs because this one is only of use in the inspiration since it's not one single effect used in the completion event but many different ones, depending)
InspirationSmithType = {
	type = character

	text = { #
		trigger = {
			var:artifact_smith_type = flag:smith_type_brooch
		}
		localization_key = inspiration_smith_type_brooch
	}

	text = { #
		trigger = {
			var:artifact_smith_type = flag:smith_type_regalia
		}
		localization_key = inspiration_smith_type_regalia
	}

	text = { #
		trigger = {
			var:artifact_smith_type = flag:smith_type_crown
		}
		localization_key = inspiration_smith_type_crown
	}

	text = { #
		trigger = {
			var:artifact_smith_type = flag:smith_type_goblet
		}
		localization_key = inspiration_smith_type_goblet
	}
}

InspirationTapestryScene = {
	type = character

	text = {
		trigger = {
			OR = {
				var:artifact_tapestry_scene = flag:geometric_patterns
				var:artifact_tapestry_scene = flag:calligraphic
			}
		}
		localization_key = weaver_inspiration_abstract_description
	}
	text = {
		trigger = {
			OR = {
				var:artifact_tapestry_scene = flag:historical
				var:artifact_tapestry_scene = flag:coronation
				var:artifact_tapestry_scene = flag:ships
			}
		}
		localization_key = weaver_inspiration_history_description
	}
	text = {
		trigger = {
			var:artifact_tapestry_scene = flag:religious
		}
		localization_key = weaver_inspiration_religion_description
	}
	text = {
		trigger = {
			OR = {
				var:artifact_tapestry_scene = flag:hunt
				var:artifact_tapestry_scene = flag:animals
				var:artifact_tapestry_scene = flag:garden
			}
		}
		localization_key = weaver_inspiration_nature_description
	}
	text = {
		trigger = {
			var:artifact_tapestry_scene = flag:myth
		}
		localization_key = weaver_inspiration_myth_description
	}
	text = {
		trigger = {
			OR = {
				var:artifact_tapestry_scene = flag:bucolic
				var:artifact_tapestry_scene = flag:banquet
				var:artifact_tapestry_scene = flag:hearing
			}
		}
		localization_key = weaver_inspiration_life_description
	}
	text = {
		trigger = {
			var:artifact_tapestry_scene = flag:battle
		}
		localization_key = weaver_inspiration_battle_description
	}
}

#Custom loc for the destination of an adventurer
InspirationAdventureDestination = {
	type = character

	# world_eastern_kingdoms_azeroth
	text = {
		trigger = { var:adventure_destination = flag:world_eastern_kingdoms_azeroth }
		localization_key = world_eastern_kingdoms_azeroth
	}
	# world_eastern_kingdoms_lordaeron
	text = {
		trigger = { var:adventure_destination = flag:world_eastern_kingdoms_lordaeron }
		localization_key = world_eastern_kingdoms_lordaeron
	}
	# world_eastern_kingdoms_khaz_modan
	text = {
		trigger = { var:adventure_destination = flag:world_eastern_kingdoms_khaz_modan }
		localization_key = world_eastern_kingdoms_khaz_modan
	}
	# world_eastern_kingdoms_quelthalas
	text = {
		trigger = { var:adventure_destination = flag:world_eastern_kingdoms_quelthalas }
		localization_key = world_eastern_kingdoms_quelthalas
	}
	# world_eastern_kingdoms_lordaeron_kul_tiras
	text = {
		trigger = { var:adventure_destination = flag:world_eastern_kingdoms_lordaeron_kul_tiras }
		localization_key = world_eastern_kingdoms_lordaeron_kul_tiras
	}
	# world_eastern_kingdoms_lordaeron_mechagon
	text = {
		trigger = { var:adventure_destination = flag:world_eastern_kingdoms_lordaeron_mechagon }
		localization_key = world_eastern_kingdoms_lordaeron_mechagon
	}
	
	# world_northrend
	text = {
		trigger = { var:adventure_destination = flag:world_northrend }
		localization_key = world_northrend
	}
	
	# world_kalimdor_south
	text = {
		trigger = { var:adventure_destination = flag:world_kalimdor_south }
		localization_key = world_kalimdor_south
	}
	# world_kalimdor_central
	text = {
		trigger = { var:adventure_destination = flag:world_kalimdor_central }
		localization_key = world_kalimdor_central
	}
	# world_kalimdor_north
	text = {
		trigger = { var:adventure_destination = flag:world_kalimdor_north }
		localization_key = world_kalimdor_north
	}
	
	# world_south_seas
	text = {
		trigger = { var:adventure_destination = flag:world_south_seas }
		localization_key = world_south_seas
	}
	
	# world_pandaria_east
	text = {
		trigger = { var:adventure_destination = flag:world_pandaria_east }
		localization_key = world_pandaria_east
	}
	# world_pandaria_west
	text = {
		trigger = { var:adventure_destination = flag:world_pandaria_west }
		localization_key = world_pandaria_west
	}
	# world_pandaria_north
	text = {
		trigger = { var:adventure_destination = flag:world_pandaria_north }
		localization_key = world_pandaria_north
	}
}

GetNotableCharacteristic = {
	type = character
	
	text = {
		localization_key = nc_fbeauty
		trigger = { 
			is_female = yes
			has_trait_beauty_good_trigger = yes
		}
	}

	text = {
		localization_key = nc_mbeauty
		trigger = { 
			is_male = yes
			has_trait_beauty_good_trigger = yes
		}
	}

	text = {
		localization_key = nc_charming
		trigger = { 
			OR = {
				has_trait = gregarious
				has_trait = seducer
			}
		}
	}

	text = {
		localization_key = nc_intelligent
		trigger = { 
			OR = {
				has_trait = intellect_good
				has_trait = shrewd
			}
		}
	}

	text = {
		localization_key = nc_wellborn
		trigger = { 
			always = no
		}
		fallback = yes
	}
}

GetReverseWifeHusband = {
	type = character

	text = {
		localization_key = rwh_empress
		trigger = {
			is_male = yes
			highest_held_title_tier >= 5
		}
	}
	text = {
		localization_key = rwh_emperor
		trigger = {
			is_female = yes
			highest_held_title_tier >= 5
		}
	}

	text = {
		localization_key = rwh_queen
		trigger = {
			is_male = yes
			highest_held_title_tier >= 4
		}
	}
	text = {
		localization_key = rwh_king
		trigger = {
			is_female = yes
			highest_held_title_tier >= 4
		}
	}

	text = {
		localization_key = rwh_duchess
		trigger = {
			is_male = yes
			highest_held_title_tier >= 3
		}
	}
	text = {
		localization_key = rwh_duke
		trigger = {
			is_female = yes
			highest_held_title_tier >= 3
		}
	}

	text = {
		localization_key = rwh_countess
		trigger = {
			is_male = yes
			highest_held_title_tier >= 2
		}
	}
	text = {
		localization_key = rwh_count
		trigger = {
			is_female = yes
			highest_held_title_tier >= 2
		}
	}

	text = {
		localization_key = rwh_wife
		trigger = {
			is_male = yes
		}
	}
	text = {
		localization_key = rwh_husband
		trigger = {
			is_female = yes
		}
	}
}

GetBeautifulMetaphor = {
	type = character

	text = {
		localization_key = gbm_angel
		trigger = {
			religion_has_angels_trigger = yes
		}
	}
	# Warcraft
	text = {
		localization_key = gbm_valkyrie
		trigger = {
			is_female = yes
			faith = { like_norse_religion_trigger = yes }
		}
	}
	# text = {
	#	localization_key = gbm_aphrodite
	#	trigger = {
	#		is_female = yes
	#		faith = {
	#			religion = religion:hellenism_religion
	#		}
	#	}
	# }
	# text = {
	#	localization_key = gbm_adonis
	#	trigger = {
	#		is_male = yes
	#		faith = {
	#			religion = religion:hellenism_religion
	#		}
	#	}
	# }
	text = {
		localization_key = gbm_rati
		trigger = {
			is_female = yes
			faith = {
				like_hinduism_religion_trigger = yes
			}
		}
	}
	text = {
		localization_key = gbm_kamadeva
		trigger = {
			is_male = yes
			faith = {
				like_hinduism_religion_trigger = yes
			}
		}
	}
	text = {
		localization_key = gbm_lilith
		trigger = {
			is_female = yes
			faith = {
				like_judaism_religion_trigger = yes
			}
		}
	}
	text = {
		localization_key = gbm_default
		trigger = { always = no }
		fallback = yes
	}
}

GetExoticPet = {
	type = character

	text = {
		trigger = {
			scope:captured_animal = flag:wolf
		}
		localization_key = pet_wolf
	}
	text = {
		trigger = {
			scope:captured_animal = flag:bear
		}
		localization_key = pet_bear
	}
	text = {
		trigger = {
			scope:captured_animal = flag:lion
		}
		localization_key = pet_lion
	}
	text = {
		trigger = {
			scope:captured_animal = flag:tiger
		}
		localization_key = pet_tiger
	}
}

GetHomageDeliveryDescLiege = {
	type = character

	text = {
		trigger = { has_trait = stuttering }
		localization_key = homage_delivery_stutter_liege
	}
	text = {
		trigger = { has_trait = lisping }
		localization_key = homage_delivery_lisp_liege
	}
	text = {
		trigger = { has_trait = wheezing }
		localization_key = homage_delivery_wheeze_liege
	}
	text = {
		trigger = {
			OR = {
				has_trait = intellect_bad
				has_trait = dull
			}
		}
		localization_key = homage_delivery_slow_liege
	}
}

GetHomageDeliveryDescVassal = {
	type = character

	text = {
		trigger = { has_trait = stuttering }
		localization_key = homage_delivery_stutter_vassal
	}
	text = {
		trigger = { has_trait = lisping }
		localization_key = homage_delivery_lisp_vassal
	}
	text = {
		trigger = { has_trait = wheezing }
		localization_key = homage_delivery_wheeze_vassal
	}
	text = {
		trigger = {
			OR = {
				has_trait = intellect_bad
				has_trait = dull
			}
		}
		localization_key = homage_delivery_slow_vassal
	}
}

GetRoyalCourtRank = {
	type = character

	text = {
		trigger = { highest_held_title_tier = tier_empire }
		localization_key = imperial_court
	}
	text = {
		trigger = { highest_held_title_tier = tier_kingdom }
		localization_key = royal_court
	}
	text = {
		fallback = yes
		localization_key = petty_court
	}
}

GetMAAType1 = {
	type = character

	text = {
		localization_key = bowmen
		trigger = {	scope:maa_type_1 = flag:archers }
	}
	text = {
		localization_key = light_horsemen
		trigger = {	scope:maa_type_1 = flag:light_cavalry }
	}
	text = {
		localization_key = armored_footmen
		trigger = {	scope:maa_type_1 = flag:heavy_infantry }
	}
	text = {
		localization_key = pikemen_unit
		trigger = {	scope:maa_type_1 = flag:pikemen }
	}
	text = {
		localization_key = armored_horsemen
		trigger = {	scope:maa_type_1 = flag:heavy_cavalry }
	}
	text = {
		localization_key = horse_archers
		trigger = {	scope:maa_type_1 = flag:archer_cavalry }
	}
	text = {
		localization_key = light_footmen
		trigger = {	scope:maa_type_1 = flag:skirmishers }
	}
	text = {
		localization_key = war_elephant
		trigger = {	scope:maa_type_1 = flag:elephant_cavalry }
	}
	text = {
		localization_key = camel_rider
		trigger = {	scope:maa_type_1 = flag:camel_cavalry }
	}

	#Warcraft
	text = {
		localization_key = caster
		trigger = {	scope:maa_type_1 = flag:caster }
	}
	text = {
		localization_key = massive_infantry
		trigger = {	scope:maa_type_1 = flag:massive_infantry }
	}
	text = {
		localization_key = light_aerial
		trigger = {	scope:maa_type_1 = flag:light_aerial }
	}
	text = {
		localization_key = massive_aerial
		trigger = {	scope:maa_type_1 = flag:massive_aerial }
	}
}

GetMAAType2 = {
	type = character

	text = {
		localization_key = bowmen
		trigger = {	scope:maa_type_2 = flag:archers }
	}
	text = {
		localization_key = light_horsemen
		trigger = {	scope:maa_type_2 = flag:light_cavalry }
	}
	text = {
		localization_key = armored_footmen
		trigger = {	scope:maa_type_2 = flag:heavy_infantry }
	}
	text = {
		localization_key = pikemen_unit
		trigger = {	scope:maa_type_2 = flag:pikemen }
	}
	text = {
		localization_key = armored_horsemen
		trigger = {	scope:maa_type_2 = flag:heavy_cavalry }
	}
	text = {
		localization_key = horse_archers
		trigger = {	scope:maa_type_2 = flag:archer_cavalry }
	}
	text = {
		localization_key = light_footmen
		trigger = {	scope:maa_type_2 = flag:skirmishers }
	}
	text = {
		localization_key = war_elephant
		trigger = {	scope:maa_type_2 = flag:elephant_cavalry }
	}
	text = {
		localization_key = camel_rider
		trigger = {	scope:maa_type_2 = flag:camel_cavalry }
	}

	#Warcraft
	text = {
		localization_key = caster
		trigger = {	scope:maa_type_2 = flag:caster }
	}
	text = {
		localization_key = massive_infantry
		trigger = {	scope:maa_type_2 = flag:massive_infantry }
	}
	text = {
		localization_key = light_aerial
		trigger = {	scope:maa_type_2 = flag:light_aerial }
	}
	text = {
		localization_key = massive_aerial
		trigger = {	scope:maa_type_2 = flag:massive_aerial }
	}
}

GetLocalRole = {
	type = character

	text = {
		trigger = { has_trait = devoted }
		localization_key = local_role_monk
	}
	text = {
		trigger = { is_landed = yes }
		localization_key = local_role_landed
	}
	text = {
		trigger = {
			NOT = { culture = root.culture }
		}
		localization_key = local_role_culture
	}
	text = {
		trigger = {
			NOT = { faith = root.faith }
		}
		localization_key = local_role_faith
	}
	text = {
		trigger = { has_trait = education_learning }
		localization_key = local_role_judge
	}
	text = {
		trigger = { has_trait = education_martial }
		localization_key = local_role_captain
	}
	text = {
		trigger = { always = yes }
		localization_key = local_role_merchant
	}
}

GetScholarType = {
	type = character

	text = {
		trigger = { has_trait = devoted }
		localization_key = scholar_type_monk
	}
	text = {
		trigger = { has_trait = theologian }
		localization_key = trait_theologian
	}
	text = {
		trigger = { has_trait = lifestyle_mystic }
		localization_key = trait_mystic_2
	}
	text = {
		trigger = { has_trait = lifestyle_physician }
		localization_key = trait_physician_2
	}
	text = {
		trigger = { has_trait = scholar }
		localization_key = trait_scholar
	}
	text = {
		fallback = yes
		localization_key = scholar_type_fallback
	}
}

GetInspirationOwnerType = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_owner_type_writer
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weapon_inspiration }
		}
		localization_key = inspiration_owner_type_weaponsmith
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = armor_inspiration }
		}
		localization_key = inspiration_owner_type_armorer
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_owner_type_weaver
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_owner_type_adventurer
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_owner_type_artisan
	}
	text = {
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_owner_type_metalsmith
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_owner_type_alchemist
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_owner_type_fallback
	}
}

GetInspirationTypeTool = {
	type = character
	random_valid = yes

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_tool_quill
	}
	text = { 
		trigger = {
			inspiration = {	
				OR = {
					has_inspiration_type = weapon_inspiration
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_tool_tongs
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_tool_hammer
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_tool_shuttle
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_tool_thread
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_tool_reins
	}
	text = { # Custom
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_tool_artisan
	}
	text = {
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_type_tool_mold
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_tool_pestle
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_tool_mortar
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_tool_fallback
	}
}

GetInspirationTypeStation = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_station_desk
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration 
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_station_bellows
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration 
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_station_anvil
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration 
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_station_forge
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_station_loom
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_station_maps
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_station_bench
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_station_cauldron
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_station_alembic
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_station_fallback
	}
}

GetInspirationTypeRoom = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_room_study
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weapon_inspiration }
		}
		localization_key = inspiration_type_room_smithy
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = armor_inspiration }
		}
		localization_key = inspiration_type_room_armory
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_room_weavery
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_room_wagon
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_room_workshop
	}
	text = {
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_type_room_shop
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_room_laboratory
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_room_fallback
	}
}

GetInspirationTypeVerb = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_verb_write
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration
					has_inspiration_type = armor_inspiration
				}
			}
		}
		localization_key = inspiration_type_verb_forge
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_verb_weave
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_verb_go
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_verb_create
	}
	text = {
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_type_verb_make
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_verb_study
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_verb_make
	}
}

GetInspirationTypeObject = {
	type = character

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_object_book
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weapon_inspiration }
		}
		localization_key = inspiration_type_object_weapon
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = armor_inspiration }
		}
		localization_key = inspiration_type_object_armor
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
			NOT = { has_variable = banner_commission }
		}
		localization_key = inspiration_type_object_tapestry
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
			has_variable = banner_commission
		}
		localization_key = inspiration_type_object_banner
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_object_journey
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
		}
		localization_key = inspiration_type_object_artisan
	}
	text = {
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_type_object_smith
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_object_alchemy
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_object_fallback
	}
}

GetInspirationMaterialType = {
	type = character
	random_valid = yes

	text = {
		trigger = {
			inspiration = { has_inspiration_type = book_inspiration }
		}
		localization_key = inspiration_type_material_writing
	}
	text = { 
		trigger = {
			inspiration = {
				OR = {
					has_inspiration_type = weapon_inspiration
					has_inspiration_type = armor_inspiration
					has_inspiration_type = smith_inspiration
				}
			}
		}
		localization_key = inspiration_type_material_metal
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = smith_inspiration }
		}
		localization_key = inspiration_type_material_jewels
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = weaver_inspiration }
		}
		localization_key = inspiration_type_material_fabric
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = adventure_inspiration }
		}
		localization_key = inspiration_type_material_sweat
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
			NAND = {
				var:artifact_artisan_type = flag:artisan_type_sculpture
				exists = var:artifact_sculpture_material
				var:artifact_sculpture_material = flag:sculpture_material_stone
			}
		}
		localization_key = inspiration_type_material_wood
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
			var:artifact_artisan_type = flag:artisan_type_sculpture
			exists = var:artifact_sculpture_material
			var:artifact_sculpture_material = flag:sculpture_material_stone
		}
		localization_key = inspiration_type_material_stone
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = artisan_inspiration }
			var:artifact_artisan_type = flag:artisan_type_urn
		}
		localization_key = inspiration_type_material_clay
	}
	text = { 
		trigger = {
			inspiration = { has_inspiration_type = alchemy_inspiration }
		}
		localization_key = inspiration_type_material_ingredients
	}
	text = { 
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_material_fallback
	}
}

InspirationArtisanBaseType = {
	type = character

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_chest }
		localization_key = inspiration_artisan_base_type_chest
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_box }
		localization_key = inspiration_artisan_base_type_box
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_sculpture }
		localization_key = inspiration_artisan_base_type_sculpture
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_cabinet }
		localization_key = inspiration_artisan_base_type_cabinet
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_throne }
		localization_key = inspiration_artisan_base_type_throne
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_scientific_apparatus }
		localization_key = inspiration_artisan_base_type_scientific_apparatus
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_urn }
		localization_key = inspiration_artisan_base_type_urn
	}
}

InspirationSmithBaseType = {
	type = character

	text = {
		trigger = { var:artifact_smith_type = flag:smith_type_brooch }
		localization_key = inspiration_smith_base_type_brooch
	}

	text = {
		trigger = { var:artifact_smith_type = flag:smith_type_regalia }
		localization_key = inspiration_smith_base_type_regalia
	}

	text = {
		trigger = { var:artifact_smith_type = flag:smith_type_crown }
		localization_key = inspiration_smith_base_type_crown
	}

	text = {
		trigger = { var:artifact_smith_type = flag:smith_type_goblet }
		localization_key = inspiration_smith_base_type_goblet
	}
}

InspirationArtisanToolType = {
	type = character
	random_valid = yes

	text = {
		trigger = {
			NOR = {
				var:artifact_artisan_type = flag:artisan_type_sculpture
				var:artifact_artisan_type = flag:artisan_type_urn
			}
		}
		localization_key = inspiration_type_tool_plane
	}

	text = {
		trigger = {
			NOR = {
				var:artifact_artisan_type = flag:artisan_type_sculpture
				var:artifact_artisan_type = flag:artisan_type_urn
			}
		}
		localization_key = inspiration_type_tool_saw
	}

	text = {
		trigger = {
			NOR = {
				var:artifact_artisan_type = flag:artisan_type_sculpture
				var:artifact_artisan_type = flag:artisan_type_urn
			}
		}
		localization_key = inspiration_type_tool_awl
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_sculpture }
		localization_key = inspiration_type_tool_chisel
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_sculpture }
		localization_key = inspiration_type_tool_hammer
	}

	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = inspiration_type_tool_fallback
	}
}

InspirationArtisanJobType = {
	type = character

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_sculpture }
		localization_key = inspiration_artisan_job_type_sculptor
	}

	text = {
		trigger = { var:artifact_artisan_type = flag:artisan_type_urn }
		localization_key = inspiration_artisan_job_type_potter
	}

	text = {
		trigger = {
			NOR = {
				var:artifact_artisan_type = flag:artisan_type_sculpture
				var:artifact_artisan_type = flag:artisan_type_urn
			}
		}				
		localization_key = inspiration_artisan_job_type_carpenter
	}
}

GetVictimOrMy = { # Used in Hold Court
	type = character

	text = {
		trigger = {
			top_liege = { has_character_flag = concerned_exists }
		}
		localization_key = get_victim
	}
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = my
	}
}

InspirationBannerType = {
	type = character

	text = {
		trigger = {
			has_variable = artifact_banner_type
			var:artifact_banner_type = flag:title
		}
		localization_key = weaver_inspiration_banner_title_description
	}
	text = {
		trigger = {
			has_variable = artifact_banner_type
			var:artifact_banner_type = flag:house
		}
		localization_key = weaver_inspiration_banner_house_description
	}
	text = {
		trigger = {
			has_variable = artifact_banner_type
			var:artifact_banner_type = flag:dynasty
		}
		localization_key = weaver_inspiration_banner_dynasty_description
	}
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = weaver_inspiration_banner_fallback_description
	}
}


GetTargetCourtPosition = {#Warcraft
	type = character

	text = {
		trigger = { var:target_court_position = flag:royal_architect }
		localization_key = court_position_architect
	}
	text = {
		trigger = { var:target_court_position = flag:seneschal }
		localization_key = court_position_seneschal
	}
	text = {
		trigger = { var:target_court_position = flag:court_tutor }
		localization_key = court_position_tutor
	}
	text = {
		trigger = { var:target_court_position = flag:high_almoner }
		localization_key = court_position_almoner
	}
	text = {
		trigger = { var:target_court_position = flag:court_physician }
		localization_key = court_position_physician
	}
	text = {
		trigger = { var:target_court_position = flag:antiquarian }
		localization_key = court_position_antiquarian
	}
	text = {
		trigger = { var:target_court_position = flag:master_of_horse }
		localization_key = court_position_horse
	}
	text = {
		trigger = { var:target_court_position = flag:bodyguard }
		localization_key = court_position_bodyguard
	}
	text = {
		trigger = { var:target_court_position = flag:champion }
		localization_key = court_position_champion
	}
	text = {
		trigger = { var:target_court_position = flag:master_of_hunt }
		localization_key = court_position_hunt
	}
	text = {
		trigger = { var:target_court_position = flag:court_poet }
		localization_key = court_position_poet
	}
	text = {
		trigger = { var:target_court_position = flag:court_musician }
		localization_key = court_position_musician
	}
	text = {
		trigger = { var:target_court_position = flag:cupbearer }
		localization_key = court_position_cupbearer
	}
	text = {
		trigger = { var:target_court_position = flag:lady_in_waiting }
		localization_key = court_position_lady
	}
	text = {
		trigger = { var:target_court_position = flag:chief_eunuch }
		localization_key = court_position_eunuch
	}
	text = {
		trigger = { var:target_court_position = flag:court_gardener }
		localization_key = court_position_gardener
	}
	text = {
		trigger = { var:target_court_position = flag:court_artificer }
		localization_key = court_position_artificer
	}
	text = {
		trigger = { var:target_court_position = flag:cultural_emissary }
		localization_key = court_position_emissary
	}
	#text = {
	#	trigger = { var:target_court_position = flag:chief_qadi }
	#	localization_key = court_position_qadi
	#}
	#text = {
	#	trigger = { var:target_court_position = flag:garuda }
	#	localization_key = court_position_garuda
	#}
	#text = {
	#	trigger = { var:target_court_position = flag:keeper_of_swans }
	#	localization_key = court_position_keeper_of_swans
	#}
	# Warcraft
	text = {
		trigger = { var:target_court_position = flag:travel_leader }
		localization_key = court_position_travel_leader
	}
}

GetTargetCourtPositionDesc = {#Warcraft
	type = character

	text = {
		trigger = { var:target_court_position = flag:royal_architect }
		localization_key = court_position_desc_architect
	}
	text = {
		trigger = { var:target_court_position = flag:seneschal }
		localization_key = court_position_desc_seneschal
	}
	text = {
		trigger = { var:target_court_position = flag:court_tutor }
		localization_key = court_position_desc_tutor
	}
	text = {
		trigger = { var:target_court_position = flag:high_almoner }
		localization_key = court_position_desc_almoner
	}
	text = {
		trigger = { var:target_court_position = flag:court_physician }
		localization_key = court_position_desc_physician
	}
	text = {
		trigger = { var:target_court_position = flag:antiquarian }
		localization_key = court_position_desc_antiquarian
	}
	text = {
		trigger = { var:target_court_position = flag:master_of_horse }
		localization_key = court_position_desc_horse
	}
	text = {
		trigger = { var:target_court_position = flag:bodyguard }
		localization_key = court_position_desc_bodyguard
	}
	text = {
		trigger = { var:target_court_position = flag:champion }
		localization_key = court_position_desc_champion
	}
	text = {
		trigger = { var:target_court_position = flag:master_of_hunt }
		localization_key = court_position_desc_hunt
	}
	text = {
		trigger = { var:target_court_position = flag:court_poet }
		localization_key = court_position_desc_poet
	}
	text = {
		trigger = { var:target_court_position = flag:court_musician }
		localization_key = court_position_desc_musician
	}
	text = {
		trigger = { var:target_court_position = flag:cupbearer }
		localization_key = court_position_desc_cupbearer
	}
	text = {
		trigger = { var:target_court_position = flag:lady_in_waiting }
		localization_key = court_position_desc_lady
	}
	text = {
		trigger = { var:target_court_position = flag:chief_eunuch }
		localization_key = court_position_desc_eunuch
	}
	text = {
		trigger = { var:target_court_position = flag:court_gardener }
		localization_key = court_position_desc_gardener
	}
	text = {
		trigger = { var:target_court_position = flag:court_artificer }
		localization_key = court_position_desc_artificer
	}
	text = {
		trigger = { var:target_court_position = flag:cultural_emissary }
		localization_key = court_position_desc_emissary
	}
	#text = {
	#	trigger = { var:target_court_position = flag:chief_qadi }
	#	localization_key = court_position_desc_qadi
	#}
	#text = {
	#	trigger = { var:target_court_position = flag:garuda }
	#	localization_key = court_position_desc_garuda
	#}
	#text = {
	#	trigger = { var:target_court_position = flag:keeper_of_swans }
	#	localization_key = court_position_desc_keeper_of_swans
	#}
	# Warcraft
	text = {
		trigger = { var:target_court_position = flag:travel_leader }
		localization_key = court_position_desc_travel_leader
	}
}
