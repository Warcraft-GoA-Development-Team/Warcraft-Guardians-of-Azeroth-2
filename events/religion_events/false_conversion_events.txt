namespace = false_conversion

##################################################
#False Conversion CB events

	#0001-0003	- Flag characters & counties that might be falsely converted.
	#0020		- Revoke false conversion decision events.
	#0030-0031	- Encourage false conversion admittance decision events.

##################################################

##################################################
# General Maintenance
# by Ewan Cowhig Croft
# 0001-0002
##################################################

#	Flag characters that might be falsely converted.
#		by Ewan Cowhig Croft
false_conversion.0001 = {
	hidden = yes

	trigger = {
		scope:old_faith = { has_doctrine_parameter = sanctioned_false_conversion }
		NOT = {
			has_variable = false_convert
			#has_variable = forbid_crypto_reconversion
		}
	}

	immediate = {
		set_variable = {
			name = false_convert
			value = scope:old_faith
		}
	}
}

#	Flag counties that might be falsely converted.
#		by Ewan Cowhig Croft
false_conversion.0002 = {
	hidden = yes
	scope = landed_title

	trigger = {
		scope:old_faith = { has_doctrine_parameter = sanctioned_false_conversion }
		NOT = {
			has_variable = false_convert
			#has_variable = forbid_crypto_reconversion
		}
	}

	immediate = {
		set_variable = {
			name = false_convert
			value = scope:old_faith
			days = 18250
		}
		add_county_modifier = {
			modifier = false_convert_modifier
			years = 50
		}
	}
}

#	Cleanup counties that have been reconverting.
#		by Ewan Cowhig Croft
false_conversion.0003 = {
	hidden = yes
	scope = landed_title

	trigger = {
		has_county_modifier = relieved_cryptos_modifier
	}

	immediate = {
		remove_county_modifier = relieved_cryptos_modifier
	}
}

##################################################
# Revoke False Conversion Decision Events
# by Ewan Cowhig Croft
# 0020
##################################################

#	Crypto-Faithism
#		by Ewan Cowhig Croft
false_conversion.0020 = {
	type = character_event
	title = false_conversion.0020.t
	desc = false_conversion.0020.desc
	
	theme = faith
	left_portrait =	root

	weight_multiplier = {
		base = 1
	}

	immediate = {
		var:false_convert = { save_scope_as = old_faith }	#For loc.
		faith = { save_scope_as = current_faith }	#For loc.
	}

	option = {	#You return to your original faith. Huzzah for secret cults!
		name = false_conversion.0020.a
		set_character_faith_with_conversion = var:false_convert
		if = {	#If independent, also grab any counties in your realm that still have crypto-religious communities.
			limit = {
				is_independent_ruler = yes
				any_sub_realm_county = {
					has_variable = false_convert
					var:false_convert = root.faith
					NOT = { faith = root.faith }	#Discount them if they've already been switched by the conversion action.
				}
			}
			set_variable = {	#Log how many counties switch.
				name = num_false_converts_counties
				value = 0
			}
			every_sub_realm_county = {
				limit = {
					has_variable = false_convert
					var:false_convert = root.faith
					NOT = { faith = root.faith }	#Discount them if they've already been switched by the conversion action.
				}
				set_county_faith = var:false_convert	#Everyone likes practicing their faith in the open!
				remove_county_modifier = false_convert_modifier
				add_county_modifier = {
					modifier = relieved_cryptos_modifier
					years = 25
				}
				root = {	#Adjust logging for each valid county.
					change_variable = {
						name = num_false_converts_counties
						add = 1
					}
				}
				remove_variable = false_convert	#Cleanup the variable when we're done.
			}
			send_interface_message = {	#Alert the user if any counties have switched.
				type = revealed_crypto_faith
				title = event_false_converts.t
				desc = event_false_converts_counties_only.desc
			}
		}
		add_piety = major_piety_loss	#Deduct piety cost.
		if = {
			limit = { is_independent_ruler = no }
			liege = {
				send_interface_message = {
					type = revealed_crypto_faith
					title = event_false_convert_my_vassal.t
					desc = event_false_convert_interface.desc
					right_icon = root
				}
			}
		}
		every_vassal = {
			send_interface_message = {
				type = revealed_crypto_faith
				title = event_false_convert_my_liege.t
				desc = event_false_convert_interface.desc
				right_icon = root
			}
		}
		stress_impact = {
			zealous = medium_stress_impact_gain	#Damn it, I was passionate about my openly-practiced faith!
			cynical	= medium_stress_impact_gain	#Damn it, they're all basically the same! Probably!
		}
		ai_chance = {
			base = 60
			ai_value_modifier = {
				ai_zeal = 0.5
				ai_boldness = 0.25
			}
			modifier = {
				add = -20
				has_trait = zealous	#Must not stress self.
			}
			modifier = {
				add = -20
				has_trait = cynical	#Must. Not. Stress. Self
			}
		}
	}
	option = {	#On seconds thoughts...
		name = false_conversion.0020.b
		ai_chance = {
			base = 40
			ai_value_modifier = {
				ai_zeal = -0.25
				ai_boldness = -0.25
			}
			modifier = {
				add = 20
				has_trait = lazy #Efffforrrtttt.
			}
		}
	}
}

##################################################
# Encourage False Conversion Admittance Decision Events
# by Ewan Cowhig Croft
# 0030-0031
##################################################

#	You encourage crypto-religionists in your realm to return to openly practicing their faiths.
#		by Ewan Cowhig Croft
false_conversion.0030 = {
	type = character_event
	title = false_conversion.0030.t
	desc = {
		desc = false_conversion.0030.desc_start
		first_valid = {
			triggered_desc = {
				trigger = {
					has_variable = false_convert
				}
				desc = false_conversion.0030.desc_has_secret_faith
			}
			triggered_desc = {
				trigger = {
					faith = {
						has_doctrine = doctrine_pluralism_pluralistic
					}
				}
				desc = false_conversion.0030.desc_no_secret_faith
			}
			desc = false_conversion.0030.desc_no_secret_faith_not_pluralist
		}
		desc = false_conversion.0030.desc_end
	}
	
	theme = faith
	left_portrait =	root

	weight_multiplier = {
		base = 1
	}

	immediate = {
		if = {
			limit = { has_variable = false_convert }
			var:false_convert = { save_scope_as = old_faith }	#For loc.
		}
		set_variable = {	#Initialise counting for the number of landed converts.
			name = num_false_converts_vassal
			value = 0
		}
		set_variable = {	#Initialise counting for the number of landless converts.
			name = num_false_converts_landless
			value = 0
		}
		set_variable = {	#Log how many counties switch.
			name = num_false_converts_counties
			value = 0
		}
		if = {	#If pluralistic, look at any hidden faiths.
			limit = {
				faith = { has_doctrine = doctrine_pluralism_pluralistic }
			}
			every_vassal = {
				limit = {	#Providing they are equal-to-or-less in hostility.
					is_ai = yes
					has_variable = false_convert
					NOR = {	#And not super-committed to their public religion/has already converted.
						has_trait = zealous
						this = faith.religious_head
						var:false_convert = faith
					}
					save_temporary_scope_as = current_character
					root.faith = {	#Public conversion must be advantageous, or at least not harmful.
						faith_hostility_level_comparison = {
							scope:current_character.var:false_convert <= scope:current_character.faith
						}
					}
					OR = {	#The vassals should either be trusting, or else have an iron-clad reason to believe the amnesty.
						NOR = {
							has_trait = deceitful
							has_trait = paranoid
						}
						var:false_convert = root.faith
					}
				}
				add_to_list = converting_vassals_list
				root = {
					change_variable = {
						name = num_false_converts_vassal
						add = 1
					}
				}
			}
			every_courtier_or_guest = {	#Grab courtiers and such too.
				limit = {
					is_ai = yes
					has_variable = false_convert
					NOT = { has_trait = zealous }
					save_temporary_scope_as = current_character
					root.faith = {
						faith_hostility_level_comparison = {
							scope:current_character.var:false_convert <= scope:current_character.faith
						}
					}
					OR = {
						NOR = {
							has_trait = deceitful
							has_trait = paranoid
						}
						var:false_convert = root.faith
					}
				}
				add_to_list = converting_landless_list
				root = {
					change_variable = {
						name = num_false_converts_landless
						add = 1
					}
				}
			}
			if = {	#If independent, also grab any counties in your realm that still have crypto-religious communities.
				limit = {
					is_independent_ruler = yes
					any_sub_realm_county = {
						has_variable = false_convert
					}
				}
				every_sub_realm_county = {
					limit = {
						has_variable = false_convert
						save_temporary_scope_as = current_county
						root.faith = {
							faith_hostility_level_comparison = {
								scope:current_county.var:false_convert <= scope:current_county.faith
							}
						}
					}
					add_to_list = converting_counties_list
					root = {	#Adjust logging for each valid county.
						change_variable = {
							name = num_false_converts_counties
							add = 1
						}
					}
				}
			}
		}
		else = {	#Otherwise, only check for within your own faith. Crypto-religionists don't want to come out of hiding for just anybody.
			every_vassal = {
				limit = {
					is_ai = yes
					has_variable = false_convert
					NOR = {
						has_trait = zealous
						this = faith.religious_head
						var:false_convert = faith
					}
					var:false_convert = root.faith
				}
				add_to_list = converting_vassals_list
				root = {
					change_variable = {
						name = num_false_converts_vassal
						add = 1
					}
				}
			}
			every_courtier_or_guest = {	#And any courtiers or hangers-on.
				limit = {
					is_ai = yes
					has_variable = false_convert
					NOT = { has_trait = zealous }
					var:false_convert = root.faith
				}
				add_to_list = converting_landless_list
				root = {
					change_variable = {
						name = num_false_converts_landless
						add = 1
					}
				}
			}
			every_sub_realm_county = {
				limit = {
					has_variable = false_convert
					var:false_convert = root.faith
					NOT = { faith = root.faith }	#Discount them if they've already been switched by the conversion action.
				}
				set_county_faith = var:false_convert
				remove_county_modifier = false_convert_modifier
				add_county_modifier = {
					modifier = relieved_cryptos_modifier
					years = 25
				}
				root = {	#Adjust logging for each valid county.
					change_variable = {
						name = num_false_converts_counties
						add = 1
					}
				}
				remove_variable = false_convert	#Cleanup the variable when we're done.
			}
		}
	}

	option = {	#Tell everyone to just be honest about their faith.
		name = false_conversion.0030.a
		custom_tooltip = false_conversion.0030.a.tt
		hidden_effect = {
			every_in_list = {	#Convert the vassals.
				list = converting_vassals_list
				set_character_faith_with_conversion = var:false_convert
				save_temporary_scope_as = reconverter
				every_vassal = {	#Notify your vassals' vassals of the change.
					send_interface_message = {
						type = revealed_crypto_faith
						title = event_false_convert_my_vassal.t
						desc = event_false_convert_interface.desc
						right_icon = scope:reconverter
					}
				}
				add_opinion = {	#Huzzah! I can go to church!
					modifier = religious_freedom_opinion
					target = root
				}
			}
			every_in_list = {	#And the dregs.
				list = converting_landless_list
				set_character_faith_with_conversion = var:false_convert
				add_opinion = {	#Huzzah! I can go to church! Shame I don't own any!
					modifier = religious_freedom_opinion
					target = root
				}
			}
			if = {	#If independent, also grab any counties in your realm that still have crypto-religious communities.
				limit = { is_independent_ruler = yes }
				every_in_list = {
					list = converting_counties_list
					set_county_faith = var:false_convert
					add_county_modifier = {	#Everyone likes practicing their faith in the open!
						modifier = relieved_cryptos_modifier
						years = 25
					}
					remove_variable = false_convert	#Cleanup the variable when we're done.
				}
			}
			if = {	#Include counties in the message if there are any.
				limit = { var:num_false_converts_counties >= 1 }
				send_interface_message = {
					type = revealed_crypto_faith
					title = event_false_converts.t
					desc = event_false_converts_plus_counties.desc
				}
			}
			if = {	#Else, just talk about vassals and landless characters.
				limit = { var:num_false_converts_counties <= 0 }
				send_interface_message = {
					type = revealed_crypto_faith
					title = event_false_converts.t
					desc = event_false_converts_without_counties.desc
				}
			}
			if = {	#Under pluralist lieges, tell suitable players that their liege is offering amnesty.
				limit = {
					faith = { has_doctrine = doctrine_pluralism_pluralistic }
				}
				every_vassal = {
					limit = {
						is_ai = no
						has_variable = false_convert
					}
					trigger_event = false_conversion.0031
				}
			}
			else = {	#Under non-pluralist lieges, tell suitable players that their liege is offering amnesty.
				every_vassal = {
					limit = {
						is_ai = no
						var:false_convert = root.faith
					}
					trigger_event = false_conversion.0031
				}
			}
		}
		add_piety = major_piety_loss	#Deduct piety cost.
		stress_impact = {
			honest = minor_stress_impact_loss
			trusting = minor_stress_impact_loss
		}
		ai_chance = {
			base = 40
			ai_value_modifier = {
				ai_compassion = 0.5	#Everyone should be open with each other.
			}
			modifier = {
				add = 20
				has_trait = honest	#Honesty is the best policy.
			}
			modifier = {
				add = 20
				has_trait = trusting	#Trust people to trust your word.
			}
		}
	}
	option = {	#Let's let sleeping sectarian conflicts lie.
		name = {
			text = false_conversion.0030.b_no_secret_faith
			trigger = {
				NOT = { has_variable = false_convert }
			}
		}
		name = {
			text = false_conversion.0030.b_has_secret_faith
			trigger = { has_variable = false_convert }
		}
		ai_chance = {
			base = 60
			ai_value_modifier = {
				ai_boldness = -0.25
			}
		}
	}

}

#	Your liege is trying to promulgate freedom of worship.
#		by Ewan Cowhig Croft
false_conversion.0031 = {
	type = character_event
	title = false_conversion.0031.t
	desc = false_conversion.0031.desc
	
	theme = faith
	override_background = {
		reference = temple_scope
	}
	left_portrait =	root.liege

	weight_multiplier = {
		base = 1
	}

	immediate = {
		root.liege = {
			save_scope_as = background_temple_scope
		}
	}

	option = {	#I hop on board the faith-train to Conversion City.
		name = false_conversion.0031.a
		set_character_faith_with_conversion = var:false_convert
		liege = {
			send_interface_message = {
				type = revealed_crypto_faith
				title = event_false_convert_my_vassal.t
				desc = event_false_convert_interface.desc
				right_icon = root
			}
		}
		every_vassal = {
			send_interface_message = {
				type = revealed_crypto_faith
				title = event_false_convert_my_vassal.t
				desc = event_false_convert_interface.desc
				right_icon = root
			}
		}
		add_opinion = {	#Huzzah! I can go to church!
			modifier = religious_freedom_opinion
			target = root
		}
		stress_impact = {
			zealous = medium_stress_impact_gain
			cynical = medium_stress_impact_gain
			deceitful = medium_stress_impact_gain
			honest = medium_stress_impact_loss
			trusting = medium_stress_impact_loss

		}
		ai_chance = {
			base = 0	#Player-only event.
		}
	}
	option = {	#I know how this goes: I'll keep my private faith private.
		name = false_conversion.0031.b
		stress_impact = {
			honest = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
			deceitful = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100	#Player-only event.
		}
	}
}
