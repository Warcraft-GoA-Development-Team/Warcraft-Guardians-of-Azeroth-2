namespace = epidemic_events

############################
## Epidemic Maintenance Events
## 0001-1000
## by Veronica Pazos
############################

# epidemic_events.0001 - Army commander gets infected - may spread to army
# epidemic_events.0010 - The plague has reached your court, set your stance (event to avoid event spamming)

# Army commander gets infected - may spread to army
epidemic_events.0001 = {	
	type = character_event
	title = epidemic_events.0001.t
	desc = epidemic_events.0001.desc
	theme = plague
	left_portrait = {
		character = root
		animation = sick
	}
	override_background = { reference = army_camp }
	override_effect_2d = {
		reference = flies	
	}
	cooldown = { years = 2 } 

	# Warcraft
	trigger = {
		NOT = { 
			root = { has_trait_with_flag = can_not_get_sick }
		}
	}
	
	immediate = {
		grab_epidemic_disease_effect = yes
		random_dummy_gender_soldier_effect = { SCOPE_NAME = dummy_gender }
	}
	
	option = { #You get sick lol
		# Warcraft - TODO: Flavor for EKC religions???
		# name = { 
		# 	trigger = { faith.religion = religion:christianity_religion }
		# 	text = epidemic_events.0001.a.christian
		# }
		name =  epidemic_events.0001.a
		if = { #are you infecting your knights or your entire army; kinda arbitrary for flavour
			limit = {
				OR = { #infect army, these are highly contagious
					has_trait = typhus
					has_trait = bubonic_plague
					has_trait = dysentery
				}
			}
			random = { # Warcraft
				chance = { 
					value = 90
					multiply = wc_standard_epidemic_infect_chance_percent_reduction
					min = 1
				}
				#you infect your knights
				send_interface_toast = {
					title = epidemic_events.0001.a.toast
					left_icon = root
					add_character_modifier = {
						modifier = epidemic_infected_knights_modifier #knights effectiveness
						years = 2
					}
				}
			}
		}
		else = { #infect your knigths only, the rest of diseases are kinda less infectious
			random = { # Warcraft
				chance = { 
					value = 20
					multiply = wc_standard_epidemic_infect_chance_percent_reduction
					min = 1
				}
				#you infect your army
				send_interface_toast = {
					title = epidemic_events.0001.a.toast
					left_icon = root
					add_character_modifier = {
						modifier = epidemic_infected_army_modifier #damage mult
						years = 2
					}
				}
			}
		}
		stress_impact = {
			paranoid = medium_stress_impact_gain
			gregarious = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
		}
	}
}

# Notification for going into isolation
epidemic_events.0100 = {
	type = character_event
	title = epidemic_events.0100.t
	desc = epidemic_events.0100.desc
	theme = plague
	left_portrait = {
		character = root
		animation = fear
	}

	option = { #Into isolation we go
		name = epidemic_events.0100.a
		isolate_family_decision_effect = yes
		ai_chance = {
			base = 100
		}
		add_legitimacy = miniscule_legitimacy_loss
	}
}
epidemic_events.0101 = {
	type = character_event
	title = epidemic_events.0101.t
	desc = epidemic_events.0101.desc
	theme = plague
	left_portrait = {
		character = root
		animation = personality_content
	}
	trigger = {
		has_character_modifier = isolating_modifier
	}

	option = { #Out of isolation we come
		name = epidemic_events.0101.a
		unisolate_family_decision_effect = yes
		ai_chance = {
			base = 100
		}
	}
}

# Prosperity event / Plague recovery event
epidemic_events.0110 = {
	type = character_event
	title = epidemic_events.0110.t
	desc = {
		desc = epidemic_events.0110.desc
		triggered_desc = {
			trigger = {
				exists = scope:new_preferred_capital
			}
			desc = epidemic_events.0110.desc.new_capital
		}
	}
	theme = plague
	left_portrait = {
		character = root
		animation = personality_rational
	}

	trigger = {
		# Make sure no new plagues showed up since then
		NOT = {
			any_sub_realm_county = {
				any_county_province = {
					any_province_epidemic = {
						count >= 1
					}
				}
				is_extreme_longevity_culture = no
			}
		}
		OR = { #You're either not on cooldown OR the Black Death
			NOT = { has_variable = had_recent_prosperity_event_var }
			scope:epidemic = {
				epidemic_type.epidemic_trait = trait:bubonic_plague
				outbreak_intensity = apocalyptic
			}
		}
		has_variable_list = formerly_infected_counties
		NOT = { culture = { has_cultural_parameter = aloof_wardens } }  # Warcraft - doesnt care much about what goes on outside their walls
	}

	immediate = {
		set_variable = {
			name = had_recent_prosperity_event_var
			years = 2
		}
		if = {
			limit = { # A new capital potential?
				highest_held_title_tier >= tier_kingdom
				any_sub_realm_duchy = {
					title_capital_county = {
						NOT = { exists = var:epidemic_cooldown_general }
						holder = {
							OR = {
								this = root
								is_ai = yes
							}
						}
						save_temporary_scope_as = county_to_check
						root = {
							primary_title = {
								is_de_jure_liege_or_above_target = scope:county_to_check
							}
							NOT = { capital_county = scope:county_to_check }
							any_in_list = {
								variable = formerly_infected_counties
								this = scope:county_to_check
							}
						}
					}
				}
			}
			random_sub_realm_duchy = {
				weight = {
					base = 1
					modifier = {
						add = title_capital_county.development_level
					}
				}
				limit = {
					title_capital_county = {
						NOT = { exists = var:epidemic_cooldown_general }
						holder = {
							OR = {
								this = root
								is_ai = yes
							}
						}
						save_temporary_scope_as = county_to_check
						root = {
							primary_title = {
								is_de_jure_liege_or_above_target = scope:county_to_check
							}
							NOT = { capital_county = scope:county_to_check }
							any_in_list = {
								variable = formerly_infected_counties
								this = scope:county_to_check
							}
						}
					}
				}
				title_capital_county = { save_scope_as = new_preferred_capital }
			}
		}
	}

	option = { # Ah, a cool new capital!
		name = epidemic_events.0110.a
		trigger = {
			exists = scope:new_preferred_capital
			scope:epidemic = { outbreak_intensity >= major } #don't switch capitals for a minor plague
			is_ai = no
		}
		remove_short_term_gold = {
			value = epidemic_fromdust_value
			add = minor_gold_value
		}
		create_title_and_vassal_change = {
			type = revoked
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:new_preferred_capital = {
			change_title_holder = {
				holder = root
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		primary_title = {
			set_capital_county = scope:new_preferred_capital
		}
		set_realm_capital = scope:new_preferred_capital
		scope:new_preferred_capital = {
			add_county_modifier = {
				modifier = plague_new_capital
				years = 10
			}
		}
		every_in_list = {
			variable = formerly_infected_counties
			custom = every_county_infected_10_years
			limit = {
				NOT = {
					this = scope:new_preferred_capital
				}
			}
			add_county_modifier = {
				modifier = county_epidemic_recovered_medium_modifier
				years = 5
			}
		}
	}

	option = { # Spend cash to help recover from the plague
		name = epidemic_events.0110.b
		if = {
			limit = {
				scope:epidemic = {
					epidemic_type.epidemic_trait = trait:bubonic_plague
					outbreak_intensity = apocalyptic
				}
			}
			remove_short_term_gold = epidemic_fromdust_value
			every_in_list = {
				variable = formerly_infected_counties
				custom = every_county_infected_10_years
				add_county_modifier = {
					modifier = county_epidemic_recovered_strong_modifier
					years = 5
				}
			}
		}
		else_if = {
			limit = {
				scope:epidemic = {
					outbreak_intensity >= major
				}
			}
			remove_short_term_gold = epidemic_fromdust_value
			every_in_list = {
				variable = formerly_infected_counties
				custom = every_county_infected_10_years
				add_county_modifier = {
					modifier = county_epidemic_recovered_medium_modifier
					years = 5
				}
			}
		}
		else = {
			remove_short_term_gold = {
				value = epidemic_fromdust_value
				multiply = 0.5
			}
			every_in_list = {
				variable = formerly_infected_counties
				custom = every_county_infected_10_years
				add_county_modifier = {
					modifier = county_epidemic_recovered_minor_modifier
					years = 5
				}
			}
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = -1
			}
			modifier = {
				factor = 0
				short_term_gold < epidemic_fromdust_value
			}
		}
	}

	option = { # Nah don't care
		name = epidemic_events.0110.c
		if = {
			limit = {
				scope:epidemic = {
					outbreak_intensity >= major
				}
			}
			every_in_list = {
				variable = formerly_infected_counties
				custom = every_county_infected_10_years
				add_county_modifier = {
					modifier = county_epidemic_recovered_minor_modifier
					years = 5
				}
			}
		}
		else = {
			every_in_list = {
				variable = formerly_infected_counties
				custom = every_county_infected_10_years
				add_county_modifier = {
					modifier = county_epidemic_recovered_tiny_modifier
					years = 5
				}
			}
		}
		add_legitimacy = miniscule_legitimacy_loss
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 2.5
				ai_rationality = -1
			}
		}
	}

	after = {
		clear_variable_list = formerly_infected_counties
	}
}

############################
## Epidemic Flavor Events
## 1000-2000
## by James Beaumont
############################

############################
## A charismatic priest is convincing the sick that the plague is a result of their heathen ways
## 1000
## by James Beaumont
############################
epidemic_events.1000 = {	
	type = character_event
	title = epidemic_events.1000.t
	desc = {
		desc = epidemic_events.1000.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					faith = { has_doctrine_parameter = unreformed }
				}
				desc = epidemic_events.1000.desc.mid.unreformed
			}
			desc = epidemic_events.1000.desc.mid.reformed
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					has_trait = cynical
				}
				desc = epidemic_events.1000.desc.mid2.cynical
			}
			triggered_desc = {
				trigger = {
					has_trait = zealous
				}
				desc = epidemic_events.1000.desc.mid2.zealous
			}
			desc = epidemic_events.1000.desc.mid2.fallback
		}
		desc = epidemic_events.1000.desc.outro
	}
	theme = plague
	override_background = { reference = ce1_funeral_pyre }
	override_effect_2d = {
		reference = smoke	
	}
	
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				has_trait = cynical
			}
			animation = thinking
		}
		animation = anger
	}
	right_portrait = {
		character = scope:charismatic_priest
		animation = personality_zealous
	}
	cooldown = { years = 5 } 
	trigger = {
		is_extreme_longevity_culture = no
		is_available = yes
		# Only tribes
		government_has_flag = government_is_tribal
		# Only if the plague is quite dramatic
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
					outbreak_intensity >= major
				}
			}
			is_extreme_longevity_culture = no
		}
		# Make sure there's a valid faith to convert to
		OR = {
			AND = {
				faith = { has_doctrine_parameter = unreformed }
				faith.religion = {
					any_faith = { NOT = { has_doctrine_parameter = unreformed } }
				}
			}
			AND = {
				faith.religion = {
					is_in_family = rf_pagan
				}
				faith = { NOT = { has_doctrine_parameter = unreformed } }
				faith.religion = {
					any_faith = { has_doctrine_parameter = unreformed }
				}
			}
			AND = {
				faith = { has_doctrine_parameter = unreformed }
				top_liege = {
					any_character_to_title_neighboring_and_across_water_county = {
						holder.top_liege = {
							any_sub_realm_county = {
								faith = { NOT = { has_doctrine_parameter = unreformed } }
							}
						}
					}
				}
			}
			AND = {
				faith = { NOT = { has_doctrine_parameter = unreformed } }
				top_liege = {
					any_sub_realm_county = {
						faith = {
							has_doctrine_parameter = unreformed
						}
					}
				}
			}
		}
	}

	immediate = {
		# Grab a county to convert
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = {
						outbreak_intensity >= major
					}
				}
				is_extreme_longevity_culture = no
			}
			weight = {
				base = 1
				modifier = {
					add = 250
					any_county_province = {
						any_province_epidemic = {
							count >= 1
							outbreak_intensity >= apocalyptic
						}
					}
				}
			}
			random_county_province = {
				limit = {
					any_province_epidemic = {
						outbreak_intensity >= major
					}
				}
				weight = {
					base = 1
					modifier = {
						add = 250
						any_province_epidemic = {
							count >= 1
							outbreak_intensity >= apocalyptic
						}
					}
				}
				random_province_epidemic = {
					limit = {
						outbreak_intensity >= major
					}
					weight = {
						base = 1
						modifier = {
							add = 250
							outbreak_intensity >= apocalyptic
						}
					}
					save_scope_as = cult_epidemic
				}
			}
			save_scope_as = infected_county
		}
		# Grab the reformed version of the unreformed faith if possible (Bon for example)
		if = {
			limit = {
				faith = { has_doctrine_parameter = unreformed }
				faith.religion = {
					any_faith = { NOT = { has_doctrine_parameter = unreformed } }
				}
			}
			faith.religion = {
				random_faith = {
					limit = {
						NOT = { has_doctrine_parameter = unreformed }
					}
					save_scope_as = heretical_faith
				}
			}
		}
		# Otherwise grab a reformed faith from within your realm
		else_if = {
			limit = {
				faith = { has_doctrine_parameter = unreformed }
				top_liege = {
					any_sub_realm_county = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
				}
			}
			top_liege = {
				random_sub_realm_county = {
					limit = {
						faith = { NOT = { has_doctrine_parameter = unreformed } }
					}
					faith = { save_scope_as = heretical_faith }
				}
			}
		}
		# Otherwise grab a nearby reformed faith
		else_if = {
			limit = {
				faith = { has_doctrine_parameter = unreformed }
				top_liege = {
					any_character_to_title_neighboring_and_across_water_county = {
						holder.top_liege = {
							any_sub_realm_county = {
								faith = { NOT = { has_doctrine_parameter = unreformed } }
							}
						}
					}
				}
			}
			top_liege = {
				random_character_to_title_neighboring_and_across_water_county = {
					limit = {
						holder.top_liege = {
							any_sub_realm_county = {
								faith = { NOT = { has_doctrine_parameter = unreformed } }
							}
						}
					}
					holder.top_liege = {
						random_sub_realm_county = {
							limit = {
								faith = { NOT = { has_doctrine_parameter = unreformed } }
							}
							faith = { save_scope_as = heretical_faith }
						}
					}
				}
			}
		}
		# You're a reformed faith and your people wanna revert to the old ways
		else_if = {
			limit = {
				# Don't get Kuzarism for Jewish realms
				faith.religion = { is_in_family = rf_pagan }
				faith = { NOT = { has_doctrine_parameter = unreformed } }
				faith.religion = {
					any_faith = { has_doctrine_parameter = unreformed }
				}
			}
			faith.religion = {
				random_faith = {
					limit = {
						has_doctrine_parameter = unreformed
					}
					save_scope_as = heretical_faith
				}
			}
		}
		# You're a reformed faith and you rule over pagans
		else_if = {
			limit = {
				faith = { NOT = { has_doctrine_parameter = unreformed } }
				top_liege = {
					any_sub_realm_county = {
						faith = {
							has_doctrine_parameter = unreformed
						}
					}
				}
			}
			top_liege = {
				random_sub_realm_county = {
					limit = {
						faith = {
							has_doctrine_parameter = unreformed
						}
					}
					faith = { save_scope_as = heretical_faith }
				}
			}
		}
		# Now create the priest
		# See if there's a nearby person of the culture
		if = {
			limit = {
				top_liege = {
					any_character_to_title_neighboring_and_across_water_county = {
						faith = scope:heretical_faith
					}
				}
			}
			top_liege = {
				random_character_to_title_neighboring_and_across_water_county = {
					limit = { faith = scope:heretical_faith }
					culture = { save_scope_as = heretical_culture }
				}
			}
		}
		else = {
			root.culture = { save_scope_as = heretical_culture }
		}
		# Create a priest
		create_character = {
			template = priest_character_template
			location = root.location
			culture = scope:heretical_culture
			faith = scope:heretical_faith
			trait = eccentric
			#Set up the scope
			save_scope_as = charismatic_priest
			# Warcraft - TODO: make his culture equivalent to a non-elder culture in your realm if there is one and you're an elder culture
			after_creation = {
				trigger_race_giving_no_gene_effect = yes
			}
		}
	}

	option = { # Burn this raving lunatic!
		name = epidemic_events.1000.a
		scope:charismatic_priest = {
			override_death_killer_effect = { # Warcraft
				killer = root
				death_reason = death_execution
			}
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:cult_epidemic
					}
				}
			}
			add_county_modifier = {
				modifier = plague_cult_persecuted
				years = 10
			}
		}
		stress_impact = {
			sadistic = minor_stress_impact_loss
			compassionate = medium_stress_impact_gain
			cynical = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 1
				ai_compassion = -1
			}
		}
	}

	option = { # I'm sure they can't do any harm
		name = epidemic_events.1000.b
		if = { # Don't go converting all of the world into unreformed faiths
			limit = {
				OR = {
					faith = { has_doctrine_parameter = unreformed }
					is_ai = no
				}
			}
			scope:infected_county = {
				set_county_faith = scope:heretical_faith
			}
		}
		scope:infected_county = {
			add_county_modifier = {
				modifier = plague_cult_embraced
				years = 10
			}
		}
		stress_impact = {
			zealous = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			stubborn = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = -1
				ai_rationality = -0.5
			}
		}
	}

	option = { # They have a point :thinking_emoji:
		name = epidemic_events.1000.c
		trigger = {
			has_trait = cynical
		}
		set_character_faith = scope:heretical_faith
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:cult_epidemic
					}
				}
			}
			set_county_faith = scope:heretical_faith
			add_county_modifier = {
				modifier = plague_cult_embraced
				years = 10
			}
		}
		stress_impact = {
			cynical = major_stress_impact_loss
			arrogant = medium_stress_impact_gain
			stubborn = medium_stress_impact_gain
		}
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = -1
				ai_rationality = -1
			}
			modifier = {
				factor = 0
				# Warcraft 
				OR = { 
					faith = { NOT = { has_doctrine_parameter = unreformed } }
					is_extreme_longevity_culture = yes
				}
			}
		}
	}
}
# Warcraft - Should we remove this event? Will people know the difference or will the possibility of an actual undead plague make this WORSE?
############################
## Superstitious courtiers want you to nail the coffin of your deceased lover shut to prevent them from rising as a revanent
## 1010
## by James Beaumont
############################
epidemic_events.1010 = {	
	type = character_event
	title = epidemic_events.1010.t
	desc = epidemic_events.1010.desc
	theme = plague
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:superstitious_courtier
		animation = manic
	}
	lower_right_portrait = {
		character = scope:dead_lover
	}
	cooldown = { years = 5 } 
	trigger = {
		is_available_adult = yes
		# Only if there's a big plague
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
					outbreak_intensity >= major
				}
			}
			is_extreme_longevity_culture = no
		}
		# Recently deceased
		any_memory = {
			OR = {
				has_memory_type = spouse_died
				has_memory_type = soulmate_died
				has_memory_type = lover_died
			}
			memory_participant:dead_relation = {
				time_since_death = {
					years <= 10
				}
			}
		}
		# You have a courtier who is plausibly superstitious
		any_courtier_or_guest = {
			is_available_adult = yes
			probably_superstitious = yes
			is_extreme_longevity_culture = no
		}
	}

	immediate = {
		get_random_realm_epidemic = { INTENSITY = major }
		random_memory = {
			limit = {
				OR = {
					has_memory_type = spouse_died
					has_memory_type = soulmate_died
					has_memory_type = lover_died
				}
				any_memory_participant = {
					time_since_death = {
						years <= 3
					}
				}
			}
			memory_participant:dead_relation = { save_scope_as = dead_lover }
			save_scope_as = dead_memory
		}
		random_courtier_or_guest = {
			limit = {
				is_available_adult = yes
				probably_superstitious = yes
				is_extreme_longevity_culture = no
			}
			save_scope_as = superstitious_courtier
		}
	}

	option = { # How bloody well dare you
		name = epidemic_events.1010.a
		reverse_add_opinion = {
			modifier = hate_opinion
			opinion = -20
			target = scope:superstitious_courtier
		}
		every_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = beset_by_revenants
				years = 10
			}
		}
		add_legitimacy = miniscule_legitimacy_loss
		stress_impact = {
			callous = minor_stress_impact_loss
			cynical = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			eccentric = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 1
				ai_compassion = 1
				ai_rationality = 1
			}
		}
	}

	option = { # Nail it shut!
		name = epidemic_events.1010.b
		scope:dead_lover = {
			every_close_family_member = {
				custom = every_family_member_of_lover
				add_opinion = {
					modifier = hate_opinion
					opinion = -30
					target = root
				}
			}
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = revenant_expelled
				years = 10
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			base = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = -1
				ai_honor = -1
			}
			# Warcraft
			modifier = { 
				is_extreme_longevity_culture = no
				factor = 0
			}
		}
	}

	option = { # Nail every coffin in the kingdom!
		name = epidemic_events.1010.c
		trigger = {
			has_trait = paranoid
		}
		scope:dead_lover = {
			every_close_family_member = {
				custom = every_family_member_of_lover
				add_opinion = {
					modifier = hate_opinion
					opinion = -30
					target = root
				}
			}
		}
		progress_towards_friend_effect = {
			REASON = friend_revenants_nailed
			CHARACTER = scope:superstitious_courtier
			OPINION = default_friend_opinion
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = revenants_expelled
				years = 15
			}
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss
			callous = minor_stress_impact_loss
			base = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = -1
				ai_honor = -1
			}
			# Warcraft
			modifier = { 
				is_extreme_longevity_culture = no
				factor = 0
			}
		}
	}
}

############################
## Guys wanna plant flowers to combat the plague
## 1020
## by James Beaumont
############################
epidemic_events.1020 = {	
	type = character_event
	title = epidemic_events.1020.t
	desc = epidemic_events.1020.desc
	theme = plague
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:miasma_courtier
		animation = thinking
	}
	cooldown = { years = 5 } 
	trigger = {
		is_available = yes
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
				}
			}
		}
		any_courtier_or_guest = {
			count >= 1
			is_available_adult = yes
			is_extreme_longevity_culture = no  # Warcraft
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = {
						count >= 1
					}
				}
			}
			random_county_province = {
				limit = {
					any_province_epidemic = {
						count >= 1
					}
				}
				save_scope_as = epidemic_province
				random_province_epidemic = {
					save_scope_as = epidemic_scope
				}
			}
			save_scope_as = epidemic_county
		}
		if = {
			limit = {
				exists = court_position:court_physician_court_position
				court_position:court_physician_court_position = {
					is_available_adult = yes
					is_extreme_longevity_culture = no  # Warcraft
				}
			}
			court_position:court_physician_court_position = {
				save_scope_as = miasma_courtier
			}
		}
		else = {
			random_courtier_or_guest = {
				limit = {
					is_available_adult = yes
					is_extreme_longevity_culture = no
				}
				save_scope_as = miasma_courtier
			}
		}
	}

	option = { # Okay, I'll do it :eyeroll:
		name = epidemic_events.1020.a
		add_prestige = minor_prestige_gain
		remove_short_term_gold = medium_gold_value
		scope:epidemic_county = {
			add_county_modifier = {
				modifier = flowers_planted
				years = 5
			}
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			cynical = minor_stress_impact_gain
			zealous = minor_stress_impact_loss
			generous = minor_stress_impact_loss
			improvident = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				gold < medium_gold_value
			}
			ai_value_modifier = {
				ai_zeal = 1
				ai_compassion = 1
				ai_rationality = 0.5 # Miasma theory may be wrong, but a rational person in the middle ages would probably believe in it
			}
		}
	}

	option = { # What a waste of money
		name = epidemic_events.1020.b
		add_prestige = minor_prestige_loss
		scope:epidemic_county = {
			add_county_modifier = {
				modifier = miasma_ignored
				years = 15
			}
		}
		add_legitimacy = miniscule_legitimacy_loss
		stress_impact = {
			compassionate = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = -0.5
			}
		}
	}

	# Warcraft - why not? we're always looking for an excuse to plant a garden!
	option = { 
		name = epidemic_events.1020.wc1
		trigger = { 
			OR = { 
				culture = { has_cultural_tradition = tradition_gardening }
				culture = { has_cultural_tradition = tradition_medicinal_plants }
				has_trait = lifestyle_herbalist
			}
		}
		add_prestige = medium_prestige_gain
		remove_short_term_gold = medium_gold_value
		if = { 
			limit = { has_trait = lifestyle_herbalist }
			add_learning_lifestyle_xp = minor_lifestyle_xp
			add_stewardship_lifestyle_xp = minor_lifestyle_xp
		} 
		else = { 
			random = { 
				chance = { 
					value = 25
				}
				add_trait = lifestyle_herbalist
			}
		}
		random_list = { 
			25 = { add_learning_lifestyle_xp = minor_lifestyle_xp }
			25 = { add_stewardship_lifestyle_xp = minor_lifestyle_xp }
			10 = { 
				add_learning_lifestyle_xp = minor_lifestyle_xp
				add_stewardship_lifestyle_xp = minor_lifestyle_xp 
			}
			5 = { add_learning_lifestyle_xp = major_lifestyle_xp }
			5 = { add_stewardship_lifestyle_xp = major_lifestyle_xp }
		}
		capital_county = {
			add_county_modifier = {
				modifier = flowers_planted
				years = 5
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_boldness = 1
				ai_greed = -0.25
				ai_honor = 0.25
			}
			modifier = { 
				OR = { 
					culture = { has_cultural_tradition = tradition_gardening }
					culture = { has_cultural_tradition = tradition_medicinal_plants }
					has_trait = lifestyle_herbalist
				}
				factor = 2
			}
		}
	}
}
# Warcraft - Should we disable this event as there is such a thing as healing magic??
############################
## Courtiers are self-medicating with leeches
## 1030
## by James Beaumont
############################
epidemic_events.1030 = {
	type = character_event
	title = epidemic_events.1030.t
	desc = epidemic_events.1030.desc
	theme = plague
	override_background = { reference = ce1_funeral_pyre }
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:leeched_courtier
		animation = personality_irrational
	}
	cooldown = { years = 5 } 
	trigger = {
		# Only if there's a big plague
		capital_county = {
			any_county_province = {
				any_province_epidemic = {
					outbreak_intensity >= major
					save_temporary_scope_as = plague_to_check
					root = {
						any_courtier_or_guest = {
							count >= 1
							is_available_adult = yes
							has_trait = scope:plague_to_check.epidemic_type.epidemic_trait
							is_extreme_longevity_culture = no  # Warcraft (btw this code is so terribly written - disappointed in you, james)
						}
					}
				}
			}
		}
	}

	immediate = {
		capital_county = {
			random_county_province = {
				limit = {
					any_province_epidemic = {
						outbreak_intensity >= major
					}
				}
				random_province_epidemic = {
					limit = {
						outbreak_intensity >= major
					}
					save_scope_as = epidemic_scope
				}
			}
		}
		random_courtier_or_guest = {
			limit = {
				is_available_adult = yes
				has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
				is_extreme_longevity_culture = no  # Warcraft
			}
			save_scope_as = leeched_courtier
		}
	}

	option = { # Leeches! Leeches for everyone!
		name = epidemic_events.1030.a
		random_list = {
			50 = {
				desc = epidemic_events.1030.a.success
				show_chance = no
				send_interface_toast = {
					title = epidemic_events.1030.a.success
					left_icon = root
					right_icon = scope:leeched_courtier
					every_courtier_or_guest = {
						custom = every_infected_courtier_and_guest
						limit = {
							has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
						}
						add_character_modifier = {
							modifier = medicating_with_leeches_good
							years = 5
						}
						add_opinion = {
							modifier = grateful_opinion
							opinion = 25
							target = root
						}
					}
					if = {
						limit = {
							root = {
								has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
							}
						}
						add_character_modifier = {
							modifier = medicating_with_leeches_good
							years = 5
						}
					}
					capital_county = {
						add_county_modifier = {
							modifier = healthy_court
							years = 15
						}
					}
				}
			}
			50 = {
				desc = epidemic_events.1030.a.failure
				show_chance = no
				send_interface_toast = {
					title = epidemic_events.1030.a.failure
					left_icon = root
					right_icon = scope:leeched_courtier
					every_courtier_or_guest = {
						custom = every_infected_courtier_and_guest
						limit = {
							has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
						}
						add_character_modifier = {
							modifier = medicating_with_leeches_bad
							years = 10
						}
						add_opinion = {
							modifier = hate_opinion
							opinion = -30
							target = root
						}
					}
					if = {
						limit = {
							root = {
								has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
							}
						}
						add_character_modifier = {
							modifier = medicating_with_leeches_bad
							years = 10
						}
					}
				}
			}
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss
			impatient = minor_stress_impact_loss
			generous = minor_stress_impact_loss
			patient = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			cynical = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -0.5
			}
			# Warcraft
			modifier = {
				is_extreme_longevity_culture = yes
				factor = 0
			}
		}
	}

	option = { # Maybe we should trust in the medical experts
		name = epidemic_events.1030.b
		every_courtier_or_guest = {
			custom = every_infected_courtier_and_guest
			limit = {
				has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
			}
			add_opinion = {
				modifier = angry_opinion
				opinion = -15
				target = root
			}
		}
		random = {
			chance = 35
			add_learning_skill = 1
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
			generous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}
}

############################
## Courtiers are becoming flagellants to thwart the plague
## 1040
## by James Beaumont
############################
epidemic_events.1040 = {
	type = character_event
	title = epidemic_events.1040.t
	desc = {
		desc = epidemic_events.1040.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:chaplain = {
						has_trait = flagellant
					}
				}
				desc = epidemic_events.1040.desc.mid.approves
			}
			desc = epidemic_events.1040.desc.mid
		}
	}
	theme = plague
	override_background = { reference = ce1_funeral_pyre }
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:chaplain
		animation = anger
	}
	cooldown = { years = 5 } 
	trigger = {
		is_available_adult = yes
		# Only if there's a big plague
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
					outbreak_intensity >= major
				}
			}
			is_extreme_longevity_culture = no  # Warcraft
		}
		exists = cp:councillor_court_chaplain
	}

	immediate = {
		get_random_realm_epidemic = { INTENSITY = major }
		cp:councillor_court_chaplain = { save_scope_as = chaplain }
	}

	option = { # They're clearly just perverts
		name = epidemic_events.1040.a
		if = {
			limit = {
				scope:chaplain = { has_trait = flagellant }
			}
			progress_towards_rival_effect = {
				CHARACTER = scope:chaplain
				REASON = rival_kinkshamed_my_flagellating
				OPINION = default_rival_opinion
			}
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = persecuted_flagellants
				years = 10
			}
		}
		stress_impact = {
			zealous = minor_stress_impact_gain
			# Nice self-report bro
			flagellant = medium_stress_impact_gain
			deviant = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				add = -50
				has_trait = flagellant
			}
			ai_value_modifier = {
				ai_rationality = 0.5
			}
		}
	}

	option = { # I'm sure this is fine. This is totally fine. No consequences can arise as a result of this.
		name = epidemic_events.1040.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = rampant_flagellants
				years = 10
			}
		}
		stress_impact = {
			flagellant = minor_stress_impact_loss # They're just like me fr!
			sadistic = minor_stress_impact_loss # I love seeing people in pain
			compassionate = minor_stress_impact_gain # I hate seeing people in pain
			cynical = minor_stress_impact_gain # I don't believe flagellating makes god love u
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	option = { # Maybe they're right!
		name = epidemic_events.1040.c
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = rampant_flagellants
				years = 10
			}
		}
		if = {
			limit = {
				scope:chaplain = { has_trait = flagellant }
			}
			progress_towards_friend_effect = {
				CHARACTER = scope:chaplain
				REASON = friend_flagellating_together
				OPINION = default_friend_opinion
			}
		}
		if = {
			limit = {
				NOT = { has_trait = flagellant }
			}
			add_trait = flagellant
		}
		stress_impact = {
			base = major_stress_impact_loss
			craven = minor_stress_impact_gain # pain hurts
			arrogant = minor_stress_impact_gain # I don't deserve this
			cynical = minor_stress_impact_gain # I don't believe flagellating makes god love me
		}
		ai_chance = {
			base = 0 # Don't do this unless you're already flagellant
			modifier = {
				add = 50
				has_trait = flagellant
			}
			  # Warcraft
			modifier = { 
				culture = { has_cultural_parameter = elder_culture }
				factor = 0
			}
		}
	}
}

############################
## Heretics are claiming it's the end of the world
## 1050
## by James Beaumont
############################
epidemic_events.1050 = {
	type = character_event
	title = epidemic_events.1050.t
	desc = epidemic_events.1050.desc
	theme = plague
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:chaplain
		animation = worry
	}
	cooldown = { years = 2 } 
	trigger = {
		is_available = yes
		# Only if there's a big plague
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
					outbreak_intensity >= major
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
		}
		# You have someone to tell you that this is heresy
		exists = cp:councillor_court_chaplain
	}

	immediate = {
		get_random_realm_epidemic = { INTENSITY = major }
		cp:councillor_court_chaplain = { save_scope_as = chaplain }
	}

	option = { # Root them out!
		name = epidemic_events.1050.a
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = apocalyptic_inquisition
				years = 10
			}
		}
		stress_impact = {
			# What if they're right? D:
			zealous = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -1
				ai_zeal = 0.2
			}
		}
	}

	option = { # Go and debate them
		name = epidemic_events.1050.b
		remove_short_term_gold = medium_gold_value
		duel = {
			skill = learning
			value = high_skill_rating
			# Success: the plague cult is silenced
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = epidemic_events.1050.b.tt.success
				root = {
					send_interface_toast = {
						title = epidemic_events.1050.b.tt.success
						left_icon = scope:chaplain
					}
				}
			}
			# Failure: the plague cult still happens
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = epidemic_events.1050.b.tt.failure
				root = {
					send_interface_toast = {
						title = epidemic_events.1050.b.tt.failure
						left_icon = scope:chaplain
						add_legitimacy = miniscule_legitimacy_loss
						every_sub_realm_county = {
							custom = every_infected_county
							limit = {
								any_county_province = {
									any_province_epidemic = {
										this = scope:epidemic_scope
									}
								}
								is_extreme_longevity_culture = no  # Warcraft
							}
							add_county_modifier = {
								modifier = plague_cult
								years = 10
							}
						}
					}
				}
			}
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				gold < medium_gold_value
			}
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 0.5
				ai_greed = -1
			}
		}
	}

	option = { # Just ignore it
		name = epidemic_events.1050.c
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			add_county_modifier = {
				modifier = plague_cult
				years = 10
			}
		}
		add_legitimacy = miniscule_legitimacy_loss
		stress_impact = {
			diligent = minor_stress_impact_gain
			just = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}
}

############################
## People blaming the plague on witches/animals event chain
## 1060
## by James Beaumont
############################
epidemic_events.1060 = {
	type = character_event
	title = epidemic_events.1060.t
	desc = {
		desc = epidemic_events.1060.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:cats
					}
				}
				desc = epidemic_events.1060.desc.mid.cats
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:dogs
					}
				}
				desc = epidemic_events.1060.desc.mid.dogs
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:faith
					}
				}
				desc = epidemic_events.1060.desc.mid.faith
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
					}
				}
				desc = epidemic_events.1060.desc.mid.trait
			}
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
						var:trait_blamed = trait:witch
					}
				}
				desc = epidemic_events.1060.desc.mid2.witches
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
					}
				}
				desc = epidemic_events.1060.desc.mid2.sin
			}
		}
		desc = epidemic_events.1060.desc.outro
	}
	theme = plague
	left_portrait = {
		character = root
		animation = stress
	}
	cooldown = { years = 5 } 
	trigger = {
		is_available_adult = yes
		# Only if there's a big plague
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					outbreak_intensity >= major
				}
			}
			is_extreme_longevity_culture = no  # Warcraft
		}
	}

	immediate = {
		get_random_realm_epidemic = { INTENSITY = major }
		create_story = plague_witch_hunt
		random_owned_story = {
			limit = {
				story_type = plague_witch_hunt
			}
			save_scope_as = story_scope
			# This is used to keep track of which epidemic is the source of people blaming the plague on some group
			set_variable = {
				name = plague
				value = scope:epidemic_scope
			}
			random_list = {
				30 = {
					# blamed_pague_on determines what or who has been blamed for the plague
					set_variable = {
						name = blamed_plague_on
						value = flag:cats
					}
				}
				20 = {
					trigger = {
						NOT = {
							# No attacking the puppos for Zoroastrians and Canary Islanders
							root.faith.religion = { like_west_african_bori_religion_trigger = yes }
							root.faith.religion = { like_west_african_roog_religion_trigger = yes }
						}
					}
					set_variable = {
						name = blamed_plague_on
						value = flag:dogs
					}
				}
				20 = { # Religious minorities
					root = { select_scapegoat_faith_effect = yes }
					set_variable = {
						name = blamed_plague_on
						value = flag:faith
					}
					set_variable = {
						name = faith_blamed
						value = scope:faith_to_blame
					}
				}
				20 = {
					trigger = {
						OR = {
							trait_is_shunned_or_criminal_in_faith_trigger = {
								TRAIT = witch
								FAITH = root.faith
								GENDER_CHARACTER = root
							}
						}
					}
					set_variable = {
						name = blamed_plague_on
						value = flag:trait
					}
					set_variable = {
						name = trait_blamed
						value = trait:witch
					}
				}
				20 = {
					random_trait_in_category = {
						category = personality
						limit = {
							save_temporary_scope_as = sin_trait_to_check
							root.faith = {
								trait_is_sin = scope:sin_trait_to_check
							}
						}
						save_scope_as = sinful_trait
					}
					set_variable = {
						name = blamed_plague_on
						value = flag:trait
					}
					set_variable = {
						name = trait_blamed
						value = scope:sinful_trait
					}
				}
			}
		}
	}

	option = { # How awful!
		name = epidemic_events.1060.a
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
					is_extreme_longevity_culture = no  # Warcraft
				}
			}
			add_county_modifier = {
				modifier = rampant_witch_trials
				years = 10
			}
		}
		stress_impact = {
			diligent = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -1
				ai_zeal = 0.2
			}
		}
	}

	option = { # Stop this madness in the name of your king!
		name = epidemic_events.1060.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
					is_extreme_longevity_culture = no  # Warcraft
				}
			}
			add_county_modifier = {
				modifier = witch_trials_slowed
				years = 10
			}
		}
		stress_impact = {
			zealous = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
				ai_honor = 0.5
			}
		}
	}

	option = { # Am I not an authority on religious matters? This is heresy!
		name = epidemic_events.1060.c
		reason = piety_level
		trigger = {
			  # Warcraft
			OR = { 
				piety_level >= very_high_piety_level
				any_held_title = { is_head_of_faith = yes }
			}
		} # Warcraft
		# if = {
		# 	limit = {
		# 		scope:story_scope = {
		# 			exists = var:faith_blamed
		# 			var:faith_blamed.religion = religion:judaism_religion
		# 		}
		# 	}
		# 	add_character_modifier = {
		# 		modifier = protected_jews
		# 		years = 10
		# 	}
		# }
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
					is_extreme_longevity_culture = no  # Warcraft
				}
			}
			add_county_modifier = {
				modifier = divine_guidance
				years = 10
			}
		}
		add_piety = medium_piety_gain
		ai_chance = { # This is the objectively best option, the AI should generally pick it if they're not insane
			base = 1000
			ai_value_modifier = {
				ai_rationality = 1
				ai_honor = 1
				ai_zeal = 1
			}
		}
	}
}

############################
## People are burning cats/dogs
## 1061
## by James Beaumont
############################
epidemic_events.1061 = {
	type = character_event
	title = epidemic_events.1061.t
	desc = {
		desc = epidemic_events.1061.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:cats
					}
				}
				desc = epidemic_events.1061.desc.mid.cats
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:dogs
					}
				}
				desc = epidemic_events.1061.desc.mid.dogs
			}
		}
		desc = epidemic_events.1061.desc.outro
	}
	theme = plague
	override_background = { reference = ce1_funeral_pyre }
	override_effect_2d = {
		reference = smoke	
	}
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:chaplain
		animation = shock
	}
	cooldown = { years = 5 }
	trigger = {
		scope:story_scope = {
			OR = {
				var:blamed_plague_on = flag:cats
				var:blamed_plague_on = flag:dogs
			}
		}
		exists = cp:councillor_court_chaplain
	}

	immediate = {
		cp:councillor_court_chaplain = { save_scope_as = chaplain }
	}

	option = { # Well, nothing I can do unfortunately
		name = epidemic_events.1061.a
		custom_tooltip = unforseen_consequences_tt
		hidden_effect = {
			random_list = {
				50 = {
					send_interface_toast = {
						title = epidemic_events.1061.a.success
						left_icon = root
						custom_tooltip = burning_animals_does_nothing_tt
					}
				}
				50 = {
					send_interface_toast = {
						title = epidemic_events.1061.a.failure
						left_icon = root
						every_sub_realm_county = {
							custom = every_infected_county
							limit = {
								any_county_province = {
									any_province_epidemic = {
										this = scope:epidemic_scope
									}
								}
							}
							add_county_modifier = {
								modifier = lacking_cats_and_dogs
								years = 10
							}
						}
					}
				}
			}
		}
		stress_impact = {
			diligent = minor_stress_impact_gain
			compassionate = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
				ai_energy = -0.5
			}
			# Warcraft
			modifier = { 
			is_extreme_longevity_culture = yes  
				factor = 0
			}
		}
	}

	option = { # Try to stop them!
		name = epidemic_events.1061.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = plague_animals_loose
				years = 10
			}
		}
		add_legitimacy = miniscule_legitimacy_loss
		stress_impact = {
			lazy = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_honor = 1
				ai_energy = 0.5
			}
		}
	}

	option = { # I declare cats/dogs to be the royal animal of the realm!
		name = epidemic_events.1061.c
		reason = prestige_level
		trigger = {
			prestige_level >= very_high_prestige_level
		}
		if = {
			limit = {
				scope:story_scope = {
					var:blamed_plague_on = flag:cats
				}
			}
			add_character_modifier = {
				modifier = royal_cats
				years = 25
			}
		}
		else_if = {
			limit = {
				var:blamed_plague_on = flag:dogs
			}
			add_character_modifier = {
				modifier = royal_dogs
				years = 25
			}
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = plague_animals_loose
				years = 5
			}
		}
		custom_tooltip = cats_and_dogs_trial_will_end_tt
		hidden_effect = {
			scope:story_scope = { end_story = yes }
		}
		ai_chance = { # This is the objectively best option, the AI should generally pick it if they're not insane
			base = 1000
			ai_value_modifier = {
				ai_rationality = 1
				ai_honor = 1
				ai_zeal = 1
			}
		}
	}
}

############################
## A skilled cat/dog-catcher offers to round them all up
## 1062
## by James Beaumont
############################
epidemic_events.1062 = {
	type = character_event
	title = epidemic_events.1062.t
	desc = {
		desc = epidemic_events.1062.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:cats
					}
				}
				desc = epidemic_events.1062.desc.mid.cats
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:dogs
					}
				}
				desc = epidemic_events.1062.desc.mid.dogs
			}
		}
		desc = epidemic_events.1062.desc.outro
	}
	theme = plague
	left_portrait = {
		character = root
		animation = stress
	}
	cooldown = { years = 5 }
	trigger = {
		scope:story_scope = {
			OR = {
				var:blamed_plague_on = flag:cats
				var:blamed_plague_on = flag:dogs
			}
		}
	}

	option = { # Catch them and kill them!
		name = epidemic_events.1062.a
		custom_tooltip = unforseen_consequences_tt
		hidden_effect = {
			random_list = {
				33 = {
					send_interface_toast = {
						title = epidemic_events.1062.a.no_effect
						left_icon = root
					}
				}
				33 = {
					send_interface_toast = {
						title = epidemic_events.1062.a.success
						left_icon = root
						every_sub_realm_county = {
							custom = every_infected_county
							limit = {
								any_county_province = {
									any_province_epidemic = {
										this = scope:epidemic_scope
									}
								}
							}
							add_county_modifier = {
								modifier = lacking_cats_and_dogs_good
								years = 10
							}
						}
					}
				}
				33 = {
					send_interface_toast = {
						title = epidemic_events.1062.a.failure
						left_icon = root
						every_sub_realm_county = {
							custom = every_infected_county
							limit = {
								any_county_province = {
									any_province_epidemic = {
										this = scope:epidemic_scope
									}
								}
							}
							add_county_modifier = {
								modifier = lacking_cats_and_dogs
								years = 10
							}
						}
					}
				}
			}
		}
		stress_impact = {
			diligent = minor_stress_impact_gain
			compassionate = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
				ai_energy = -0.5
			}
			# Warcraft 
			modifier = {  
			is_extreme_longevity_culture = yes 
				factor = 0
			}
		}
	}

	option = { # Catch them and bring them to the capital
		name = epidemic_events.1062.b
		custom_tooltip = unforseen_consequences_tt
		hidden_effect = {
			random_list = {
				77 = {
					send_interface_toast = {
						title = epidemic_events.1062.b.no_effect
						left_icon = root
					}
				}
				33 = {
					send_interface_toast = {
						title = epidemic_events.1062.b.failure
						left_icon = root
						capital_county = {
							add_county_modifier = {
								modifier = full_of_rabid_animals
								years = 10
							}
						}
					}
				}
			}
		}
		stress_impact = {
			lazy = minor_stress_impact_gain
			paranoid = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_honor = 1
				ai_energy = 0.5
			}
		}
	}

	option = { # I declare cats/dogs to be the royal animal of the realm!
		name = epidemic_events.1061.c
		reason = prestige_level
		trigger = {
			prestige_level >= very_high_prestige_level
		}
		if = {
			limit = {
				scope:story_scope = {
					var:blamed_plague_on = flag:cats
				}
			}
			add_character_modifier = {
				modifier = royal_cats
				years = 25
			}
		}
		else_if = {
			limit = {
				var:blamed_plague_on = flag:dogs
			}
			add_character_modifier = {
				modifier = royal_dogs
				years = 25
			}
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = plague_animals_loose
				years = 5
			}
		}
		custom_tooltip = cats_and_dogs_trial_will_end_tt
		hidden_effect = {
			scope:story_scope = { end_story = yes }
		}
		ai_chance = { # This is the objectively best option, the AI should generally pick it if they're not insane
			base = 1000
			ai_value_modifier = {
				ai_rationality = 1
				ai_honor = 1
				ai_zeal = 1
			}
		}
	}
}

############################
## Repent! Repent! Adopt a virtuous trait like right now!
## 1063
## by James Beaumont
############################
epidemic_events.1063 = {
	type = character_event
	title = epidemic_events.1063.t
	desc = {
		desc = epidemic_events.1063.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:faith
					}
				}
				desc = epidemic_events.1063.desc.mid.faith
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
						exists = var:trait_blamed
						NOT = { var:trait_blamed = trait:witch }
					}
				}
				desc = epidemic_events.1063.desc.mid.sin
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
						exists = var:trait_blamed
						var:trait_blamed = trait:witch
					}
				}
				desc = epidemic_events.1063.desc.mid.witch
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:cats
					}
				}
				desc = epidemic_events.1063.desc.mid.cats
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:dogs
					}
				}
				desc = epidemic_events.1063.desc.mid.dogs
			}
		}
		desc = epidemic_events.1063.desc.outro
	}
	theme = plague
	override_effect_2d = {
		reference = rain	
	}
	left_portrait = {
		character = root
		animation = stress
	}
	trigger = {
		is_extreme_longevity_culture = no  # Warcraft
		is_available_adult = yes
		# Make sure that ROOT doesn't have literally every virtuous trait in their faith
		any_trait_in_category = {
			category = personality
			save_temporary_scope_as = random_virtue_trait_trigger
			root = {
				NOT = { has_trait = prev }
			}
			root.faith = { trait_is_virtue = scope:random_virtue_trait_trigger }
		}
		# Root has something to repent for
		OR = {
			num_sinful_traits >= 1
			AND = {
				is_witch_trigger = yes
				trait_is_shunned_or_criminal_in_faith_trigger = {
					TRAIT = witch
					FAITH = root.faith
					GENDER_CHARACTER = root
				}
			}
			AND = {
				is_incestuous_trigger = yes
				trait_is_shunned_or_criminal_in_faith_trigger = {
					TRAIT = incestuous
					FAITH = root.faith
					GENDER_CHARACTER = root
				}
			}
			AND = {
				scope:story_scope = {
					var:blamed_plague_on = flag:cats
				}
				has_cat_trigger = yes
			}
			AND = {
				scope:story_scope = {
					var:blamed_plague_on = flag:dogs
				}
				has_dog_trigger = yes
			}
		}
	}

	immediate = {
		# Determine the trait to be super into
		random_trait_in_category = {
			category = personality
			limit = {
				save_temporary_scope_as = random_virtue_trait
				root = {
					NOT = { has_trait = prev }
				}
				root.faith = { trait_is_virtue = scope:random_virtue_trait }
			}
			save_scope_as = virtuous_trait
		}
	}

	option = { # I repent! I repent!
		name = epidemic_events.1063.a
		if = {
			limit = {
				scope:virtuous_trait = {
					any_opposite_trait = {
						root = { has_trait = prev }
					}
				}
			}
			scope:virtuous_trait = {
				random_opposite_trait = {
					limit = {
						root = { has_trait = prev }
					}
					root = {
						remove_trait = prev
					}
				}
			}
		}
		if = {
			limit = {
				scope:story_scope = {
					var:blamed_plague_on = flag:trait
					exists = var:trait_blamed
					var:trait_blamed = trait:witch
				}
				is_witch_trigger = yes
			}
			remove_witch_secret_or_trait_effect = yes
		}
		add_trait_force_tooltip = scope:virtuous_trait
		stress_impact = {
			base = massive_stress_impact_gain
			lazy = minor_stress_impact_gain
			cynical = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -1 # This is a very rash decision
				ai_energy = -0.5 # This is a very hard decision
				ai_zeal = 0.5 # This is a very religious decision
			}
		}
	}

	option = { # What a load of bollocks
		name = epidemic_events.1063.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = refused_to_repent
				years = 10
			}
		}
		add_legitimacy = miniscule_legitimacy_loss
		stress_impact = {
			base = minor_stress_impact_gain
			cynical = minor_stress_impact_loss # Am I *really* a sinner tho?
			zealous = medium_stress_impact_gain
			trusting = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
				ai_zeal = -0.5
			}
		}
	}

	option = { # Uhhh actually, he speaks the bullshit!
		name = epidemic_events.1063.c
		reason = piety_level
		trigger = {
			piety_level >= very_high_piety_level
		}
		duel = {
			skill = learning
			value = high_skill_rating
			# Success: you are able to argue you're good actually
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = epidemic_events.1063.c.success
				send_interface_toast = {
					title = epidemic_events.1063.c.success
					left_icon = root
					add_piety = major_piety_gain
				}
			}
			# Failure: people are still into it
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = epidemic_events.1063.c.failure
				send_interface_toast = {
					title = epidemic_events.1063.c.failure
					left_icon = root
					add_legitimacy = miniscule_legitimacy_loss
					every_sub_realm_county = {
						custom = every_infected_county
						limit = {
							any_county_province = {
								any_province_epidemic = {
									this = scope:epidemic_scope
								}
							}
						}
						add_county_modifier = {
							modifier = refused_to_repent
							years = 10
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 2
				ai_zeal = 1
			}
		}
	}
}

############################
## Witch trials
## 1064
## by James Beaumont
############################
epidemic_events.1064 = {
	type = character_event
	title = epidemic_events.1064.t
	desc = {
		desc = epidemic_events.1064.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
						exists = var:trait_blamed
						NOT = { var:trait_blamed = trait:witch }
					}
				}
				desc = epidemic_events.1064.desc.mid.sin
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
						exists = var:trait_blamed
						var:trait_blamed = trait:witch
					}
				}
				desc = epidemic_events.1064.desc.mid.witch
			}
		}
		desc = epidemic_events.1064.desc.outro
	}
	theme = plague
	override_background = { reference = ce1_funeral_pyre }
	override_effect_2d = {
		reference = rain	
	}
	left_portrait = {
		character = root
		animation = stress
	}
	cooldown = { years = 5 }
	trigger = {
		scope:story_scope = {
			var:blamed_plague_on = flag:trait
		}
		any_sub_realm_county = {
			development_level >= 3
			any_county_province = {
				any_province_epidemic = {
					this = scope:epidemic_scope
				}
			}
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				development_level >= 3
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			save_scope_as = witch_trial_county
		}
	}

	option = { # The witch trials are fine maybe probably
		name = epidemic_events.1064.a
		scope:witch_trial_county = {
			change_development_level = -2
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
				NOT = {
					this = scope:witch_trial_county
				}
			}
			change_county_control = major_county_control_loss
			change_development_progress = -100
		}
		stress_impact = {
			diligent = minor_stress_impact_gain
			just = minor_stress_impact_gain
			cynical = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -0.2
				ai_honor = -0.5
				ai_zeal = 0.5
			}
			# warcraft
			modifier = { 
			is_extreme_longevity_culture = yes # Warcraft
				factor = 0
			}
		}
	}

	option = { # Stop it! Stop it right now!
		name = epidemic_events.1064.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = witch_trials_obstructed
				years = 15
			}
		}
		add_legitimacy = miniscule_legitimacy_loss
		stress_impact = {
			trusting = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.2
				ai_honor = 0.5
				ai_zeal = -0.5
			}
			# warcraft
			modifier = { 
			is_extreme_longevity_culture = yes # Warcraft
				add = 50
			}
		}
	}

	option = { # Let me make a well-formulated argument that sinning is fine actually
		name = epidemic_events.1064.c
		reason = piety_level
		trigger = {
			piety_level >= high_piety_level
		}
		duel = {
			skill = learning
			value = high_skill_rating
			# Success: you are able to argue you're good actually
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = epidemic_events.1064.c.success
				send_interface_toast = {
					title = epidemic_events.1064.c.success
					left_icon = root
					add_piety = medium_piety_gain
				}
			}
			# Failure: people are still into it
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = epidemic_events.1064.c.failure
				send_interface_toast = {
					title = epidemic_events.1064.c.failure
					left_icon = root
					add_legitimacy = miniscule_legitimacy_loss
					every_sub_realm_county = {
						custom = every_infected_county
						limit = {
							any_county_province = {
								any_province_epidemic = {
									this = scope:epidemic_scope
								}
							}
						}
						add_county_modifier = {
							modifier = witch_trials_obstructed
							years = 10
						}
					}
				}
			}
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 2
				ai_zeal = 1
			}
		}
	}
}

############################
## Walk of shame
## 1065
## by James Beaumont
############################
scripted_trigger epidemic_events_1065_has_blamed_trait = {
	is_ruler = no
	location = root.location
	OR = {
		has_trait = scope:story_scope.var:trait_blamed
		AND = {
			scope:story_scope = {
				var:blamed_plague_on = flag:trait
				exists = var:trait_blamed
				NOT = { var:trait_blamed = trait:witch }
			}
			is_witch_trigger = yes
		}
	}
}

epidemic_events.1065 = {
	type = character_event
	title = epidemic_events.1065.t
	desc = {
		desc = epidemic_events.1065.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
						exists = var:trait_blamed
						NOT = { var:trait_blamed = trait:witch }
					}
				}
				desc = epidemic_events.1065.desc.mid.sin
			}
			triggered_desc = {
				trigger = {
					scope:story_scope = {
						var:blamed_plague_on = flag:trait
						exists = var:trait_blamed
						var:trait_blamed = trait:witch
					}
				}
				desc = epidemic_events.1065.desc.mid.witch
			}
		}
		desc = epidemic_events.1065.desc.outro
	}
	theme = plague
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:shamed_buddy
		animation = shock
	}
	cooldown = { years = 5 }
	trigger = {
		is_extreme_longevity_culture = no  # Warcraft 
		scope:story_scope = {
			var:blamed_plague_on = flag:trait
		}
		OR = {
			# Prioritise spouses
			any_spouse = {
				epidemic_events_1065_has_blamed_trait = yes
			}
			# Family members
			any_close_or_extended_family_member = {
				epidemic_events_1065_has_blamed_trait = yes
			}
			# Lovers
			any_relation = {
				type = lover
				epidemic_events_1065_has_blamed_trait = yes
			}
			# Friends
			any_relation = {
				type = friend
				epidemic_events_1065_has_blamed_trait = yes
			}
			# Concubines
			any_consort = {
				epidemic_events_1065_has_blamed_trait = yes
			}
		}
	}

	immediate = {
		if = {
			limit = {
				any_spouse = {
					epidemic_events_1065_has_blamed_trait = yes
				}
			}
			random_spouse = {
				limit = {
					epidemic_events_1065_has_blamed_trait = yes
				}
				save_scope_as = shamed_buddy
			}
		}
		else_if = {
			limit = {
				any_close_or_extended_family_member = {
					epidemic_events_1065_has_blamed_trait = yes
				}
			}
			random_close_or_extended_family_member = {
				limit = {
					epidemic_events_1065_has_blamed_trait = yes
				}
				save_scope_as = shamed_buddy
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = lover
					epidemic_events_1065_has_blamed_trait = yes
				}
			}
			random_relation = {
				type = lover
				limit = {
					epidemic_events_1065_has_blamed_trait = yes
				}
				save_scope_as = shamed_buddy
			}
		}
		else_if = {
			limit = {
				any_relation = {
					type = friend
					epidemic_events_1065_has_blamed_trait = yes
				}
			}
			random_relation = {
				type = friend
				limit = {
					epidemic_events_1065_has_blamed_trait = yes
				}
				save_scope_as = shamed_buddy
			}
		}
		else_if = {
			limit = {
				any_consort = {
					epidemic_events_1065_has_blamed_trait = yes
				}
			}
			random_consort = {
				limit = {
					epidemic_events_1065_has_blamed_trait = yes
				}
				save_scope_as = shamed_buddy
			}
		}
	}

	option = { # Just do it, buddy
		name = epidemic_events.1065.a
		downgrade_to_rival_effect = {
			CHARACTER = scope:shamed_buddy
			REASON = rival_walk_of_shame
		}
		stress_impact = {
			just = minor_stress_impact_gain
			cynical = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -0.2
				ai_honor = -0.5
				ai_sociability = -1
				ai_zeal = 0.5
			}
		}
	}

	option = { # Absolutely not!
		name = epidemic_events.1065.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = witch_trials_obstructed
				years = 10
			}
		}
		stress_impact = {
			trusting = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.2
				ai_honor = 0.5
				ai_sociability = 0.5
				ai_zeal = -0.5
			}
		}
	}

	option = { # I will take your place, buddy
		name = epidemic_events.1065.c
		trigger = {
			has_trait = august
		}
		add_prestige = major_prestige_loss
		add_legitimacy = miniscule_legitimacy_loss
		upgrade_to_friend_effect = {
			CHARACTER = scope:shamed_buddy
			REASON = friend_walk_of_shame
		}
		stress_impact = {
			base = medium_stress_impact_gain
			arrogant = minor_stress_impact_gain
			humble = medium_stress_impact_loss
			compassionate = medium_stress_impact_loss
			gregarious = minor_stress_impact_loss
			eccentric = minor_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -2
				ai_sociability = 1
				ai_zeal = 1
			}
		}
	}
}

############################
## Peasants are forcing minorities out
## 1066-1067
## by James Beaumont
############################
epidemic_events.1066 = {
	type = character_event
	title = epidemic_events.1066.t
	desc = epidemic_events.1066.desc
	theme = plague
	left_portrait = {
		character = root
		animation = stress
	}
	trigger = {
		is_extreme_longevity_culture = no  # Warcraft
		scope:story_scope = {
			var:blamed_plague_on = flag:faith
		}
	}
	cooldown = { years = 5 }

	immediate = {
		add_legitimacy = miniscule_legitimacy_loss
	}

	option = { # Forbid the expulsion
		name = epidemic_events.1066.a
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
				NOT = {
					this = root.capital_county
					faith = scope:faith_blamed
				}
			}
			change_county_control = major_county_control_loss
			add_county_modifier = {
				modifier = minority_persecution_forbidden
				years = 10
			}
		}
		stress_impact = {
			zealous = minor_stress_impact_gain # I'm a fundementalist
			callous = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_compassion = 1
				ai_zeal = -1
			}
		}
	}

	option = { # Oof, sure fine, let them be expelled
		name = epidemic_events.1066.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			change_development_progress = -100
			add_county_modifier = {
				modifier = persecuted_minorities_expelled
				years = 10
			}
		}
		hidden_effect = {
			save_scope_as = bigoted_ruler_that_everyone_hates
			random_neighboring_and_across_water_top_liege_realm_owner ?= {
				limit = { is_extreme_longevity_culture = no  } # Warcraft 
				trigger_event = {
					id = epidemic_events.1067
					days = { 3 10 }
				}
			}
		}
		stress_impact = {
			just = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			diligent = minor_stress_impact_gain
			gallant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -1
				ai_compassion = -1
				ai_honor = -0.5
				ai_zeal = 0.5
			}
		}
	}

	option = { # Offer minorities asylum in the capital
		name = epidemic_events.1066.c
		trigger = {
			has_trait = administrator
		}
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
				NOT = {
					this = root.capital_county
				}
			}
			change_development_progress = -100
		}
		capital_county = {
			change_development_progress_with_overflow = 50
			add_county_modifier = {
				modifier = persecuted_minorities_protected
				years = 15
			}
		}
		stress_impact = {
			zealous = minor_stress_impact_gain # I'm a fundementalist
			callous = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
				ai_compassion = 1
				ai_zeal = -0.5
			}
		}
	}
}

# Response event for a neighbouring ruler
epidemic_events.1067 = {
	type = character_event
	title = epidemic_events.1067.t
	desc = epidemic_events.1067.desc
	theme = plague
	left_portrait = {
		character = root
		animation = thinking
	}

	option = { # Oh cool, welcome!
		name = epidemic_events.1067.a
		scope:bigoted_ruler_that_everyone_hates = {
			every_character_to_title_neighboring_and_across_water_county = {
				custom = every_bordering_county
				change_development_progress = 20
				add_county_modifier = {
					modifier = plague_minorities_sanctuary
					years = 10
				}
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain # Foreigners? They could be spies!
			zealous = minor_stress_impact_gain # I'm a fundementalist
			callous = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_compassion = 1
				ai_zeal = -1
			}
		}
	}

	option = { # Well, they can't come 'ere
		name = epidemic_events.1067.b
		stress_impact = {
			just = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			diligent = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			gallant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -1
				ai_compassion = -1
				ai_honor = -0.5
				ai_zeal = 0.5
			}
		}
	}

	option = { # Funnel them all into the capital
		name = epidemic_events.1067.c
		trigger = {
			has_trait = administrator
		}
		capital_county = {
			change_development_progress_with_overflow = 50
			add_county_modifier = {
				modifier = plague_minorities_sanctuary_boosted
				years = 10
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 1
				ai_compassion = 1
				ai_zeal = -0.5
			}
		}
	}
}

############################
## Nobles are struggling to get loans
## 1068
## by James Beaumont
############################
epidemic_events.1068 = {
	type = character_event
	title = epidemic_events.1068.t
	desc = epidemic_events.1068.desc
	theme = plague
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:loneless_vassal
		animation = stress
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { beggar_rags }
		}
	}
	trigger = {
		scope:story_scope = {
			var:blamed_plague_on = flag:faith
		}
		any_vassal = {
			is_landed = yes # No unlanded HoFs
			highest_held_title_tier >= tier_county
		}
	}

	immediate = {
		random_vassal = {
			limit = {
				is_landed = yes
				highest_held_title_tier >= tier_county
			}
			weight = {
				base = 1
				# Get guys who would likely wanna take loans
				modifier = {
					add = 10
					gold <= 0
				}
				modifier = {
					add = 10
					gold <= minor_gold_value
				}
				modifier = {
					add = 5
					OR = {
						has_trait = greedy
						has_trait = profligate
					}
				}
			}
			save_scope_as = loneless_vassal
		}
	}

	option = { # Try to make your vassal's realm a safe place for them
		name = epidemic_events.1068.a
		progress_towards_friend_effect = {
			CHARACTER = scope:loneless_vassal
			OPINION = default_friend_opinion
			REASON = friend_plague_financial_help
		}
		scope:loneless_vassal = {
			every_sub_realm_county = {
				custom = all_of_vassals_holding
				change_development_progress = 15
				add_county_modifier = {
					modifier = persecuted_minorities_financial_sanctuary
					years = 10
				}
			}
		}
		stress_impact = {
			zealous = minor_stress_impact_gain # I'm a fundementalist
			callous = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_compassion = 1
				ai_zeal = -1
			}
		}
	}

	option = { # I'll offer you a loan!
		name = epidemic_events.1068.b
		if = {
			limit = {
				scope:loneless_vassal = {
					vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
				}
			}
			scope:loneless_vassal = {
				vassal_contract_increase_obligation_level = feudal_government_taxes
			}
		}
		else = {
			add_hook = {
				target = scope:loneless_vassal
				type = indebted_hook
			}
		}
		pay_short_term_gold = {
			target = scope:loneless_vassal
			gold = medium_gold_value
		}
		stress_impact = {
			just = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			generous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				gold < medium_gold_value
			}
			ai_value_modifier = {
				ai_rationality = 1
				ai_greed = 1
				ai_honor = -0.5
				ai_zeal = 0.5
			}
		}
	}

	option = { # Not my fuckin problem
		name = epidemic_events.1068.c
		progress_towards_rival_effect = {
			CHARACTER = scope:loneless_vassal
			OPINION = default_rival_opinion
			REASON = rival_refused_to_help_my_loans
		}
		add_legitimacy = miniscule_legitimacy_loss
		stress_impact = {
			lazy = minor_stress_impact_loss
			just = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = -1
				ai_greed = 1
				ai_honor = -0.5
				ai_zeal = 0.5
			}
		}
	}
}

############################
## Informed of plague showing up // Plague notification event
## 1100
## by James Beaumont
############################
epidemic_events.1100 = {
	type = character_event
	title = epidemic_events.1100.t
	desc = {
		first_valid = { # How bad is the disease?
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						outbreak_intensity = major
					}
				}
				desc = epidemic_events.1100.desc.intro.major
			}
			desc = epidemic_events.1100.desc.intro.fallback
		}
		first_valid = { # How important is the county it appeared in?
			triggered_desc = {
				trigger = {
					scope:infected_county = {
						any_county_province = {
							barony = { is_holy_site_of = root.faith }
						}
					}
				}
				desc = epidemic_events.1100.desc.intro2.holy_site
			}
			triggered_desc = {
				trigger = {
					scope:infected_county = {
						OR = {
							this = root.capital_county
							development_level >= 20
						}
					}
				}
				desc = epidemic_events.1100.desc.intro2.cool_place
			}
			desc = epidemic_events.1100.desc.intro2.backwater
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:typhus
					}
				}
				desc = epidemic_events.1100.desc.mid.typhus
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:bubonic_plague
					}
				}
				desc = epidemic_events.1100.desc.mid.bubonic_plague
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:smallpox
					}
				}
				desc = epidemic_events.1100.desc.mid.smallpox
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:measles
					}
				}
				desc = epidemic_events.1100.desc.mid.measles
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:dysentery
					}
				}
				desc = epidemic_events.1100.desc.mid.dysentery
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:ergotism
					}
				}
				desc = epidemic_events.1100.desc.mid.ergotism
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:consumption
					}
				}
				desc = epidemic_events.1100.desc.mid.consumption
			}
			desc = epidemic_events.1100.desc.mid.fallback
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						outbreak_intensity = major
					}
				}
				desc = epidemic_events.1100.desc.mid2.major
			}
			desc = epidemic_events.1100.desc.mid2.fallback
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:infected_county = root.capital_county
				}
				desc = epidemic_events.1100.desc.outro.capital
			}
			desc = epidemic_events.1100.desc.outro
		}
	}
	theme = plague
	left_portrait = {
		character = root
		animation = stress
	}

	trigger = {
		is_available = yes
		NOT = { # Don't repeatedly inform the player of the same plague over and over
			is_target_in_variable_list = {
				name = plagues_notified
				target = scope:epidemic
			}
			scope:epidemic = {
				epidemic_type.epidemic_trait = trait:bubonic_plague
			}
		}
	}

	immediate = {
		scope:province.county = {
			save_scope_as = infected_county
		}
		add_to_variable_list = {
			name = plagues_notified
			target = scope:epidemic
		}
		# LEGITIMACY LOSS FROM OUTBREAK
		show_as_tooltip = {
			scope:epidemic = {
				epidemic_outbreak_legitimacy_effect = { PROVINCE = scope:province }
			}
		}
		add_plague_county_modifiers = yes
	}

	option = { # Damn :pensive:
		name = {
			text = {
				first_valid = {
					random_valid = {
						triggered_desc = {
							trigger = {
								has_trait = scope:epidemic.epidemic_type.epidemic_trait
							}
							desc = epidemic_events.1100.a.already_has_it
						}
						triggered_desc = {
							trigger = {
								has_trait = compassionate
							}
							desc = epidemic_events.1100.a.compassionate
						}
						triggered_desc = {
							trigger = {
								has_trait = eccentric
							}
							desc = epidemic_events.1100.a.eccentric
						}
						triggered_desc = {
							trigger = {
								is_cannibal_trigger = yes
							}
							desc = epidemic_events.1100.a.cannibal
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = callous
									has_trait = sadistic
								}
							}
							desc = epidemic_events.1100.a.callous
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = diligent
									has_trait = just
								}
							}
							desc = epidemic_events.1100.a.diligent
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = paranoid
									has_trait = craven
								}
							}
							desc = epidemic_events.1100.a.paranoid
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = brave
									has_trait = arrogant
								}
							}
							desc = epidemic_events.1100.a.brave
						}
						triggered_desc = {
							trigger = {
								has_trait = zealous
							}
							desc = epidemic_events.1100.a.zealous
						}
					}
					desc = epidemic_events.1100.a
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}

	option = { # Call the physician!
		name = epidemic_events.1100.b
		trigger = {
			OR = { # prevent stacking treatment
				is_independent_ruler = yes
				is_ai = no
			}
		}
		if = {
			limit = {
				NOT = { exists = court_position:court_physician_court_position }
			}
			custom_tooltip = {
				text = look_for_physician_epidemic_tt
				add_character_flag = { flag = seeking_epidemic_treatment days = 30 }
				trigger_event = {
					id = health.3001 days = { court_physician_search_min court_physician_search_max }
				}
			}
		}
		else = {
			custom_tooltip = {
				text = physician_will_help_epidemic_tt
				court_position:court_physician_court_position = { save_scope_as = physician }
				trigger_event = {
					id = physician_epidemic_events.1020
					days = 3
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
}

#Informed of an apocalyptic plague
epidemic_events.1101 = {
	type = character_event
	window = fullscreen_event
	title = epidemic_events.1100.t
	desc = {
		desc = epidemic_events.1100.desc.intro.apocalyptic
		first_valid = { # How important is the county it appeared in?
			triggered_desc = {
				trigger = {
					scope:infected_county = {
						any_county_province = {
							barony = { is_holy_site_of = root.faith }
						}
					}
				}
				desc = epidemic_events.1100.desc.intro2.holy_site
			}
			triggered_desc = {
				trigger = {
					scope:infected_county = {
						OR = {
							this = root.capital_county
							development_level >= 20
						}
					}
				}
				desc = epidemic_events.1100.desc.intro2.cool_place
			}
			desc = epidemic_events.1100.desc.intro2.backwater
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:typhus
					}
				}
				desc = epidemic_events.1100.desc.mid.typhus
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:bubonic_plague
					}
				}
				desc = epidemic_events.1100.desc.mid.bubonic_plague
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:smallpox
					}
				}
				desc = epidemic_events.1100.desc.mid.smallpox
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:measles
					}
				}
				desc = epidemic_events.1100.desc.mid.measles
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:dysentery
					}
				}
				desc = epidemic_events.1100.desc.mid.dysentery
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:ergotism
					}
				}
				desc = epidemic_events.1100.desc.mid.ergotism
			}
			triggered_desc = {
				trigger = {
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:consumption
					}
				}
				desc = epidemic_events.1100.desc.mid.consumption
			}
			desc = epidemic_events.1100.desc.mid.fallback
		}
		desc = epidemic_events.1100.desc.mid2.apocalyptic
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:infected_county = root.capital_county
				}
				desc = epidemic_events.1100.desc.outro.capital
			}
			desc = epidemic_events.1100.desc.outro
		}
	}
	theme = plague
	override_background = { reference = ce1_fullscreen_apocalyptic }

	trigger = {
		is_available = yes
		OR = {
			AND = {
				has_dlc_feature = legends_of_the_dead
				NOR = { # Don't repeatedly inform the player of the same plague over and over
					is_target_in_variable_list = {
						name = plagues_notified
						target = scope:epidemic
					}
					# There's a special event for the Black Plague
					scope:epidemic = {
						epidemic_type.epidemic_trait = trait:bubonic_plague
					}
				}
			}
			AND = {
				NOT = { # Don't repeatedly inform the player of the same plague over and over
					is_target_in_variable_list = {
						name = plagues_notified
						target = scope:epidemic
					}
				}
				NOT = { has_dlc_feature = legends_of_the_dead }
			}
		}
	}

	immediate = {
		play_music_cue = apocalyptic_plague
		scope:province.county = {
			save_scope_as = infected_county
		}
		add_to_variable_list = {
			name = plagues_notified
			target = scope:epidemic
		}
		# LEGITIMACY LOSS FROM OUTBREAK
		show_as_tooltip = {
			scope:epidemic = {
				epidemic_outbreak_legitimacy_effect = { PROVINCE = scope:province }
			}
		}
		add_plague_county_modifiers = yes
	}

	option = { # Damn :pensive:
		name = {
			text = {
				first_valid = {
					random_valid = {
						triggered_desc = {
							trigger = {
								has_trait = scope:epidemic.epidemic_type.epidemic_trait
							}
							desc = epidemic_events.1100.a.already_has_it
						}
						triggered_desc = {
							trigger = {
								has_trait = compassionate
							}
							desc = epidemic_events.1100.a.compassionate
						}
						triggered_desc = {
							trigger = {
								has_trait = eccentric
							}
							desc = epidemic_events.1100.a.eccentric
						}
						triggered_desc = {
							trigger = {
								is_cannibal_trigger = yes
							}
							desc = epidemic_events.1100.a.cannibal
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = callous
									has_trait = sadistic
								}
							}
							desc = epidemic_events.1100.a.callous
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = diligent
									has_trait = just
								}
							}
							desc = epidemic_events.1100.a.diligent
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = paranoid
									has_trait = craven
								}
							}
							desc = epidemic_events.1100.a.paranoid
						}
						triggered_desc = {
							trigger = {
								OR = {
									has_trait = brave
									has_trait = arrogant
								}
							}
							desc = epidemic_events.1100.a.brave
						}
						triggered_desc = {
							trigger = {
								has_trait = zealous
							}
							desc = epidemic_events.1100.a.zealous
						}
					}
					desc = epidemic_events.1100.a
				}
			}
		}

		ai_chance = {
			base = 100
		}
	}

	option = { # Call the physician!
		name = epidemic_events.1100.b
		trigger = {
			OR = { # prevent stacking treatment
				is_independent_ruler = yes
				is_ai = no
			}
		}
		if = {
			limit = {
				NOT = { exists = court_position:court_physician_court_position }
			}
			custom_tooltip = {
				text = look_for_physician_epidemic_tt
				add_character_flag = { flag = seeking_epidemic_treatment days = 30 }
				trigger_event = {
					id = health.3001 days = { court_physician_search_min court_physician_search_max }
				}
			}
		}
		else = {
			custom_tooltip = {
				text = physician_will_help_epidemic_tt
				court_position:court_physician_court_position = { save_scope_as = physician }
				trigger_event = {
					id = physician_epidemic_events.1020
					days = 3
				}
			}
		}
		ai_chance = {
			base = 100
		}
	}
}

############################
## Common graves for your graveyard?
## 1110
## by James Beaumont
############################
epidemic_events.1110 = {
	type = character_event
	title = epidemic_events.1110.t
	desc = epidemic_events.1110.desc
	theme = plague
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:chaplain
		animation = worry
	}

	cooldown = { years = 10 }

	trigger = {
		NOT = { culture = { has_cultural_parameter = aloof_wardens } }  # Warcraft
		is_available = yes
		any_held_title = {
			tier = tier_county
			any_county_province = {
				has_building_or_higher = burial_site_01
			}
		}
		# Only if there's a big plague
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
					outbreak_intensity >= major
				}
			}
		}
	}

	immediate = {
		random_held_title = {
			limit = {
				tier = tier_county
				any_county_province = {
					has_building_or_higher = burial_site_01
				}
			}
			save_scope_as = graveyard_county
		}
		get_random_realm_epidemic = { INTENSITY = major }
		if = {
			limit = {
				exists = cp:councillor_court_chaplain
				cp:councillor_court_chaplain = {
					is_available_ai_adult = yes
				}
			}
			cp:councillor_court_chaplain = { save_scope_as = chaplain }
		}
		else = {
			random_courtier_or_guest = {
				limit = {
					is_available_ai_adult = yes
				}
				save_scope_as = chaplain
			}
		}
	}

	option = { # Okay, let's make room for common graves :eyeroll:
		name = epidemic_events.1110.a
		add_character_modifier = {
			modifier = ce1_commoners_in_graves
			years = 15
		}
		scope:graveyard_county = {
			add_county_modifier = {
				modifier = ce1_common_graves
				years = 15
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 1
				ai_rationality = 1
				ai_vengefulness = -0.5
			}
		}
	}

	option = { # Lol, no shot I'm ruining my graveyard with commoners
		name = epidemic_events.1110.b
		every_sub_realm_county = {
			custom = every_infected_county
			limit = {
				any_county_province = {
					any_province_epidemic = {
						this = scope:epidemic_scope
					}
				}
			}
			add_county_modifier = {
				modifier = ce1_bodies_in_the_street
				years = 15
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = -1
				ai_rationality = -1
				ai_vengefulness = 0.5
			}
		}
	}
}

############################
## Catapult the plague corpses
## 1120
## by James Beaumont
############################
epidemic_events.1120 = {
	type = character_event
	title = epidemic_events.1120.t
	desc = epidemic_events.1120.desc
	theme = plague
	override_background = { reference = ce1_funeral_pyre }
	left_portrait = {
		character = root
		animation = thinking
	}

	trigger = {
		is_available_adult = yes
		# Catapults and trebuchets only [Warcraft - why not trebuchets????]
		culture = { 
			has_innovation = innovation_catapult 
			has_innovation = innovation_trebuchet
		}
		# Only if you're leading the army yourself
		scope:army = {
			army_commander = root
		}
		#No sea provinces
		location = { is_sea_province = no }
		# Only do it to people you're at war with
		OR = {
			# Warcraft - TODO: Check if they can actually get sick from this (no point if they cant)
			location.county.holder ?= { is_at_war_with = root }
			location.county.holder ?= {
				any_liege_or_above = {
					is_at_war_with = root
				}
			}
		}
		# Only do it if you have a plague in your realm that is not present at the location
		any_realm_county = {
			title_province = {
				any_province_epidemic = {
					save_temporary_scope_as = epidemic_temp_scope
					root.location.county.title_province = {
						NOT = {
							any_province_epidemic = { this = scope:epidemic_temp_scope }
						}
					}
				}
			}
		}
		# Check if you have a reason to hate this person
		OR = {
			has_relation_rival = location.county.holder
			has_trait = sadistic
			has_trait = torturer
		}
	}

	cooldown = { years = 100 } # This shouldn't be too common # Warcraft - Yes it should if ur forsaken lol (TODO)

	immediate = {
		root = { save_scope_as = corpse_flinger }
		location.county.holder = { save_scope_as = corpse_flingee }
		location.county = { save_scope_as = flung_corpse_location }
		# Get the epidemic
		random_realm_county = {
			limit = {
				title_province = {
					any_province_epidemic = {
						save_temporary_scope_as = epidemic_temp_scope
						root.location.county.title_province = {
							NOT = {
								any_province_epidemic = { this = scope:epidemic_temp_scope }
							}
						}
					}
				}
			}
			title_province = {
				random_province_epidemic = {
					limit = {
						save_temporary_scope_as = epidemic_temp_scope
						root.location.county.title_province = {
							NOT = {
								any_province_epidemic = { this = scope:epidemic_temp_scope }
							}
						}
					}
					save_scope_as = epidemic_scope
				}
			}
		}
	}

	option = { # Fuckinnnnnnnn do it
		name = epidemic_events.1120.a
		hidden_effect = {
			if = {
				limit = {
					scope:corpse_flingee = { location.county = scope:flung_corpse_location }
				}
				scope:corpse_flingee = {
					trigger_event = epidemic_events.1121
				}
			}
			else = {
				scope:flung_corpse_location = {
					add_county_modifier = {
						modifier = ce1_siege_corpse
						years = 15
					}
				}
			}
		}
		create_character_memory = {
			type = ce1_flung_corpse
			participants = {
				flingee = scope:corpse_flingee
			}
		}
		show_as_tooltip = {
			scope:flung_corpse_location = {
				add_county_modifier = {
					modifier = ce1_siege_corpse
					years = 15
				}
			}
		}
		stress_impact = {
			compassionate = major_stress_impact_gain
			just = medium_stress_impact_gain
			forgiving = medium_stress_impact_gain
			calm = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
			vengeful = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = -1
				ai_zeal = -1
				ai_compassion = -1
				ai_vengefulness = 2
			}
		}
	}

	option = { # Fuckinnnnnnnn don't
		name = epidemic_events.1120.b
		stress_impact = {
			torturer = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			sadistic = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 1
				ai_zeal = 1
				ai_compassion = 1
				ai_vengefulness = -2
			}
		}
	}
}

# The enemy recieves the "gift"
epidemic_events.1121 = {
	type = character_event
	title = epidemic_events.1121.t
	desc = epidemic_events.1121.desc
	theme = plague
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:corpse_flinger
		animation = schadenfreude
	}

	immediate = {
		create_character_memory = {
			type = ce1_corpse_flung_at_me
			participants = {
				flinger = scope:corpse_flinger
			}
		}
	}

	option = { # Fling it back!
		name = epidemic_events.1121.a
		trigger = {
			culture = { has_innovation = innovation_catapult }
		}
		show_as_unavailable = { always = yes }
		random_list = {
			50 = {
				show_chance = no
				desc = plague_averted_tt
				send_interface_toast = {
					title = plague_averted_tt
					left_icon = root
					right_icon = scope:corpse_flinger
					hidden_effect = {
						scope:corpse_flinger = {
							trigger_event = epidemic_events.1122
						}
					}
				}
				create_character_memory = {
					type = ce1_flung_corpse
					participants = {
						flingee = scope:corpse_flinger
					}
				}
			}
			50 = {
				show_chance = no
				desc = plague_still_infects_tt
				send_interface_toast = {
					title = plague_still_infects_tt
					left_icon = root
					right_icon = scope:corpse_flinger
					scope:flung_corpse_location = {
						add_county_modifier = {
							modifier = ce1_siege_corpse
							years = 15
						}
					}
					infect_with_epidemic = scope:epidemic_scope
				}
			}
		}
		stress_impact = {
			forgiving = medium_stress_impact_gain
			compassionate = minor_stress_impact_gain
			just = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			callous = minor_stress_impact_loss
			sadistic = medium_stress_impact_loss
			vengeful = major_stress_impact_loss
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_vengefulness = 2
			}
		}
	}

	option = { # Do something about the corpse
		name = epidemic_events.1121.b
		duel = {
			skill = learning
			value = high_skill_rating
			# You quarantine the corpse succesfully
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.1121.b.success
					left_icon = root
					right_icon = scope:peasant_1

					scope:location = {
						add_province_modifier = {
							modifier = ce1_quarantined_corpse
							years = 10
						}
					}
				}
			}
			# The quarantine fails
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.1121.b.failure
					left_icon = root
					right_icon = scope:corpse_flinger
					scope:flung_corpse_location = {
						add_county_modifier = {
							modifier = ce1_siege_corpse
							years = 15
						}
					}
					infect_with_epidemic = scope:epidemic_scope
				}
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			torturer = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			sadistic = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 1
				ai_zeal = 1
				ai_compassion = 1
				ai_vengefulness = -1
			}
		}
	}

	option = { # Just keep that thing away from me
		name = epidemic_events.1121.c
		scope:flung_corpse_location = {
			add_county_modifier = {
				modifier = ce1_siege_corpse
				years = 15
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_loss
			humble = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = -1
				ai_zeal = -1
				ai_compassion = -1
			}
		}
	}
}

# Return to sender
epidemic_events.1122 = {
	type = character_event
	title = epidemic_events.1122.t
	desc = epidemic_events.1122.desc
	theme = plague
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:corpse_flingee
		animation = schadenfreude
	}

	immediate = {
		create_character_memory = {
			type = ce1_corpse_flung_at_me
			participants = {
				flinger = scope:corpse_flinger
			}
		}
	}

	option = { # God damn it
		name = epidemic_events.1122.a
		infect_with_epidemic = scope:epidemic_scope
		add_stress = major_stress_gain
		ai_chance = {
			base = 100
		}
	}

	option = { # Throw it back again!
		name = epidemic_events.1122.b
		trigger = {
			has_trait = torturer
		}
		random_list = {
			25 = {
				show_chance = no
				desc = epidemic_events.1122.b.success
				send_interface_toast = {
					title = epidemic_events.1122.b.success
					left_icon = root
					right_icon = scope:corpse_flinger
					hidden_effect = {
						scope:corpse_flingee = {
							trigger_event = epidemic_events.1123
						}
					}
				}
			}
			75 = {
				show_chance = no
				desc = epidemic_events.1122.b.failure
				send_interface_toast = {
					title = epidemic_events.1122.b.failure
					left_icon = root
					right_icon = scope:corpse_flingee
					add_character_modifier = {
						modifier = ce1_heavily_ill
						years = 5
					}
					infect_with_epidemic = scope:epidemic_scope
				}
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			torturer = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			sadistic = medium_stress_impact_gain
		}
		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_honor = 1
				ai_zeal = 1
				ai_compassion = 1
				ai_vengefulness = -1
			}
		}
	}
}

# The meat shower
epidemic_events.1123 = {
	type = character_event
	title = epidemic_events.1123.t
	desc = epidemic_events.1123.desc
	theme = plague
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:corpse_flinger
		animation = schadenfreude
	}

	option = { # God damn it
		name = epidemic_events.1123.a
		scope:flung_corpse_location = {
			add_county_modifier = {
				modifier = ce1_siege_corpse
				years = 15
			}
		}
		create_character_memory = {
			type = ce1_meat_shower
			participants = {
				flinger = scope:corpse_flinger
			}
		}
		
		ai_chance = {
			base = 100
		}
	}
}

############################
## Epidemic Flavor Events
## 3000-3999
## by Veronica Pazos
############################

############################
## You travel through an infected province
## 3000
## by Veronica Pazos
############################

epidemic_events.3000 = {	
	type = character_event
	title = epidemic_events.3000.t
	desc = epidemic_events.3000.desc
	theme = plague
	override_background = { reference = ce1_condemned_village }
	override_effect_2d = {
		reference = flies	
	}
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				NOR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
			animation = fear
		}
		animation = thinking
	}
	right_portrait = {
		character = scope:sick_peasant
		triggered_animation = {
			trigger = {
				scope:epidemic_scope.epidemic_type.epidemic_trait = trait:ergotism
			}
			animation = dancing_plague
		}
		animation = sick_stomach
	}
	lower_center_portrait = scope:companion
	cooldown = { years = 5 }

	trigger = {
		is_travelling = yes
		location = {
			any_province_epidemic = {
				count >= 1
			}
			# Warcraft - Prevent sick LE3+ characters from showing up
			is_extreme_longevity_culture = no
		}
		current_travel_plan ?= {
			any_entourage_character = {
				NOT = { this = root }
				is_physically_able_ai_adult = yes
			}
		}
	}

	immediate = {
		location = {
			save_scope_as = epidemic_location
		}
		location = {
			random_province_epidemic = {
				save_scope_as = epidemic_scope
			}
		}
		current_travel_plan ?= {
			random_entourage_character = {
				limit = {
					NOT = { this = root }
					is_physically_able_ai_adult = yes
				}
				weight = {
					base = 1
					modifier = {
						has_trait = compassionate
						add = 10
					}
					modifier = {
						has_trait = lifestyle_herbalist
						add = 5
					}
					modifier = {
						has_trait = lifestyle_physician
						add = 5
					}
					modifier = {
						OR = {
							has_trait = callous
							has_trait = sadistic
						}
						factor = 0
					}
				}
				save_scope_as = companion
			}
		}
		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
					has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
					has_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
					is_extreme_longevity_culture = no  # Warcraft
				}
				save_scope_as = sick_peasant
			}
		}
		else = {
			create_character = {
				template = peasant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = 50
				save_scope_as = sick_peasant
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}
			scope:sick_peasant = {
				add_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
			}
		}
	}

	option = { # Stop by to help
		name = epidemic_events.3000.a
		add_piety = minor_piety_gain
		pay_short_term_gold = {
			target = scope:sick_peasant
			gold = medium_gold_value
		}
		current_travel_plan ?= {
			delay_travel_plan = { days = 10 }
		}
		
		stress_impact = {
			greedy = major_stress_impact_gain
			avaricious = major_stress_impact_gain
			callous = major_stress_impact_gain
			sadistic = major_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = compassionate
					has_trait = profligate
				}
				add = 50
			}
			modifier = {
				OR = {
					has_trait = greedy
					has_trait = avaricious
					has_trait = callous
					has_trait = sadistic
					NAND = {
						can_make_expensive_purchase_trigger = { PRICE = medium_gold_value }
						has_trait = profligate
					}
				}
				factor = 0
			}
		}
	}
	
	option = { # Ask a courtier to help them
		name = epidemic_events.3000.b
		add_piety = miniscule_piety_gain
		random = {
			chance = 50
			send_interface_toast = {
				title = epidemic_events.3000.b.sick
				left_icon = scope:companion
				scope:companion = {
					add_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
				}
			}
			modifier = {
				add = {
					value = 0
					subtract = health #if you're healthy you kinda get away with it
				}
			}
			modifier = {
				add = { value = -10 }
				OR = {
					has_trait = whole_of_body
					has_perk = wash_your_hands_perk
				}
			}
		}

		stress_impact = {
			callous = medium_stress_impact_gain
			sadistic = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
				factor = 0
			}
		}
	}

	option = { # Wow that sucks
		name = epidemic_events.3000.c
		add_piety = minor_piety_loss
		
		stress_impact = {
			compassionate = major_stress_impact_gain
			just = medium_stress_impact_gain
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = compassionate
					has_trait = just
				}
				factor = 0
			}
		}
	}
	
	after = {
		hidden_effect = {
			if = {
				limit = { is_ai = yes }
				scope:sick_peasant = { silent_disappearance_effect = yes }
			}
			else = {
				scope:sick_peasant = { move_to_pool = yes }
			}
		}
	}
}

############################
## You travel through an infected province AND may get infected
## 3010
## by Veronica Pazos
############################

epidemic_events.3010 = {	
	type = character_event
	title = epidemic_events.3010.t
	desc = epidemic_events.3010.desc
	theme = plague
	override_background = { reference = ce1_condemned_village }
	override_effect_2d = {
		reference = flies	
	}
	left_portrait = {
		character = root
		triggered_animation = {
			trigger = {
				OR = {
					learning >= high_skill_rating
					has_trait = lifestyle_physician
				}
			}
			animation = thinking
		}
		triggered_animation = {
			trigger = {
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
			animation = disgust
		}
		animation = jockey_walk
	}
	cooldown = { years = 5 }

	trigger = {
		is_travelling = yes
		location = {
			any_province_epidemic = {
				count >= 1
			}
			# Warcraft
			is_extreme_longevity_culture = no
		}
		# Warcraft - gotta ignore for these guys
		NOT = { has_trait_with_flag = can_not_get_sick } 
		NOT = { culture = { has_cultural_parameter = aloof_wardens } }
	}

	immediate = {
		location = {
			save_scope_as = epidemic_location
		}
		location = {
			random_province_epidemic = {
				save_scope_as = epidemic_scope
			}
		}
		hidden_effect = {
			create_character = {
				template = peasant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = 50
				save_scope_as = sick_peasant
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}
			scope:sick_peasant = {
				add_trait = scope:epidemic_scope.epidemic_type.epidemic_trait
			}
		}
	}
	
	option = { # You are very clever
		name = epidemic_events.3010.a
		trigger = {
			OR = {
				has_trait = lifestyle_physician
				has_trait = lifestyle_herbalist
				learning >= high_skill_rating
				culture = { has_cultural_parameter = aloof_wardens }  # Warcraft
			}
		}
		add_character_modifier = {
			modifier = humour_knowledge_modifier
			years = 10
		}
		stress_impact = {
			brave = medium_stress_impact_gain
			impatient = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = brave
					has_trait = impatient
				}
				factor = 0
			}
		}
	}

	option = { # Drink water
		name = epidemic_events.3010.b
		# Warcraft
		save_temporary_scope_value_as = {
			name = base_infection_chance
			value = {
				value = 50
				subtract = health #if you're healthy you kinda get away with it
				if = {
					limit = { 
						OR = {
							has_trait = whole_of_body
							has_perk = wash_your_hands_perk
						} 
					}
					subtract = 10
				}
			}
		} 
		wc_chance_to_infect_with_epidemic_plus_message = { 
			base = scope:base_infection_chance
			message = epidemic_events.3010.b.sick
			target = root
		}
		
		stress_impact = {
			craven = medium_stress_impact_gain
			cynical = medium_stress_impact_gain
			paranoid = major_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = paranoid
					has_trait = craven
					has_trait = cynical
				}
				factor = 0
			}
		}
	}
	
	option = { # Don't drink
		name = epidemic_events.3010.c
		current_travel_plan = {
			add_travel_plan_modifier = no_water_modifier
		}
		stress_impact = {
			impatient = medium_stress_impact_gain
			diligent = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = impatient
					has_trait = diligent
				}
				factor = 0
			}
		}
	}
	
	after = {
		hidden_effect = {
			if = {
				limit = { is_ai = yes }
				scope:sick_peasant = { silent_disappearance_effect = yes }
			}
			else = {
				scope:sick_peasant = { move_to_pool = yes }
			}
		}
	}
}

############################
## Epidemic Flavor Events
## 5000-5899
## by Nick Meredith
############################

# Church officials want to cull an animal
# by Nick Meredith
epidemic_events.5000 = {	
	type = character_event
	title = epidemic_events.5000.t
	desc = epidemic_events.5000.desc
	theme = plague
	override_background = { reference = ce1_funeral_pyre }
	override_effect_2d = {
		reference = flies	
	}
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:church_person
		animation = thinking
	}
	cooldown = { years = 10 }

	trigger = {
		NOT = { culture = { has_cultural_parameter = aloof_wardens } } # Warcraft
		is_available_adult = yes
		# There be a plague
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
				}
			}
			is_extreme_longevity_culture = no
		}

		exists = cp:councillor_court_chaplain
		cp:councillor_court_chaplain = {
			is_available_ai_adult = yes
			location = root.location #Ensure it makes sense they talk to you
		}
	}

	immediate = {
		select_local_farm_animal_effect = yes
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = {
						count >= 1
					}
				}
				is_extreme_longevity_culture = no
			}
			save_scope_as = infected_county
		}
		scope:infected_county = {
			random_county_province = {
				limit = {
					any_province_epidemic = {
						count >= 1
					}
					is_county_capital = yes
				}
				random_province_epidemic = {
					save_scope_as = epidemic
				}
				save_scope_as = infected_province
			}
		}
		cp:councillor_court_chaplain = {
			save_scope_as = church_person
		}
		save_scope_value_as = {
			name = infection_range
			value = {
				integer_range = {
					min = 1
					max = 15
				}
			}
		}
	}

	option = { # How about... rats?
		name = epidemic_events.5000.a

		trigger = {
			has_trait = eccentric
		}

		scope:infected_county = {
			add_county_modifier = {
				modifier = rats_eradicated
				years = 10
			}
		}

		reverse_add_opinion = {
			modifier = confused_opinion
			opinion = -5
			target = scope:church_person
		}

		stress_impact = {
			diligent = miniscule_stress_impact_loss
			calm = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
			wrathful = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 0.5
				ai_rationality = 1
			}
			# Warcraft
			modifier = {
				culture = { has_cultural_parameter = elder_culture }
				add = 50
			}
		}
	}

	option = { # Kill all the cats!
		name = epidemic_events.5000.b

		trigger = {
			NOT = {
				any_owned_story = {
					story_type = story_cycle_pet_cat
				}
			}
			any_owned_story = {
				story_type = story_cycle_pet_dog
			}
		}

		if = { #Kill all your courtiers' cats if they're there!
			limit = {
				any_courtier_or_guest = {
					location = scope:infected_province
					any_owned_story = {
						story_type = story_cycle_pet_cat
					}
				}
			}
			every_courtier_or_guest = {
				limit = {
					location = scope:infected_province
					any_owned_story = {
						story_type = story_cycle_pet_cat
					}
				}
				random_owned_story = {
					limit = {
						story_type = story_cycle_pet_cat
					}
					save_scope_as = story
				}
				show_as_tooltip = {
					remove_cat_story_modifiers_effect = yes
				}
				scope:story = {
					hidden_effect = { end_story = yes }
				}
				add_opinion = {
					modifier = hate_opinion
					opinion = -30
					target = root
				}
			}
		}

		scope:infected_county = {
			add_county_modifier = {
				modifier = pets_eradicated
				years = 5
			}
		}

		reverse_add_opinion = {
			modifier = impressed_opinion
			opinion = 40
			target = scope:church_person
		}

		stress_impact = {
			diligent = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
			wrathful = miniscule_stress_impact_loss
			calm = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = 0.5
			}
		}
	}

	option = { # Kill all the dogs!
		name = epidemic_events.5000.c

		trigger = {
			NOT = {
				any_owned_story = {
					story_type = story_cycle_pet_dog
				}
			}
			any_owned_story = {
				story_type = story_cycle_pet_cat
			}
		}

		if = { #Kill all your courtiers' dogs if they're there!
			limit = {
				any_courtier_or_guest = {
					location = scope:infected_province
					any_owned_story = {
						story_type = story_cycle_pet_dog
					}
				}
			}
			every_courtier_or_guest = {
				limit = {
					location = scope:infected_province
					any_owned_story = {
						story_type = story_cycle_pet_dog
					}
				}
				random_owned_story = {
					limit = {
						story_type = story_cycle_pet_dog
					}
					save_scope_as = story
				}
				show_as_tooltip = {
					remove_dog_story_modifiers_effect = yes
				}
				scope:story = {
					hidden_effect = { end_story = yes }
				}
				add_opinion = {
					modifier = hate_opinion
					opinion = -30
					target = root
				}
			}
		}

		reverse_add_opinion = {
			modifier = impressed_opinion
			opinion = 40
			target = scope:church_person
		}

		stress_impact = {
			diligent = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
			wrathful = miniscule_stress_impact_loss
			calm = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = 0.5
			}
		}
	}

	option = { # Kill all the sheep!
		name = epidemic_events.5000.d

		trigger = {
			NOT = {
				has_trait = eccentric
			}
		}

		random_list = {
			15 = {
				modifier = { #Fuzzy it up a lil
					add = scope:infection_range
				}
				scope:infected_county = {
					add_county_modifier = {
						modifier = vectors_reduced
						years = 5
					}
				}
			}
			30 = {
				scope:infected_county = {
					add_county_modifier = {
						modifier = disastrous_cull
						years = 5
					}
				}	
			}
		}

		reverse_add_opinion = {
			modifier = impressed_opinion
			opinion = 30
			target = scope:church_person
		}

		stress_impact = {
			diligent = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			calm = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			fickle = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -0.5
				ai_rationality = 1
			}
		}
	}

	option = { # Don't be ridiculous, realm priest!
		name = epidemic_events.5000.e

		add_character_modifier = {
			modifier = pleas_ignored
			years = 15
		}

		reverse_add_opinion = {
			modifier = angry_opinion
			opinion = -25
			target = scope:church_person
		}

		add_legitimacy = miniscule_legitimacy_loss

		stress_impact = {
			diligent = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			calm = miniscule_stress_impact_loss
			lazy = miniscule_stress_impact_loss
			fickle = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_rationality = -0.5
			}
			# Warcraft
			modifier = {
				culture = { has_cultural_parameter = aloof_wardens }
				add = 50
			}
		}
	}
}

# A minor epidemic is causing massive panic
# by Nick Meredith
epidemic_events.5001 = {	
	type = character_event
	title = epidemic_events.5001.t
	desc = epidemic_events.5001.desc
	theme = plague
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:courtier
		animation = stress
	}
	cooldown = { years = 10 }

	trigger = {
		is_available = yes
		# There be a plague, but it's kinda smol
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
					outbreak_intensity <= minor
					exists = province_owner
				}
			}
			is_extreme_longevity_culture = no # Warcraft
		}

		any_courtier_or_guest = {
			location = root.location
			is_ai = yes
			is_available_ai_adult = yes
			is_extreme_longevity_culture = no # Warcraft
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = {
						count >= 1
						outbreak_intensity <= minor
					}
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			save_scope_as = epidemic_county
		}

		scope:epidemic_county = {
			random_county_province = {
				limit = {
					any_province_epidemic = {
						count >= 1
						outbreak_intensity <= minor
					}
				}
				province_owner = {
					save_scope_as = province_owner
				}
			}
			
		}

		random_courtier_or_guest = {
			limit = {
				location = root.location
				is_ai = yes
			}
			save_scope_as = courtier
		}
	}

	option = { # LOCK. DOWN. EVERYTHING.
		name = epidemic_events.5001.a

		trigger = {
			has_trait = paranoid
		}

		scope:province = {
			add_county_modifier = {
				modifier = draconian_lockdown
				years = 10
			}
		}

		reverse_add_opinion = {
			modifier = pleased_opinion
			opinion = 15
			target = scope:courtier
		}

		stress_impact = {
			base = medium_stress_impact_loss
			diligent = miniscule_stress_impact_loss
			craven = miniscule_stress_impact_loss
			impatient = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
			brave = minor_stress_impact_gain
			patient = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -0.5
				ai_rationality = 1
			}
		}
	}

	option = { # Leave them to it, they'll know what to do
		name = epidemic_events.5001.b

		trigger = {
			# Warcraft
			OR = { 
				has_trait = trusting
				has_trait = just
				has_trait = humble
				has_trait = administrator
				has_trait = august
				scope:province_owner = { 
					OR = { 
						has_relation_friend = scope:host
						has_relation_lover = scope:host
					}
				}
				is_extreme_longevity_culture = yes
			}
		}

		if = {
			limit = {
				scope:province_owner = {
					NOT = {
						this = root
					}
				}
			}
			reverse_add_opinion = {
				modifier = pleased_opinion
				opinion = 40
				target = scope:province_owner
			}
		}

		scope:province = {
			add_county_modifier = {
				modifier = trusted_ruler
				years = 5
			}
		}

		stress_impact = {
			base = medium_stress_impact_loss
			diligent = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			impatient = minor_stress_impact_gain
			lazy = miniscule_stress_impact_loss
			brave = miniscule_stress_impact_loss
			patient = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_rationality = -1
			}
		}
	}

	option = { # Don't you think I have enough to worry about, fool?!
		name = epidemic_events.5001.c

		trigger = {
			has_trait = wrathful
		}

		progress_towards_rival_effect = {
			REASON = rival_ignored_warnings
			CHARACTER = scope:courtier
			OPINION = default_rival_opinion
		}

		add_legitimacy = miniscule_legitimacy_loss

		stress_impact = {
			base = medium_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			paranoid = miniscule_stress_impact_loss
			fickle = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
			}
			modifier = {
				is_extreme_longevity_culture = yes
				add = 50
			}
		}
	}

	option = { # Send them some supplies
		name = epidemic_events.5001.d

		remove_short_term_gold = minor_gold_value

		scope:province = {
			add_county_modifier = {
				modifier = supplies_sent
				years = 10
			}
		}

		reverse_add_opinion = {
			modifier = pleased_opinion
			opinion = 15
			target = scope:courtier
		}

		stress_impact = {
			generous = miniscule_stress_impact_loss
			diligent = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
			greedy = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_rationality = 1
			}
		}
	}

	option = { # I'm sure they'll be fine
		name = epidemic_events.5001.e

		add_prestige = minor_prestige_loss

		scope:province = {
			add_county_modifier = {
				modifier = plight_ignored
				years = 10
			}
		}

		reverse_add_opinion = {
			modifier = angry_opinion
			opinion = -20
			target = scope:courtier
		}

		add_legitimacy = miniscule_legitimacy_loss

		stress_impact = {
			diligent = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			calm = miniscule_stress_impact_loss
			lazy = miniscule_stress_impact_loss
			fickle = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_rationality = -0.5
			}
		}
	}
}

# You can pile the dead into a boat and set it adrift
# by Nick Meredith
epidemic_events.5002 = {	
	type = character_event
	title = epidemic_events.5002.t
	desc = epidemic_events.5002.desc
	theme = plague
	override_background = { reference = docks }
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:steward
		animation = personality_rational
	}
	override_effect_2d = {
		reference = fog	
	}
	cooldown = { years = 10 }
	
	trigger = {
		NOT = {culture = { has_cultural_parameter = aloof_wardens } } # warcraft
		is_available = yes
		# There be a plague, and it's in a coastal province
		any_sub_realm_county = {
			any_county_province = {
				OR = {
					is_riverside_province = yes
					is_coastal = yes
				}
				any_province_epidemic = {
					count >= 1
				}
			}
		}

		exists = cp:councillor_steward
		cp:councillor_steward = {
			is_available_ai_adult = yes
			is_healthy = yes
			location = root.location
		}
	}

	immediate = {
		cp:councillor_steward = {
			save_scope_as = steward
		}
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					OR = {
						is_riverside_province = yes
						is_coastal = yes
					}
					any_province_epidemic = {
						count >= 1
					}
				}
			}
			random_county_province = {
				limit = {
					OR = {
						is_riverside_province = yes
						is_coastal = yes
					}
					any_province_epidemic = {
						count >= 1
					}
				}
				save_scope_as = coastal_province
			}
		}
		if = {
			limit = {
				location = {
					any_neighboring_province = {
						OR = {
							is_riverside_province = yes
							is_coastal = yes
						}
						exists = county
						NOR = {
							county.holder = {
								liege = root
								this = root
							}
						}
					}
				}				
			}
			location = {
				random_neighboring_province = {
					limit = {
						OR = {
							is_riverside_province = yes
							is_coastal = yes
						}
						exists = county
						NOR = {
							county.holder = {
								liege = root
								this = root
							}
						}
					}
					save_scope_as = other_province
				}
			}
		}
		save_scope_value_as = {
			name = infection_range
			value = {
				integer_range = {
					min = 1
					max = 15
				}
			}
		}
	}

	option = { # Cast the boat off... in the direction of a neighbouring county that isn't ours
		name = epidemic_events.5002.a

		flavor = epidemic_events.5002.a.tt

		trigger = {
			exists = scope:other_province
			scope:other_province = { #Make sure there's another county that you can do this to
				OR = {
					is_riverside_province = yes
					is_coastal = yes
				}
				NOR = {
					county.holder = {
						liege = root
						this = root
						has_trait_with_flag = can_not_get_sick # Warcraft
					}
				}
			}
		}

		add_internal_flag = special

		scope:other_province = {
			add_province_modifier = {
				modifier = dead_boats
				years = 10
			}
		}

		stress_impact = {
			callous = medium_stress_impact_loss
			sadistic = medium_stress_impact_loss
			deceitful = miniscule_stress_impact_loss
			vengeful = miniscule_stress_impact_loss
			arbitrary = miniscule_stress_impact_loss
			honest = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = 0.5
				ai_vengefulness = 1
			}
		}
	}

	option = { # Set them adrift
		name = epidemic_events.5002.b

		random_list = {
			40 = { #Your province escapes unharmed
				modifier = { #Fuzzy it up a lil
					add = scope:infection_range
				}
				desc = epidemic_events.5002.b.success
				send_interface_toast = {
					title = epidemic_events.5002.b.success
					left_icon = root
					right_icon = scope:steward

					scope:coastal_province = {
						add_province_modifier = {
							modifier = clear_beaches
							years = 5
						}
					}
				}				
			}
			30 = { #The boat returns a few days later
				desc = epidemic_events.5002.b.failure
				send_interface_toast = {
					title = epidemic_events.5002.b.failure
					left_icon = root
					right_icon = scope:steward
					add_legitimacy = miniscule_legitimacy_loss
					scope:coastal_province = {
						add_province_modifier = {
							modifier = contaminated_beaches
							years = 5
						}
					}
				}				
			}
			10 = { #The boat sinks and corpses begin washing ashore
				desc = epidemic_events.5002.b.criticalfailure
				send_interface_toast = {
					title = epidemic_events.5002.b.criticalfailure
					left_icon = root
					right_icon = scope:steward
					add_legitimacy = miniscule_legitimacy_loss

					scope:coastal_province = {
						add_province_modifier = {
							modifier = pestilent_beaches
							years = 5
						}
					}
				}				
			}
		}

		stress_impact = {
			diligent = miniscule_stress_impact_loss
			craven = miniscule_stress_impact_loss
			impatient = miniscule_stress_impact_loss
			cynical = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
			brave = minor_stress_impact_gain
			patient = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_zeal = -1
			}
		}
	}

	option = { # They deserve proper funerary rites
		name = epidemic_events.5002.c

		scope:coastal_province = {
			add_province_modifier = {
				modifier = respected_dead
				years = 10
			}
		}

		stress_impact = {
			zealous = medium_stress_impact_loss
			compassionate = miniscule_stress_impact_loss
			trusting = miniscule_stress_impact_loss
			cynical = medium_stress_impact_gain
			callous = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_zeal = 1
			}
		}
	}

	option = { # Unload them and take the boat
		name = epidemic_events.5002.d

		add_character_modifier = {
			modifier = free_boats
			years = 10
		}

		scope:coastal_province = {
			add_province_modifier = {
				modifier = corpse_piles
				years = 10
			}
		}

		stress_impact = {
			trusting = miniscule_stress_impact_loss
			greedy = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 1
			}
		}
	}
}

# A peasant asks for your healing touch
# by Nick Meredith
epidemic_events.5003 = {
	type = character_event
	title = epidemic_events.5003.t
	desc = epidemic_events.5003.desc
	theme = plague
	override_background = { reference = market }
	override_effect_2d = {
		reference = rain	
	}
	left_portrait = {
		character = root
		animation = jockey_walk
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = scope:peasant
		animation = beg
	}
	lower_center_portrait = {
		character = scope:child
	}
	cooldown = { years = 10 }
	
	trigger = {
		is_available = yes
		# You're at your capital
		location = root.capital_province

		# There be a plague in your capital
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = { 
					count >= 1
				}
				this = root.capital_province
			}
			is_extreme_longevity_culture = no  # Warcraft
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = { 
						count >= 1
					}
					this = root.capital_province
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			random_county_province = {
				limit = {
					any_province_epidemic = { 
						count >= 1
					}
					this = root.capital_province
				}
				save_scope_as = location
			}
		}
		hidden_effect = {
			if = {
				limit = {
					any_pool_character = {
						province = root.location
						NOT = { is_courtier_of = root }
						is_available_ai_adult = yes
						has_no_particular_noble_roots_trigger = yes
						any_child = {
							is_healthy = no
							is_adult = no
						}
						is_extreme_longevity_culture = no  # Warcraft
					}
				}
				random_pool_character = {
					province = root.location
					limit = {
						is_available_ai_adult = yes
						NOT = { is_courtier_of = root }
						has_no_particular_noble_roots_trigger = yes
						any_child = {
							is_healthy = no
							is_adult = no
						}
						is_extreme_longevity_culture = no  # Warcraft
					}
					save_scope_as = peasant
				}
			}
			else = {
				create_character = {
					template = generic_peasant_character
					culture = root.culture
					faith = root.faith
					location = root.location
					save_scope_as = peasant
					# Warcraft 
					after_creation = {
						trigger_race_giving_no_gene_effect = yes
					}
				}
				hidden_effect = {
					scope:peasant = {
						move_to_pool = yes
					}
				}
			}
			create_character = {
				template = peasant_toddler_character
				culture = root.culture
				faith = root.faith
				location = root.location
				save_scope_as = child
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}

			if = { #Set the previous character as their parent
				limit = {
					scope:peasant ?= {
						is_female = no
					}
				}
				hidden_effect = {
					scope:child = {
						set_father = scope:peasant
					}
				}
			}
			else = {
				hidden_effect = {
					scope:child = {
						set_mother = scope:peasant
					}
				}
			}
			hidden_effect = {
				scope:child = {
					add_trait = ill
					move_to_pool = yes
				}
			}
		}

		save_scope_value_as = {
			name = infection_range
			value = {
				integer_range = {
					min = 1
					max = 15
				}
			}
		}
	}

	option = { # Get away from me!
		name = epidemic_events.5003.a

		trigger = {
			OR = {
				has_trait = callous
				has_trait = sadistic
				has_trait = paranoid
				# Warcraft - why not?
				has_trait = arrogant 
				has_trait = arbitrary
				has_trait = craven
			}
		}

		add_character_modifier = {
			modifier = health_first
			years = 15
		}

		scope:location = {
			add_province_modifier = {
				modifier = dismissed_peasantry
				years = 10
			}
		}

		stress_impact = {
			base = minor_stress_impact_loss
			wrathful = miniscule_stress_impact_loss
			vengeful = miniscule_stress_impact_loss
			arbitrary = miniscule_stress_impact_loss
			calm = medium_stress_impact_gain
			forgiving = medium_stress_impact_gain
			just = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_rationality = 0.5
				ai_vengefulness = 1
			}
		}
	}

	# Warcraft - TODO: replace with an option to reflect healing magic
	option = { # Give it a go
		name = epidemic_events.5003.b

		random_list = {
			10 = { #The child is somehow miraculously healed
				desc = epidemic_events.5003.b.criticalsuccess
				send_interface_toast = {
					title = epidemic_events.5003.b.criticalsuccess
					left_icon = root
					right_icon = scope:child

					add_prestige = major_prestige_gain

					scope:child = {
						remove_trait = ill
					}
					
					add_character_modifier = {
						modifier = miracle_worker
						years = 25
					}					
				}				
			}
			70 = { #The kid shows no visible change
				modifier = { #Fuzzy it up a lil
					add = scope:infection_range
				}
				desc = epidemic_events.5003.b.success
				send_interface_toast = {
					title = epidemic_events.5003.b.success
					left_icon = root
					right_icon = scope:child

					add_prestige = minor_prestige_gain

					add_character_modifier = {
						modifier = man_of_the_people
						years = 10
					}
				}
			}
			10 = { #The child dies
				desc = epidemic_events.5003.b.failure
				send_interface_toast = {
					title = epidemic_events.5003.b.failure
					left_icon = root
					right_icon = scope:child

					random = {
						chance = 25
						add_trait = ill
					}

					add_character_modifier = {
						modifier = out_of_touch
						years = 25
					}
				}				
			}
		}

		stress_impact = {
			brave = miniscule_stress_impact_loss
			gregarious = miniscule_stress_impact_loss
			humble = miniscule_stress_impact_loss
			trusting = miniscule_stress_impact_loss
			paranoid = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_zeal = 0.5
			}
		}
	}

	option = { # Just... try to ignore them
		name = epidemic_events.5003.c

		reverse_add_opinion = {
			modifier = disappointed_opinion
			opinion = -20
			target = scope:peasant
		}

		stress_impact = {
			shy = medium_stress_impact_loss
			compassionate = miniscule_stress_impact_loss
			trusting = miniscule_stress_impact_loss
			gregarious = medium_stress_impact_gain
			callous = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -0.5
			}
		}
	}
}

# People are trying to get into your castle!
# by Nick Meredith
epidemic_events.5004 = {
	type = character_event
	title = epidemic_events.5004.t
	desc = epidemic_events.5004.desc
	theme = plague
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:peasant_1
		animation = beg
	}
	lower_left_portrait = {
		character = scope:peasant_2
	}
	lower_center_portrait = {
		character = scope:peasant_3
	}
	lower_right_portrait = {
		character = scope:peasant_4
	}
	cooldown = { years = 10 }
	
	trigger = {
		NOT = { culture = { has_cultural_parameter = aloof_wardens } } # Warcraft
		is_available = yes
		# Make sure you're royal!
		highest_held_title_tier >= tier_kingdom

		# And you're at your capital
		location = root.capital_province

		# There be a plague in your capital
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = { 
					count >= 1
				}
				this = root.capital_province
			}
			is_extreme_longevity_culture = no  # Warcraft
		}

		any_pool_character = {
			province = root.location
			count >= 4
			is_available_ai_adult = yes
			has_no_particular_noble_roots_trigger = yes
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = { 
						count >= 1
					}
					this = root.capital_province
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			random_county_province = {
				limit = {
					any_province_epidemic = { 
						count >= 1
					}
					this = root.capital_province
					is_extreme_longevity_culture = no  # Warcraft
				}
				random_province_epidemic = {
					save_scope_as = epidemic_scope
				}
				save_scope_as = location
			}
		}

		random_pool_character = {
			province = root.location
			limit = {
				is_available_ai_adult = yes
				has_no_particular_noble_roots_trigger = yes
				is_extreme_longevity_culture = no  # Warcraft
			}
			save_scope_as = peasant_1
		}

		random_pool_character = {
			province = root.location
			limit = {
				is_available_ai_adult = yes
				has_no_particular_noble_roots_trigger = yes
				NOT = {
					this = scope:peasant_1
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			save_scope_as = peasant_2
		}

		random_pool_character = {
			province = root.location
			limit = {
				is_available_ai_adult = yes
				has_no_particular_noble_roots_trigger = yes
				NOR = {
					this = scope:peasant_1
					this = scope:peasant_2
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			save_scope_as = peasant_3
		}

		random_pool_character = {
			province = root.location
			limit = {
				is_available_ai_adult = yes
				has_no_particular_noble_roots_trigger = yes
				NOR = {
					this = scope:peasant_1
					this = scope:peasant_2
					this = scope:peasant_3
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			save_scope_as = peasant_4
		}

		every_pool_character = {
			province = root.location
			limit = {
				has_no_particular_noble_roots_trigger = yes
				is_extreme_longevity_culture = no  # Warcraft
			}
			add_to_list = peasant_rabble
		}
	}

	option = { # Welcome in!
		name = epidemic_events.5004.a

		remove_short_term_gold = medium_gold_value

		hidden_effect = {
			every_courtier_or_guest = {
				add_opinion = {
					modifier = annoyed_opinion
					opinion = -10
					target = root
				}
			}
		}

		every_in_list = {
			list = peasant_rabble
			root = {
				add_courtier = prev
			}
		}

		hidden_effect = {
			every_in_list = {
				list = peasant_rabble
				add_opinion = {
					modifier = grateful_opinion
					opinion = 40
					target = root			
				}
			}
		}

		custom_tooltip = epidemic_events.5004.a.new_courtiers
		custom_tooltip = epidemic_events.5004.a.old_courtiers

		scope:location = {
			add_province_modifier = {
				modifier = commoners_welcomed_in
				years = 15
			}
		}

		stress_impact = {
			gregarious = medium_stress_impact_loss
			compassionate = medium_stress_impact_loss
			generous = miniscule_stress_impact_loss
			trusting = miniscule_stress_impact_loss
			greedy = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			callous = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_rationality = -0.5
			}
		}
	}

	option = { # Come on, now, you know I can't do that...
		name = epidemic_events.5004.b

		duel = {
			skill = diplomacy
			value = high_skill_rating
			# They understand the situation
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.5004.b.success
					left_icon = root
					right_icon = scope:peasant_1

					scope:location = {
						add_province_modifier = {
							modifier = fears_allayed
							years = 10
						}
					}
				}
			}
			# They have to be removed by force
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.5004.b.failure
					left_icon = root
					right_icon = scope:peasant_1
					add_legitimacy = miniscule_legitimacy_loss
					scope:location = {
						add_province_modifier = {
							modifier = fears_ignored
							years = 10
						}
					}
				}
			}
		}

		stress_impact = {
			vengeful = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			calm = miniscule_stress_impact_loss
			paranoid = miniscule_stress_impact_loss
			trusting = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			fickle = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -0.5
				ai_vengefulness = 0.5
			}
		}
	}

	option = { # Get out of here, miscreants!
		name = epidemic_events.5004.c

		hidden_effect = {
			every_in_list = {
				list = peasant_rabble
				add_opinion = {
					modifier = angry_opinion
					opinion = -40
					target = root			
				}
			}
		}

		scope:location = {
			add_province_modifier = {
				modifier = commoners_turned_away
				years = 15
			}
		}
		add_legitimacy = miniscule_legitimacy_loss

		stress_impact = {
			shy = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			paranoid = medium_stress_impact_loss
			gregarious = medium_stress_impact_gain
			compassionate = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_sociability = -1
			}
		}
	}
}

# The plague is spreading in from the coast
# by Nick Meredith
epidemic_events.5005 = {
	type = character_event
	title = epidemic_events.5005.t
	desc = epidemic_events.5005.desc
	theme = plague
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:steward
		animation = stress
	}
	cooldown = { years = 10 }

	trigger = {
		is_available = yes
		#There be a plague in your subrealm, and it's in a coastal province
		any_sub_realm_county = {
			any_county_province = {
				is_coastal = yes
				any_province_epidemic = {
					count >= 1
				}
			}
			is_extreme_longevity_culture = no  # Warcraft
		}

		exists = cp:councillor_steward
		cp:councillor_steward = {
			is_available_healthy_ai_adult = yes
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					is_coastal = yes
					any_province_epidemic = {
						count >= 1
					}
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			random_county_province = {
				limit = {
					is_coastal = yes
					any_province_epidemic = {
						count >= 1
					}
				}
				save_scope_as = coastal_province
			}
		}

		every_sub_realm_county = {
			limit = {
				any_county_province = {
					is_coastal = yes
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			every_county_province = {
				limit = {
					is_coastal = yes
				}
				add_to_list = coastal_list
			}
		}

		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = { 
						count >= 1
					}
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			random_county_province = {
				limit = {
					any_province_epidemic = { 
						count >= 1
					}
				}
				random_province_epidemic = {
					save_scope_as = epidemic_scope
				}
			}
		}

		cp:councillor_steward = {
			save_scope_as = steward
		}
	}

	option = { # Make it 40 days, and threaten them
		name = epidemic_events.5005.a

		trigger = {
			OR = {
				has_trait = paranoid
				has_trait = sadistic
				has_trait = callous
				has_trait = arbitrary
				has_trait = stubborn
			}
		}

		if = { #Tooltip ensmallener for if you have more than 5 sea provinces
			limit = {
				any_in_list = {
					list = coastal_list
					count > 5
				}
			}
			every_in_list = {
				list = coastal_list
				custom = epidemic_events.5005.a.coastal_quarantine
				add_province_modifier = {
					modifier = strict_coastal_quarantine
					years = 15
				}
			}
		}
		else = {
			every_in_list = {
				list = coastal_list
				add_province_modifier = {
					modifier = strict_coastal_quarantine
					years = 15
				}
			}
		}

		every_vassal = {
			limit = {
				has_vassal_stance = barons_and_minor_landholders
				NOT = { # Just in case
					this = scope:steward
				}
			}
			custom = epidemic_events.5005.a.landholders
			add_opinion = {
				modifier = angry_opinion
				opinion = -20
				target = root
			}
		}

		stress_impact = {
			paranoid = minor_stress_impact_loss
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			arbitrary = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			trusting = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			greedy = medium_stress_impact_gain
			just = miniscule_stress_impact_gain
			fickle = miniscule_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_greed = -1
			}
		}
	}

	option = { # Institute a quarantine
		name = epidemic_events.5005.b

		if = { #Tooltip ensmallener for if you have more than 5 sea provinces
			limit = {
				any_in_list = {
					list = coastal_list
					count > 5
				}
			}
			every_in_list = {
				list = coastal_list
				custom = epidemic_events.5005.a.coastal_quarantine
				add_province_modifier = {
					modifier = coastal_quarantine
					years = 10
				}
			}
		}
		else = {
			every_in_list = {
				list = coastal_list
				add_province_modifier = {
					modifier = coastal_quarantine
					years = 10
				}
			}
		}

		reverse_add_opinion = {
			modifier = relieved_opinion
			opinion = 15
			target = scope:steward
		}

		stress_impact = {
			paranoid = minor_stress_impact_loss
			sadistic = minor_stress_impact_loss
			callous = minor_stress_impact_loss
			arbitrary = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			trusting = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
			greedy = medium_stress_impact_gain
			just = miniscule_stress_impact_gain
			fickle = miniscule_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -0.5
				ai_vengefulness = 0.5
			}
		}
	}

	option = { # We can't afford this. We'll just have to hope.
		name = epidemic_events.5005.c

		reverse_add_opinion = {
			modifier = worried_opinion
			opinion = -10
			target = scope:steward
		}
		add_legitimacy = miniscule_legitimacy_loss

		stress_impact = {
			paranoid = medium_stress_impact_gain
			sadistic = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			trusting = minor_stress_impact_loss
			compassionate = miniscule_stress_impact_loss
			greedy = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_greed = 1
			}
		}
	}
}

# People are attempting to save themselves via... laughter?
# by Nick Meredith
epidemic_events.5006 = {
	type = character_event
	title = epidemic_events.5006.t
	desc = epidemic_events.5006.desc
	theme = plague
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = eyeroll
	}
	right_portrait = {
		character = scope:councillor
		animation = laugh
	}
	cooldown = { years = 10 }

	trigger = {
		is_extreme_longevity_culture = no  # Warcraft
		is_available = yes
		#There be a plague in your subrealm
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
				}
			}
		}

		any_councillor = {
			is_available_healthy_ai_adult = yes
			NOR = {
				has_trait = callous
				has_trait = irritable
			}
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = {
						count >= 1
					}
				}
			}
			random_county_province = {
				limit = {
					any_province_epidemic = {
						count >= 1
					}
				}
				save_scope_as = province
			}
		}

		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = { 
						count >= 1
					}
				}
			}
			random_county_province = {
				limit = {
					any_province_epidemic = { 
						count >= 1
					}
				}
				random_province_epidemic = {
					save_scope_as = epidemic_scope
				}
			}
		}

		random_councillor = {
			limit = {
				is_available_healthy_ai_adult = yes
				NOR = {
					has_trait = callous
					has_trait = irritable
				}
			}
			save_scope_as = councillor
		}

		save_scope_value_as = {
			name = fuzzy_range
			value = {
				integer_range = {
					min = 1
					max = 10
				}
			}
		}
	}

	option = { # You're so right! Hee hee hee!
		name = epidemic_events.5006.a

		trigger = {
			has_trait = eccentric
		}

		add_character_modifier = {
			modifier = cackling_loon
			years = 15
		}

		stress_impact = {
			base = medium_stress_impact_loss
			calm = miniscule_stress_impact_loss
			fickle = miniscule_stress_impact_loss
			stubborn = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 0.5
			}
		}
	}

	option = { # Faith is our only shield!
		name = epidemic_events.5006.b

		trigger = {
			has_trait = zealous
		}

		add_piety = medium_piety_gain

		if = {
			limit = {
				exists = cp:councillor_court_chaplain
			}
			reverse_add_opinion = {
				modifier = pleased_opinion
				opinion = 25
				target = cp:councillor_court_chaplain
			}
		}

		stress_impact = {
			base = minor_stress_impact_loss
			calm = miniscule_stress_impact_loss
			content = miniscule_stress_impact_loss
			gregarious = miniscule_stress_impact_loss
			ambitious = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 1
			}
		}
	}

	option = { # Let's give it a go eh?
		name = epidemic_events.5006.c

		random_list = {
			55 = { #You feel a little better
				desc = epidemic_events.5006.c.success
				send_interface_toast = {
					title = epidemic_events.5006.c.success
					left_icon = root
					right_icon = scope:councillor
					
					add_stress = major_stress_loss

					reverse_add_opinion = {
						modifier = pleased_opinion
						opinion = 20
						target = scope:councillor
					}
				}
			}
			45 = { #You come off a little unconvincing
				modifier = { #Fuzzy it up a lil
					add = scope:fuzzy_range
				}
				desc = epidemic_events.5006.c.failure
				send_interface_toast = {
					title = epidemic_events.5006.c.failure
					left_icon = root
					right_icon = scope:councillor

					add_stress = miniscule_stress_gain

					add_character_modifier = {
						modifier = strange_levity
						years = 10
					}

					reverse_add_opinion = {
						modifier = annoyed_opinion
						opinion = -20
						target = scope:councillor
					}
				}
			}
		}

		stress_impact = {
			impatient = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			patient = miniscule_stress_impact_loss
			fickle = miniscule_stress_impact_loss
			compassionate = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 1
			}
		}
	}

	option = { # This is ridiculous
		name = epidemic_events.5006.d

		add_prestige = miniscule_prestige_gain

		reverse_add_opinion = {
			modifier = disappointed_opinion
			opinion = 15
			target = scope:councillor
		}

		stress_impact = {
			impatient = miniscule_stress_impact_loss
			callous = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			patient = minor_stress_impact_gain
			fickle = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = -1
				ai_energy = -1
			}
		}
	}
}

# You have a herbalist at your court and people are accusing them of witchcraft
# by Nick Meredith
epidemic_events.5007 = {
	type = character_event
	title = epidemic_events.5007.t
	desc = epidemic_events.5007.desc
	theme = plague
	override_background = { reference = corridor_day }
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:accuser
		animation = anger
	}
	lower_center_portrait = {
		character = scope:herbalist
	}
	cooldown = { years = 10 }

	trigger = {
		is_available = yes
		#There be a plague in your subrealm
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
				}
			}
		}

		any_courtier_or_guest = {
			is_available_healthy_ai_adult = yes
			has_trait = lifestyle_herbalist
			is_ai = yes
			NOT = {
				has_trait = witch
			}
			save_temporary_scope_as = temp_herbalist
		}

		any_courtier_or_guest = {
			is_available_healthy_ai_adult = yes
			is_ai = yes
			NOT = {
				this = scope:temp_herbalist
			}
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = { 
						count >= 1
					}
				}
			}
			random_county_province = {
				limit = {
					any_province_epidemic = { 
						count >= 1
					}
				}
				random_province_epidemic = {
					save_scope_as = epidemic_scope
				}
			}
		}

		random_courtier_or_guest = {
			limit = {
				is_available_healthy_ai_adult = yes
				has_trait = lifestyle_herbalist
				is_ai = yes
				NOT = {
					has_trait = witch
				}
			}
			save_scope_as = herbalist
		}

		random_courtier_or_guest = {
			limit = {
				is_available_healthy_ai_adult = yes
				is_ai = yes
				NOT = {
					this = scope:herbalist
				}
			}
			save_scope_as = accuser
		}
	}

	option = { # Herbalism is a noble art!
		name = epidemic_events.5007.a

		trigger = {
			has_trait = lifestyle_herbalist
		}

		reverse_add_opinion = {
			modifier = grateful_opinion
			opinion = 40
			target = scope:herbalist
		}

		reverse_add_opinion = {
			modifier = angry_opinion
			opinion = -20
			target = scope:accuser
		}
		add_legitimacy = miniscule_legitimacy_loss

		scope:accuser = {
			progress_towards_rival_effect = {
				REASON = rival_witch_accuser
				CHARACTER = scope:herbalist
				OPINION = default_rival_opinion
			}
		}

		stress_impact = {
			base = minor_stress_impact_loss
			calm = miniscule_stress_impact_loss
			compassionate = miniscule_stress_impact_loss
			wrathful = minor_stress_impact_gain
			sadistic = medium_stress_impact_gain
			callous = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_energy = 0.5
			}
		}
	}

	option = { # You're right! Imprison them!
		name = epidemic_events.5007.b

		scope:herbalist = {
			add_trait = witch
		}

		rightfully_imprison_character_effect = {
			TARGET = scope:herbalist
			IMPRISONER = root
		}

		reverse_add_opinion = {
			modifier = pleased_opinion
			opinion = 20
			target = scope:accuser
		}

		progress_towards_rival_effect = {
			REASON = rival_witch_imprisoned
			CHARACTER = root
			OPINION = 0
		}

		stress_impact = {
			wrathful = miniscule_stress_impact_loss
			callous = miniscule_stress_impact_loss
			sadistic = miniscule_stress_impact_loss
			paranoid = miniscule_stress_impact_loss
			calm = minor_stress_impact_gain
			trusting = medium_stress_impact_gain
			compassionate = medium_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_zeal = 0.5
				ai_compassion = -1
			}
		}
	}

	option = { # Try to talk the crowd out of it
		name = epidemic_events.5007.c

		duel = {
			skill = diplomacy
			value = high_skill_rating
			# They see your point
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.5007.c.success
					left_icon = root
					right_icon = scope:herbalist

					add_stress = minor_stress_loss

					reverse_add_opinion = {
						modifier = pleased_opinion
						opinion = 20
						target = scope:herbalist
					}	
				}
			}
			# You fail to talk them round
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.5007.c.failure
					left_icon = root
					right_icon = scope:herbalist
					add_legitimacy = miniscule_legitimacy_loss

					scope:herbalist = {
						add_trait = witch
					}

					add_stress = minor_stress_gain
				}
			}
		}

		stress_impact = {
			impatient = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			patient = miniscule_stress_impact_loss
			compassionate = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 1
			}
		}
	}

	option = { # Demand they lay off
		name = epidemic_events.5007.d

		trigger = {
			NOT = {
				has_trait = lifestyle_herbalist
			}
		}

		every_courtier = {
			limit = {
				NOR = {
					this = scope:accuser
					this = scope:herbalist
				}
			}
			custom = all_courtiers_and_guests
			add_opinion = {
				target = scope:herbalist
				modifier = suspicious_opinion
				opinion = -10
			}
		}

		progress_towards_rival_effect = {
			REASON = rival_witch_protector
			CHARACTER = scope:accuser
			OPINION = default_rival_opinion
		}

		scope:herbalist = {
			add_character_modifier = {
				modifier = herbalist_suspicions
				years = 10
			}
		}

		reverse_add_opinion = {
			modifier = grateful_opinion
			opinion = 30
			target = scope:herbalist
		}

		stress_impact = {
			stubborn = miniscule_stress_impact_loss
			just = miniscule_stress_impact_loss
			patient = miniscule_stress_impact_loss
			impatient = minor_stress_impact_gain
			fickle = minor_stress_impact_gain
			arbitrary = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 0.5
			}
		}
	}

	option = { # Try and compromise
		name = epidemic_events.5007.e

		every_courtier = {
			limit = {
				NOT = {
					this = scope:accuser
				}
			}
			custom = all_courtiers_and_guests
			add_opinion = {
				target = root
				modifier = pleased_opinion
				opinion = 15
			}
		}

		scope:accuser = {
			progress_towards_rival_effect = {
				REASON = rival_witch_accuser
				CHARACTER = scope:herbalist
				OPINION = default_rival_opinion
			}
			add_opinion = {
				modifier = hate_opinion
				opinion = -15
				target = scope:herbalist
			}
		}

		scope:herbalist = {
			remove_trait = lifestyle_herbalist
		}

		reverse_add_opinion = {
			modifier = grateful_opinion
			opinion = 5
			target = scope:herbalist
		}

		reverse_add_opinion = {
			modifier = pleased_opinion
			opinion = 15
			target = scope:accuser
		}

		stress_impact = {
			diplomat = minor_stress_impact_loss
			stubborn = minor_stress_impact_gain
			just = miniscule_stress_impact_loss
			fickle = miniscule_stress_impact_loss
			arbitrary = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = -0.5
			}
		}
	}
}

# You begin sequestering yourself more often
# by Nick Meredith
epidemic_events.5008 = {
	type = character_event
	title = epidemic_events.5008.t
	desc = epidemic_events.5008.desc
	theme = plague
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = ecstasy
	}
	cooldown = { years = 10 }

	trigger = {
		is_available = yes
		#There be a plague in your subrealm
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
				}
			}
		}
		#And you're a recluse
		# Warcraft - aren't there more reasons that just this???
		OR  = { 
			has_trait = reclusive
			has_trait = craven
			has_trait = paranoid
			has_trait = disfigured
			has_trait = eccentric
			has_trait = stubborn
			has_trait = fickle
			has_trait = hashishiyah
			has_trait = drunkard
		}
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = { 
						count >= 1
					}
				}
			}
			random_county_province = {
				limit = {
					any_province_epidemic = { 
						count >= 1
					}
				}
				random_province_epidemic = {
					save_scope_as = epidemic_scope
				}
			}
		}
	}

	option = { # And nobody is allowed to see me without my permission!
		name = epidemic_events.5008.a

		trigger = {
			has_trait = paranoid
		}

		add_character_modifier = {
			modifier = absent_ruler
			years = 10
		}
		add_legitimacy = miniscule_legitimacy_loss

		stress_impact = {
			base = major_stress_impact_loss
			diligent = medium_stress_impact_gain
			ambitious = minor_stress_impact_gain
			stubborn = miniscule_stress_impact_loss
			content = miniscule_stress_impact_loss
			lazy = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = -1
			}
		}
	}

	option = { # I must be seen by my subjects.
		name = epidemic_events.5008.b

		add_prestige = major_prestige_gain

		add_character_modifier = {
			modifier = present_ruler
			years = 10
		}

		stress_impact = {
			base = major_stress_impact_gain
			diligent = minor_stress_impact_loss
			ambitious = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = 1
			}
		}
	}

	option = { # What a great excuse!
		name = epidemic_events.5008.c

		add_character_modifier = {
			modifier = hiding_from_epidemic
			years = 10
		}
		add_legitimacy = miniscule_legitimacy_loss

		stress_impact = {
			impatient = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			patient = miniscule_stress_impact_loss
			fickle = miniscule_stress_impact_loss
			compassionate = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 0.5
				ai_energy = 1
			}
		}
	}
}

# A merchant tries selling you a herbal sachet
# Customary 'Nick makes an event about good smells' event
# by Nick Meredith
epidemic_events.5009 = {
	type = character_event
	title = epidemic_events.5009.t
	desc = epidemic_events.5009.desc
	theme = plague
	override_background = { reference = market }
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:merchant
		animation = ecstasy
	}
	cooldown = { years = 10 }

	trigger = {
		is_available = yes
		#There be a plague in your subrealm
		any_sub_realm_county = {
			any_county_province = {
				any_province_epidemic = {
					count >= 1
				}
			}
		}
		is_travelling = no
	}

	immediate = {
		random_sub_realm_county = {
			limit = {
				any_county_province = {
					any_province_epidemic = { 
						count >= 1
					}
				}
				is_extreme_longevity_culture = no  # Warcraft
			}
			random_county_province = {
				limit = {
					any_province_epidemic = { 
						count >= 1
					}
				}
				random_province_epidemic = {
					save_scope_as = epidemic_scope
				}
			}
		}

		random_pool_character = {
			province = root.location
			limit = {
				is_available_ai_adult = yes
				has_no_particular_noble_roots_trigger = yes
				is_extreme_longevity_culture = no  # Warcraft
			}
			save_scope_as = merchant
		}
		if = { #As a backup create the character
			limit = {
				NOT = { exists = scope:merchant }
			}
			create_character = {
				template = generic_peasant_character
				location = root.location
				culture = culture:goblin
				faith = faith:cult_of_wealth
				save_scope_as = merchant
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}
			scope:merchant = {
				move_to_pool = yes
			}
		}
	}

	option = { # I'LL TAKE YOUR WHOLE STOCK
		name = epidemic_events.5009.a

		trigger = {
			OR = {
				has_trait = paranoid
				has_trait = generous
				has_trait = profligate
			}
		}

		add_character_modifier = {
			modifier = overly_fragrant
			years = 15
		}

		stress_impact = {
			base = medium_stress_impact_loss
			greedy = major_stress_impact_gain
			trusting = miniscule_stress_impact_loss
			craven = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_rationality = -1
				ai_greed = -1
			}
		}
	}

	option = { # Twenty shekels? You're 'aving a larf!
		name = epidemic_events.5009.b

		duel = {
			skills = { stewardship diplomacy }
			target = scope:merchant
			# They agree
			20 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.5009.b.success
					left_icon = root
					right_icon = scope:merchant

					add_character_modifier = {
						modifier = sachet_protection
						years = 10
					}

					pay_short_term_gold = {
						target = scope:merchant
						gold = minor_gold_value
					}
				}
			}
			# They refuse
			40 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.5009.b.failure
					left_icon = root
					right_icon = scope:merchant

					add_character_modifier = {
						modifier = sachet_protection
						years = 10
					}

					pay_short_term_gold = {
						target = scope:merchant
						gold = medium_gold_value
					}
				}
			}
			# They really refuse
			40 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				send_interface_toast = {
					title = epidemic_events.5009.b.criticalfailure
					left_icon = root
					right_icon = scope:merchant

					reverse_add_opinion = {
						modifier = annoyed_opinion
						opinion = -20
						target = scope:merchant
					}
				}
			}
		}

		stress_impact = {
			greedy = medium_stress_impact_gain
			generous = miniscule_stress_impact_loss
			profligate = miniscule_stress_impact_loss
			diligent = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			fickle = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = 1
				ai_greed = -0.5
			}
		}
	}

	option = { # One please!
		name = epidemic_events.5009.c

		add_character_modifier = {
			modifier = sachet_protection
			years = 10
		}

		pay_short_term_gold = {
			target = scope:merchant
			gold = medium_gold_value
		}

		stress_impact = {
			greedy = major_stress_impact_gain
			generous = miniscule_stress_impact_loss
			profligate = miniscule_stress_impact_loss
			trusting = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = 1
				ai_greed = -0.5
			}
		}
	}

	option = { # Don't buy anything
		name = epidemic_events.5009.d

		reverse_add_opinion = {
			modifier = annoyed_opinion
			opinion = -10
			target = scope:merchant
		}

		stress_impact = {
			greedy = miniscule_stress_impact_loss
			generous = medium_stress_impact_gain
			profligate = medium_stress_impact_gain
			trusting = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_greed = 1
			}
		}
	}
}

# An apocalyptic plague enters your capital
# Only for cool capitals
# by Nick Meredith
epidemic_events.5010 = { # Warcraft - SS Note: this should NOT be used for lore plagues (ie scourge). please make your own event
	type = character_event
	title = epidemic_events.5010.t
	desc = {
		desc = epidemic_events.5010.opening
		#What great capital do you have?
		first_valid = { # Warcraft
			triggered_desc = {
				trigger = {
					capital_barony = title:b_stormwind
				}
				desc = epidemic_events.5010.stormwind
			}
			triggered_desc = {
				trigger = {
					capital_barony = title:b_orgrimmar
				}
				desc = epidemic_events.5010.orgrimmar
			}
			triggered_desc = {
				trigger = {
					capital_barony = title:b_lordaeron
				}
				desc = epidemic_events.5010.lordaeron
			}
			triggered_desc = {
				trigger = {
					capital_barony = title:b_boralus
				}
				desc = epidemic_events.5010.boralus
			}
			triggered_desc = {
				trigger = {
					capital_county = title:c_gilneas
				}
				desc = epidemic_events.5010.gilneas
			}
			triggered_desc = { # Warcraft
				trigger = {
					capital_county = title:c_thunder_bluff
				}
				desc = epidemic_events.5010.thunder_bluff
			}
			triggered_desc = {
				trigger = {
					capital_barony = title:b_ironforge
				}
				desc = epidemic_events.5010.ironforge
			}
			triggered_desc = {
				trigger = {
					capital_barony = title:b_stromgarde
				}
				desc = epidemic_events.5010.stromgarde
			}
			triggered_desc = {
				trigger = {
					capital_county = title:c_dazaralor
				}
				desc = epidemic_events.5010.zuldazar
			}
			# triggered_desc = {
			# 	trigger = {
			# 		capital_barony = title:b_varanasi
			# 	}
			# 	desc = epidemic_events.5010.varanasi
			#}
			#triggered_desc = {
				# trigger = {
				# 	NOR = {
				# 		capital_barony = title:b_cairo
				# 		capital_barony = title:b_toledo
				# 		capital_barony = title:b_praha
				# 		capital_barony = title:b_constantinople
				# 		capital_barony = title:b_paris
				# 		capital_barony = title:b_roma
				# 		capital_barony = title:b_london
				# 		capital_barony = title:b_santiago
				# 		capital_barony = title:b_kanyakubja
				# 		capital_barony = title:b_varanasi
				# 	}
				# }
			desc = epidemic_events.5010.fallback # Warcraft
			#}
		}
	}
	theme = plague
	override_background = { reference = ce1_condemned_village }
	left_portrait = {
		character = root
		animation = stress
	}
	cooldown = { years = 50 }

	trigger = {
		OR = { # Warcraft
			capital_barony = title:b_stormwind
			capital_barony = title:b_orgrimmar
			capital_county = title:c_thunder_bluff
			capital_county = title:c_gilneas
			capital_barony = title:b_lordaeron
			capital_barony = title:b_boralus
			capital_barony = title:b_ironforge
			capital_barony = title:b_stromgarde
			capital_county = title:c_dazaralor
			#capital_barony = title:b_varanasi
		}

		# There be a plague in your capital
		location = {
			any_province_epidemic = {
				count >= 1
				outbreak_intensity = apocalyptic
			}
		}

		is_travelling = no
	}

	immediate = {
		capital_barony = {
			save_scope_as = capital
		}
		capital_barony.county = {
			save_scope_as = capital_region
		}
	}

	option = { # Donate some money
		name = epidemic_events.5010.a

		remove_short_term_gold = medium_gold_value

		scope:capital_region = {
			add_county_modifier = {
				modifier = plague_alms_donations
				years = 10
			}
		}

		stress_impact = {
			greedy = major_stress_impact_gain
			generous = medium_stress_impact_loss
			profligate = medium_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
				ai_greed = -1
			}
		}
	}

	option = { # Be sad
		name = epidemic_events.5010.b
		add_legitimacy = miniscule_legitimacy_loss
		random_list = {
			1 = {
				send_interface_toast = {
					title = epidemic_events.5010.b.win
					left_icon = root

					add_character_modifier = {
						modifier = plague_determined_recover
						years = 15
					}
				}
			}
			1 = {
				send_interface_toast = {
					title = epidemic_events.5010.b.neutral
					left_icon = root

					add_character_modifier = {
						modifier = plague_the_long_road
						years = 15
					}
				}			
			}
			1 = {
				send_interface_toast = {
					title = epidemic_events.5010.b.lose
					left_icon = root

					add_character_modifier = {
						modifier = plague_crippling_sorrow
						years = 15
					}
				}			
			}
		}

		stress_impact = {
			greedy = medium_stress_impact_gain
			generous = miniscule_stress_impact_loss
			profligate = miniscule_stress_impact_loss
			diligent = miniscule_stress_impact_loss
			stubborn = miniscule_stress_impact_loss
			fickle = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = 1
				ai_greed = -0.5
			}
		}
	}
}

# BLACK DEATH EVENTS
# 5900-5999
#⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣴⣶⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⢀⣀⣤⣶⣿⣿⣿⣿⡿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⢰⣾⣿⣿⣿⡿⠟⠛⢉⣠⣤⣶⠿⠛⠀⣀⣀⣤⡤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠙⠛⢉⣁⣤⣶⠿⠟⢋⣁⣤⣴⣾⣿⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠛⢋⣉⣤⣴⣾⣿⠿⠟⠛⢉⡀⢰⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⣠⣴⣿⠿⠿⠛⠋⣁⣤⣴⡾⠀⣾⣿⠀⣿⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠈⠉⠁⢠⣤⣶⣾⣄⠙⢿⣿⣿⠀⠿⠋⣠⣿⣿⣿⣷⣦⣄⡀⠀⠀⠀⠀⠀⠀
#⠀⠀⠀⠀⠘⣿⣿⣿⣿⣷⣄⠉⣿⣷⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⠀⠀⠀⠀
#⠀⠀⠀⠀⢀⠘⠿⣿⣿⣿⣿⠸⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⣿⣿⣧⡀⠀⠀
#⠀⠀⠰⣾⣿⣷⣦⡈⠛⠿⣿⣆⡉⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⡄⠀
#⠀⠀⠀⡈⠻⢿⣿⣿⣷⣦⣌⡙⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠀⣼⣿⣷⣤⡉⠛⠿⣿⣿⣿⣷⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⢠⣿⣿⣿⣿⣿⣷⣶⣤⣈⡙⠛⠿⢿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
#⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
# Warcraft - All should be disabled. 
# The Black Death enters your lands
# by Nick Meredith
epidemic_events.5900 = {
	type = character_event
	window = fullscreen_event
	title = epidemic_events.5900.t
	desc = epidemic_events.5900.desc
	theme = plague
	override_background = { reference = ce1_fullscreen_black_death }
	cooldown = { years = 100 }

	immediate = {
		add_character_flag = black_death_splash
		play_music_cue = black_death
		add_plague_county_modifiers = yes
		if = { #just to be sure the story about preparing for black death ends
			limit = {
				any_owned_story = {
					story_type = story_cycle_black_death
				}
			}
			random_owned_story = {
				limit = {
					story_type = story_cycle_black_death
				}
				end_story = yes
			}
		}
	}

	option = {
		#TODO: Flavourize
		# Warcraft
		# name = {
		# 	text = epidemic_events.5900.christian
		# 	trigger = {
		# 		faith = {
		# 			religion_tag = christianity_religion
		# 		}
		# 	}
		# }
		# name = {
		# 	text = epidemic_events.5900.fallback
		# 	trigger = {
		# 		NOT = {
		# 			faith = {
		# 				religion_tag = christianity_religion
		# 			}
		# 		}
		# 	}
		# }
		name = epidemic_events.5900.fallback
		add_stress = medium_stress_gain
	}

	after = {
		trigger_event = {
			id = health.3001 days = { court_physician_search_min court_physician_search_max }
		}
	}
}

# Demand your physician does an autopsy
# by Nick Meredith
epidemic_events.5901 = {
	type = character_event
	title = epidemic_events.5901.t
	desc = epidemic_events.5901.desc
	theme = plague
	override_background = { reference = physicians_study }
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:physician
		animation = worry
	}
	cooldown = { years = 10 }

	trigger = {
		is_available_healthy_adult = yes
		#You have a court physician
		court_physician_available_trigger = yes
		is_travelling = no
	}

	immediate = {
		save_court_physician_as_effect = { SCOPE_NAME = physician }
	}

	option = { # How about we do it together?
		name = epidemic_events.5901.a

		trigger = {
			OR = {
				has_trait = lifestyle_physician
				has_trait = lifestyle_herbalist
				has_trait = whole_of_body
			}
		}

		random = {
			chance = 75
			add_character_modifier = {
				modifier = plague_insights_gained
				years = 15
			}
			hidden_effect = {
				send_interface_toast = {
					title = epidemic_events.5901.a.tt
					left_icon = root
					right_icon = scope:physician
				}
			}
		}

		random = {
			chance = 10
			send_interface_toast = {
				title = epidemic_events.5901.a.tt.plague
				left_icon = root
				
				add_trait = bubonic_plague
			}
		}

		scope:physician = {
			random = {
				chance = 10

				add_trait = bubonic_plague
			}

			add_opinion = {
				modifier = respect_opinion
				opinion = 25
				target = root
			}
		}

		stress_impact = {
			brave = minor_stress_impact_loss
			craven = medium_stress_impact_gain
			diligent = miniscule_stress_impact_loss
			lazy = medium_stress_impact_gain
			trusting = miniscule_stress_impact_loss
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 1
				ai_energy = 1
			}
		}
	}

	option = { # I demand it
		name = epidemic_events.5901.b

		random = {
			chance = 50
			add_character_modifier = {
				modifier = plague_insights_gained
				years = 15
			}
			hidden_effect = {
				send_interface_toast = {
					title = epidemic_events.5901.a.tt
					left_icon = root
				}
			}
		}

		scope:physician = {
			random = {
				chance = 10
				add_trait = bubonic_plague
			}

			add_opinion = {
				modifier = scared_opinion
				opinion = -15
				target = root
			}
		}

		stress_impact = {
			impatient = miniscule_stress_impact_loss
			patient = minor_stress_impact_gain
			callous = miniscule_stress_impact_loss
			compassionate = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	option = { # All right, all right
		name = epidemic_events.5901.c

		reverse_add_opinion = {
			modifier = grateful_opinion
			opinion = 15
			target = scope:physician
		}

		stress_impact = {
			craven = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = -0.5
			}
		}
	}
}

# Calm hordes of refugees
# by Nick Meredith
epidemic_events.5902 = {
	type = character_event
	title = epidemic_events.5902.t
	desc = epidemic_events.5902.desc
	theme = plague
	override_background = { reference = ep2_travel_bridge }
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:marshal
		animation = marshal
	}
	cooldown = { years = 10 }

	trigger = {
		is_available_healthy_adult = yes

		any_realm_border_county = {
			any_county_province = {
				is_coastal = no #To ensure you don't get landlocked by yourself
			}
		}

		#You have a marshal in your locatiom
		cp:councillor_marshal = {
			exists = yes
			location = root.location
		}
		is_travelling = no
	}

	immediate = {
		location = {
			save_scope_as = province
		}

		cp:councillor_marshal = {
			save_scope_as = marshal
		}

		random_realm_border_county = {
			limit = {
				any_county_province = {
					is_coastal = no #To ensure you don't get landlocked by yourself
				}
			}
			save_scope_as = border_county
			random_county_province = {
				save_scope_as = border_province
			}
		}
	}

	option = { # Kill them! Kill them all!
		name = epidemic_events.5902.a

		trigger = {
			OR = {
				has_trait = callous
				has_trait = sadistic
				has_trait = paranoid
				dread > 50
			}
		}

		scope:border_province = {
			add_province_modifier = {
				modifier = brutal_crackdown
				years = 10
			}
		}

		if = {
			limit = {
				scope:marshal = {
					OR = {
						has_trait = callous
						has_trait = sadistic
					}
				}
			}
			scope:marshal = {
				add_opinion = {
					modifier = pleased_opinion
					opinion = 15
					target = root
				}
			}
		}
		else = {
			scope:marshal = {
				add_opinion = {
					modifier = cruelty_opinion
					opinion = -15
					target = root
				}
			}
		}

		stress_impact = {
			brave = minor_stress_impact_loss
			craven = medium_stress_impact_gain
			callous = miniscule_stress_impact_loss
			sadistic = miniscule_stress_impact_loss
			compassionate = medium_stress_impact_gain
			just = miniscule_stress_impact_loss
			arbitrary = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	option = { # Set up shanty towns
		name = epidemic_events.5902.b

		remove_short_term_gold = medium_gold_value

		scope:border_province = {
			add_province_modifier = {
				modifier = shanty_towns
				years = 10
			}
		}

		stress_impact = {
			just = miniscule_stress_impact_loss
			arbitrary = minor_stress_impact_gain
			compassionate = miniscule_stress_impact_loss
			callous = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 1
			}
		}
	}

	option = { # Turn them all away
		name = epidemic_events.5902.c

		scope:border_province = {
			add_province_modifier = {
				modifier = border_defended
				years = 10
			}
		}

		stress_impact = {
			craven = minor_stress_impact_gain
			paranoid = minor_stress_impact_loss
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = -1
			}
		}
	}

	option = { # Let them in
		name = epidemic_events.5902.d

		scope:border_province = {
			add_province_modifier = {
				modifier = refugees_coddled
				years = 10
			}
		}

		stress_impact = {
			compassionate = minor_stress_impact_loss
			callous = medium_stress_impact_gain
			sadistic = medium_stress_impact_gain			
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_compassion = 1
			}
		}
	}
}

# A family member warns you not to take a ride in the countryside
# by Nick Meredith
epidemic_events.5903 = {
	type = character_event
	title = epidemic_events.5903.t
	desc = epidemic_events.5903.desc
	theme = plague
	override_background = { reference = garden }
	left_portrait = {
		character = root
		animation = jockey_idle
		camera = camera_event_horse_left
	}
	right_portrait = {
		character = scope:family
		animation = worry
	}
	cooldown = { years = 10 }

	trigger = {
		is_available_healthy_adult = yes

		#You have a family member in your location
		any_close_family_member = {
			age > 10
		}

		NOR = {
			age < 15
			has_trait = incapable
		}

		is_travelling = no
	}

	immediate = {
		random_close_family_member = {
			limit = {
				age > 10
			}
			save_scope_as = family
		}
	}

	option = { # You're probably right
		name = epidemic_events.5903.a

		add_character_modifier = {
			modifier = cautious_rider
			years = 10
		}

		reverse_add_opinion = {
			modifier = pleased_opinion
			opinion = 20
			target = scope:family
		}

		stress_impact = {
			brave = medium_stress_impact_gain
			craven = minor_stress_impact_loss
			trusting = minor_stress_impact_gain
			paranoid = minor_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	option = { # Bah, it'll be fine!
		name = epidemic_events.5903.b

		add_character_modifier = {
			modifier = dangerous_rides
			years = 10
		}

		stress_impact = {
			stubborn = miniscule_stress_impact_loss
			fickle = minor_stress_impact_gain
			compassionate = miniscule_stress_impact_loss
			callous = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 1
			}
		}
	}
}

# A wandering preacher is spreading fear
# by Nick Meredith
epidemic_events.5904 = {
	type = character_event
	title = epidemic_events.5904.t
	desc = epidemic_events.5904.desc
	theme = plague
	override_background = { reference = market }
	left_portrait = {
		character = root
		animation = dismissal
	}
	right_portrait = {
		character = scope:doomsday_preacher
		animation = personality_zealous
	}
	cooldown = { years = 10 }

	trigger = {
		is_available_healthy_adult = yes
		NOT = {
			has_trait = incapable
		}
		is_travelling = no
	}

	immediate = {
		location.county = {
			random_county_province = {
				save_scope_as = doomsday_province
			}
		}

		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
				}
				weight = {
					base = 1
					modifier = {
						factor = 2
						OR = {
							has_trait = zealous
							has_trait = eccentric
						}
					}
				}
				save_scope_as = doomsday_preacher
			}
		}
		else = {
			create_character = {
				template = peasant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = 50
				save_scope_as = doomsday_preacher
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}
		}
	}

	option = { # OH GOD YOU'RE RIGHT
		name = epidemic_events.5904.a

		trigger = {
			has_trait = paranoid
		}

		add_character_modifier = {
			modifier = overly_protective
			years = 10
		}

		stress_impact = {
			base = miniscule_stress_impact_loss
			diligent = miniscule_stress_impact_loss
			lazy = medium_stress_impact_gain
			brave = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 1
			}
		}
	}

	option = { # Lock them up for fearmongering
		name = epidemic_events.5904.b

		hard_imprison_character_effect = {
			TARGET = scope:doomsday_preacher
			IMPRISONER = root
		}

		scope:doomsday_province = {
			add_province_modifier = {
				modifier = angry_crowds
				years = 10
			}
		}

		stress_impact = {
			base = miniscule_stress_impact_loss
			just = medium_stress_impact_gain
			arbitrary = minor_stress_impact_loss
			compassionate = medium_stress_impact_gain
			callous = minor_stress_impact_loss
			sadistic = minor_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	option = { # Who are you to say that?
		name = epidemic_events.5904.c

		duel = {
			skill = learning
			target = scope:doomsday_preacher
			# You win the theological debate
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = epidemic_events.5904.c.tt.success
				root = {
					send_interface_toast = {
						title = epidemic_events.5904.c.tt.success
						left_icon = root
						right_icon = scope:doomsday_preacher

						scope:doomsday_province = {
							add_province_modifier = {
								modifier = allayed_fears
								years = 10
							}
						}
					}
				}
			}
			# You lose the debate
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = epidemic_events.5904.c.tt.failure
				root = {
					send_interface_toast = {
						title = epidemic_events.5904.c.tt.failure
						left_icon = root
						right_icon = scope:doomsday_preacher
						add_legitimacy = miniscule_legitimacy_loss
						scope:doomsday_province = {
							add_province_modifier = {
								modifier = mass_panic
								years = 10
							}
						}
					}
				}
			}
		}

		stress_impact = {
			just = miniscule_stress_impact_loss
			arbitrary = minor_stress_impact_gain
			zealous = miniscule_stress_impact_loss
			cynical = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 1
				ai_zeal = 1
			}
		}
	}

	option = { # Bah, nobody will take them seriously
		name = epidemic_events.5904.d
		add_legitimacy = miniscule_legitimacy_loss
		scope:doomsday_province = {
			random = {
				chance = 15
				add_province_modifier = {
					modifier = mass_panic
					years = 10
				}
			}
			hidden_effect = {
				every_neighboring_province = {
					random = {
						chance = 15
						add_province_modifier = {
							modifier = mass_panic
							years = 10
						}
					}
				}
			}
		}

		custom_tooltip = epidemic_events.5904.d.tt

		stress_impact = {
			fickle = miniscule_stress_impact_loss
			stubborn = minor_stress_impact_gain
			lazy = miniscule_stress_impact_loss
			diligent = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 0.5
			}
		}
	}
}

# Rumours about the plague's nature begins to spread
# by Nick Meredith
epidemic_events.5905 = {
	type = character_event
	title = epidemic_events.5905.t
	desc = epidemic_events.5905.desc
	theme = plague
	override_background = { reference = tavern }
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:peasant
		animation = fear
	}
	cooldown = { years = 10 }

	trigger = {
		is_available_healthy_adult = yes

		is_travelling = no
		drinks_alcohol_trigger = yes
	}

	immediate = {
		location.county = {
			random_county_province = {
				save_scope_as = province
			}
		}

		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
				}
				save_scope_as = peasant
			}
		}
		else = {
			create_character = {
				template = peasant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = 50
				save_scope_as = peasant
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}
		}
	}

	option = { # Trust me, I'm a doctor
		name = epidemic_events.5905.a

		trigger = {
			OR = {
				has_trait = lifestyle_physician
				has_trait = lifestyle_herbalist
			}
		}

		scope:province = {
			hidden_effect = {
				every_neighboring_province = {
					random = {
						chance = 50
						add_province_modifier = {
							modifier = rumours_stifled
							years = 10
						}
					}
				}
			}
			add_province_modifier = {
				modifier = rumours_stifled
				years = 10
			}
		}

		custom_tooltip = epidemic_events.5905.a.tt

		stress_impact = {
			trusting = minor_stress_impact_loss
			paranoid = medium_stress_impact_gain
			arrogant = miniscule_stress_impact_loss
			humble = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	option = { # Look, does that sound likely to you?
		name = epidemic_events.5905.b

		duel = {
			skills = { learning diplomacy }
			target = scope:peasant
			# You convince them
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = epidemic_events.5905.b.tt.success
				root = {
					send_interface_toast = {
						title = epidemic_events.5905.b.tt.success
						left_icon = root
						right_icon = scope:peasant

						scope:province = {
							hidden_effect = {
								every_neighboring_province = {
									random = {
										chance = 50
										add_province_modifier = {
											modifier = rumours_stifled
											years = 10
										}
									}
								}
							}
							add_province_modifier = {
								modifier = rumours_stifled
								years = 10
							}
						}

						custom_tooltip = epidemic_events.5905.a.tt
					}
				}
			}
			# They are unconvinced
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = epidemic_events.5905.b.tt.failure
				root = {
					send_interface_toast = {
						title = epidemic_events.5905.b.tt.failure
						left_icon = root
						right_icon = scope:peasant
						add_legitimacy = miniscule_legitimacy_loss
						scope:province = {
							hidden_effect = {
								every_neighboring_province = {
									random = {
										chance = 50
										add_province_modifier = {
											modifier = rumours_proliferated
											years = 10
										}
									}
								}
							}
							add_province_modifier = {
								modifier = rumours_proliferated
								years = 10
							}
						}

						custom_tooltip = epidemic_events.5905.a.tt
					}
				}
			}
		}

		stress_impact = {
			calm = miniscule_stress_impact_loss
			wrathful = minor_stress_impact_gain
			gregarious = miniscule_stress_impact_loss
			shy = medium_stress_impact_gain
			diligent = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 0.5
			}
		}
	}

	option = { # Confronting them will only lead to more panic
		name = epidemic_events.5905.c

		random = {
			chance = 50
			add_legitimacy = miniscule_legitimacy_loss
			scope:province = {
				add_province_modifier = {
					modifier = uncaring_ruler
					years = 15
				}
			}
		}

		stress_impact = {
			fickle = miniscule_stress_impact_loss
			stubborn = minor_stress_impact_gain
			lazy = miniscule_stress_impact_loss
			diligent = medium_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = -1
			}
		}
	}
}

# A roving band of flagellants turn up
# by Nick Meredith
epidemic_events.5906 = {
	type = character_event
	title = epidemic_events.5906.t
	desc = epidemic_events.5906.desc
	theme = plague
	override_background = { reference = council_chamber }
	left_portrait = {
		character = root
		animation = stress
	}
	right_portrait = {
		character = scope:flagellant
		animation = paranoia
	}
	lower_center_portrait = scope:marshal
	cooldown = { years = 10 }

	trigger = {
		is_available_adult = yes
		is_travelling = no
		faith = {
			like_christianity_religion_trigger = yes
		}
		exists = cp:councillor_marshal
	}

	immediate = {
		location.county = {
			random_county_province = {
				save_scope_as = doomsday_province
			}
		}

		cp:councillor_marshal = {
			save_scope_as = marshal
		}

		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
					has_trait = flagellant
					is_imprisoned = no
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
					has_trait = flagellant
					is_imprisoned = no
				}
				save_scope_as = flagellant
			}
		}
		else = {
			create_character = {
				template = peasant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = 50
				trait = flagellant
				save_scope_as = flagellant
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}
		}

		save_scope_as = root_scope
	}

	option = { # You're tearing the faith apart, you maniacs!
		name = epidemic_events.5906.a

		trigger = {
			has_trait = zealous
		}

		duel = {
			skill = learning
			target = scope:flagellant
			# You convince them
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				desc = epidemic_events.5906.a.tt.success
				send_interface_toast = {
					title = epidemic_events.5906.a.tt.success
					left_icon = root
					right_icon = scope:flagellant

					add_character_modifier = {
						modifier = flagellants_acquiesce
						years = 10
					}
				}
			}
			# They are unconvinced
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				desc = epidemic_events.5906.a.tt.failure
				send_interface_toast = {
					title = epidemic_events.5906.a.tt.failure
					left_icon = root
					right_icon = scope:flagellant
					add_legitimacy = miniscule_legitimacy_loss
					scope:doomsday_province = {
						add_province_modifier = {
							modifier = unrestrained_flagellants
							years = 10
						}
					}
				}
			}
		}

		stress_impact = {
			base = miniscule_stress_impact_loss
			ambitious = minor_stress_impact_loss
			content = medium_stress_impact_gain
			diligent = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_zeal = 1
			}
		}
	}

	option = { # You're right, honestly.
		name = epidemic_events.5906.b

		trigger = {
			OR = {
				has_trait = paranoid
				has_trait = fickle
			}
		}

		add_trait = flagellant

		stress_impact = {
			base = major_stress_impact_loss
			craven = miniscule_stress_impact_loss
			brave = minor_stress_impact_gain
			cynical = miniscule_stress_impact_loss
			zealous = medium_stress_impact_gain
		}

		ai_chance = {
			base = 0 # Don't do this unless you're already flagellant
			modifier = {
				add = 50
				has_trait = flagellant
			}
		}
	}


	option = { # Lock 'em up!
		name = epidemic_events.5906.c

		hard_imprison_character_effect = {
			TARGET = scope:flagellant
			IMPRISONER = root
		}

		random = {
			chance = 50
			scope:doomsday_province = {
				add_province_modifier = {
					modifier = pacified_flagellants
					years = 10
				}
				hidden_effect = {
					every_neighboring_province = {
						random = {
							chance = 25
							add_province_modifier = {
								modifier = pacified_flagellants
								years = 10
							}
						}
					}
				}
			}
		}

		custom_tooltip = epidemic_events.5904.d.tt

		stress_impact = {
			calm = minor_stress_impact_gain
			wrathful = miniscule_stress_impact_loss
			diligent = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 0.5
			}
		}
	}

	option = { # Let them flagellate
		name = epidemic_events.5906.d

		random = {
			chance = 50
			faith = {
				change_fervor = {
					value = -5
					desc = fervor_loss_flagellants
				}
			}
			scope:doomsday_province = {
				add_province_modifier = {
					modifier = eager_populace
					years = 10
				}
			}
		}

		every_vassal_or_below = {
			limit = { has_vassal_stance = zealot }
			custom = every_zealot_vassal
			add_opinion = {
				modifier = disrespect_opinion
				target = root
				opinion = -20
			}
		}

		stress_impact = {
			fickle = minor_stress_impact_loss
			stubborn = minor_stress_impact_gain
			lazy = medium_stress_impact_loss
			diligent = medium_stress_impact_gain
			zealous = medium_stress_impact_gain
			cynical = medium_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = -1
			}
		}
	}
}

# You develop a slight cough
# by Nick Meredith
epidemic_events.5907 = {
	type = character_event
	title = epidemic_events.5907.t
	desc = epidemic_events.5907.desc
	theme = plague
	override_background = { reference = bedchamber }
	left_portrait = {
		character = root
		animation = paranoia
	}
	lower_center_portrait = scope:physician
	cooldown = { years = 10 }

	trigger = {
		is_available_healthy_adult = yes
		is_travelling = no
		court_physician_available_trigger = yes
		NOT = {has_trait_with_flag = can_not_get_sick} # Warcraft
	}

	immediate = {
		save_court_physician_as_effect = { SCOPE_NAME = physician }
	}

	option = { # I'll consult with my physician for some special treatments, just in case
		name = epidemic_events.5907.a

		remove_short_term_gold = minor_gold_value

		add_character_modifier = {
			modifier = regular_checkups
			years = 5
		}

		stress_impact = {
			base = miniscule_stress_impact_loss
			paranoid = major_stress_impact_loss #Throw 'em a bone!
			diligent = miniscule_stress_impact_loss
			lazy = minor_stress_impact_gain
			greedy = medium_stress_impact_gain
			profligate = minor_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 1
				ai_greed = -1
			}
		}
	}

	option = { # I'm sure it's nothing
		name = epidemic_events.5907.b

		random_list = {
			69 = { #You feel a little better
				desc = epidemic_events.5907.b.success
				send_interface_toast = {
					title = epidemic_events.5907.b.success
					left_icon = root
					
					add_stress = minor_stress_loss
				}
			}
			29 = { #You have a small sniffle
				desc = epidemic_events.5907.b.failure
				send_interface_toast = {
					title = epidemic_events.5907.b.failure
					left_icon = root

					add_character_modifier = {
						modifier = under_the_weather
						years = 5
					}
				}
			}
			2 = { #You have something nastier...
				desc = epidemic_events.5907.b.criticalfailure
				send_interface_toast = {
					title = epidemic_events.5907.b.criticalfailure
					left_icon = root

					add_stress = medium_stress_gain

					add_trait = ill
				}
			}
		}

		stress_impact = {
			brave = miniscule_stress_impact_loss
			craven = minor_stress_impact_gain
			trusting = miniscule_stress_impact_loss
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = -0.5
			}
		}
	}
}

# Gravediggers demand more pay
# by Nick Meredith
epidemic_events.5908 = {
	type = character_event
	title = epidemic_events.5908.t
	desc = epidemic_events.5908.desc
	theme = plague
	override_background = { reference = throne_room }
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:gravedigger
		animation = beg
	}
	cooldown = { years = 10 }

	trigger = {
		is_available_adult = yes
		is_travelling = no
	}

	immediate = {
		location.county = {
			random_county_province = {
				save_scope_as = province
			}
		}

		if = {
			limit = {
				any_pool_character = {
					province = root.location
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
				}
			}
			random_pool_character = {
				province = root.location
				limit = {
					is_adult = yes
					has_no_particular_noble_roots_trigger = yes
				}
				save_scope_as = gravedigger
			}
		}
		else = {
			create_character = {
				template = peasant_character
				dynasty = none
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				gender_female_chance = 50
				save_scope_as = gravedigger
				# Warcraft 
				after_creation = {
					trigger_race_giving_no_gene_effect = yes
				}
			}
		}
	}

	option = { # You'll be the next in the grave if you cross me laddie
		name = epidemic_events.5908.a

		trigger = {
			OR = {
				has_trait = callous
				has_trait = sadistic
				dread > 50
			}
		}

		scope:province = {
			add_province_modifier = {
				modifier = gravediggers_threatened
				years = 10
			}
		}

		reverse_add_opinion = {
			modifier = cruelty_opinion
			opinion = -25
			target = scope:gravedigger
		}

		stress_impact = {
			base = miniscule_stress_impact_loss
			paranoid = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_greed = 1
			}
		}
	}

	option = { # You'll be compensated fairly
		name = epidemic_events.5908.b

		remove_short_term_gold = medium_gold_value

		scope:province = {
			add_province_modifier = {
				modifier = gravediggers_compensated
				years = 15
			}
		}

		stress_impact = {
			generous = miniscule_stress_impact_loss
			greedy = medium_stress_impact_gain
			paranoid = miniscule_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = 0.5
				ai_greed = -1
			}
		}
	}

	option = { # Get out of my throneroom
		name = epidemic_events.5908.c

		scope:province = {
			add_province_modifier = {
				modifier = gravediggers_replaced
				years = 10
			}
		}

		stress_impact = {
			generous = medium_stress_impact_gain
			greedy = miniscule_stress_impact_loss
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_energy = -1
			}
		}
	}
}

epidemic_events.5998 = { #Black death story cycle pacing control
	hidden = yes

	immediate = {
		if = {
			limit = {
				any_neighboring_top_liege_realm_owner = {
					has_character_flag = black_death_splash
				}
			}
			if = {
				limit = {
					has_character_flag = black_death_closer
				}
				remove_character_flag = black_death_closer
			}
			add_character_flag = black_death_nearby
		}
		else_if = {
			limit = {
				any_neighboring_top_liege_realm_owner = {
					any_neighboring_top_liege_realm_owner = {
						has_character_flag = black_death_splash
					}
				}
			}	
			add_character_flag = black_death_closer
		}
		if = {
			limit = {
				OR = {
					has_character_flag = black_death_closer
					has_character_flag = black_death_nearby
				}
				NOT = {
					has_character_flag = black_death_info_event
				}
			}
			trigger_event = {
				id = epidemic_events.5999
				days = { 2 4 }
			}
		}
	}
}

# The Black Death is closing in
# Used to trigger Black Death Story cycle
# by Nick Meredith
epidemic_events.5999 = {
	type = character_event
	title = epidemic_events.5999.t
	desc = epidemic_events.5999.desc
	theme = plague
	override_background = { reference = study }
	left_portrait = {
		character = root
		animation = worry
	}
	cooldown = { years = 100 }

	trigger = {
		always = no # Warcraft - we dont want this for now
		# is_ai = no
		# has_dlc_feature = legends_of_the_dead
		# is_available_adult = yes
		# is_travelling = no
		# NOR = {
		# 	any_sub_realm_county = { #Black Plague is already here, no need to talk about it closing in
		# 		any_county_province = {
		# 			any_province_epidemic = {
		# 				this = global_var:black_death
		# 			}
		# 		}
		# 	}
		# }
	}

	on_trigger_fail = {
		trigger_event = {
			id = epidemic_events.5999
			days = { 7 14 }
		}
	}

	immediate = {		
		play_music_cue = mx_cue_death
		add_character_flag = black_death_info_event
		if = {
			limit = {
				NOR = {
					has_character_flag = black_death_closer
					has_character_flag = black_death_nearby
				}
			}
			add_character_flag = black_death_closer
		}
	}

	option = { # Ha, let them die!
		name = epidemic_events.5999.a

		trigger = {
			has_trait = callous
		}

		flavor = epidemic_events.5999.a.tt

		stress_impact = {
			base = medium_stress_impact_loss
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = -1
			}
		}
	}

	option = { # The end times are upon us!
		name = epidemic_events.5999.b

		trigger = {
			has_trait = paranoid
		}

		flavor = epidemic_events.5999.b.tt

		add_character_modifier = {
			modifier = plague_tales
			years = 15
		}

		stress_impact = {
			base = minor_stress_impact_gain
		}

		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_rationality = 0.5
				ai_greed = -1
			}
		}
	}

	option = { # Oh no
		# Warcraft - TODO: Reflavorize?
		# name = {
		# 	trigger = {
		# 		faith = {
		# 			religion_tag = christianity_religion
		# 		}
		# 	}

		# 	text = epidemic_events.5999.c.christian
		# }
		name = {
			# trigger = {
			# 	NOT = {
			# 		faith = {
			# 			religion_tag = christianity_religion
			# 		}
			# 	}
			# }
			text = epidemic_events.5999.c.notchristian
		}

		stress_impact = {
			base = miniscule_stress_impact_gain
			craven = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				ai_energy = -0.5
			}
		}
	}
}
