# TODO: Give nickname

reset_genocide_progress_effect = {
    if = {
        limit = {
            has_variable = purge_population_current_progress
        }
        set_variable = { name = purge_population_current_progress value = 0 }
    }
}

# Remove ongoing modifiers when title changes hands: on_title_gain, on_county_occupied
remove_genocide_modifiers = {
    reset_genocide_progress_effect = yes
    if = { 
        limit = { 
            has_county_modifier = ongoing_corruption_modifier
        }

        remove_county_modifier = ongoing_corruption_modifier
    }
    if = {
        limit = {
            has_county_modifier = ongoing_cleansing_modifier
        }

        remove_county_modifier = ongoing_cleansing_modifier
    }
    if = {
        limit = {
            has_county_modifier = ongoing_genocide_modifier
        }

        remove_county_modifier = ongoing_genocide_modifier
    }
}

add_corruption_modifier = {
    remove_corruption_modifiers = yes
    set_variable = {
        name = corruption_type
        value = flag:$MOD$
    }
    add_county_modifier = $MOD$
    remove_variable = corruption_type
}

remove_corruption_modifiers = {
    if = {
        limit = {
            has_county_modifier = county_corruption_light_modifier
        }

        remove_county_modifier = county_corruption_light_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_void_modifier
        }

        remove_county_modifier = county_corruption_void_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_arcane_modifier
        }

        remove_county_modifier = county_corruption_arcane_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_fel_modifier
        }

        remove_county_modifier = county_corruption_fel_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_life_modifier
        }

        remove_county_modifier = county_corruption_life_modifier
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_death_modifier
        }

        remove_county_modifier = county_corruption_death_modifier
    }
}

refresh_corruption_modifiers = { # Modifier scale only works when modifier is added, so we use this to remove modifier and re-add it
    if = {
        limit = {
            has_county_modifier = county_corruption_light_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_light_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_void_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_void_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_arcane_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_arcane_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_fel_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_fel_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_life_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_life_modifier }
    }
    if = {
        limit = {
            has_county_modifier = county_corruption_death_modifier
        }

        add_corruption_modifier = { MOD = county_corruption_death_modifier }
    }
}

refresh_corruption_modifiers_all_counties = {
    every_held_title = {
        limit = {
            tier = tier_county
        }

        refresh_corruption_modifiers = yes
    }
}

remove_genocide_variables = {
    if = {
        limit = {
            has_variable = culture_genocided
            OR = {
                NOT = {
                    culture = holder.culture
                }
                always = $REMOVE$
            }
        }

        remove_variable = culture_genocided
    }

    if = {
        limit = {
            has_variable = faith_genocided
            OR = {
                NOT = {
                    faith = holder.faith
                }
                always = $REMOVE$
            }
        }

        remove_variable = faith_genocided
    }
}

corrupt_county_effect = {
    scope:county ?= {
        if = {
            limit = {
                OR = {
                    $ON_START$ = yes
                    AND = {
                        has_variable = purge_population_current_progress
                        var:purge_population_current_progress >= marshal_purge_population_threshold
                    }
                    has_variable = finished_genocide
                }
            }

            remove_genocide_modifiers = yes

            save_temporary_scope_value_as = {
                name = take_county
                value = yes
            }

            if = {
                limit = {
                    $ON_START$ = yes
                }

                save_temporary_scope_value_as = {
                    name = take_county
                    value = no
                }
            }

            if = {
                limit = {
                    trigger_if = {
                        limit = {
                            $ON_START$ = yes
                        }
                        scope:county = {
                            can_corrupt_at_game_start_specific_trigger = { BEING = being_light MAGIC = light }
                        }
                    }
                    trigger_else = {
                        scope:councillor_liege = {
                            can_corrupt_specific_trigger = { BEING = being_light MAGIC = light }
                        }
                        can_corrupt_this_province_valid_trigger = { MOD = county_corruption_light_modifier }
                        can_corrupt_this_province_liege_trigger = { BEING = being_light MAGIC = light }
                    }
                }

                add_corruption_modifier = { MOD = county_corruption_light_modifier }
            }
            else_if = {
                limit = {
                    trigger_if = {
                        limit = {
                            $ON_START$ = yes
                        }
                        scope:county = {
                            can_corrupt_at_game_start_specific_trigger = { BEING = being_void MAGIC = shadow }
                        }
                    }
                    trigger_else = {
                        scope:councillor_liege = {
                            can_corrupt_specific_trigger = { BEING = being_void MAGIC = shadow }
                        }
                        can_corrupt_this_province_valid_trigger = { MOD = county_corruption_void_modifier }
                        can_corrupt_this_province_liege_trigger = { BEING = being_void MAGIC = shadow }
                    }
                }

                add_corruption_modifier = { MOD = county_corruption_void_modifier }
            }
            else_if = {
                limit = {
                    trigger_if = {
                        limit = {
                            $ON_START$ = yes
                        }
                        scope:county = {
                            can_corrupt_at_game_start_specific_trigger = { BEING = being_order MAGIC = order }
                        }
                    }
                    trigger_else = {
                        scope:councillor_liege = {
                            can_corrupt_specific_trigger = { BEING = being_order MAGIC = order }
                        }
                        can_corrupt_this_province_valid_trigger = { MOD = county_corruption_arcane_modifier }
                        can_corrupt_this_province_liege_trigger = { BEING = being_order MAGIC = order }
                    }
                }

                add_corruption_modifier = { MOD = county_corruption_arcane_modifier }
            }
            else_if = {
                limit = {
                    trigger_if = {
                        limit = {
                            $ON_START$ = yes
                        }
                        scope:county = {
                            can_corrupt_at_game_start_specific_trigger = { BEING = being_demon MAGIC = disorder }
                        }
                    }
                    trigger_else = {
                        scope:councillor_liege = {
                            can_corrupt_specific_trigger = { BEING = being_demon MAGIC = disorder }
                        }
                        can_corrupt_this_province_valid_trigger = { MOD = county_corruption_fel_modifier }
                        can_corrupt_this_province_liege_trigger = { BEING = being_demon MAGIC = disorder }
                    }
                }

                add_corruption_modifier = { MOD = county_corruption_fel_modifier }
            }
            else_if = {
                limit = {
                    trigger_if = {
                        limit = {
                            $ON_START$ = yes
                        }
                        scope:county = {
                            can_corrupt_at_game_start_specific_trigger = { BEING = being_life MAGIC = life }
                        }
                    }
                    trigger_else = {
                        scope:councillor_liege = {
                            can_corrupt_specific_trigger = { BEING = being_life MAGIC = life }
                        }
                        can_corrupt_this_province_valid_trigger = { MOD = county_corruption_life_modifier }
                        can_corrupt_this_province_liege_trigger = { BEING = being_life MAGIC = life }
                    }
                }

                add_corruption_modifier = { MOD = county_corruption_life_modifier }
            }
            else_if = {
                limit = {
                    trigger_if = {
                        limit = {
                            $ON_START$ = yes
                        }
                        scope:county = {
                            can_corrupt_at_game_start_specific_trigger = { BEING = being_undead MAGIC = death }
                        }
                    }
                    trigger_else = {
                        scope:councillor_liege = {
                            can_corrupt_specific_trigger = { BEING = being_undead MAGIC = death }
                        }
                        can_corrupt_this_province_valid_trigger = { MOD = county_corruption_death_modifier }
                        can_corrupt_this_province_liege_trigger = { BEING = being_undead MAGIC = death }
                    }
                }

                add_corruption_modifier = { MOD = county_corruption_death_modifier }

                save_temporary_scope_value_as = {
                    name = take_county
                    value = no
                }

                if = {
                    limit = {
                        $ON_START$ = no
                        NOT = {
                            holder = scope:councillor_liege
                        }
                    }
                    holder = {
                        raise_undead_by_basic_effect = { MASTER = scope:councillor_liege FROSTMOURNE = no }
                    }
                }
            }

            if = {
                limit = {
                    $ON_START$ = no
                }

                genocide_common_effect = {
                    OPINION = yes
                    MULT = 3
                    MOD = minority_disapproves_of_genocide_population_opinion
                    TAKE_TITLE = scope:take_county
                }

                set_county_culture = scope:councillor_liege.culture
                set_county_faith = scope:councillor_liege.faith
            }

            if = {
                limit = {
                    has_variable = finished_genocide
                }
                remove_variable = finished_genocide
            }

            scope:councillor_liege = {
                add_character_flag = {
                    flag = no_ai_genocide
                    years = 1
                }
            }
        }
    }
}

cleanse_county_effect = {
    scope:county ?= {
        if = { 
            limit = {
                OR = {
                    AND = {
                        has_variable = purge_population_current_progress
                        var:purge_population_current_progress >= marshal_purge_population_threshold
                    }
                    has_variable = finished_genocide
                }
            }

            remove_genocide_modifiers = yes

            genocide_culture_effect = { MULT = 2 MOD = genocided_my_culture_opinion }
            genocide_faith_effect = { MULT = 2 MOD = genocided_my_faith_opinion }
            genocide_common_effect = {
                OPINION = no
                MULT = 3
                MOD = minority_disapproves_of_genocide_population_opinion
                TAKE_TITLE = yes
            }
            remove_corruption_modifiers = yes

            add_county_modifier = {
                modifier = county_purged_modifier_3
                days = 1201
            }

            trigger_event = { 
                on_action = on_reduce_purge_modifier_on_action
                days = 1200
            }

            # TODO: Should destroy random building, not sure if possible in CK3

            if = {
                limit = {
                    has_variable = finished_genocide
                }
                remove_variable = finished_genocide
            }

            scope:councillor_liege = {
                add_character_flag = {
                    flag = no_ai_genocide
                    years = 1
                }
            }
        }
    }
}

purge_population_effect = {
    scope:county ?= {
        if = {
            limit = {
                OR = {
                    AND = {
                        has_variable = purge_population_current_progress
                        var:purge_population_current_progress >= marshal_purge_population_threshold
                    }
                    has_variable = finished_genocide
                }
            }

            remove_genocide_modifiers = yes

            genocide_culture_effect = { MULT = 2 MOD = genocided_my_culture_opinion }
            genocide_faith_effect = { MULT = 2 MOD = genocided_my_faith_opinion }
            genocide_common_effect = {
                OPINION = yes
                MULT = 2
                MOD = minority_disapproves_of_genocide_population_opinion
                TAKE_TITLE = no
            }

            add_county_modifier = {
                modifier = county_purged_modifier_3
                days = 1201
            }

            trigger_event = {
                on_action = on_reduce_purge_modifier_on_action
                days = 1200
            }

            # TODO: Should destroy random building, not sure if possible in CK3

            if = {
                limit = {
                    has_variable = finished_genocide
                }
                remove_variable = finished_genocide
            }

            scope:councillor_liege = {
                add_character_flag = {
                    flag = no_ai_genocide
                    years = 20
                }
            }
        }
    }
}

genocide_culture_effect = { 
    if = { 
        limit = { 
            allow_genocide_this_province_culture_trigger = { CHARACTER = scope:councillor_liege }
        }

        culture = {
            save_scope_as = old_culture
            change_cultural_acceptance = { 
                target = scope:councillor_liege.culture
                value = { 
                    value = -30
                    multiply = $MULT$
                }
                desc = cultural_acceptance_loss_purge_pupulation
            }
            custom_tooltip = {
                text = $MOD$_desc
                every_ruler = {
                    limit = {
                        NOT = {
                            target_is_liege_or_above = scope:councillor_liege
                        }
                        culture = scope:old_culture
                        NOT = {
                            this = scope:county.holder
                        }
                    }
                    add_opinion = {
                        target = scope:councillor_liege
                        modifier = $MOD$
                    }
                }
            }
        }

        set_variable = { 
            name = culture_genocided
            value = scope:old_culture
        }


        set_county_culture = scope:councillor_liege.culture
    }
}

genocide_faith_effect = { 
    if = { 
        limit = { 
            allow_genocide_this_province_religion_trigger = { CHARACTER = scope:councillor_liege }
        }

        faith = { 
            save_scope_as = old_faith

            change_fervor = {
                value = {
                    value = 5
                    multiply = $MULT$
                }
                desc = genocided_faith_fervor
            }

            custom_tooltip = {
                text = $MOD$_desc
                every_faith_ruler = {
                    limit = {
                        NOT = {
                            target_is_liege_or_above = scope:councillor_liege
                        }
                        NOT = {
                            this = scope:county.holder
                        }
                    }
                    add_opinion = {
                        target = scope:councillor_liege
                        modifier = $MOD$
                    }
                }
            }
        }

        set_variable = {
            name = faith_genocided
            value = scope:old_faith
        }

        if = { # Remove false conversion
            limit = {
                has_county_modifier = false_convert_modifier
            }

            remove_county_modifier = false_convert_modifier
        }

        if = { # Remove false conversion
            limit = {
                has_variable = false_convert
            }

            remove_variable = false_convert
        }

        set_county_faith = scope:councillor_liege.faith
    }
}

genocide_common_effect = {
    scope:councillor_liege = {
        if = {
            limit = {
                $OPINION$ = yes
                any_vassal = {
                    has_vassal_stance = minority
                }
            }
            custom_tooltip = $MOD$_desc
            hidden_effect = {
                every_vassal = {
                    limit = {
                        has_vassal_stance = minority
                        NOT = {
                            this = scope:county.holder
                        }
                    }
                    add_opinion = {
                        target = scope:councillor_liege
                        modifier = $MOD$
                    }
                }
            }
        }

        if = {
            limit = { government_has_flag = government_dark_frenzy_from_conversions }
            change_dark_frenzy_effect = { VALUE = dark_frenzy_from_convert_county }
        }
    }

    change_county_control = {
        value = -30
        multiply = $MULT$
    }
    change_development_level = {
        value = -10
        multiply = $MULT$
    }

    holder = {
        save_temporary_scope_as = old_holder

        if = {
            limit = {
                NOT = {
                    this = scope:councillor_liege
                }
            }

            add_opinion = {
                target = scope:councillor_liege
                modifier = ruler_disapproves_of_genocide_population_opinion
            }
        }
    }

    if = { # Take the title you just genocided
        limit = {
            $TAKE_TITLE$ = yes
            NOT = {
                holder = scope:councillor_liege
            }
            NAND = {
                holder.culture = scope:councillor_liege.culture
                holder.faith = scope:councillor_liege.faith
            }
        }

        create_title_and_vassal_change = {
            type = usurped
            add_claim_on_loss = yes
            save_scope_as = change
        }

        change_title_holder = {
            holder = scope:councillor_liege
            change = scope:change
            take_baronies = yes
        }

        resolve_title_and_vassal_change = scope:change

        scope:old_holder = { # If this was their only title they're included in the genocide
            if = {
                limit = {
                    is_ruler = no
                }

                override_death_killer_effect = {
                    death_reason = death_execution
                    killer = scope:councillor_liege
                }
            }
        }
    }
}

genocide_spawn_champion_effect = {
    create_character = {
        location = scope:county.title_province
        culture = $CULTURE$
        faith = $FAITH$
        dynasty = none
        random_traits = no
        random_traits_list = {
            count = 1
            education_martial_prowess_2 = {}
            education_martial_prowess_3 = {}
            education_martial_prowess_4 = {}
        }
        gender_female_chance = {
            if = {
                limit = { $FAITH$ = { has_doctrine = doctrine_gender_male_dominated } }
                add = 0
            }
            else_if = {
                limit = { $FAITH$ = { has_doctrine = doctrine_gender_female_dominated } }
                add = 100
            }
            else = {
                add = 50
            }
        }
        martial = { 8 12 }
        prowess = {
            min_template_high_skill
            max_template_high_skill
        }
        save_scope_as = champion
        after_creation = {
            if = {
                limit = {
                    $GOOD$ = yes
                }
                random_list = {
                    1 = {
                        add_trait = brave
                    }
                    1 = {
                        add_trait = just
                    }
                    1 = {
                        add_trait = gallant
                    }
                }
                random_list = {
                    1 = {
                        add_trait = lustful
                    }
                    1 = {
                        add_trait = chaste
                    }
                    1 = {
                        add_trait = wrathful
                    }
                    1 = {
                        add_trait = arrogant
                    }
                    1 = {
                        add_trait = impatient
                    }
                    1 = {
                        add_trait = deceitful
                    }
                    1 = {
                        add_trait = ambitious
                    }
                    1 = {
                        add_trait = stubborn
                    }
                    1 = {
                        add_trait = fickle
                    }
                    1 = {
                        add_trait = beauty_good_1
                    }
                }
            }
            else = {

                random_list = {
                    1 = {
                        add_trait = wrathful
                    }
                    1 = {
                        add_trait = arbitrary
                    }
                    1 = {
                        add_trait = arrogant
                    }
                }
                random_list = {
                    1 = {
                        add_trait = lustful
                    }
                    1 = {
                        add_trait = impatient
                    }
                    1 = {
                        add_trait = paranoid
                    }
                    1 = {
                        add_trait = arrogant
                    }
                    1 = {
                        add_trait = impatient
                    }
                    1 = {
                        add_trait = deceitful
                    }
                    1 = {
                        add_trait = sadistic
                    }
                    1 = {
                        add_trait = stubborn
                    }
                    1 = {
                        add_trait = fickle
                    }
                    1 = {
                        add_trait = beauty_bad_1
                    }
                }
            }
            # Warcraft
            trigger_race_giving_no_gene_effect = yes
        }
    }
}

genocide_add_champion_being_trait_effect = {
    scope:county = {
        switch = {
            trigger = has_county_modifier

            county_corruption_light_modifier = { scope:champion = { add_trait = being_light } }
            county_corruption_void_modifier = { scope:champion = { add_trait = being_void } }
            county_corruption_arcane_modifier = { scope:champion = { add_trait = being_order } }
            county_corruption_fel_modifier = { scope:champion = { add_trait = being_demon } }
            county_corruption_life_modifier = { scope:champion = { add_trait = being_life } }
            county_corruption_death_modifier = { scope:champion = { add_trait = being_undead } }
        }
    }
}