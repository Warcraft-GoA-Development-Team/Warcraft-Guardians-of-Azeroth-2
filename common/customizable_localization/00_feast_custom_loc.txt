exotic_fowl_type = {
	type = character

	text = {
		localization_key = fowl_dinner_peacock
		trigger = {
			# Warcraft
			age_in_relation_to_humans_more_than_trigger = { age = 14 }
		}
	}
	
	text = {
		localization_key = fowl_dinner_child
		trigger = {
			# Warcraft
			age_in_relation_to_humans_less_than_trigger = { age = 15 }
		}
	}
}


stew_flood_covered_adjective = {
	type = character

	random_valid = yes

	text = {
		localization_key = stew_flood_covered_adjective_wrathful
		trigger = {
			has_trait = wrathful
		}
	}

	text = {
		localization_key = stew_flood_covered_adjective_proud
		trigger = {
			has_trait = arrogant
		}
	}


	text = {
		localization_key = stew_flood_covered_adjective_beautiful
		trigger = {
			has_trait_beauty_good_trigger = yes
		}
	}

	text = {
		localization_key = stew_flood_fallback_adjective
		fallback = yes
	}
}

#Hooks up with determine_artifact_damage_type_effect to determine how the court artifact was defaced
DamageArtifactAction = {
	type = artifact
	random_valid = yes

	text = {
		trigger = { exists = var:artifact_burned }
		localization_key = damage_artifact_fire
	}
	text = {
		trigger = { exists = var:artifact_knocked_over }
		localization_key = damage_artifact_knocked_over
	}
	text = {
		trigger = { exists = var:artifact_knocked_over }
		localization_key = damage_artifact_toppled
	}
	text = {
		trigger = { exists = var:artifact_smeared_food }
		localization_key = damage_artifact_smeared_food
	}
	text = {
		trigger = { exists = var:artifact_spilled_drink }
		localization_key = damage_artifact_spilled_drink
	}
	text = {
		trigger = { exists = var:artifact_tear }
		localization_key = damage_artifact_tear
	}
	text = {
		trigger = { exists = var:artifact_tear }
		localization_key = damage_artifact_cut_holes
	}
	text = {
		trigger = { exists = var:artifact_tear_down }
		localization_key = damage_artifact_tear_down
	}
	text = {
		trigger = { exists = var:artifact_threw_up }
		localization_key = damage_artifact_threw_up
	}
	text = {
		trigger = { exists = var:artifact_unspeakable }
		localization_key = damage_artifact_unspeakable
	}
	text = {
		trigger = { exists = var:artifact_damage_fallback }
		localization_key = damage_artifact_fallback
	}
}

DamageArtifactActionFollowup = {
	type = artifact

	text = {
		trigger = { exists = var:artifact_burned }
		localization_key = evidence_artifact_fire
	}
	text = {
		trigger = { exists = var:artifact_knocked_over }
		localization_key = evidence_artifact_knocked_over
	}
	text = {
		trigger = { exists = var:artifact_smeared_food }
		localization_key = evidence_artifact_smeared_food
	}
	text = {
		trigger = { exists = var:artifact_spilled_drink }
		localization_key = evidence_artifact_spilled_drink
	}
	text = {
		trigger = { exists = var:artifact_tear }
		localization_key = evidence_artifact_tear
	}
	text = {
		trigger = { 
			OR = {
				exists = var:artifact_tear_down
				exists = var:artifact_damage_fallback
			}
		}
		localization_key = evidence_artifact_tear_down
	}
	text = {
		trigger = { exists = var:artifact_threw_up }
		localization_key = evidence_artifact_threw_up
	}
	text = {
		trigger = { exists = var:artifact_unspeakable }
		localization_key = evidence_artifact_unspeakable
	}
}

GetMedievalDance = {
	type = character
	
	random_valid = yes

	# Warcraft
	text = {
		localization_key = medieval_dance_round
	}
}
