# Root = Accolade
# Event targets: positive ( bool )
on_accolade_rank_change = {
	effect = {
		save_scope_as = changing_accolade
		accolade_owner = {
			# level up notification
			if = {
				limit = {
					scope:positive = yes
				}
				trigger_event = accolade.0001
			}
			# level down notification
			else = {
				trigger_event = accolade.0002
			}
		}
		
		if = {
			limit = {
				scope:changing_accolade = {
					accolade_rank >= 1
					acclaimed_knight = {
						exists = this
						NOT = {
							any_memory = {
								has_memory_type = accolade_ranked_up
							}
						}
					}
				}
				scope:positive = yes
			}
			scope:changing_accolade.acclaimed_knight = {
				create_character_memory = {
					type = accolade_ranked_up
					participants = {
						liege = root.accolade_owner
					}
				}
			}
		}
	}
}

# Root = Accolade
# Event targets: glory ( value )
on_accolade_glory_change = {
	
}

# Root = Accolade
on_accolade_created = {
	effect = {
		if = {
			limit = {
				acclaimed_knight ?= {
					NOT = {
						any_memory = {
							has_memory_type = accolade_created
						}
					}
				}
			}
			acclaimed_knight ?= {
				create_character_memory = {
					type = accolade_created
					participants = {
						liege = root.accolade_owner
					}
				}
			}
		}
	}
}

# Root = Accolade
# Event targets: new_owner
on_active_accolade_succession = {
	
}

# Root = Accolade
# Event targets: new_owner
on_inactive_accolade_succession = {
	
}

# Root = Accolade
# Event targets: old_acclaimed_knight, new_accolade_type ( yes/no )
on_accolade_acclaimed_death = {

}

# Root = Accolade
# Event targets: old_acclaimed_knight, new_accolade_type ( yes/no )
on_accolade_acclaimed_removal = {
	
}

# Root = Accolade
on_accolade_successor_death = {
	
}

# Root = Accolade
on_accolade_successor_removal = {
	
}

# Root = Accolade
# Event targets: owner
on_accolade_deactivated = {
	effect = {
		save_scope_as = dead_accolade
		accolade_owner = {
			trigger_event = accolade.0003
		}
		if = {
			limit = {
				acclaimed_knight ?= {
					NOT = {
						any_memory = {
							has_memory_type = stripped_of_accolade	
						}
					}
				}
			}
			acclaimed_knight ?= {
				create_character_memory = {
					type = stripped_of_accolade
					participants = {
						liege = root.accolade_owner
					}
				}
			}
		}
	}
}

# Root = Accolade
# Event targets: glory ( value ), new_accolade_type ( bool ), new_acclaimed_knight
on_accolade_new_acclaimed_knight = {
	effect = {
		# for accolade keeping its types
		if = {
			limit = {
				scope:new_accolade_type = no
			}
			save_scope_as = succeeding_accolade
			accolade_owner = {
				trigger_event = accolade.0004
			}
		}
		# for accolade changing its types
		else = {
			save_scope_as = succeeding_accolade
			secondary_type = {
				save_scope_as = new_secondary
			}
			accolade_owner = {
				trigger_event = accolade.0005
			}
		}
		if = {
			limit = {
				scope:new_acclaimed_knight = {
					NOT = {
						any_memory = {
							has_memory_type = became_acclaimed
						}
					}
				}
			}
			scope:new_acclaimed_knight = {
				create_character_memory = {
					type = became_acclaimed
					participants = {
						liege = root.accolade_owner
					}
				}
			}
		}
	}
}
