window = {
	name = "window_manage_tax_slots"
	widgetid = "window_manage_tax_slots"

	using = Window_Size_MainTab
	minimumsize = { 0 100 }
	position = { 0 0 }

	parentanchor = top|right
	allow_outside = yes
	movable = no
	layer = windows_layer
	#Warcraft
	visible = "[And(IsGameViewOpen('manage_tax_slots'), Not(GetVariableSystem.HasValue( 'right_window_open', 'pol_factions' )))]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab
		#Warcraft
		on_start = "[GetVariableSystem.Set( 'right_window_open', 'manage_tax_slots' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
		#Warcraft
		on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'manage_tax_slots' ) )]"
	}

	state = {
		name = dismiss
		next = _hide

		trigger_when = "[GetVariableSystem.Exists( 'hide_right_windows' )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				margin_bottom = 40
				restrictparent_min = yes
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				using = Window_Margins

				spacing = 20

				datacontext = "[ManageTaxSlotsWindow.GetLiege]"

				###HEADERBOX WITH INFORMATION
				widget_header_with_picture = {
					layoutpolicy_horizontal = expanding
					size = { 100 150 }

					blockoverride "header_text"
					{
						text = "TAX_SLOT_OVERVIEW_WINDOW_HEADER"
					}

					blockoverride "size" {
						size = { 575 180 }
					}

					blockoverride "button_close"
					{
						onclick = "[ManageTaxSlotsWindow.Close]"
					}

					blockoverride "illustration_texture" {
						texture = "gfx/interface/window_tax_collector/tax_collector_illustration.dds"
						alpha = 0.4
					}

					vbox = {
						name = tax_collection_top_view # Used for reactive advice

						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						margin_top = 50
						margin_left = 20
						spacing = 10

						text_single = {
							layoutpolicy_horizontal = expanding
							datacontext = "[ManageTaxSlotsWindow.GetTotalTaxSlotsBreakdown]"
							text = "TAX_SLOT_OVERVIEW_WINDOW_ASSIGNED_TAX_SLOTS"
							tooltipwidget = { widget_value_breakdown_tooltip = {} }
						}


						hbox = {
							layoutpolicy_horizontal = expanding

							hbox = {
								layoutpolicy_vertical = expanding
								layoutpolicy_horizontal = expanding
								spacing = 7
								max_width = 160
								margin = { 5 5 }

								text_single = {
									text = "TAX_SLOT_OVERVIEW_WINDOW_TOTAL_CONTRIBUTION"
									default_format = "#high"
									margin_left = -5
									margin_bottom = 3
								}

								background = {
									texture = "gfx/interface/window_tax_collector/button_arrow.dds"
									alpha = 0.6
									using = Mask_Rough_Edges

									modify_texture = {
										name = "mask"
										texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
										blend_mode = alphamultiply
									}
								}

								expand = {}

							}

							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 5
								max_width = 250

								background = {
									using = Background_Area
									using = Color_White
									tintcolor = { 0.6 0.7 0.2 0.3 }
									margin = { 50 3 }

									modify_texture ={
										texture = "gfx/interface/component_masks/mask_fade_horizontal_middle.dds"
										blend_mode = alphaMultiply
										mirror = horizontal
									}
								}

								expand = {}

								icon = {
									size = { 25 25 }
									texture = "gfx/interface/icons/icon_gold.dds"
								}

								text_single = {
									datacontext = "[ManageTaxSlotsWindow.GetTotalTaxBreakdown]"
									text = "[ValueBreakdown.GetValue]"
									align = nobaseline

									tooltipwidget = {
										tax_contribution_tooltip = {
											blockoverride "descriptive_text"
											{
												text = "TAX_SLOT_VASSAL_WINDOW_TOTAL_TAX_DESC"
											}

											blockoverride "sub_header"
											{
												text = "TAX_SLOT_OVERVIEW_WINDOW_TOTAL_SUB_HEADER"
											}

											blockoverride "no_sub_values"
											{
												text = "TAX_SLOT_VASSAL_WINDOW_NO_TAX_SLOTS"
											}
										}
									}
									using = tooltip_ws
								}

								expand = {}

								divider_light = {
									layoutpolicy_vertical = expanding
								}

								expand = {}

								icon = {
									size = { 25 25 }
									texture = "gfx/interface/icons/icon_soldier.dds"
								}

								text_single = {
									datacontext = "[ManageTaxSlotsWindow.GetTotalLevyBreakdown]"
									text = "[ValueBreakdown.GetValue]"
									align = nobaseline

									tooltipwidget = {
										tax_contribution_tooltip = {
											blockoverride "descriptive_text"
											{
												text = "TAX_SLOT_VASSAL_WINDOW_TOTAL_LEVIES_DESC"
											}

											blockoverride "sub_header"
											{
												text = "TAX_SLOT_OVERVIEW_WINDOW_TOTAL_SUB_HEADER"
											}

											blockoverride "contribution_icon"
											{
												texture = "gfx/interface/icons/icon_soldier.dds"
											}

											blockoverride "no_sub_values"
											{
												text = "TAX_SLOT_VASSAL_WINDOW_NO_TAX_SLOTS"
											}
										}
									}
									using = tooltip_ws
								}
								expand = {}
							}
							expand = {}
						}
						hbox = {
							visible = "[GreaterThan_int32( Character.GetUnassignedVassalsCount, '(int32)0' )]"
							layoutpolicy_horizontal = expanding
							margin = { 15 0 }

							background = {
								using = Background_Area_Dark
								alpha = 0.6
								margin = { 20 10 }
								margin_right = 0
							}

							hbox = {
								layoutpolicy_horizontal = expanding
								visible = "[GreaterThan_int32( Character.GetUnassignedVassalsCount, '(int32)0' )]"

								vbox = {
									icon = {
										size = { 25 25 }
										texture = "gfx/interface/icons/symbols/icon_warning.dds"
									}
								}

								vbox = {
									layoutpolicy_horizontal = expanding

									text_single = {
										visible = "[GreaterThan_int32( Character.GetTaxSlotsWithoutTaxCollectorCount, '(int32)0' )]"
										layoutpolicy_horizontal = expanding
										text = "TAX_SLOT_OVERVIEW_WINDOW_TAX_SLOTS_WARNING"
										default_format = "#N"
										align = nobaseline
										max_width = 480
									}

									text_single = {
										layoutpolicy_horizontal = expanding
										text = "TAX_SLOT_OVERVIEW_WINDOW_UNASSIGNED_VASSALS_WARNING"
										default_format = "#N"
										align = nobaseline
										max_width = 480
									}
								}
							}
						}
						expand = {layoutpolicy_vertical = expanding}
					}
				}

				### TAX JURISDICTION LIST
				scrollbox = {
					name = "tax_jurisdiction_list" # Used for reactive advice

					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_margins" {
						margin_right = 20
					}

					blockoverride "scrollbox_content"
					{
						tax_slot_list = {}
					}
				}

				vbox = {
					margin = { 40 10}
					spacing = 20
					layoutpolicy_horizontal = expanding

					hbox = {
						layoutpolicy_horizontal = expanding
						button_checkbox_label = {
							onclick = "[ManageTaxSlotsWindow.ToggleAutoAssign]"

							blockoverride "checkbox"
							{
								checked = "[ManageTaxSlotsWindow.ShouldAutoAssign]"
							}

							blockoverride "text"
							{
								max_width = 460
								text = "TAX_SLOT_OVERVIEW_AUTO_ASSIGN_BUTTON"
							}
						}
						expand = {}
					}
					
					button_decision_entry = {
						name = "search_for_tax_collector_decision"
						layoutpolicy_horizontal = expanding
						datacontext = "[GetDecisionWithKey('unity_search_for_administrators_decision')]"
						visible = "[Decision.IsShownForPlayer]"
						onclick = "[OpenGameViewData( 'decision_detail', Decision.Self )]"
						margin_top = 30

						blockoverride "decision_vignette" {}
					}
				}
			}
		}
	}
}

types ManageTaxSlotsWindow
{
	### Tax Collector Portrait and Banner
	type tax_collector_slot_item = vbox {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		margin = { 10 10 }
		spacing = 10
		size = { 300 300 }

		datacontext = "[TaxSlotItem.GetTaxSlot]"
		datacontext = "[TaxSlotItem.GetTaxCollector]"

		### Empty Tax Collector Slot Item BG
		background = {
			visible = "[And(Not(TaxSlotItem.HasTaxCollector), Not(DataModelHasItems(TaxSlotItem.GetVassals)))]"
			texture = "gfx/interface/window_tax_collector/collection_slot_banner_gray.dds"
			margin_right = 5
			margin_bottom = -2
			size = { 100 150 }
		}

		### Untaxed Tax Collector Slot Item BG
		background = {
			visible = "[And(Not(TaxSlotItem.HasTaxCollector), DataModelHasItems(TaxSlotItem.GetVassals))]"
			texture = "gfx/interface/window_tax_collector/collection_slot_banner_red.dds"
			margin_right = 5
			margin_bottom = -2
			size = { 100 150 }
		}

		### With Tax Collector Slot Item BG
		background = {
			visible = "[TaxSlotItem.HasTaxCollector]"
			texture = "gfx/interface/window_tax_collector/collection_slot_banner.dds"
			margin_right = 5
			margin_bottom = -2
			size = { 100 150 }
		}

		vbox = {
			margin_right = -4

			portrait_head_small = {
				visible = "[Not(TaxSlotItem.HasTaxCollector)]"

				blockoverride "portrait_button_template_onclick"
				{
					onclick = "[ToggleGameViewData( 'tax_slot_appoint_tax_collector', TaxSlotItem.GetTaxSlot.GetID )]"
				}

				blockoverride "portrait_button_template_tooltip"
				{
					tooltip = "TAX_SLOT_ADD_NEW_TAX_COLLECTOR_BUTTON"
				}

				blockoverride "onclick"
				{
					onclick = "[ToggleGameViewData( 'tax_slot_appoint_tax_collector', TaxSlotItem.GetTaxSlot.GetID )]"

					button_icon = {
						parentanchor = center
						alwaystransparent = yes
						size = { 35 35 }
						position = {-5 0 }
						texture = "gfx/interface/icons/flat_icons/plus.dds"
					}
				}
			}

			portrait_head_small = {
				visible = "[TaxSlotItem.HasTaxCollector]"
			}

			vbox = {
				layoutpolicy_vertical = expanding
				layoutpolicy_horizontal = expanding

				hbox = {
					layoutpolicy_vertical = expanding
					layoutpolicy_horizontal = expanding

					button_round = {
						size = { 35 35 }

						icon = {
							parentanchor = center
							size = { 30 30 }
							texture = "gfx/interface/icons/flat_icons/replace.dds"
							using = Master_Button_Modify_Texture
						}

						tooltip = "[SelectLocalization( TaxSlotItem.HasTaxCollector, 'TAX_SLOT_REPLACE_TAX_COLLECTOR_BUTTON', 'TAX_SLOT_REPLACE_TAX_COLLECTOR_BUTTON_NO_TAX_COLLECTOR')]"

						enabled = "[TaxSlotItem.HasTaxCollector]"
						onclick = "[ToggleGameViewData( 'tax_slot_appoint_tax_collector', TaxSlotItem.GetTaxSlot.GetID )]"
					}

					button_round = {
						size = { 35 35 }

						icon = {
							parentanchor = center
							size = { 30 30 }
							texture = "gfx/interface/icons/flat_icons/cancel.dds"
							using = Master_Button_Modify_Texture
						}

						tooltip = "[SelectLocalization( TaxSlotItem.HasTaxCollector, 'TAX_SLOT_FIRE_TAX_COLLECTOR_BUTTON', 'TAX_SLOT_FIRE_TAX_COLLECTOR_BUTTON_NO_TAX_COLLECTOR')]"

						enabled = "[TaxSlotItem.HasTaxCollector]"
						onclick = "[ManageTaxSlotsWindow.RemoveTaxCollector( TaxSlotItem.AccessSelf )]"
					}
				}
			}

			expand = {
				layoutpolicy_vertical = expanding
			}
		}
		expand = {}
	}

	type tax_slot_list = vbox {
		layoutpolicy_horizontal = expanding
		spacing = 5

		vbox = {
			name = "tax_slot_list"
			datamodel = "[ManageTaxSlotsWindow.GetTaxSlotItems]"
			layoutpolicy_horizontal = expanding
			margin_top = 10
			spacing = 10

			### SWITCHING TYPES
			item = {
				tax_slot_item = {}
			}
		}
	}

	type tax_slot_item = hbox {
		layoutpolicy_horizontal = expanding

		datacontext = "[TaxSlotItem.GetTaxSlot]"
		datacontext = "[TaxSlotItem.GetTaxCollector]"

		### Tax Slot Item Background for Empty Slot
		background = {
			using = Background_Area
			margin = { 5 5 }
		}

		### Tax Slot Item Background for Assigned Vassals
		background = {
			visible = "[TaxSlotItem.HasTaxCollector]"
			texture = "gfx/interface/colors/green.dds"
			alpha = 0.2

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_dlc.dds"
				blend_mode = alphaMultiply
			}

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_inverse.dds"
				blend_mode = alphaMultiply
			}
		}

		### Tax Slot Item Background for Unassigned Vassals
		background = {
			visible = "[And(Not(TaxSlotItem.HasTaxCollector), DataModelHasItems(TaxSlotItem.GetVassals))]"
			texture = "gfx/interface/colors/red.dds"
			alpha = 0.2

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_dlc.dds"
				blend_mode = alphaMultiply
			}

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_inverse.dds"
				blend_mode = alphaMultiply
			}
		}

		###Tax Collector Portrait
		tax_collector_slot_item = {}

		###Tax Slot Information
		tax_slot_info = {}
	}

	type tax_slot_info = vbox {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		spacing = 5

		##TAX COLLECTOR SLOT INFO, SKILLS, APTITUDE
		hbox = {
			min_width = 450
			layoutpolicy_horizontal = expanding
			margin = { 5 5 }

			background = {
				using = Background_Area
				margin_bottom = 30
				margin_left = 10
			}

			text_single = {
				max_width = 240
				layoutpolicy_horizontal = expanding
				text = "[TaxSlot.GetName]"
			}

			expand = {
				layoutpolicy_horizontal = expanding
			}

			# Its own vbox so the datacontext of the aptitude isn't evaluated with an empty character
			hbox = {
				visible = "[TaxSlotItem.HasTaxCollector]"

				layoutpolicy_horizontal = expanding

				tax_collector_aptitude_text = {
					max_width = 140
				}
			}
		}

		##VASSALS GOVERNED AND INCOME
		hbox = {
			name = "taxpayer_box"
			layoutpolicy_horizontal = expanding

			background = {
				name = "taxpayer_box_bg"
				using = Background_Area_Characterlist
				margin = { 0 5 }
				margin_left = 10

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_dlc.dds"
					blend_mode = alphaMultiply
				}

				modify_texture ={
					texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
					blend_mode = alphaMultiply
					mirror = horizontal
					alpha = 0.6
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding

				background = {
					margin = { 0 -7}
					margin_left = -150
					margin_right = 20
					visible = "[TaxSlotItem.HasTaxCollector]"
					using = Background_Area
					using = Color_White
					tintcolor = { 0.6 0.7 0.2 0.3 }

					modify_texture ={
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						blend_mode = alphaMultiply
						mirror = horizontal
					}
				}

				background = {
					margin = { 0 -7}
					margin_left = -150
					margin_right = 20
					visible = "[Not( TaxSlotItem.HasTaxCollector )]"
					using = Background_Area_Dark
					using = Color_Red
					tintcolor = { 0.6 0.6 0.5 0.8 }
					alpha = 0.8

					modify_texture ={
						texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
						blend_mode = alphaMultiply
						mirror = horizontal
					}
				}

				##VASSALS GOVERNED BUTTON
				tax_slot_interaction_button = {
					tooltip = "TAX_SLOT_MANAGE_TAX_PAYERS_BUTTON"
					background = {
						texture = "gfx/interface/window_tax_collector/button_arrow.dds"
						margin { 0 -5 }
						margin_right = 15
						margin_left = 8
						using = Mask_Rough_Edges
						alpha = 0.8
					}

					blockoverride "tax_slot_button_texture" {
						texture = "gfx/interface/icons/flat_icons/multiple_people.dds"
					}

					blockoverride "tax_slot_button_text" {
						max_width = 180
						text = "TAX_COLLECTOR_TAXED_VASSALS_COUNT"
					}

					blockoverride "tax_slot_button_click" {
						onclick = "[ToggleGameViewData( 'tax_slot_vassals', TaxSlotItem.GetTaxSlot.GetID )]"
					}
				}

				expand = {}

				hbox = {
					layoutpolicy_horizontal = expanding
					spacing = 5

					expand = {}

					text_single = {
						datacontext = "[TaxSlotItem.GetTaxBreakdown]"
						text = "TAX_SLOT_TAX_CONTRIBUTION"
						align = nobaseline
						default_format = "#high"

						tooltipwidget = {
							tax_contribution_tooltip = {}
						}
						using = tooltip_ws
					}

					expand = {}

					divider_light = {
						layoutpolicy_vertical = expanding
					}

					expand = {}

					text_single = {
						datacontext = "[TaxSlotItem.GetLevyBreakdown]"
						text = "TAX_SLOT_LEVY_CONTRIBUTION"
						align = nobaseline
						default_format = "#high"

						tooltipwidget = {
							tax_contribution_tooltip = {
								blockoverride "descriptive_text"
								{
									text = "TAX_SLOT_VASSAL_WINDOW_TAX_SLOT_LEVIES_DESC"
								}

								blockoverride "contribution_icon"
								{
									texture = "gfx/interface/icons/icon_soldier.dds"
								}
							}
						}
						using = tooltip_ws
					}

					expand = {}
				}
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			hbox = {
				layoutpolicy_horizontal = expanding

				tax_slot_interaction_button = {
					tooltip = "TAX_SLOT_CHANGE_COLLECTION_OPTION_BUTTON"

					blockoverride "tax_slot_button_texture" {
						texture = "gfx/interface/icons/flat_icons/clan_contract.dds"
					}

					blockoverride "tax_slot_button_text" {
						text = "TAX_COLLECTOR_SLOT_OPEN_OBLIGATION_BUTTON"
					}
				}

				warning_icon = {
					visible = "[Not(TaxSlotItem.GetTaxSlot.CheckObligationCooldown)]"
					size = { 20 20 }
					tooltip = "[TaxSlotItem.GetTaxSlot.GetObligationCooldownDesc]"
				}
				expand = {}
			}
		}
		expand = {}
	}

	type tax_slot_interaction_button = hbox {
		margin = { 5 3 }
		spacing = 5

		button_round = {
			size = { 40 40 }

			icon = {
				parentanchor = center
				size = { 32 32 }

				block "tax_slot_button_texture" {}

				using = Master_Button_Modify_Texture
			}

			block "tax_slot_button_click"
			{
				onclick = "[ToggleGameViewData( 'tax_slot_obligations', TaxSlotItem.GetTaxSlot.GetID )]"
			}
		}

		text_single = {
			layoutpolicy_horizontal = expanding

			block "tax_slot_button_text"
			{
				raw_text = ""
			}

			align = nobaseline
		}
	}
}
