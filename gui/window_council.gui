
######################################################
################## COUNCIL WINDOW ####################
######################################################

window = {
	name = "council_window"
	widgetid = "council_window_id"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	
	# Warcraft
	visible = "[And( IsGameViewOpen('council_window'), GetVariableSystem.HasValue( 'right_window_open', 'council' ) )]"

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		# Warcraft
		on_start = "[GetVariableSystem.Set( 'right_window_open', 'council' )]"

		on_start = "[GetVariableSystem.Set( 'council_tabs', 'my_council' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		# Warcraft
		on_start = "[GetVariableSystem.ClearIf( 'right_window_open', GetVariableSystem.HasValue( 'right_window_open', 'council' ) )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "COUNCILWINDOW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[CouncilWindow.Close]"
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding

					button_tab = {
						visible = "[Not(GetPlayer.IsIndependentRuler)]"
						layoutpolicy_horizontal = expanding
						text = "COUNCIL_WINDOW_PLAYER_COUNCIL"

						down = "[CouncilWindow.IsPlayerCouncilShown]"
						onclick = "[CouncilWindow.SetPlayerCouncil]"

						# onclick = "[PdxGuiTriggerAllAnimations('council_refresh')]"

						# state = {
						# 	name = _mouse_click
						# 	delay = 0.2
						# 	on_finish = "[CouncilWindow.SetPlayerCouncil]"
						# }
					}

					button_tab = {
						visible = "[Not(GetPlayer.IsIndependentRuler)]"

						down = "[CouncilWindow.IsLiegeCouncilShown]"
						onclick = "[CouncilWindow.SetLiegeCouncil]"


						# onclick = "[PdxGuiTriggerAllAnimations('council_refresh')]"

						# state = {
						# 	name = _mouse_click
						# 	delay = 0.2
						# 	on_finish = "[CouncilWindow.SetLiegeCouncil]"
						# }

						text_single = {
							minimumsize = { 277 38 }
							margin = { 15 0 }
							text = "COUNCIL_WINDOW_LIEGE_COUNCIL"
							resizeparent = yes
							align = center|nobaseline
							default_format = "#low"
						}
					}
				}

				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					vbox_council_layout = {
						name = "my_council"
						visible = "[CouncilWindow.IsPlayerCouncilShown]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						using = Animation_Tab_Switch
					}


					vbox_council_layout = {
						name = "council_refresh"
						visible = "[CouncilWindow.IsLiegeCouncilShown]"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						using = Animation_Tab_Switch

						background = {
							using = Background_Frame
							margin = { -5 2 }
							using = Color_Grey

							spriteType = Corneredtiled
							spriteborder = { 7 7 }
							alpha = 0.7
						}
					}
				}
			}
		}
	}
}

widget = {
	name = "potential_task_location_window"
	size = { 100% 100% }

	state = {
		name = _show
		using = Animation_FadeIn_Standard
		# position_x = 0
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		# position_x = -40
	}

	portrait_council = {
		datacontext = "[PotentialTaskLocationWindow.GetActiveTask.GetCouncillor]"
		datacontext = "[PotentialTaskLocationWindow.GetTaskType.GetCouncilPosition]"
		parentanchor = bottom|left
		scale = 2
		position = {-100 0}

		blockoverride "portrait_button"
		{
			intersectionmask = yes
		}

		blockoverride "mask" {
			mask = "gfx/portraits/portrait_mask_blank.dds"
		}


		widget = {
			parentanchor = bottom|left
			# position = { 70 -20}
			position = { 85 -5 }

			vbox = {
				set_parent_size_to_minimum = yes
				scale = 0.5
				minimumsize = { 190 0 }

				background = {
					texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
					spriteType = Corneredtiled
					spriteborder = { 40 8 }
					margin = { 10 0 }
					margin_right = 25
					texture_density = 2

					modify_texture = {
						name = "mask"
						texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
						blend_mode = alphamultiply
					}
				}

				text_label_left = {
					text = "COUNCIL_WINDOW_MAP_COUNCILLOR_TYPE"
					margin = { 5 5 }
					layoutpolicy_horizontal = expanding
					align = nobaseline
				}

				text_label_left = {
					text = "[PotentialTaskLocationWindow.GetActiveTask.GetCouncillor.GetUINameNoTooltip]"
					margin = { 5 5 }
					layoutpolicy_horizontal = expanding
					align = nobaseline
				}
			}
		}
	}

	flowcontainer = {
		parentanchor = top|hcenter
		direction = vertical
		scale = 1.2

		position = {0 100 }

		text_label_center = {
			text = "COUNCIL_WINDOW_MAP_TASK_NAME"
			parentanchor = hcenter
			align = nobaseline
			margin = { 10 4 }
		}

		text_label_center = {
			text = "[PotentialTaskLocationWindow.GetTaskType.GetName]"
			default_format = "#high"
			using = Font_Size_Medium
			parentanchor = hcenter
			align = nobaseline
			margin = { 10 4 }
		}

		text_label_center = {
			text = "COUNCIL_WINDOW_MAP_INSTRUCTION"
			parentanchor = hcenter
			align = nobaseline|hcenter
			margin = { 50 4 }
		}
	}


	icon = {
		using = Background_Label_Center
		parentanchor = bottom|hcenter
		size = { 400 85 }
		position = { 0 10 }

		button_primary_big = {
			name = "close_assignment_window"
			text = BACK_LABEL
			parentanchor = center

			onclick = "[PotentialTaskLocationWindow.Close]"
			tooltip = "COUNCIL_TASK_CANCEL_ASSIGNMENT"
			shortcut = "close_window"
		}
	}
}

######################################################
################ TYPES AND TEMPLATES #################
######################################################

types CouncilWindow
{

	type council_task_info = vbox
	{
		name = "task"
		datacontext = "[ActiveCouncilTask.GetTaskTypeOrDefault]"

		background = {
			using = Background_Area_Dark
			alpha = 0.7
		}

		vbox = {
			visible = "[CouncilTaskType.IsPercentageTask]"
			layoutpolicy_horizontal = expanding
			margin = { 5 3 }

			text_single = {
				name = "location"
				layoutpolicy_horizontal = expanding
				text = "[ActiveCouncilTask.GetTaskTarget]"
				default_format = "#high"
				autoresize = no
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 0 5 }

				progressbar_standard = {
					name = "progress"
					layoutpolicy_horizontal = expanding
					size = { 0 12 }
					value = "[ActiveCouncilTask.GetProgressFloat]"

					tooltipwidget = {
						council_task_progress_breakdown_widget = {}
					}

					text_single = {
						name = "eta"
						parentanchor = center
						text = "[ActiveCouncilTask.GetETA]"
						align = nobaseline
					}
				}
			}
		}

		vbox = {
			visible = "[And( CouncilTaskType.IsValueTask, Not( ActiveCouncilTask.IsFrozen ) )]"
			layoutpolicy_horizontal = expanding
			margin = { 5 3 }

			text_single = {
				name = "location"
				layoutpolicy_horizontal = expanding
				text = "[ActiveCouncilTask.GetTaskTarget]"
				default_format = "#high"
				autoresize = no
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 0 5 }

				progressbar_standard = {
					name = "progress"
					layoutpolicy_horizontal = expanding
					size = { 0 12 }
					value = "[ActiveCouncilTask.GetProgressFloat]"
					min = 0
					max = "[ActiveCouncilTask.GetProgressMaxFloat]"
					tooltipwidget = {
						council_task_progress_breakdown_widget = {}
					}
					using = tooltip_ws
					text_single = {
						name = "eta"
						parentanchor = center
						text = "[ActiveCouncilTask.GetETA]"
						align = nobaseline
					}
				}
			}
		}
	}

	type widget_councillor_item = widget {
		size = { 260 250 }

		### Required Datacontexts
		# A council position type
		# The councillor
		# The active council task
		widget = {
			visible = "[Not(GuiCouncilPosition.ArePotentialTasksVisible)]"
			size = { 100% 100% }

			state = {
				name = _show
				using = Animation_FadeIn_Quick
			}

			state = {
				name = _hide
				using = Animation_FadeOut_Quick
			}

			portrait_council = {
				name = "councillor_portrait"
				datacontext = "[ActiveCouncilTask.GetCouncillor]"
				visible = "[Character.IsValid]"
				parentanchor = bottom
				position = { 0 4 }
				blockoverride "portrait_button_no_character_text"
				{
					text = "PORTRAIT_NO_COUNCILLOR"
				}

				blockoverride "portrait_button"
				{
					using = tooltip_ws
				}
			}

			block "missing_councillor"
			{
				portrait_council = {
					name = "councillor_portrait_blank"
					visible = "[And( Not(Character.IsValid), CouncilWindow.IsPlayerCouncilShown)]"
					parentanchor = center

					blockoverride "portrait_button_no_character_text"
					{
						text = "PORTRAIT_NO_COUNCILLOR"
					}

					blockoverride "portrait_button_template_onclick"
					{
						onclick = "[GuiCouncilPosition.SelectCouncillor]"
					}

					text_label_center = {
						parentanchor = bottom|hcenter
						position = { 0 -10 }
						text = "COUNCILLOR_CLICK_TO_HIRE"
						default_format = "#low;italic"
						max_width = 235
					}

					blockoverride "onclick" {
						onclick = "[GuiCouncilPosition.SelectCouncillor]"

						button_icon = {
							parentanchor = center
							alwaystransparent = yes
							size = { 40 40 }
							position = { 0 70 }
							texture = "gfx/interface/icons/flat_icons/plus.dds"
						}
					}
					blockoverride "portrait_button"
					{
						using = tooltip_ws
					}
				}

				portrait_council = {
					name = "councillor_portrait_blank_liege"
					visible = "[And( Not(Character.IsValid), CouncilWindow.IsLiegeCouncilShown )]"
					parentanchor = center

					text_label_center = {
						parentanchor = bottom|hcenter
						position = { 0 -10 }
						text = "COUNCILLOR_BLANK_LIEGE"
						default_format = "#low;italic"
					}

					blockoverride "portrait_button"
					{
						using = tooltip_ws
					}
				}
			}
		}

		vbox = {

			hbox = {
				layoutpolicy_horizontal = expanding
				margin = { 0 5 }
				margin_right = 3

				background = {
					using = Background_Area_Dark
				}

				background = {
					visible = "[ObjectsEqual( Character.Self, GetPlayer )]"
					texture = "gfx/interface/component_masks/patterns/mask_pattern_02.dds"
					spriteType = Corneredtiled
					alpha = 0.4

					using = Color_Blue

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
						blend_mode = alphamultiply
						alpha = 0.9
					}

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_texture_01.dds"
						spriteType = Corneredtiled
						spriteborder = { 15 15 }
						blend_mode = alphamultiply
					}
				}

				background = {
					visible = "[ObjectsEqual( Character.Self, GetPlayer )]"
					texture = "gfx/interface/component_masks/mask_frame.dds"
					spriteType = Corneredstretched
					spriteborder = { 15 15 }
					alpha = 0.25

					using = Color_Blue

					modify_texture = {
						texture = "gfx/interface/component_masks/mask_fade_horizontal_right.dds"
						blend_mode = alphamultiply
						alpha = 0.9
					}
				}

				spacer = {
					visible = "[GuiCouncilPosition.CanPotentiallySelectCouncillor]"
					size = { 6 6 }
				}

				spacer = {
					visible = "[CouncilWindow.IsLiegeCouncilShown]"
					size = { 5 5 }
				}

				block "replace_councillor"
				{
					hbox = {

						button_round = {
							name = "replace"
							visible = "[GuiCouncilPosition.CanPotentiallySelectCouncillor]"
							onclick = "[GuiCouncilPosition.SelectCouncillor]"
							enabled = "[GuiCouncilPosition.CanSelectCouncillor]"
							tooltip = "[GuiCouncilPosition.GetSelectCouncillorTooltip]" #COUNCILWINDOW_TT_REPLACE
							using = tooltip_se

							button_change = {
								alwaystransparent = yes
								parentanchor = center
							}
						}

						button_round = {
							name = "leave"
							visible = "[ObjectsEqual( GetPlayer.Self, Character.Self )]"
							onclick = "[CouncilWindow.OnLeaveCouncil]"
							tooltip = "DECISIONS_VIEW_LEAVE_COUNCIL_TT"
							using = tooltip_se

							button_leave_council = {
								mirror = horizontal
								parentanchor = center
								alwaystransparent = yes
							}
						}
					}
				}

				vbox = {
					layoutpolicy_horizontal = expanding
					margin_left = 6

					text_single = {
						name = "title"
						layoutpolicy_horizontal = expanding
						text = "[ActiveCouncilTask.GetPositionName|E]"
						tooltip = "[ActiveCouncilTask.GetPositionTooltip]"
						autoresize = no
						fontsize_min = 13
					}

					text_single = {
						layoutpolicy_horizontal = expanding
						text = "[Character.GetShortUINameNoTooltip]"
						default_format = "#high"
						align = nobaseline
						autoresize = no
						fontsize_min = 13
					}
				}

				skill_icon_label = {
					datacontext = "[GuiCouncilPosition.GetMainSkillItem]"
					visible = "[ActiveCouncilTask.HasMainSkill]"

					blockoverride "icon_size"
					{
						size = { 35 35 }
					}

					blockoverride "font_size" {
						using = Font_Size_Medium
						visible = "[And( ActiveCouncilTask.HasMainSkill, ActiveCouncilTask.HasCouncillor )]"
						min_width = 13
					}

					blockoverride "tooltip"
					{
						tooltip_enabled = "[And( ActiveCouncilTask.HasMainSkill, ActiveCouncilTask.HasCouncillor )]"
						tooltip = "[SkillItem.GetSkillBreakdownTooltip]"
					}
				}
			}

			widget = {
				visible = "[GuiCouncilPosition.ArePotentialTasksVisible]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				state = {
					name = _show
					using = Animation_FadeIn_Quick
				}

				flowcontainer = {
					name = "council_position_tasks"
					datamodel = "[GuiCouncilPosition.GetPotentialCouncilTasks]"
					parentanchor = bottom|hcenter
					margin_bottom = 10
					direction = vertical
					spacing = 3
					alwaystransparent = no

					item = {
						button_standard = {
							name = "potential_task"
							datacontext = "[GuiPotentialCouncilTask.GetCouncilTaskType]"
							datacontext = "[GuiCouncilPosition.GetActiveCouncilTask]"
							visible = "[GuiPotentialCouncilTask.IsVisible]"
							size = { 220 25 }

							enabled = "[GuiPotentialCouncilTask.CanSelect]"
							onclick = "[GuiPotentialCouncilTask.SelectTaskType]"

							tooltip = "[CouncilTaskType.GetEffectDesc( ActiveCouncilTask.GetScopes )]"

							text_single = {
								parentanchor = left|vcenter
								position = { 10 0 }
								text = "[CouncilTaskType.GetName]"
								align = nobaseline
								default_format = "#clickable"
							}

							container = {
								visible = "[CouncilTaskType.HasMainSkill]"
								parentanchor = right|vcenter


								skill_icon_label_vertical = {
									datacontext = "[GuiCouncilPosition.GetSkillItemForTask(CouncilTaskType.Self)]"

									blockoverride "font_size" {
										min_width = 13
									}

									blockoverride "value"
									{
										text = "[GuiCouncilPosition.GetSkillModifierForTask(CouncilTaskType.Self)|+=]"
									}

									blockoverride "tooltip"
									{
									}
								}
							}
						}
					}
				}
			}

			widget = {
				visible = "[Not(GuiCouncilPosition.ArePotentialTasksVisible)]"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				state = {
					name = _show
					using = Animation_FadeIn_Quick
				}

				text_multi = {
					margin_left = 10
					margin_bottom = 10
					margin_right = 5
					autoresize = yes
					max_width = 180
					visible = "[Character.IsLocalPlayer]"
					align = bottom|left
					parentanchor = bottom|left
					text = "ON_COUNCIL_EFFECTS"
					background = {
						using = Background_Area_Dark
					}
					fontsize = 14
				}

				portrait_opinion = {
					visible = "[And(Character.IsValid, Not(Character.IsLocalPlayer) )]"
					parentanchor = bottom|hcenter
					position = { 0 -2 }

					blockoverride "opinion_text"
					{
						text = "[Character.GetOpinionOf( Character.GetLiege )|=]"
						fonttintcolor = "[Character.GetOpinionOfTint( Character.GetLiege )]"
					}

					blockoverride "ott_heading_text"
					{
						text = "[Character.GetOpinionHeadingText( Character.GetLiege )]"
					}

					blockoverride "ott_opinion_value_text"
					{
						text = "[Character.GetOpinionOf( Character.GetLiege )|=]"
						fonttintcolor = "[Character.GetOpinionOfTint( Character.GetLiege )]"
					}
				}

				background = {
					texture = "gfx/interface/component_masks/mask_fade_corner.dds"
					color = { 0.12 0.12 0.12 1 }
					alpha = 0.5
					margin_top = -130
					margin_left = -150
				}

				flowcontainer = {
					parentanchor = bottom|right
					ignoreinvisible = yes
					margin_bottom = 3

					icon = {
						name = "church_approval_icon"
						visible = "[Character.IsTheocraticLesseeOf( GetPlayer )]"

						texture = "gfx/interface/icons/icon_bishop_approval.dds"
						framesize = { 120 120 }
						size = { 50 50 }
						frame = "[Select_int32( And( Character.TheocraticLesseeHasApprovalStatus, Character.TheocraticLesseeApprovesOfLiege ), '(int32)1', '(int32)2' )]"
						tooltip = "[Character.GetTheocraticLesseeApprovalTooltip]"
					}

					flowcontainer = {
						parentanchor = bottom
						margin_bottom = 4

						portrait_status_icons = {
							background = {
								using = Background_Area_Dark
								margin = { 1 2 }
							}
						}
					}

					coa_realm_small_crown = {
						visible = "[Character.HasLandedTitles]"
						parentanchor = bottom
						name = "councillor_realm"
					}
				}

				block "regular_task"
				{
					flowcontainer = {
						name = "council_position_tasks"
						visible = "[Not(CouncilWindow.IsLiegeCouncilShown)]"
						datamodel = "[GuiCouncilPosition.GetPotentialCouncilTasks]"
						parentanchor = bottom|left
						position = { 0  }
						margin = { 10 5 }
						spacing = 4
						direction = vertical
						alwaystransparent = no
						ignoreinvisible = yes

						background = {
							texture = "gfx/interface/hud/tab_bg.dds"
							mirror = horizontal
							margin = { 0 10 }
							margin_right = 15
							using = Color_Black
						}

						item = {
							container = {
								visible = "[GuiPotentialCouncilTask.IsVisible]"
								widget = {
									size = { 42 42 }

									icon = {
										visible = "[GuiPotentialCouncilTask.IsActive]"
										texture = "gfx/particles/halo.dds"
										parentanchor = center
										size = { 60 60 }
										color = { 1 0.85 0.6 1 }
									}

									button_round = {
										visible = "[Or(And(GuiPotentialCouncilTask.CanSelect, Not(CouncilWindow.IsLiegeCouncilShown)), GuiPotentialCouncilTask.IsActive)]"
										parentanchor = center
										size = { 45 45 }
										gfxtype = togglepushbuttongfx
										effectname = "NoHighlight"

										onclick = "[GuiPotentialCouncilTask.SelectTaskType]"
										enabled = "[Not(CouncilWindow.IsLiegeCouncilShown)]"
										down = "[GuiPotentialCouncilTask.IsActive]"

										using = tooltip_ws

										tooltipwidget = {
											potential_council_task_icon_tooltip_widget = {
												using = DefaultTooltipBackground
												using = GeneralTooltipSetup
												alwaystransparent = no
											}
										}

										upframe = 1
										downframe = 1
										uphoverframe = 2
										disableframe = 6

										button_normal = {
											name = "potential_task"
											parentanchor = center
											widgetanchor = center
											datacontext = "[GuiPotentialCouncilTask.GetCouncilTaskType]"
											effectname = "NoHighlight"
											gfxtype = togglepushbuttongfx
											shaderfile = "gfx/FX/pdxgui_pushbutton.shader"
											texture = "[CouncilTaskType.GetIcon]"
											alwaystransparent = yes
											size = { 39 39 }
										}
									}
								}

								widget = {
									size = { 40 40 }

									icon = {
										datacontext = "[GuiPotentialCouncilTask.GetCouncilTaskType]"
										visible = "[And(Not(GuiPotentialCouncilTask.CanSelect), Not(CouncilWindow.IsLiegeCouncilShown))]"
										parentanchor = center
										size = { 35 35 }
										alwaystransparent = yes

										texture = "[CouncilTaskType.GetIcon]"
										alpha = 0.4

										tooltipwidget = {
											invalid_potential_council_task_icon_tooltip_widget = {
												using = DefaultTooltipBackground
												using = GeneralTooltipSetup
												alwaystransparent = no
											}
										}
									}
								}
							}
						}
					}
				}
			}

			vbox = {
				visible = "[Not(CouncilWindow.IsLiegeCouncilShown)]"
				layoutpolicy_horizontal = expanding
				margin = { 7 0 }

				background = {
					using = Background_Area_Dark
				}

				council_task_info = {
					layoutpolicy_horizontal = expanding
				}

				block "spouse_task" {}
			}
		}
	}
}

types CouncilTaskTypes
{

	# Requires a GuiPotentialCouncilTask data context to be provided
	type invalid_potential_council_task_icon_tooltip_widget = widget
	{
		size = { 50 50 }

		vbox = {
			restrictparent_min = yes
			minimumsize = { 280 0 }

			margin = { 15 15 }
			spacing = 5

			datacontext = "[GuiPotentialCouncilTask.GetDummyTask]"

			text_single = {
				name = "task_info"
				text = "#T [GuiPotentialCouncilTask.GetCouncilTaskType.GetName]#!"
				layoutpolicy_horizontal = expanding
			}

			text_multi = {
				name = "cannot_select_text"
				text = "[GuiPotentialCouncilTask.GetCannotSelectTooltip]"
				layoutpolicy_horizontal = expanding
				autoresize = yes
				max_width = 280
				align = left
			}
		}
	}

	# Requires an ActiveCouncilTask data context to be provided
	type council_task_icon_tooltip_widget_base = widget
	{
		size = { 50 50 }

		vbox = {
			restrictparent_min = yes
			minimumsize = { 280 0 }
			maximumsize = { 400 0 }

			margin = { 15 15 }
			spacing = 5

			text_multi = {
				datacontext = "[GuiPotentialCouncilTask.GetDummyTask]"
				name = "task_info"
				block "task_info_heading"
				{
					text = "#D GIVE ME SOME TEXT#!"
				}
				layoutpolicy_horizontal = expanding
				autoresize = yes
				max_width = 380
				align = left
			}

			text_single = {
				name = "progress"
				layoutpolicy_horizontal = expanding
				visible = "[And( Not( ActiveCouncilTask.GetTaskType.IsInfiniteTask ), GuiPotentialCouncilTask.IsActive ) ]"
				text = COUNCIL_TASK_PROGRESSBAR_TOOLTIP_HEADER
				tooltipwidget = {
					council_task_progress_breakdown_widget = {}
				}
			}

			text_single = {
				datacontext = "[GuiPotentialCouncilTask.GetDummyTask]"
				name = "effect_header"
				text = COUNCIL_TASK_EFFECTS_HEADER
				layoutpolicy_horizontal = expanding
			}

			text_multi = {
				datacontext = "[GuiPotentialCouncilTask.GetDummyTask]"
				name = "effects"
				text = "[ActiveCouncilTask.GetTaskEffect]"
				layoutpolicy_horizontal = expanding
				autoresize = yes
				max_width = 380
				align = left
			}
		}
	}

	# Requires an ActiveCouncilTask data context to be provided
	type potential_council_task_icon_tooltip_widget = council_task_icon_tooltip_widget_base
	{
		blockoverride "task_info_heading"
		{
			text = POTENTIAL_COUNCIL_TASK_TT
		}
	}

	# Requires an ActiveCouncilTask data context to be provided
	type council_task_icon_tooltip_widget = council_task_icon_tooltip_widget_base
	{
		blockoverride "task_info_heading"
		{
			text = ACTIVE_COUNCIL_TASK_TT
		}
	}

	type vbox_council_layout = vbox {
		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			maximumsize = { -1 932 }
			spacing = 5

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin = { 10 0 }
				spacing = 5

				widget_councillor_item = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[CouncilWindow.GetCouncillor('councillor_spouse')]"
					datacontext = "[GuiCouncilPosition.GetActiveCouncilTask]"
					datacontext = "[ActiveCouncilTask.GetPositionType]"
					datacontext = "[ActiveCouncilTask.GetCouncillor]"

					background =  {
						texture = "gfx/interface/skinned/illustrations/council/bg_council_spouse.dds"
						fittype = centercrop
						using = Mask_Rough_Edges
						alpha = 0.8
					}

					background = {
						texture = "gfx/interface/component_masks/mask_vignette.dds"
						color = { 0.15 0.15 0.15 1 }
						alpha = 0.3
					}

					blockoverride "replace_councillor"
					{
						spacer = {
							visible = "[Not(CouncilWindow.IsLiegeCouncilShown)]"
							size = { 5 5 }
						}
					}

					blockoverride "regular_task" {}

					blockoverride "spouse_task"
					{
						hbox = {
							visible = "[Character.IsValid]"
							layoutpolicy_horizontal = expanding
							margin = { 5 5 }
							spacing = 3

							button_standard = {
								size = { 190 25 }
								onclick = "[GuiCouncilPosition.ShowHideTasks]"
								tooltip = "[GuiCouncilPosition.GetShowHideTooltip]"
								down = "[GuiCouncilPosition.ArePotentialTasksVisible]"

								text_single = {
									datacontext = "[ActiveCouncilTask.GetTaskTypeOrDefault]"
									parentanchor = vcenter
									position = { 10 0 }
									text = "[CouncilTaskType.GetName]"
									align = nobaseline
								}

								button_change = {
									name = "show_tasks"
									parentanchor = right|vcenter
									position = { -5 0 }
									alwaystransparent = yes
									size = { 25 25 }
								}
							}
						}
					}

					blockoverride "missing_councillor"
					{
						text_label_center = {
							visible = "[And( Not(Character.IsValid), CouncilWindow.IsPlayerCouncilShown )]"
							parentanchor = bottom|hcenter
							position = { 0 -10 }
							text = "COUNCILLOR_MISSING_SPOUSE"
							default_format = "#low;italic"
						}

						text_label_center = {
							visible = "[And( Not(Character.IsValid), CouncilWindow.IsLiegeCouncilShown )]"
							parentanchor = bottom|hcenter
							position = { 0 -10 }
							text = "COUNCILLOR_LIEGE_MISSING_SPOUSE"
							default_format = "#low;italic"
							max_width = 250
							fontsize_min = 14
						}
					}
				}

				widget_councillor_item = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[CouncilWindow.GetCouncillor('councillor_court_chaplain')]"
					datacontext = "[GuiCouncilPosition.GetActiveCouncilTask]"
					datacontext = "[ActiveCouncilTask.GetPositionType]"
					datacontext = "[ActiveCouncilTask.GetCouncillor]"
					name = "tutorial_court_chaplain"

					datacontext = "[GetIllustration( 'religion_interior' )]"

					background =  {
						texture = "[Illustration.GetTextureForFaith( ActiveCouncilTask.GetCouncillor.GetFaith )]"
						fittype = centercrop
						alpha = 0.7
						using = Mask_Rough_Edges
					}

					background = {
						texture = "gfx/interface/component_masks/mask_vignette.dds"
						color = { 0.15 0.15 0.15 1 }
						alpha = 0.3
					}
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin = { 10 0 }
				spacing = 5

				widget_councillor_item = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[CouncilWindow.GetCouncillor('councillor_chancellor')]"
					datacontext = "[GuiCouncilPosition.GetActiveCouncilTask]"
					datacontext = "[ActiveCouncilTask.GetPositionType]"
					datacontext = "[ActiveCouncilTask.GetCouncillor]"

					background =  {
						texture = "gfx/interface/skinned/illustrations/council/bg_council_chancellor.dds"
						fittype = centercrop
						alpha = 0.6
						using = Mask_Rough_Edges
					}

					background = {
						texture = "gfx/interface/component_masks/mask_vignette.dds"
						color = { 0.15 0.15 0.15 1 }
						alpha = 0.3
					}
				}

				widget_councillor_item = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[CouncilWindow.GetCouncillor('councillor_steward')]"
					datacontext = "[GuiCouncilPosition.GetActiveCouncilTask]"
					datacontext = "[ActiveCouncilTask.GetPositionType]"
					datacontext = "[ActiveCouncilTask.GetCouncillor]"

					background =  {
						texture = "gfx/interface/skinned/illustrations/council/bg_council_steward.dds"
						fittype = centercrop
						using = Mask_Rough_Edges
						alpha = 0.7
					}

					background = {
						texture = "gfx/interface/component_masks/mask_vignette.dds"
						color = { 0.15 0.15 0.15 1 }
						alpha = 0.3
					}
				}
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				margin = { 10 0 }
				margin_bottom = 5
				spacing = 5

				widget_councillor_item = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[CouncilWindow.GetCouncillor('councillor_marshal')]"
					datacontext = "[GuiCouncilPosition.GetActiveCouncilTask]"
					datacontext = "[ActiveCouncilTask.GetPositionType]"
					datacontext = "[ActiveCouncilTask.GetCouncillor]"

					background =  {
						texture = "gfx/interface/skinned/illustrations/council/bg_council_marshal.dds"
						fittype = centercrop
						using = Mask_Rough_Edges
						alpha = 0.7
					}

					background = {
						texture = "gfx/interface/component_masks/mask_vignette.dds"
						color = { 0.15 0.15 0.15 1 }
						alpha = 0.3
					}
				}

				widget_councillor_item = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					datacontext = "[CouncilWindow.GetCouncillor('councillor_spymaster')]"
					datacontext = "[GuiCouncilPosition.GetActiveCouncilTask]"
					datacontext = "[ActiveCouncilTask.GetPositionType]"
					datacontext = "[ActiveCouncilTask.GetCouncillor]"

					background =  {
						texture = "gfx/interface/skinned/illustrations/council/bg_council_spymaster.dds"
						fittype = centercrop
						using = Mask_Rough_Edges
						alpha = 0.7
					}

					background = {
						texture = "gfx/interface/component_masks/mask_vignette.dds"
						color = { 0.15 0.15 0.15 1 }
						alpha = 0.3
					}
				}
			}
		}

		expand = {
			layoutpolicy_vertical = growing
		}
	}
}
