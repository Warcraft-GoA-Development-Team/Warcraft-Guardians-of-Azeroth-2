# Events for the dinner portion of the Tour grand activity

namespace = host_dinner_events

############################
## Tour Phase: Host a Dinner
############################
## Vassal Events
## 1000-1999
## by James Beaumont
############################
# host_dinner_events.1001 - the stores run out of wine
# host_dinner_events.1003 - Liege is asleep, prank them?
# host_dinner_events.1007 - Put on a show for your liege based on their memories
# host_dinner_events.1009 - You invite your liege to share some weed brownies, or just a regular dessert
# host_dinner_events.1011 - Liege is (not) vegetarian, adjust the meal for them?
# host_dinner_events.1020 - Make a cake in the shape of something your liege likes
# host_dinner_events.1030 - Rival crashes the party
# host_dinner_events.1040 - Play board games with your liege
# host_dinner_events.1050 - Your food stores run dry
# host_dinner_events.1060 - You offer your liege some manflesh
# host_dinner_events.1070 - A member of your liege's procession wants to join your court!
# host_dinner_events.1080 - Put on a deliberately offensive performance for your rival liege
# host_dinner_events.1090 - Murder your liege?
############################
## Liege Events
## 3000-3999
## by James Beaumont
############################
# host_dinner_events.3001 - Liege is propositioned by host's spouse
# host_dinner_events.3003 - Local culinary delicacy sounds absolutely vile but would be rude to reject
# host_dinner_events.3004 - You corner your vassal's heir, manipulate them for a hook?
# host_dinner_events.3006 - You talk with a random courtier about how much better life is in the capital
# host_dinner_events.3008 - As you wake up, you find a servant who seems to know something
# host_dinner_events.3010 - The dinner is not to your liking, ask for something from home?
# host_dinner_events.3020 - Drinking contest!
# host_dinner_events.3030 - A promising child, tutor them?
# host_dinner_events.3040 - Who ate all the pies??
# host_dinner_events.3050 - Temperate entourage member refusing to eat
# host_dinner_events.3060 - You get completely hooked on Semlor and nearly die
# host_dinner_events.3070 - You decide to tell stories from your life to impress your vassal's court
# host_dinner_events.3080 - Someone is choking, save them!
# host_dinner_events.3090 - Make a skull goblet and drink from it
# host_dinner_events.3100 - You realise there's probably more to tax here
# host_dinner_events.3110 - A pool character wants to join your court!
# host_dinner_events.3120 - Majesty tour, bestow a gift!
# host_dinner_events.3130 - Something is not quite right about your vassal's pantry, investigate?
# host_dinner_events.3140 - You try to combine two foods
# host_dinner_events.3150 - Your knight starts a fight
#
#



#####################################################################################

######################
## Vassal Events
## 1000-1999
## by James Beaumont
######################

# Vassal: the stores run out of wine
scripted_effect 1001_dont_replenish_stores = {
	scope:stop_host_scope = {
		reverse_add_opinion = {
	 		target = scope:visiting_liege
	 		modifier = no_booze_opinion
	 		opinion = -15
		}
		add_stress = minor_stress_gain
		add_character_modifier = {
			modifier = boozeless_modifier
			years = 5
		}
	}
}

scripted_effect 1001_replenish_stores = {
	scope:stop_host_scope = {
		remove_short_term_gold = medium_gold_value
		progress_towards_friend_effect = {
			REASON = friend_good_booze
			CHARACTER = scope:visiting_liege
			OPINION = default_friend_opinion
		}
	}
}

host_dinner_events.1001 = {
	type = activity_event
	title = host_dinner_events.1001.title
	desc = host_dinner_events.1001.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = admiration
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = personality_honorable
	}
	cooldown = { years = 5 }

	trigger = {
		scope:visiting_liege = { drinks_alcohol_trigger = yes }
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			scope:visiting_liege = {
				has_trait = drunkard
			}
		}
		modifier = {
			factor = 0.5
			scope:visiting_liege = {
				has_trait = temperate
			}
		}
	}

	option = { # We must replenish the stores at once!
		name = host_dinner_events.1001.a
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.1001.replenished_stores
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				1001_replenish_stores = yes
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				OR = {
					has_trait = temperate
					has_trait = greedy
				}
			}
		}
	}

	option = { # Suggest your liege stop drinking like a mad lad
		name = host_dinner_events.1001.b
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.1001.didnt_replenish_stores
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				1001_dont_replenish_stores = yes
			}
		}
		stress_impact = {
			gluttonous = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				OR = {
					has_trait = gluttonous
					has_trait = generous
					has_trait = shy
					has_trait = compassionate
				}
			}
		}
	}

	option = { # Sod this, pub?
		name = host_dinner_events.1001.c
		custom_tooltip = take_liege_to_pub_tt
		1001_replenish_stores = yes
		scope:visiting_liege = { trigger_event = { id = host_dinner_events.1002 days = 1 } }
		stress_impact = {
			generous = minor_stress_impact_loss
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				OR = {
					has_trait = greedy
					has_trait = shy
				}
			}
		}
	}

	option = { # Next round is on me, for a favor
		name = host_dinner_events.1001.d
		trigger = {
			OR = {
				has_trait = greedy
				has_trait = ambitious
			}
			NOT = { has_hook = scope:visiting_liege }
			scope:visiting_liege = { is_ai = yes }
		}
		add_hook = {
			type = indebted_hook
			target = scope:visiting_liege
		}
		stress_impact = {
			generous = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				OR = {
					has_trait = generous
					has_trait = compassionate
					has_trait = forgiving
					has_trait = shy
				}
			}
		}
	}
}

host_dinner_events.1002 = {
	type = activity_event
	title = host_dinner_events.1002.title
	desc = host_dinner_events.1002.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = wedding_drunk
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = toast_goblet
	}

	immediate = {
		show_as_tooltip = {
			1001_replenish_stores = yes
		}
	}

	option = { # Drink and be merry!
		name = host_dinner_events.1002.a
		reverse_add_opinion = {
			target = scope:stop_host_scope
			opinion = 20
			modifier = flattered_opinion
		}
		stress_impact = {
			base = minor_stress_impact_loss
			temperate = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				OR = {
					has_trait = temperate
					has_trait = shy
				}
			}
		}
	}

	option = { # Just a few drinks then maybe I'll go home
		name = host_dinner_events.1002.b
		scope:stop_host_scope = {
			add_opinion = {
				target = scope:visiting_liege
				modifier = weak_excuses
			}
		}
		stress_impact = {
			base = medium_stress_impact_loss
			drunkard = minor_stress_impact_gain
			shy = medium_stress_impact_loss
			gluttonous = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = -10
				OR = {
					has_trait = drunkard
					has_trait = gregarious
					has_trait = gluttonous
					has_trait = arrogant
				}
			}
		}
	}

	option = { # Drink so much you develop an addition
		name = host_dinner_events.1002.c
		trait = drunkard
		random_list = {
			24 = {
				trigger = {
					NOT = { has_trait = drunkard }
				}
				add_trait = drunkard
			}
			75 = {
				send_interface_toast = {
					title = drank_too_much_toast
					add_character_modifier = {
						modifier = drunken_stupor
						years = 5
					}
				}
			}
			1 = {
				death = {
					death_reason = death_drank_to_death
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			base = major_stress_impact_loss
			temperate = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 0
		}
	}
}

#Vassal: your liege is sleeping, do a prank?
scripted_effect 1003_liege_enjoys_effect = {
	scope:stop_host_scope = {
		progress_towards_hook_effect = {
			CHARACTER = scope:visiting_liege
			HOOK_TYPE = favor_hook
		}
	}
}
scripted_effect 1003_liege_does_not_enjoy_effect = {
	scope:stop_host_scope = {
		reverse_add_opinion = {
			target = scope:visiting_liege
			opinion = -20
			modifier = insulted_opinion
		}
	}
}
scripted_effect host_dinner_1003_enjoyed_spooky_experience_effect = {
	scope:stop_host_scope = {
		reverse_add_opinion = {
			target = scope:visiting_liege
			opinion = 20
			modifier = entertained_opinion
		}
		add_stress = medium_stress_loss
	}
	scope:visiting_liege = {
		add_stress = medium_stress_loss
	}
}

host_dinner_events.1003 = {
	type = activity_event
	title = host_dinner_events.1003.title
	desc = host_dinner_events.1003.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	lower_right_portrait = {
		character = scope:visiting_liege
	}
	cooldown = { years = 5 }

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			scope:visiting_liege = {
				OR = {
					has_trait = craven
					has_trait = brave
				}
			}
		}
	}

	option = { # Let's spook em
		name = host_dinner_events.1003.a
		trigger = {
			OR = { # You must be at least a little bit cheeky
				has_trait = deceitful
				has_trait = gregarious
			}
		}
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					host_dinner_1003_enjoyed_spooky_experience_effect = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_scared_tt
					custom_tooltip = may_get_favor_tt
				}
			}
		}
		hidden_effect = {
			scope:visiting_liege = {
				random_list = {
					50 = {
						modifier = {
							add = {
								value = 0
								subtract = ai_rationality
							}
						}
						modifier = {
							is_adult = no # Children are stupid
							add = 50
						}
						modifier = {
							has_trait = cynical
							factor = 0.1
						}
						modifier = {
							has_trait = eccentric
							factor = 10
						}
						set_variable = {
							name = 1006_believes_it_was_ghosts
							months = 2
						}
					}
					50 = {}
				}
				trigger_event = host_dinner_events.1004
			}
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			eccentric = massive_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = cynical
					has_trait = honest
					has_trait = zealous
				}
			}
			modifier = {
				add = 10
				scope:stop_host_scope = { # I'm a dick
					OR = {
						has_trait = cynical
						has_trait = callous
						has_trait = sadistic
						has_trait = deceitful
						has_trait = ambitious
					}
				}
				scope:visiting_liege = { # My liege is gullible
					OR = {
						has_trait = craven
						has_trait = paranoid
						has_trait = trusting
						has_trait = honest
					}
				}
			}
			modifier = {
				add = 10
				scope:stop_host_scope = { # I'm nice
					OR = {
						has_trait = compassionate
						has_trait = gregarious
						has_trait = loyal
					}
				}
				scope:visiting_liege = { # I believe my liege would be entertained by this
					OR = {
						has_trait = brave
						has_trait = gregarious
						has_trait = trusting
					}
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_rationality = -2
			}
		}
	}

	option = { # Alcohol is always a good gift!
		name = host_dinner_events.1003.b
		trigger = {
			scope:visiting_liege = { drinks_alcohol_trigger = yes }
		}
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1003_liege_enjoys_effect = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1003_liege_does_not_enjoy_effect = yes
				}
			}
		}
		hidden_effect = {
			set_variable = {
				name = 1006_alcoholic_gift
				months = 2
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1006
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = 10
				scope:visiting_liege = { # My liege is a drunk
					OR = {
						has_trait = gluttonous
						has_trait = drunkard
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = temperate
					has_trait = zealous
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_rationality = 0.5
			}
		}
	}

	option = { # Weed is always a good gift!
		name = host_dinner_events.1003.c
		trigger = {
			scope:visiting_liege = {
				OR = {
					drinks_alcohol_trigger = no
					has_trait = hashishiyah
				}
			}
		}
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1003_liege_enjoys_effect = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1003_liege_does_not_enjoy_effect = yes
				}
			}
		}
		hidden_effect = {
			set_variable = {
				name = 1006_weed_gift
				months = 2
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1006
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = 10
				scope:visiting_liege = { # My liege is a stoner
					OR = {
						has_trait = gluttonous
						has_trait = hashishiyah
					}
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = temperate
					has_trait = zealous
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_rationality = 0.5
			}
		}
	}

	option = { # A gift of men/women should put him/her in good spirits!
		name = host_dinner_events.1003.d
		trigger = {
			scope:visiting_liege = {
				is_adult = yes
				might_cheat_on_every_partner_trigger = yes
			}
		}
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1003_liege_enjoys_effect = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1003_liege_does_not_enjoy_effect = yes
				}
			}
		}
		hidden_effect = {
			set_variable = {
				name = 1006_hedonistic_gift
				months = 2
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1006
			}
		}
		stress_impact = {
			chaste = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				add = 10
				scope:visiting_liege = { # My liege is horny
					sexually_liberal_trigger = yes
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = chaste
					has_government = theocracy_government
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_sociability = 0.5
				ai_rationality = -1
			}
		}
	}

	option = { # The gift of my good company
		name = host_dinner_events.1003.e
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1003_liege_enjoys_effect = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1003_liege_does_not_enjoy_effect = yes
				}
			}
		}
		hidden_effect = {
			set_variable = {
				name = 1006_vanity_gift
				months = 2
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1006
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			eccentric = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			ai_value_modifier = {
				ai_sociability = 0.5
				ai_rationality = -0.5
			}
		}
	}
}

# The haunting follow-up for 1003
host_dinner_events.1004 = {
	type = activity_event
	title = host_dinner_events.1004.title
	desc = {
		desc = host_dinner_events.1004.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = var:1006_believes_it_was_ghosts
				}
				desc = host_dinner_events.1004.desc.ghost
			}
			desc = host_dinner_events.1004.desc.cynic
		}
	}

	theme = host_dinner
	override_background = { reference = corridor_night }
	left_portrait = {
		character = root
		animation = lantern
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { nightgown }
		}
	}
	lower_right_portrait = {
		character = scope:stop_host_scope
	}
	cooldown = { years = 5 }

	option = { # I am spooped, come save me!
		name = host_dinner_events.1004.a
		trigger = {
			exists = var:1006_believes_it_was_ghosts
		}
		custom_tooltip = vassal_may_get_hook_tt
		scope:stop_host_scope = {
			trigger_event = host_dinner_events.1005
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			brave = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = brave
					has_trait = arrogant
				}
			}
		}
	}

	option = { # I am spooped, no way I'm sleeping now!
		name = host_dinner_events.1004.b
		trigger = {
			exists = var:1006_believes_it_was_ghosts
		}
		scope:activity = {
			add_activity_log_entry = {
				key = haunted_by_ghosts_log
				tags = { bad }
				character = root
				target = root
				root = { add_stress = major_stress_gain }
			}
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			craven = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = humble
					has_trait = craven
				}
			}
		}
	}

	option = { # What fun!
		name = host_dinner_events.1004.c
		trigger = {
			NOT = { exists = var:1006_believes_it_was_ghosts }
		}
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1004.enjoyed_spooky_ghost
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				host_dinner_1003_enjoyed_spooky_experience_effect = yes
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			deceitful = minor_stress_impact_loss
			craven = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0.5
				OR = {
					has_trait = cynical
					has_trait = zealous
					has_trait = honest
					has_trait = craven
				}
			}
		}
	}

	option = { # What drivel!
		name = host_dinner_events.1004.d
		trigger = {
			NOT = { exists = var:1006_believes_it_was_ghosts }
		}
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1006.refused_gift
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				1003_liege_does_not_enjoy_effect = yes
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			trusting = minor_stress_impact_gain
			shy = medium_stress_impact_loss
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0.5
				OR = {
					has_trait = trusting
					has_trait = gregarious
					has_trait = forgiving
				}
			}
		}
	}
}

# Vassal follow-up for 1004
host_dinner_events.1005 = {
	type = activity_event
	title = host_dinner_events.1005.title
	desc = host_dinner_events.1005.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = laugh
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = fear
	}
	cooldown = { years = 5 }

	option = { # I am such an epic prankster!
		name = host_dinner_events.1005.a
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.1004.mocked_me
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				add_opinion = {
					target = scope:stop_host_scope
					opinion = -20
					modifier = insulted_opinion
				}
			}
		}
		stress_impact = {
			base = medium_stress_impact_loss
			wrathful = minor_stress_impact_loss
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = calm
					has_trait = compassionate
					has_trait = forgiving
					has_trait = gregarious
				}
			}
		}
	}
	option = { # I will eradicate the ghost, for a hook!
		name = host_dinner_events.1005.b
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.1004.hooked_me
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				scope:stop_host_scope = {
					add_hook = {
						target = scope:visiting_liege
						type = favor_hook
					}
				}
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = forgiving
				}
			}
		}
	}
	option = { # I will eradicate the ghost, out of the goodness of my heart.
		name = host_dinner_events.1005.c
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.1004.hooked_me
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				scope:stop_host_scope = {
					progress_towards_friend_effect = {
						REASON = friend_ghost_hunter
						CHARACTER = scope:visiting_liege
						OPINION = default_friend_opinion
					}
				}
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = shy
					has_trait = arrogant
				}
			}
		}
	}
}

# Gift follow-up for 1003
host_dinner_events.1006 = {
	type = activity_event
	title = host_dinner_events.1006.title
	desc = {
		desc = host_dinner_events.1006.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:stop_host_scope = { exists = var:1006_alcoholic_gift }
				}
				desc = host_dinner_events.1006.desc.alcohol
			}
			triggered_desc = {
				trigger = {
					scope:stop_host_scope = { exists = var:1006_weed_gift }
				}
				desc = host_dinner_events.1006.desc.weed
			}
			triggered_desc = {
				trigger = {
					scope:stop_host_scope = { exists = var:1006_hedonistic_gift }
				}
				desc = host_dinner_events.1006.desc.hedonist
			}
			triggered_desc = {
				trigger = {
					scope:stop_host_scope = { exists = var:1006_vanity_gift }
				}
				desc = host_dinner_events.1006.desc.vanity
			}
		}
		desc = host_dinner_events.1006.desc.outro
	}

	theme = host_dinner
	override_background = { reference = bedchamber }
	left_portrait = {
		character = root
		animation = shock
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { nightgown }
		}
	}
	center_portrait = {
		trigger = {
			exists = scope:concubine_scope
		}
		character = scope:concubine_scope
		animation = flirtation
		triggered_outfit = {
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = admiration
	}
	cooldown = { years = 5 }

	immediate = {
		if = {
			limit = {
				scope:stop_host_scope = { exists = var:1006_hedonistic_gift }
			}
			create_character = {
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				template = local_beauty_character
				save_scope_as = concubine_scope
			}
		}
	}

	option = { # What a nice gift for me
		name = host_dinner_events.1006.a
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1006.liked_gift
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				progress_towards_friend_effect = {
					REASON = friend_special_gift
					CHARACTER = scope:visiting_liege
					OPINION = default_friend_opinion
				}
				scope:visiting_liege = {
					add_stress = medium_stress_loss
					if = {
						limit = {
							exists = scope:concubine_scope
						}
						had_sex_with_effect = {
							CHARACTER = scope:concubine_scope
							PREGNANCY_CHANCE = pregnancy_chance
						}
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		if = {
			limit = {
				scope:stop_host_scope = {
					OR = {
						exists = var:1006_alcoholic_gift
						exists = var:1006_weed_gift
					}
				}
			}
			stress_impact = {
				zealous = minor_stress_impact_gain
				temperate = minor_stress_impact_gain
				arrogant = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				scope:stop_host_scope = { exists = var:1006_hedonistic_gift }
			}
			stress_impact = {
				zealous = minor_stress_impact_gain
				temperate = minor_stress_impact_gain
				chaste = minor_stress_impact_gain
				shy = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				scope:stop_host_scope = { exists = var:1006_vanity_gift }
			}
			stress_impact = {
				arrogant = minor_stress_impact_gain
				shy = minor_stress_impact_gain
				greedy = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				AND = {
					scope:stop_host_scope = {
						OR = {
							exists = var:1006_alcoholic_gift
							exists = var:1006_weed_gift
						}
					}
					NOR = {
						has_trait = drunkard
						has_trait = hashishiyah
					}
					OR = {
						has_trait = zealous
						has_trait = temperate
						has_trait = arrogant
					}
				}
			}
			modifier = {
				factor = 0
				AND = {
					scope:stop_host_scope = {
						exists = var:1006_hedonistic_gift
					}
					NOR = {
						has_trait = lustful
						has_trait = rakish
					}
					OR = {
						has_trait = zealous
						has_trait = temperate
						has_trait = chaste
						has_trait = shy
					}
				}
			}
			modifier = {
				factor = 0
				AND = {
					scope:stop_host_scope = {
						exists = var:1006_vanity_gift
					}
					OR = {
						has_trait = arrogant
						has_trait = shy
						has_trait = greedy
					}
				}
			}
			modifier = {
				factor = 0
				has_trait = paranoid
			}
		}
	}

	option = { # I refuse this gift
		name = host_dinner_events.1006.b
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1006.refused_gift
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				add_opinion = {
					target = scope:visiting_liege
					opinion = -20
					modifier = insulted_opinion
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		if = {
			limit = {
				scope:stop_host_scope = {
					OR = {
						exists = var:1006_alcoholic_gift
						exists = var:1006_weed_gift
					}
				}
			}
			stress_impact = {
				gluttonous = minor_stress_impact_gain
				drunkard = minor_stress_impact_gain
				impatient = minor_stress_impact_gain
				lazy = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				scope:stop_host_scope = { exists = var:1006_hedonistic_gift }
			}
			stress_impact = {
				lustful = minor_stress_impact_gain
				rakish = minor_stress_impact_gain
				gregarious = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				scope:stop_host_scope = { exists = var:1006_vanity_gift }
			}
			stress_impact = {
				gregarious = minor_stress_impact_gain
				humble = minor_stress_impact_gain
				generous = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				AND = {
					scope:stop_host_scope = {
						OR = {
							exists = var:1006_alcoholic_gift
							exists = var:1006_weed_gift
						}
					}
					OR = {
						has_trait = gluttonous
						has_trait = drunkard
						has_trait = impatient
						has_trait = lazy
					}
				}
			}
			modifier = {
				factor = 0
				AND = {
					scope:stop_host_scope = {
						exists = var:1006_hedonistic_gift
					}
					OR = {
						has_trait = lustful
						has_trait = rakish
						has_trait = gregarious
					}
				}
			}
			modifier = {
				factor = 0
				AND = {
					scope:stop_host_scope = {
						exists = var:1006_vanity_gift
					}
					OR = {
						has_trait = gregarious
						has_trait = humble
						has_trait = generous
					}
				}
			}
		}
	}
	after = {
		if = {
			limit = {
				is_ai = yes
				scope:stop_host_scope = { is_ai = yes }
				exists = scope:concubine_scope
			}
			scope:concubine_scope = { silent_disappearance_effect = yes }
		}
	}
}

# Vassal: put on a show for your liege based on their memories
scripted_effect 1007_liege_enjoys_effect = {
	scope:stop_host_scope = {
		send_interface_toast = {
			title = host_dinner_events.1007.enjoyed_performance
			left_icon = scope:visiting_liege
			right_icon = scope:stop_host_scope
			progress_towards_friend_effect = {
				REASON = friend_enjoyed_performance
				CHARACTER = scope:visiting_liege
				OPINION = default_friend_opinion
			}
			add_prestige = medium_prestige_gain
		}
	}
}
scripted_effect 1007_liege_offended_effect = {
	scope:stop_host_scope = {
		send_interface_toast = {
			title = host_dinner_events.1007.disliked_performance
			left_icon = scope:visiting_liege
			right_icon = scope:stop_host_scope
			progress_towards_rival_effect = {
				REASON = rival_offended_by_performance
				CHARACTER = scope:visiting_liege
				OPINION = default_rival_opinion
			}
			add_character_modifier = {
				modifier = embarassing_performance_modifier
				years = 2
			}
		}
	}
}

host_dinner_events.1007 = {
	type = activity_event
	title = host_dinner_events.1007.title
	desc = host_dinner_events.1007.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = boredom
	}
	cooldown = { years = 5 }

	trigger = {
		scope:visiting_liege = {
			OR = {
				any_memory = {
					has_memory_category = war
					has_memory_category = positive
					exists = memory_participant:loser
				}
				any_memory = {
					has_memory_category = positive
					exists = memory_participant:dead_relation
				}
				any_memory = {
					has_memory_category = negative
					exists = memory_participant:dead_relation
				}
				any_memory = {
					has_memory_type = married
				}
			}
		}
	}

	immediate = {
		scope:visiting_liege = {
			random_memory = {
				limit = {
					has_memory_category = war
					has_memory_category = positive
					exists = memory_participant:loser # Someone for the jester to play
				}
				save_scope_as = war_memory_scope
				memory_participant:loser = { save_scope_as = loser }
			}
			random_memory = {
				limit = {
					has_memory_category = positive
					exists = memory_participant:dead_relation
				}
				save_scope_as = dead_rival_memory_scope
				memory_participant:dead_relation = { save_scope_as = dead_relation }
			}
			random_memory = {
				limit = {
					has_memory_category = negative
					exists = memory_participant:dead_relation
				}
				save_scope_as = dead_positive_relation_memory_scope
				memory_participant:dead_relation = { save_scope_as = dead_relation }
			}
			random_memory = {
				limit = {
					has_memory_type = married
				}
				save_scope_as = marriage_memory_scope
				memory_participant:spouse = { save_scope_as = spouse }
			}
		}
	}

	option = { # A performance based on their military memory!
		name = host_dinner_events.1007.a
		trigger = {
			exists = scope:war_memory_scope
		}
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1007_liege_enjoys_effect = yes
				}
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1007_liege_offended_effect = yes
				}
			}
		}
		hidden_effect = {
			scope:war_memory_scope = {
				save_scope_as = memory_performance_scope
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1008
			}
		}
		stress_impact = {
			content = minor_stress_impact_gain
			calm = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = zealous
					has_trait = temperate
					has_trait = arrogant
				}
			}
		}
	}

	option = { # A performance based on their rival dying lmao
		name = host_dinner_events.1007.b
		trigger = {
			exists = scope:dead_rival_memory_scope
		}
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1007_liege_enjoys_effect = yes
				}
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1007_liege_offended_effect = yes
				}
			}
		}
		hidden_effect = {
			scope:dead_rival_memory_scope = {
				save_scope_as = memory_performance_scope
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1008
			}
		}
		stress_impact = {
			sadistic = medium_stress_impact_loss
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = forgiving
					has_trait = just
				}
			}
		}
	}

	option = { # A performance based on a beloved one dying
		name = host_dinner_events.1007.c
		trigger = {
			exists = scope:dead_positive_relation_memory_scope
		}
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1007_liege_enjoys_effect = yes
				}
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1007_liege_offended_effect = yes
				}
			}
		}
		hidden_effect = {
			scope:dead_positive_relation_memory_scope = {
				save_scope_as = memory_performance_scope
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1008
			}
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}

	option = { # A performance based on a marriage
		name = host_dinner_events.1007.d
		trigger = {
			exists = scope:marriage_memory_scope
		}
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_enjoys_tt
					1007_liege_enjoys_effect = yes
				}
				50 = {
					show_chance = no
					desc = tour_grounds_if_liege_is_insulted_tt
					1007_liege_offended_effect = yes
				}
			}
		}
		hidden_effect = {
			scope:marriage_memory_scope = {
				save_scope_as = memory_performance_scope
			}
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1008
			}
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			cynical = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = cynical
				}
			}
		}
	}

	option = { # Wow, these are all terrible ideas!
		name = host_dinner_events.1007.e
		trigger = {
			OR = { # Max 4 options
				NOT = { exists = scope:war_memory_scope }
				NOT = { exists = scope:dead_rival_memory_scope }
				NOT = { exists = scope:dead_positive_relation_memory_scope }
				NOT = { exists = scope:marriage_memory_scope }
			}
		}
		stress_impact = {
			gregarious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_trait = gregarious
			}
		}
	}
}

# Liege response to performance
host_dinner_events.1008 = {
	type = activity_event
	title = host_dinner_events.1008.title
	desc = {
		desc = host_dinner_events.1008.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:memory_performance_scope = scope:war_memory_scope
				}
				desc = host_dinner_events.1008.desc.mid.war_memory
			}
			triggered_desc = {
				trigger = {
					scope:memory_performance_scope = scope:dead_rival_memory_scope
				}
				desc = host_dinner_events.1008.desc.mid.dead_rival_memory
			}
			triggered_desc = {
				trigger = {
					scope:memory_performance_scope = scope:dead_positive_relation_memory_scope
				}
				desc = host_dinner_events.1008.desc.mid.dead_positive_relation_memory
			}
			triggered_desc = {
				trigger = {
					scope:memory_performance_scope = scope:marriage_memory_scope
				}
				desc = host_dinner_events.1008.desc.mid.marriage_memory
			}
		}
		desc = host_dinner_events.1008.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = personality_bold
	}
	cooldown = { years = 5 }

	option = { # I love it!
		name = host_dinner_events.1008.a
		1007_liege_enjoys_effect = yes
		if = {
			limit = {
				exists = scope:war_memory_scope
				scope:memory_performance_scope = scope:war_memory_scope
			}
			stress_impact = {
				base = medium_stress_impact_loss
				content = minor_stress_impact_gain
				calm = minor_stress_impact_gain
				compassionate = minor_stress_impact_gain
				forgiving = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				exists = scope:dead_rival_memory_scope
				scope:memory_performance_scope = scope:dead_rival_memory_scope
			}
			stress_impact = {
				base = medium_stress_impact_loss
				content = minor_stress_impact_gain
				calm = minor_stress_impact_gain
				compassionate = minor_stress_impact_gain
				forgiving = minor_stress_impact_gain
				humble = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				exists = scope:dead_positive_relation_memory_scope
				scope:memory_performance_scope = scope:dead_positive_relation_memory_scope
			}
			stress_impact = { # This is not *intended* as a mockery, but some characters may take it that way
				base = medium_stress_impact_loss
				loyal = minor_stress_impact_gain
				wrathful = minor_stress_impact_gain
				arrogant = minor_stress_impact_gain
				trusting = minor_stress_impact_gain
				vengeful = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				exists = scope:marriage_memory_scope
				scope:memory_performance_scope = scope:marriage_memory_scope
			}
			stress_impact = {
				base = medium_stress_impact_loss
				disloyal = minor_stress_impact_gain
				callous = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				cynical = minor_stress_impact_gain
				arrogant = minor_stress_impact_gain
				stubborn = minor_stress_impact_gain
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					AND = {
						exists = scope:war_memory_scope
						scope:memory_performance_scope = scope:war_memory_scope
						OR = {
							has_trait = content
							has_trait = calm
							has_trait = compassionate
							has_trait = forgiving
						}
					}
					AND = {
						exists = scope:dead_rival_memory_scope
						scope:memory_performance_scope = scope:dead_rival_memory_scope
						OR = {
							has_trait = content
							has_trait = calm
							has_trait = compassionate
							has_trait = forgiving
							has_trait = humble
						}
					}
					AND = {
						exists = scope:dead_positive_relation_memory_scope
						scope:memory_performance_scope = scope:dead_positive_relation_memory_scope
						OR = {
							has_trait = loyal
							has_trait = wrathful
							has_trait = arrogant
							has_trait = trusting
							has_trait = vengeful
						}
					}
					AND = {
						exists = scope:marriage_memory_scope
						scope:memory_performance_scope = scope:marriage_memory_scope
						OR = {
							has_trait = disloyal
							has_trait = callous
							has_trait = sadistic
							has_trait = cynical
							has_trait = arrogant
							has_trait = stubborn
						}
					}
				}
			}
		}
	}

	option = { # This is outrageously offensive!
		name = host_dinner_events.1008.b
		1007_liege_offended_effect = yes
		if = {
			limit = {
				exists = scope:war_memory_scope
				scope:memory_performance_scope = scope:war_memory_scope
			}
			stress_impact = {
				ambitious = minor_stress_impact_gain
				wrathful = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				vengeful = minor_stress_impact_gain
				arrogant = minor_stress_impact_gain
				stubborn = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				exists = scope:dead_rival_memory_scope
				scope:memory_performance_scope = scope:dead_rival_memory_scope
			}
			stress_impact = {
				ambitious = minor_stress_impact_gain
				wrathful = minor_stress_impact_gain
				callous = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				vengeful = minor_stress_impact_gain
				arrogant = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				exists = scope:dead_positive_relation_memory_scope
				scope:memory_performance_scope = scope:dead_positive_relation_memory_scope
			}
			stress_impact = { # This is not *intended* as a mockery, but some characters may take it that way
				disloyal = minor_stress_impact_gain
				calm = minor_stress_impact_gain
				humble = minor_stress_impact_gain
				forgiving = minor_stress_impact_gain
			}
		}
		else_if = {
			limit = {
				exists = scope:marriage_memory_scope
				scope:memory_performance_scope = scope:marriage_memory_scope
			}
			stress_impact = {
				loyal = minor_stress_impact_gain
				compassionate = minor_stress_impact_gain
				gregarious = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
				humble = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					AND = {
						exists = scope:war_memory_scope
						scope:memory_performance_scope = scope:war_memory_scope
						OR = {
							has_trait = ambitious
							has_trait = wrathful
							has_trait = sadistic
							has_trait = vengeful
							has_trait = arrogant
							has_trait = stubborn
						}
					}
					AND = {
						exists = scope:dead_rival_memory_scope
						scope:memory_performance_scope = scope:dead_rival_memory_scope
						OR = {
							has_trait = ambitious
							has_trait = wrathful
							has_trait = callous
							has_trait = sadistic
							has_trait = vengeful
							has_trait = arrogant
						}
					}
					AND = {
						exists = scope:dead_positive_relation_memory_scope
						scope:memory_performance_scope = scope:dead_positive_relation_memory_scope
						OR = {
							has_trait = disloyal
							has_trait = calm
							has_trait = humble
							has_trait = forgiving
						}
					}
					AND = {
						exists = scope:marriage_memory_scope
						scope:memory_performance_scope = scope:marriage_memory_scope
						OR = {
							has_trait = loyal
							has_trait = compassionate
							has_trait = gregarious
							has_trait = zealous
							has_trait = humble
						}
					}
				}
			}
		}
	}
}

# You invite your liege to share some weed brownies, or just a regular dessert
scripted_effect 1009_liege_enjoys_effect = {
	scope:stop_host_scope = {
		send_interface_toast = {
			title = host_dinner_events.1009.enjoyed_weed
			left_icon = root
			right_icon = scope:visiting_liege
			progress_towards_friend_effect = {
				REASON = friend_hashish_cakes
				CHARACTER = scope:visiting_liege
				OPINION = default_friend_opinion
			}
			scope:visiting_liege = {
				add_character_modifier = {
					modifier = hashish_with_friend_modifier
					years = 5
				}
			}
		}
	}
}
scripted_effect 1009_liege_dislikes_effect = {
	scope:stop_host_scope = {
		send_interface_toast = {
			title = host_dinner_events.1009.enjoyed_weed
			left_icon = root
			right_icon = scope:visiting_liege
			reverse_add_opinion = {
				target = scope:visiting_liege
				opinion = -20
				modifier = insulted_opinion
			}
		}
	}
}
scripted_effect 1009_liege_enjoys_no_drugs_effect = {
	scope:stop_host_scope = {
		send_interface_toast = {
			title = host_dinner_events.1009.enjoyed_weed
			left_icon = root
			right_icon = scope:visiting_liege
			reverse_add_opinion = {
				target = scope:visiting_liege
				modifier = tasty_food_opinion
				opinion = 10
			}
		}
	}
}

host_dinner_events.1009 = {
	type = activity_event
	title = host_dinner_events.1009.title
	desc = host_dinner_events.1009.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = boredom
	}
	cooldown = { years = 5 }

	trigger = {
		is_adult = yes
		scope:visiting_liege = { is_adult = yes }
		OR = { # You conceivably would have weed lying around
			has_trait = hashishiyah
			can_be_hashishiyah = yes
		}
		OR = { # You have no objections to intoxicants
			NOT = { has_trait = zealous }
			faith = {
				trait_is_virtue = gluttonous
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			has_trait = hashishiyah
		}
		modifier = {
			factor = 2
			has_trait = gluttonous
		}
		modifier = {
			factor = 0.5
			has_trait = temperate
		}
	}

	option = { # Weed brownies it is!
		name = host_dinner_events.1009.a
		show_as_tooltip = {
			random_list = {
				50 = {
					1009_liege_enjoys_effect = yes
				}
				50 = {
					1009_liege_dislikes_effect = yes
				}
			}
		}
		hidden_effect = {
			scope:visiting_liege = { trigger_event = host_dinner_events.1010 }
		}
		stress_impact = {
			base = medium_stress_impact_loss
			greedy = minor_stress_impact_gain # You think I'm *made* of Hashish?
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			temperate = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = callous
					has_trait = sadistic
					has_trait = temperate
				}
			}
		}
	}

	option = { # Regular desserts are just as good!
		name = host_dinner_events.1009.b
		1009_liege_enjoys_no_drugs_effect = yes
		stress_impact = {
			base = medium_stress_impact_loss
			generous = minor_stress_impact_gain
			gluttonous = medium_stress_impact_gain
			hashishiyah = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = gluttonous
					has_trait = hashishiyah
				}
			}
		}
	}
}

# Liege responds to the offer of Hashish
host_dinner_events.1010 = {
	type = activity_event
	title = host_dinner_events.1010.title
	desc = host_dinner_events.1010.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = personality_bold
	}

	option = { # Weed brownies it is!
		name = host_dinner_events.1010.a
		scope:activity = {
			add_activity_log_entry = {
				key = enjoyed_weed_together_log
				tags = { good }
				character = root
				target = scope:stop_host_scope
				root = {
					1009_liege_enjoys_effect = yes
					if = {
						limit = {
							scope:activity = {
								has_activity_option = {
									category = special_type
									option = tour_type_majesty
								}
							}
						}
						increase_tour_success_effect = { POINTS = 1 }
					}
				}
			}
		}
		stress_impact = {
			base = medium_stress_impact_loss
			zealous = minor_stress_impact_gain
			temperate = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = zealous
					has_trait = temperate
				}
			}
		}
	}

	option = { # None for me thanks
		name = host_dinner_events.1010.b
		1009_liege_dislikes_effect = yes
		stress_impact = {
			greedy = minor_stress_impact_gain
			gluttonous = minor_stress_impact_gain
			hashishiyah = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = gluttonous
					has_trait = hashishiyah
				}
			}
		}
	}
}

# Liege is (not) vegetarian, adjust the meal for them?
host_dinner_events.1011 = {
	type = activity_event
	title = host_dinner_events.1011.title
	desc = {
		desc = host_dinner_events.1011.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					is_vegetarian_trigger = yes
					scope:visiting_liege = {
						is_vegetarian_trigger = no
					}
				}
				desc = host_dinner_events.1011.desc.vegetarian
			}
			desc = host_dinner_events.1011.desc
		}
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = personality_forgiving
	}
	cooldown = { years = 5 }

	trigger = {
		OR = {
			AND = {
				is_vegetarian_trigger = yes
				scope:visiting_liege = {
					is_vegetarian_trigger = no
				}
			}
			AND = {
				is_vegetarian_trigger = no
				scope:visiting_liege = {
					is_vegetarian_trigger = yes
				}
			}
		}
	}

	option = { # I'll adjust the dinner for their benefit
		name = host_dinner_events.1011.a
		remove_short_term_gold = minor_gold_value
		progress_towards_friend_effect = {
			REASON = friend_adjusted_meal
			CHARACTER = scope:visiting_liege
			OPINION = default_friend_opinion
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = callous
					has_trait = sadistic
					has_trait = ambitious
					has_trait = arrogant
				}
			}
			modifier = {
				factor = 0
				short_term_gold < minor_gold_value
			}
		}
	}

	option = { # I'll adjust the dinner for their benefit
		name = host_dinner_events.1011.b
		trigger = {
			scope:visiting_liege = { is_ai = yes }
		}
		remove_short_term_gold = minor_gold_value
		progress_towards_hook_effect = {
			CHARACTER = scope:visiting_liege
			HOOK_TYPE = favor_hook
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			arrogant = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = callous
					has_trait = sadistic
					has_trait = arrogant
				}
			}
			modifier = {
				factor = 0
				short_term_gold < minor_gold_value
			}
		}
	}

	option = { # Regular desserts are just as good!
		name = host_dinner_events.1011.c
		progress_towards_rival_effect = {
			REASON = rival_didnt_adjust_meal
			CHARACTER = scope:visiting_liege
			OPINION = default_rival_opinion
		}
		stress_impact = {
			shy = medium_stress_impact_loss
			generous = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = gregarious
					has_trait = generous
					has_trait = compassionate
				}
			}
		}
	}
}

# Make a cake in the shape of something your liege likes
scripted_effect host_dinner_1020_liege_likes_effect = {
	scope:stop_host_scope = {
		progress_towards_friend_effect = {
			REASON = friend_lovely_cake
			CHARACTER = scope:visiting_liege
			OPINION = default_friend_opinion
		}
	}
}

host_dinner_events.1020 = {
	type = activity_event
	title = host_dinner_events.1020.title
	desc = host_dinner_events.1020.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = personality_forgiving
	}
	cooldown = { years = 5 }

	option = { # A castle cake!
		name = host_dinner_events.1020.a
		remove_short_term_gold = minor_gold_value
		custom_tooltip = marshal_may_like_tt
		hidden_effect = {
			set_variable = {
				name = castle_cake
				years = 1
			}
			scope:visiting_liege = {
				random_list = {
					50 = { # Liege likes it
						modifier = {
							factor = 2
							has_trait = education_martial
						}
						modifier = {
							add = 10
							has_trait = wrathful
						}
						modifier = {
							add = 10
							has_trait = callous
						}
						modifier = {
							add = 10
							has_trait = sadistic
						}
						modifier = {
							add = 10
							has_trait = brave
						}
						modifier = {
							add = 10
							OR = {
								has_trait = strategist
								has_trait = overseer
								has_trait = lifestyle_hunter
							}
						}
						trigger_event = host_dinner_events.1021
					}
					50 = { # Liege hates it
						modifier = {
							add = 10
							has_trait = patient
						}
						modifier = {
							add = 10
							has_trait = compassionate
						}
						modifier = {
							add = 10
							has_trait = craven
						}
						trigger_event = host_dinner_events.1022
					}
				}
			}
		}
		stress_impact = {
			generous = minor_stress_impact_loss
			patient = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = compassionate
				}
			}
			modifier = {
				factor = 0
				short_term_gold < minor_gold_value
			}
		}
	}

	option = { # A holy symbol cake!
		name = host_dinner_events.1020.b
		remove_short_term_gold = minor_gold_value
		custom_tooltip = learning_may_like_tt
		hidden_effect = {
			set_variable = {
				name = religious_cake
				years = 1
			}
			scope:visiting_liege = {
				random_list = {
					50 = { # Liege likes it
						modifier = {
							factor = 2
							has_trait = education_learning
						}
						modifier = { # Aniconists should hate icons
							factor = 0.5
							NOT = { has_trait = cynical }
							faith_is_aniconic_trigger = yes
						}
						modifier = {
							add = 10
							has_trait = zealous
							faith_is_aniconic_trigger = no
						}
						modifier = {
							add = 10
							has_trait = compassionate
						}
						modifier = {
							add = 10
							num_virtuous_traits > 0
						}
						modifier = {
							add = 10
							OR = {
								has_trait = whole_of_body
								has_trait = scholar
								has_trait = theologian
							}
						}
						trigger_event = host_dinner_events.1021
					}
					50 = { # Liege hates it
						modifier = {
							factor = 2
							has_trait = zealous
							faith_is_aniconic_trigger = yes
						}
						modifier = {
							add = 10
							num_sinful_traits > 0
						}
						modifier = {
							add = 10
							has_trait = wrathful
						}
						modifier = {
							add = 10
							has_trait = cynical
						}
						trigger_event = host_dinner_events.1022
					}
				}
			}
		}
		stress_impact = {
			generous = minor_stress_impact_loss
			cynical = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = cynical
					has_trait = callous
					has_trait = sadistic
				}
			}
			modifier = {
				factor = 0
				short_term_gold < minor_gold_value
			}
		}
	}

	option = { # A lewd cake
		name = host_dinner_events.1020.c
		remove_short_term_gold = minor_gold_value
		custom_tooltip = lustful_may_like_tt
		hidden_effect = {
			set_variable = {
				name = lewd_cake
				years = 1
			}
			scope:visiting_liege = {
				random_list = {
					50 = { # Liege likes it
						modifier = {
							factor = 2
							OR = {
								has_trait = lustful
								has_trait = rakish
								is_deviant_trigger = yes
							}
						}
						# Add more for each of these traits you have
						modifier = {
							add = 10
							has_trait = lustful
						}
						modifier = {
							add = 10
							has_trait = rakish
						}
						modifier = {
							add = 10
							is_deviant_trigger = yes
						}
						modifier = {
							add = 10
							has_trait = seducer
						}
						modifier = {
							factor = 0
							has_trait = celibate
						}
						modifier = { # It is shaped like a human body part afterall
							add = 10
							is_cannibal_trigger = yes
						}
						trigger_event = host_dinner_events.1021
					}
					50 = { # Liege hates it
						modifier = {
							add = 10
							has_trait = chaste
						}
						modifier = {
							add = 10
							has_trait = zealous
						}
						modifier = {
							add = 10
							has_trait = temperate
						}
						trigger_event = host_dinner_events.1022
					}
				}
			}
		}
		if = {
			limit = {
				faith = {
					OR = {
						trait_is_sin = lustful
						has_doctrine_parameter = deviancy_illegal
						has_doctrine_parameter = deviancy_shunned
					}
				}
			}
			stress_impact = {
				generous = minor_stress_impact_loss
				chaste = minor_stress_impact_gain
				celibate = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		else = {
			stress_impact = {
				generous = minor_stress_impact_loss
				chaste = minor_stress_impact_gain
				celibate = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = chaste
					has_trait = celibate
					AND = {
						faith = {
							OR = {
								trait_is_sin = lustful
								has_doctrine_parameter = deviancy_illegal
								has_doctrine_parameter = deviancy_shunned
							}
						}
						has_trait = zealous
					}
				}
			}
			modifier = {
				factor = 0
				short_term_gold < minor_gold_value
			}
		}
	}

	option = { # This is a stupid idea
		name = host_dinner_events.1020.d
		stress_impact = {
			greedy = minor_stress_impact_loss
			compassionate = minor_stress_impact_gain
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = compassionate
					has_trait = gregarious
				}
			}
		}
	}
}

# Liege likes it!
host_dinner_events.1021 = {
	type = activity_event
	title = host_dinner_events.1021.title
	desc = {
		desc = host_dinner_events.1021.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:stop_host_scope.var:castle_cake
				}
				desc = host_dinner_events.1021.desc.mid.castle
			}
			triggered_desc = {
				trigger = {
					exists = scope:stop_host_scope.var:religious_cake
				}
				desc = host_dinner_events.1021.desc.mid.religious
			}
			triggered_desc = {
				trigger = {
					exists = scope:stop_host_scope.var:lewd_cake
					is_attracted_to_men = yes
				}
				desc = host_dinner_events.1021.desc.mid.lewd
			}
			triggered_desc = {
				trigger = {
					exists = scope:stop_host_scope.var:lewd_cake
				}
				desc = host_dinner_events.1021.desc.mid.lewd_woman
			}
		}
		desc = host_dinner_events.1021.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = admiration
	}
	cooldown = { years = 5 }

	option = { # Such fun!
		name = host_dinner_events.1021.a
		scope:activity = {
			add_activity_log_entry = {
				key = enjoyed_a_good_cake_log
				tags = { good }
				character = root
				target = scope:stop_host_scope
				scope:stop_host_scope = {
					send_interface_toast = {
						title = host_dinner_events.1020.likes_it
						left_icon = scope:visiting_liege
						right_icon = scope:stop_host_scope
						host_dinner_1020_liege_likes_effect = yes
					}
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_majesty
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			cynical = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = shy
					has_trait = cynical
					has_trait = arrogant
				}
			}
		}
	}

	option = { # I owe you one!
		name = host_dinner_events.1021.b
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1020.likes_it
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				progress_towards_hook_effect = {
					CHARACTER = scope:visiting_liege
					HOOK_TYPE = favor_hook
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = gregarious
				}
			}
		}
	}
}

# Liege hates it!
host_dinner_events.1022 = {
	type = activity_event
	title = host_dinner_events.1022.title
	desc = {
		desc = host_dinner_events.1022.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:stop_host_scope.var:castle_cake
				}
				desc = host_dinner_events.1022.desc.mid.castle
			}
			triggered_desc = {
				trigger = {
					exists = scope:stop_host_scope.var:religious_cake
				}
				desc = host_dinner_events.1022.desc.mid.religious
			}
			triggered_desc = {
				trigger = {
					exists = scope:stop_host_scope.var:lewd_cake
				}
				desc = host_dinner_events.1022.desc.mid.lewd
			}
		}
		desc = host_dinner_events.1022.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = disgust
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = admiration
	}
	cooldown = { years = 5 }

	option = { # Pretend to like it
		name = host_dinner_events.1022.a
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1020.likes_it
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				host_dinner_1020_liege_likes_effect = yes
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			honest = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					has_trait = shy
					has_trait = arrogant
					has_trait = callous
					has_trait = sadistic
					has_trait = honest
				}
			}
		}
	}

	option = { # Wow, I hate this!
		name = host_dinner_events.1022.b
		scope:activity = {
			add_activity_log_entry = {
				key = had_a_bad_cake_log
				tags = { bad }
				character = root
				target = scope:stop_host_scope
				scope:stop_host_scope = {
					send_interface_toast = {
						title = host_dinner_events.1020.hates_it
						left_icon = scope:visiting_liege
						right_icon = scope:stop_host_scope
						add_prestige = medium_prestige_loss
						reverse_add_opinion = {
							target = scope:visiting_liege
							opinion = -20
							modifier = insulted_opinion
						}
					}
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_majesty
							}
						}
					}
					decrease_tour_success_effect = { POINTS = 1 }
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_intimidation
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		stress_impact = {
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0.5
				has_trait = gregarious
			}
		}
	}
}

# Rival crashes the party
host_dinner_events.1030 = {
	type = activity_event
	title = host_dinner_events.1030.title
	desc = host_dinner_events.1030.desc

	theme = host_dinner
	left_portrait = {
		character = scope:visiting_liege
		animation = rage
	}
	right_portrait = {
		character = scope:rival_scope
		animation = schadenfreude
	}
	cooldown = { years = 5 }

	trigger = {
		scope:visiting_liege = {
			any_relation = {
				type = rival
				is_available_ai = yes
			}
		}
	}

	immediate = {
		scope:visiting_liege = {
			random_relation = {
				type = rival
				limit = {
					is_available_ai = yes
				}
				save_scope_as = rival_scope
			}
		}
	}

	option = { # Get em out of here!
		name = host_dinner_events.1030.a
		progress_towards_friend_effect = {
			REASON = friend_removed_rival
			CHARACTER = scope:visiting_liege
			OPINION = default_friend_opinion
		}
		stress_impact = {
			generous = minor_stress_impact_loss
			shy = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = shy
					has_trait = callous
					has_trait = sadistic
					has_trait = ambitious
				}
			}
		}
	}

	option = { # Get em out... for a price
		name = host_dinner_events.1030.b
		show_as_tooltip = {
			progress_towards_hook_effect = {
				CHARACTER = scope:visiting_liege
				HOOK_TYPE = favor_hook
			}
		}
		hidden_effect = {
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1031
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = content
				}
			}
		}
	}

	option = { # Hah! I love this guy!
		name = host_dinner_events.1030.c
		set_relation_friend = {
			reason = friend_irritated_liege
			target = scope:rival_scope
		}
		custom_tooltip = liege_may_not_like_that_tt
		hidden_effect = {
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1032
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = ambitious
				}
			}
		}
	}
}

# Vassal is trying to hook you for getting rid of your rival
host_dinner_events.1031 = {
	type = activity_event
	title = host_dinner_events.1031.title
	desc = {
		desc = host_dinner_events.1031.desc.intro
		desc = host_dinner_events.1031.desc
	}

	theme = host_dinner
	left_portrait = {
		character = scope:visiting_liege
		animation = rage
	}
	right_portrait = {
		character = scope:rival_scope
		animation = schadenfreude
	}
	lower_right_portrait = {
		character = scope:stop_host_scope
	}

	option = { # Get em out of here!
		name = host_dinner_events.1031.a
		scope:stop_host_scope = {
			progress_towards_hook_effect = {
				CHARACTER = scope:visiting_liege
				HOOK_TYPE = favor_hook
			}
		}
		stress_impact = {
			stubborn = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
		ai_chance = { # This event exists as an opt-out for the player, the AI should always say yes
			base = 100
		}
	}

	option = { # I'll just grin and bear it
		name = host_dinner_events.1031.b
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1030.liege_refuses
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				custom_tooltip = failed_to_hook_tt
			}
		}
		stress_impact = {
			base = medium_stress_impact_gain
			patient = medium_stress_impact_loss
			compassionate = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}
		ai_chance = {
			base = 0
		}
	}
}

# Vassal is becoming friends with your rival
host_dinner_events.1032 = {
	type = activity_event
	title = host_dinner_events.1032.title
	desc = {
		desc = host_dinner_events.1031.desc.intro
		desc = host_dinner_events.1032.desc
	}

	theme = host_dinner
	left_portrait = {
		character = scope:stop_host_scope
		animation = happiness
	}
	right_portrait = {
		character = scope:rival_scope
		animation = laugh
	}
	lower_left_portrait = {
		character = scope:visiting_liege
	}

	option = { # What is the meaning of this!
		name = host_dinner_events.1032.a
		scope:activity = {
			add_activity_log_entry = {
				key = rival_turned_up_at_dinner_log
				tags = { bad }
				character = root
				target = scope:rival_scope
				scope:stop_host_scope = {
					send_interface_toast = {
						title = host_dinner_events.1030.liege_refuses
						left_icon = scope:visiting_liege
						right_icon = scope:stop_host_scope
						progress_towards_rival_effect = {
							REASON = rival_making_friends_with_rival
							CHARACTER = scope:visiting_liege
							OPINION = default_rival_opinion
						}
					}
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_intimidation
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_majesty
							}
						}
					}
					decrease_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		stress_impact = {
			patient = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			content = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = forgiving
			}
		}
	}

	option = { # I'll turn the other cheek
		name = host_dinner_events.1032.b
		scope:activity = {
			add_activity_log_entry = {
				key = rival_turned_up_at_dinner_log
				tags = { bad }
				character = root
				target = scope:rival_scope
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_intimidation
							}
						}
					}
					decrease_tour_success_effect = { POINTS = 1 }
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_majesty
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		stress_impact = {
			base = medium_stress_impact_gain
			forgiving = medium_stress_impact_loss
			stubborn = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 10
				has_trait = forgiving
			}
		}
	}
}

# Time to play some board games
host_dinner_events.1040 = {
	type = activity_event
	title = host_dinner_events.1040.title
	desc = host_dinner_events.1040.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = boredom
	}
	cooldown = { years = 5 }
	trigger = {
		can_add_hook = {
			type = favor_hook
			target = scope:visiting_liege
		}
		scope:visiting_liege = {
			can_add_hook = {
				type = favor_hook
				target = scope:stop_host_scope
			}
		}
	}

	option = { # Play chess for hook!
		name = host_dinner_events.1040.a
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = if_you_win_tt
					add_hook = {
						type = favor_hook
						target = scope:visiting_liege
					}
				}
				50 = {
					show_chance = no
					desc = if_you_lose_tt
					scope:visiting_liege = {
						add_hook = {
							type = favor_hook
							target = scope:stop_host_scope
						}
					}
				}
			}
			configure_start_board_game_effect = {
				BG_INITIATOR = scope:stop_host_scope
				BG_ATTACKER = scope:stop_host_scope
				BG_DEFENDER = scope:visiting_liege
				SYSTEM = chess
				LOCALE = feast
				OUTPUT_EVENT = host_dinner_events.1042
				INVALIDATION_EVENT = board_games.0021
			}
		}
		hidden_effect = {
			scope:visiting_liege = { trigger_event = host_dinner_events.1041 }
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 2
				has_trait = strategist
			}
			modifier = {
				factor = 0
				has_trait = paranoid
			}
		}
	}

	option = { # Nah, chess is cringe.
		name = host_dinner_events.1040.b
		scope:visiting_liege = {
			add_opinion = {
				target = scope:stop_host_scope
					modifier = bored_opinion
					opinion = -10
			}
		}
		stress_impact = {
			shy = medium_stress_impact_loss
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					has_trait = gregarious
					has_trait = ambitious
				}
			}
		}
	}
}

# Board game response
host_dinner_events.1041 = {
	type = activity_event
	title = host_dinner_events.1041.title
	desc = host_dinner_events.1041.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = scheme
	}

	option = { # Play chess for hook!
		name = host_dinner_events.1041.a
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = if_you_lose_tt
					scope:stop_host_scope = {
						add_hook = {
							type = favor_hook
							target = scope:visiting_liege
						}
					}
				}
				50 = {
					modifier = {
						add = 10
						has_trait_xp = {
							trait = tourney_participant
							track = wit
							value >= 10
						}
					}
					modifier = {
						add = 10
						has_trait_xp = {
							trait = tourney_participant
							track = wit
							value >= 20
						}
					}
					modifier = {
						add = 10
						has_trait_xp = {
							trait = tourney_participant
							track = wit
							value >= 30
						}
					}
					modifier = {
						add = 10
						has_trait_xp = {
							trait = tourney_participant
							track = wit
							value >= 40
						}
					}
					modifier = {
						add = 100
						has_trait_xp = {
							trait = tourney_participant
							track = wit
							value >= 50
						}
					}
					show_chance = no
					desc = if_you_win_tt
					scope:visiting_liege = {
						add_hook = {
							type = favor_hook
							target = scope:stop_host_scope
						}
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					OR = {
						has_activity_option = {
							category = special_type
							option = tour_type_majesty
						}
						has_activity_option = {
							category = special_type
							option = tour_type_taxation
						}
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		configure_start_board_game_effect = {
			BG_INITIATOR = scope:stop_host_scope
			BG_ATTACKER = scope:stop_host_scope
			BG_DEFENDER = scope:visiting_liege
			SYSTEM = chess
			LOCALE = feast
			OUTPUT_EVENT = host_dinner_events.1042
			INVALIDATION_EVENT = board_games.0021
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 2
				has_trait = strategist
			}
			modifier = {
				factor = 0
				has_trait = paranoid
			}
		}
	}

	option = { # Nah, chess is cringe.
		name = host_dinner_events.1041.b
		stress_impact = {
			shy = medium_stress_impact_loss
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					has_trait = gregarious
					has_trait = ambitious
				}
			}
		}
	}
}

# Board game outcome
host_dinner_events.1042 = {
	type = activity_event
	title = host_dinner_events.1042.title
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:bg_victor = root
				}
				desc = host_dinner_events.1042.desc
			}
			triggered_desc = {
				trigger = {
					NOT = { scope:bg_victor = root }
				}
				desc = host_dinner_events.1042.desc.loser
			}
		}
	}

	theme = host_dinner
	left_portrait = {
		character = scope:bg_victor
		animation = ecstasy
	}
	right_portrait = {
		character = scope:bg_loser
		animation = anger
	}

	option = { # Ending
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							scope:bg_loser = this
						}
						desc = host_dinner_events.1042.a.bad
					}
					desc = host_dinner_events.1042.a
				}
			}
		}
		if = {
			limit = {
				NOT = { scope:bg_victor = { has_hook = scope:bg_loser } }
			}
			scope:bg_victor = {
				add_hook = {
					type = favor_hook
					target = scope:bg_loser
				}
			}
		}
		else = {
			show_as_tooltip = {
				scope:bg_victor = {
					add_hook = {
						type = favor_hook
						target = scope:bg_loser
					}
				}
			}
		}
	}
}

# Budget dinner
host_dinner_events.1050 = {
	type = activity_event
	title = host_dinner_events.1050.title
	desc = host_dinner_events.1050.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = boredom
	}
	cooldown = { years = 5 }
	trigger = {
		OR = {
			has_trait = greedy
			short_term_gold <= yearly_character_income
			monthly_character_income <= medium_income_multiplier_value
		}
	}

	option = { # Pay for a smaller dinner
		name = host_dinner_events.1050.a
		random_list = {
			50 = {
				modifier = {
					factor = 0.5
					scope:visiting_liege = {
						OR = {
							has_trait = arrogant
							has_trait = gluttonous
						}
					}
				}
				desc = tour_grounds_if_liege_enjoys_tt
				reverse_add_opinion = {
			 		target = scope:visiting_liege
			 		modifier = entertained_opinion
			 		opinion = 10
				}
			}
			50 = {
				modifier = {
					factor = 0.5
					scope:visiting_liege = {
						OR = {
							has_trait = humble
							has_trait = temperate
						}
					}
				}
				desc = tour_grounds_if_liege_is_insulted_tt
				reverse_add_opinion = {
			 		target = scope:visiting_liege
			 		modifier = insulted_opinion
			 		opinion = -10
				}
			}
		}
		stress_impact = {
			greedy = minor_stress_impact_loss
			profligate = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = profligate
					has_trait = arrogant
					has_trait = stubborn
					has_trait = gregarious
				}
			}
		}
	}

	option = { # Nah let's just go ahead and splash out
		name = host_dinner_events.1050.b
		remove_short_term_gold = medium_gold_value
		reverse_add_opinion = {
	 		target = scope:visiting_liege
	 		modifier = entertained_opinion
	 		opinion = 15
		}
		stress_impact = {
			generous = minor_stress_impact_loss
			profligate = minor_stress_impact_loss
			humble = minor_stress_impact_gain
			greedy = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = humble
					has_trait = greedy
				}
			}
		}
	}

	option = { # I know a way!
		name = host_dinner_events.1050.c
		trigger = { has_trait = avaricious }
		remove_short_term_gold = minor_gold_value
		progress_towards_friend_effect = {
			REASON = friend_good_food
			CHARACTER = scope:visiting_liege
			OPINION = default_friend_opinion
		}
		stress_impact = {
			profligate = minor_stress_impact_gain
			generous = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = profligate
					has_trait = greedy
				}
			}
		}
	}
}

# You offer your liege some manflesh
scripted_effect 1060_liege_eat_heart_effect = {
	scope:visiting_liege = {
		random_list = {
			50 = {
				send_interface_toast = {
					desc = you_ate_a_human_heart
					add_character_modifier = {
						modifier = ate_human_heart
						years = 25
					}
				}
			}
			50 = {
				trigger = {
					NOT = {
						has_doctrine_parameter = cannibalism_legal
					}
					is_cannibal_trigger = no
				}
				send_interface_toast = {
					desc = you_ate_a_human_heart
					add_character_modifier = {
						modifier = ate_human_heart_bad
						years = 15
					}
				}
			}
		}
		give_cannibal_secret_or_trait_effect = yes
		if = {
			limit = {
				any_secret = {
					secret_type = secret_cannibal
				}
			}
			random_secret = {
				limit = {
					secret_type = secret_cannibal
				}
				reveal_to = scope:stop_host_scope
			}
		}
	}
	scope:stop_host_scope = {
		progress_towards_friend_effect = {
			REASON = friend_shared_meal
			CHARACTER = scope:visiting_liege
			OPINION = default_friend_opinion
		}
	}
}

host_dinner_events.1060 = {
	type = activity_event
	title = host_dinner_events.1060.title
	desc = {
		desc = host_dinner_events.1060.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = { faith = { has_doctrine_parameter = cannibalism_legal } }
				desc = host_dinner_events.1060.desc.cannibal_legal
			}
			desc = host_dinner_events.1060.desc.secret_cannibal
		}
		desc = host_dinner_events.1060.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	cooldown = { years = 5 }
	trigger = {
		is_vegetarian_trigger = no
		OR = {
			faith = {
				has_doctrine_parameter = cannibalism_legal
			}
			is_cannibal_trigger = yes
		}
		is_adult = yes
		scope:visiting_liege = { is_adult = yes }
	}
	weight_multiplier = {
		base = 1
		modifier = { # Unlikely to reveal your secret if you're paranoid
			factor = 0.1
			NOT = { faith = { has_doctrine_parameter = cannibalism_legal } }
			has_trait = paranoid
		}
		modifier = { # Unlikely to reveal your secret if you're not trusting
			factor = 0.5
			NOT = { faith = { has_doctrine_parameter = cannibalism_legal } }
			NOT = { has_trait = trusting }
		}
	}

	immediate = {
		random_dummy_gender_soldier_effect = { SCOPE_NAME = dead_soldier }
	}

	option = { # Offer the heart to your liege
		name = host_dinner_events.1060.a
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = host_dinner_if_liege_eat_tt
					1060_liege_eat_heart_effect = yes
				}
				50 = {
					show_chance = no
					desc = host_dinner_if_liege_refuse_tt
					add_opinion = {
						target = scope:visiting_liege
						modifier = insulted_opinion
						opinion = -15
					}
				}
			}
			if = {
				limit = {
					any_secret = {
						secret_type = secret_cannibal
					}
				}
				random_secret = {
					limit = {
						secret_type = secret_cannibal
					}
					reveal_to = scope:visiting_liege
				}
			}
		}
		hidden_effect = {
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1061
			}
		}
		if = {
			limit = {
				faith = { has_doctrine_parameter = cannibalism_legal }
			}
			stress_impact = {
				generous = minor_stress_impact_loss
				gluttonous = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
			}
		}
		else = {
			stress_impact = {
				generous = minor_stress_impact_loss
				generous = minor_stress_impact_loss
				gluttonous = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				faith = { has_doctrine_parameter = cannibalism_legal }
				OR = {
					has_trait = paranoid
					has_trait = zealous
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = gluttonous
				}
			}
		}
	}

	option = { # Eat the heart yourself
		name = host_dinner_events.1060.b
		add_character_modifier = {
			modifier = ate_human_heart
			years = 25
		}
		stress_impact = {
			greedy = minor_stress_impact_loss
			profligate = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = profligate
					has_trait = humble
					has_trait = trusting
				}
			}
		}
	}
}

# Liege responds
host_dinner_events.1061 = {
	type = activity_event
	title = host_dinner_events.1061.title
	desc = {
		desc = host_dinner_events.1061.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						faith = { has_doctrine_parameter = cannibalism_legal }
						has_trait = cannibal
					}
				}
				desc = host_dinner_events.1061.desc.cannibal_legal
			}
			triggered_desc = {
				trigger = { is_cannibal_trigger = yes }
				desc = host_dinner_events.1061.desc.secret_cannibal
			}
			desc = host_dinner_events.1061.desc.mid
		}
		desc = host_dinner_events.1061.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = admiration
	}
	immediate = {
		scope:stop_host_scope = {
			if = {
				limit = {
					any_secret = {
						secret_type = secret_cannibal
					}
				}
				random_secret = {
					limit = {
						secret_type = secret_cannibal
					}
					reveal_to = root
				}
			}
		}
	}

	option = { # Jag ater hjartat
		name = host_dinner_events.1061.a
		scope:activity = {
			add_activity_log_entry = {
				key = i_ate_a_heart_log
				tags = { good }
				character = root
				target = scope:stop_host_scope
				scope:stop_host_scope = {
					send_interface_toast = {
						title = host_dinner_events.1061.liege_ate_heart
						left_icon = scope:stop_host_scope
						right_icon = scope:visiting_liege
						1060_liege_eat_heart_effect = yes
					}
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_intimidation
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		if = {
			limit = {
				faith = { has_doctrine_parameter = cannibalism_legal }
			}
			stress_impact = {
				gluttonous = minor_stress_impact_loss
				shy = minor_stress_impact_gain
				temperate = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
			}
		}
		else = {
			stress_impact = {
				base = minor_stress_impact_gain
				gluttonous = minor_stress_impact_loss
				sadistic = medium_stress_impact_loss
				callous = medium_stress_impact_loss
				temperate = minor_stress_impact_gain
				zealous = minor_stress_impact_gain
				compassionate = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				add = 10
				OR = {
					has_trait = gluttonous
					has_trait = sadistic
					has_trait = callous
				}
			}
			modifier = {
				add = -5
				has_trait = paranoid
			}
			modifier = {
				factor = 0.1
				faith = { NOT = { has_doctrine_parameter = cannibalism_legal } }
				NOR = {
					has_trait = gluttonous
					has_trait = sadistic
					has_trait = callous
				}
			}
			modifier = {
				factor = 0
				faith = { NOT = { has_doctrine_parameter = cannibalism_legal } }
				OR = {
					has_trait = temperate
					has_trait = zealous
					has_trait = compassionate
				}
			}
		}
	}

	option = { # Jag ater inte hjartat
		name = host_dinner_events.1061.b
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1061.liege_refused_heart
				left_icon = scope:stop_host_scope
				right_icon = scope:visiting_liege
				add_opinion = {
					target = scope:visiting_liege
					modifier = insulted_opinion
					opinion = -15
				}
			}
		}
		stress_impact = {
			gluttonous = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
			callous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				is_cannibal_trigger = yes
			}
		}
	}
}

# A member of your liege's procession wants to join your court!
scripted_effect 1070_courtier_moves_effect = {
	scope:visiting_liege = {
		current_travel_plan = { 
			remove_character = scope:runaway_courtier 
		}
	}
	scope:stop_host_scope = {
		add_courtier = scope:runaway_courtier
	}
	scope:runaway_courtier = {
		remove_from_activity = scope:activity
		hidden_effect = {
			return_to_court = yes
		}
		add_character_flag = {
			flag = blocked_from_leaving
			years = 10
		}
	}
}

host_dinner_events.1070 = {
	type = activity_event
	title = host_dinner_events.1070.title
	desc = host_dinner_events.1070.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:runaway_courtier
		animation = personality_bold
	}
	cooldown = { years = 5 }

	trigger = {
		scope:visiting_liege = {
			NOT = {
				has_character_flag = had_courtier_poached
			}
		}
		scope:activity = {
			any_attending_character = {
				NOR = {
					is_close_family_of = scope:visiting_liege
					is_consort_of = scope:visiting_liege
					has_relation_friend = scope:visiting_liege
					has_relation_lover = scope:visiting_liege
					has_relation_soulmate = scope:visiting_liege
					any_relation = { this = root }
				}
				is_adult = yes
				is_landed = no
				is_imprisoned = no
				location = root.location
			}
		}
	}

	immediate = {
		scope:activity = {
			random_attending_character = {
				limit = {
					NOR = { # Is someone who can/would leave
						is_close_family_of = scope:visiting_liege
						is_consort_of = scope:visiting_liege
						# Friends and lovers shouldn't *want* to leave
						has_relation_friend = scope:visiting_liege
						has_relation_lover = scope:visiting_liege
						has_relation_soulmate = scope:visiting_liege
						# This should be someone you don't know well
						any_relation = { this = root }
					}
					is_adult = yes
					is_landed = no
					is_imprisoned = no
					location = root.location # They're present
				}
				weight = {
					base = 1
					opinion_modifier = {
						who = this
						opinion_target = scope:visiting_liege
						max = 30
						min = -30
						multiplier = -1
					}
					modifier = {
						has_trait = disloyal
						add = 10
					}
					modifier = {
						has_trait = loyal
						add = -10
					}
					modifier = {
						has_relation_rival = scope:visiting_liege
						add = -10
					}
				}
				save_scope_as = runaway_courtier
			}
		}
	}

	option = { # Recruit them to your court
		name = host_dinner_events.1070.a
		custom_tooltip = liege_may_be_offended_tt
		show_as_tooltip = {
			1070_courtier_moves_effect = yes
		}
		set_relation_friend = {
			reason = friend_dinner_chat
			target = scope:runaway_courtier
		}
		hidden_effect = {
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1071
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			content = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = shy
					has_trait = content
					has_trait = loyal
					has_trait = callous
					has_trait = sadistic
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_vengefulness = 0.5
			}
		}
	}

	option = { # Not interested thanks
		name = host_dinner_events.1070.b
		scope:runaway_courtier = {
			add_opinion = {
		 		target = root
		 		modifier = hurt_opinion
		 		opinion = -15
			}
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = gregarious
				}
			}
			ai_value_modifier = {
				ai_boldness = -1
			}
		}
	}
}

# Liege response to courtier being taken
host_dinner_events.1071 = {
	type = activity_event
	title = host_dinner_events.1071.title
	desc = host_dinner_events.1071.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:runaway_courtier
		animation = beg
	}
	immediate = {
		scope:visiting_liege = {
			add_character_flag = {
				flag = had_courtier_poached
				years = 5
			}
		}
	}
	option = { # Refuse to let them go
		name = host_dinner_events.1071.a
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1071.refused_to_let_them_go
				left_icon = scope:stop_host_scope
				right_icon = scope:visiting_liege
				progress_towards_rival_effect = {
					REASON = rival_denied_courtier
					CHARACTER = scope:visiting_liege
					OPINION = default_rival_opinion
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					OR = {
						has_activity_option = {
							category = special_type
							option = tour_type_intimidation
						}
						has_activity_option = {
							category = special_type
							option = tour_type_taxation
						}
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = forgiving
					has_trait = compassionate
				}
			}
		}
	}

	option = { # Let your people go
		name = host_dinner_events.1071.b
		scope:activity = {
			add_activity_log_entry = {
				key = my_courtier_was_taken_log
				tags = { bad }
				character = scope:runaway_courtier
				target = scope:stop_host_scope
				1070_courtier_moves_effect = yes
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_majesty
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss
			gregarious = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			disloyal = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = gregarious
					has_trait = vengeful
					has_trait = wrathful
					has_trait = greedy
					has_trait = disloyal
				}
			}
		}
	}
}

# Put on a deliberately offensive performance for your rival liege
scripted_effect 1080_insulting_performance_effect = {
	scope:stop_host_scope = {
		add_stress = medium_stress_loss
		add_prestige = medium_prestige_gain
		downgrade_to_rival_effect = {
			CHARACTER = scope:visiting_liege
			REASON = rival_insulting_performance
		}
	}
}

host_dinner_events.1080 = {
	type = activity_event
	title = host_dinner_events.1080.title
	desc = host_dinner_events.1080.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = personality_compassionate
	}
	cooldown = { years = 5 }

	trigger = {
		scope:visiting_liege = {
			OR = {
				has_relation_potential_rival = root
				has_relation_rival = root
				opinion = { target = root value <= -10 }
			}
		}
	}

	option = { # Go ahead with the plan :ablobevil:
		name = host_dinner_events.1080.a
		show_as_tooltip = {
			1080_insulting_performance_effect = yes
		}
		hidden_effect = {
			scope:visiting_liege = {
				trigger_event = host_dinner_events.1081
			}
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			content = minor_stress_impact_gain
			shy = medium_stress_impact_loss
			compassionate = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
			humble = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = forgiving
					has_trait = content
					has_trait = gregarious
					has_trait = compassionate
					has_trait = loyal
					has_trait = humble
				}
			}
		}
	}

	option = { # Not interested thanks
		name = host_dinner_events.1080.b
		add_piety = minor_piety_gain
		stress_impact = {
			callous = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
			disloyal = minor_stress_impact_gain
			forgiving = medium_stress_impact_loss
			calm = minor_stress_impact_loss
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = disloyal
					has_trait = vengeful
					has_trait = wrathful
					has_trait = arrogant
				}
			}
		}
	}
}

host_dinner_events.1081 = {
	type = activity_event
	title = host_dinner_events.1081.title
	desc = host_dinner_events.1081.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = personality_compassionate
	}

	option = { # Well how bloody dare you!
		name = host_dinner_events.1081.a
		1080_insulting_performance_effect = yes
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			decrease_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			content = minor_stress_impact_gain
			humble = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = forgiving
					has_trait = content
					has_trait = humble
				}
			}
		}
	}

	option = { # Haha, you got me good!
		name = host_dinner_events.1081.b
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.1081.liked_performance
				left_icon = scope:stop_host_scope
				right_icon = scope:visiting_liege
				progress_towards_friend_effect = {
					REASON = friend_enjoyed_performance
					CHARACTER = scope:visiting_liege
					OPINION = default_friend_opinion
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			decrease_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			base = minor_stress_impact_gain
			forgiving = minor_stress_impact_loss
			content = minor_stress_impact_loss
			humble = minor_stress_impact_loss
			callous = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
			disloyal = minor_stress_impact_gain
			forgiving = medium_stress_impact_loss
			calm = minor_stress_impact_loss
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				NOR = {
					has_trait = forgiving
					has_trait = content
					has_trait = humble
				}
			}
			modifier = {
				add = -5
				has_trait = forgiving
			}
			modifier = {
				add = -5
				has_trait = content
			}
			modifier = {
				add = -5
				has_trait = humble
			}
		}
	}
}

# Murder your liege?
host_dinner_events.1090 = {
	type = activity_event
	title = host_dinner_events.1090.title
	desc = host_dinner_events.1090.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = personality_compassionate
	}
	cooldown = { years = 5 }

	trigger = {
		is_adult = yes
		any_scheme = {
			scheme_type = murder
			scheme_target = scope:visiting_liege
		}
	}

	option = { # Only death awaits this bloody nitwit
		name = host_dinner_events.1090.a
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = host_dinner_if_you_succeed_tt
					scope:visiting_liege = {
						death = {
							death_reason = death_murder
							killer = root
						}
					}
				}
				50 = {
					show_chance = no
					desc = host_dinner_if_you_fail_tt
					reverse_add_opinion = {
				 		target = scope:visiting_liege
				 		modifier = attempted_murder_opinion
					}
				}
			}
		}
		hidden_effect = {
			random_list = {
				75 = { # Success
					trigger = {
						NOT = {
							scope:activity = {
								any_attending_character = {
									scope:visiting_liege = {
										is_court_position_employer = {
											court_position = food_taster_court_position
											who = prev
										}
									}
								}
							}
						}
					}
					scope:visiting_liege = {
						trigger_event = host_dinner_events.1091
					}
				}
				25 = { # Failure
					trigger = {
						NOT = {
							scope:activity = {
								any_attending_character = {
									scope:visiting_liege = {
										is_court_position_employer = {
											court_position = food_taster_court_position
											who = prev
										}
									}
								}
							}
						}
					}
					scope:visiting_liege = {
						trigger_event = host_dinner_events.1092
					}
				}
				25 = { # Failure and also the food taster dies
					trigger = {
						scope:activity = {
							any_attending_character = {
								scope:visiting_liege = {
									is_court_position_employer = {
										court_position = food_taster_court_position
										who = prev
									}
								}
							}
						}
					}
					scope:activity = {
						random_attending_character = {
							limit = {
								scope:visiting_liege = {
									is_court_position_employer = {
										court_position = food_taster_court_position
										who = prev
									}
								}
							}
							save_scope_as = food_taster_scope
						}
					}
					scope:visiting_liege = {
						trigger_event = host_dinner_events.1093
					}
				}
			}
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			content = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			just = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = forgiving
					has_trait = content
					has_trait = humble
					has_trait = paranoid
					has_trait = just
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_vengefulness = 1
				ai_compassion = -1
				ai_zeal = -0.5
			}
		}
	}

	option = { # Let's not do this right now
		name = host_dinner_events.1090.b
		stress_impact = {
			base = minor_stress_impact_gain
			forgiving = minor_stress_impact_loss
			content = minor_stress_impact_loss
			humble = minor_stress_impact_loss
			callous = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
			disloyal = minor_stress_impact_gain
			forgiving = medium_stress_impact_loss
			calm = minor_stress_impact_loss
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				NOR = {
					has_trait = forgiving
					has_trait = content
					has_trait = humble
				}
			}
			modifier = {
				add = -5
				has_trait = forgiving
			}
			modifier = {
				add = -5
				has_trait = content
			}
			modifier = {
				add = -5
				has_trait = humble
			}
			ai_value_modifier = {
				ai_boldness = -0.5
				ai_vengefulness = -1
				ai_compassion = 1
				ai_zeal = 0.5
			}
		}
	}
}

# Murder succesful
host_dinner_events.1091 = {
	type = activity_event
	title = host_dinner_events.1091.title
	desc = host_dinner_events.1091.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = sick
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = scheme
	}

	immediate = {
		scope:activity = {
			add_activity_log_entry = {
				key = i_was_murdered_log
				show_in_conclusion = yes
				tags = { bad }
				character = root
				target = scope:stop_host_scope
				scope:stop_host_scope = {
					send_interface_toast = {
						title = host_dinner_1091_murder_succesful
						left_icon = scope:visiting_liege
						right_icon = scope:stop_host_scope
						scope:visiting_liege = {
							death = {
								death_reason = death_murder
								killer = scope:stop_host_scope
							}
						}
					}
				}
			}
		}
	}

	option = { # Curse you!
		name = host_dinner_events.1091.a
		ai_chance = {
			base = 10
		}
	}
}

# Murder failure
host_dinner_events.1092 = {
	type = activity_event
	title = host_dinner_events.1092.title
	desc = host_dinner_events.1092.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = shock
	}

	option = { # Curse you!
		name = host_dinner_events.1092.a
		scope:activity = {
			add_activity_log_entry = {
				key = vassal_attempted_to_kill_me_log
				show_in_conclusion = yes
				tags = { bad }
				character = root
				target = scope:stop_host_scope
				scope:stop_host_scope = {
					send_interface_toast = {
						title = host_dinner_1091_murder_failed
						left_icon = scope:visiting_liege
						right_icon = scope:stop_host_scope
						scope:visiting_liege = {
							add_opinion = {
						 		target = scope:stop_host_scope
						 		modifier = attempted_murder_opinion
							}
						}
					}
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_intimidation
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		#TODO_CD_EP2, end activity phase and get outta there
		ai_chance = {
			base = 10
		}
	}
	#TODO_CD_EP2, add an arrogant option to stay and maybe start a SCE duel to fuck em up.
}

# Murder failure (food taster edition)
host_dinner_events.1093 = {
	type = activity_event
	title = host_dinner_events.1093.title
	desc = host_dinner_events.1093.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:food_taster_scope
		animation = sick
	}

	option = { # Curse you!
		name = host_dinner_events.1093.a
		scope:activity = {
			add_activity_log_entry = {
				key = vassal_attempted_to_kill_me_log
				show_in_conclusion = yes
				tags = { bad }
				character = root
				target = scope:stop_host_scope
				scope:stop_host_scope = {
					send_interface_toast = {
						title = host_dinner_1091_murder_failed
						left_icon = scope:visiting_liege
						right_icon = scope:stop_host_scope
						scope:visiting_liege = {
							add_opinion = {
						 		target = scope:stop_host_scope
						 		modifier = attempted_murder_opinion
							}
						}
						scope:food_taster_scope = {
							death = {
								death_reason = death_murder
								killer = scope:stop_host_scope
							}
						}
					}
				}
				if = {
					limit = {
						scope:activity = {
							has_activity_option = {
								category = special_type
								option = tour_type_intimidation
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		#TODO_CD_EP2, end activity phase and get outta there
		ai_chance = {
			base = 10
		}
	}
}

######################
## Liege Events
## 3000-3999
## by James Beaumont
######################
# Liege: Initial event informing the liege that their vassal-host has decided to do a tour grounds mini-activity
host_dinner_events.3000 = {
	type = activity_event
	title = host_dinner_events.3000.title
	#CD note, we should aim to use a *lot* of triggered loc in these introductory events. The player is going to see them a lot of times, so the more variety and personality we can get across in the way you're greeted, the better.
	desc = {
		desc = host_dinner_events.3000.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = { category = special_type option = tour_type_majesty }
					}
				}
				desc = host_dinner_events.3000.desc.type.majesty
			}
			triggered_desc = {
				trigger = {
					scope:activity = {
						has_activity_option = { category = special_type option = tour_type_taxation }
					}
				}
				desc = host_dinner_events.3000.desc.type.taxation
			}
			desc = host_dinner_events.3000.desc.type.intimidation
		}
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_relation_rival = scope:stop_host_scope
						opinion = {
							target = scope:stop_host_scope
							value <= -25
						}
					}
				}
				desc = host_dinner_events.3000.desc.mid.hates_vassal
			}
			triggered_desc = {
				trigger = { has_relation_lover = scope:stop_host_scope }
				desc = host_dinner_events.3000.desc.mid.lover
			}
			triggered_desc = {
				trigger = { has_relation_friend = scope:stop_host_scope }
				desc = host_dinner_events.3000.desc.mid.friend
			}
			triggered_desc = {
				trigger = {
					OR = {
						is_close_family_of = scope:stop_host_scope
						is_consort_of = scope:stop_host_scope
					}
				}
				desc = host_dinner_events.3000.desc.mid.close_family
			}
			triggered_desc = {
				trigger = {
					exists = house
					scope:stop_host_scope.house ?= root.house
				}
				desc = host_dinner_events.3000.desc.mid.house
			}
			triggered_desc = {
				trigger = { is_powerful_vassal_of = scope:stop_host_scope }
				desc = host_dinner_events.3000.desc.mid.powerful_vassal
			}
			desc = host_dinner_events.3000.desc.mid.default
		}
		desc = host_dinner_events.3000.desc.mid
		desc = host_dinner_events.3000.desc.outro
	}

	theme = tour_arrival
	window = tour_arrival_event
	
	left_portrait = {
		character = root
		triggered_animation = {
            trigger = {
                OR = {
                    has_relation_rival = scope:stop_host_scope
                    opinion = {
                        target = scope:stop_host_scope
                        value <= -25
                    }
                }
            }
            animation = war_over_tie
        }
        triggered_animation = {
            trigger = {
                NOR = {
                    has_relation_rival = scope:stop_host_scope
                    opinion = {
                        target = scope:stop_host_scope
                        value <= -25
                    }
                }
            }
			animation = happiness
        }
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = personality_honorable
	}

	immediate = {
		if = {
			limit = {
				root.location.county.holder = {
					OR = {
						has_relation_friend = root
						opinion = {
							target = root
							value >= low_positive_opinion
						}
					}
				}
			}
			play_arrival_music_effect = {
				WELCOME_LEVEL = welcome
			}
		}
		else = {
			play_arrival_music_effect = {
				WELCOME_LEVEL = neutral
			}
		}
	}

	option = { # Very good, begin activity
		name = host_dinner_events.3000.a
		custom_tooltip = host_dinner_begins_tt
		reverse_add_opinion = {
			target = scope:stop_host_scope
			opinion = 20
			modifier = flattered_opinion
		}
		tour_generic_arrival_effect = yes
	}
}
scripted_trigger 3001_is_valid_for_seduction = {
	is_available_ai_adult = yes
	is_attracted_to_gender_of = root
	root = { is_attracted_to_gender_of = prev }
	might_cheat_on_every_partner_trigger = yes
	NOT = {
		has_trait = loyal
		has_trait = chaste
		has_trait = celibate
	}
	OR = {
		scope:stop_host_scope = { is_ai = yes }
		has_trait = lustful
		has_trait = disloyal
		has_trait = deceitful
	}
}

host_dinner_events.3001 = {
	type = activity_event
	title = host_dinner_events.3001.title
	desc = {
		desc = host_dinner_events.3001.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						has_trait = chaste
						has_trait = zealous
					}
				}
				desc = host_dinner_events.3001.desc.not_into_it
			}
			triggered_desc = {
				trigger = {
					has_trait = lustful
				}
				desc = host_dinner_events.3001.desc.into_it
			}
			desc = host_dinner_events.3001.desc.mid
		}
		desc = host_dinner_events.3001.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = admiration
	}
	right_portrait = {
		character = scope:lusty_spouse_scope
		animation = flirtation
	}
	cooldown = { years = 5 }

	trigger = {
		is_adult = yes
		scope:stop_host_scope = {
			any_spouse = {
				3001_is_valid_for_seduction = yes
			}
		}
	}

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			scope:visiting_liege = {
				has_trait = lustful
			}
		}
		modifier = {
			factor = 2
			scope:stop_host_scope = {
				any_spouse = {
					3001_is_valid_for_seduction = yes
					has_trait = lustful
				}
			}
		}
	}

	immediate = {
		scope:stop_host_scope = {
			random_spouse = {
				limit = {
					3001_is_valid_for_seduction = yes
				}
				weight = {
					base = 1
					modifier = {
						factor = 10
						has_trait = lustful
					}
				}
				save_scope_as = lusty_spouse_scope
			}
		}
	}

	option = { # Flattering, I'll take her/him up on this offer
		name = host_dinner_events.3001.a
		trigger = { might_cheat_on_every_partner_trigger = yes }
		set_relation_lover = {
			target = scope:lusty_spouse_scope
			reason = lover_adultery
		}
		had_sex_with_effect = {
			CHARACTER = scope:lusty_spouse_scope
			PREGNANCY_CHANCE = pregnancy_chance
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			chaste = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = shy
					has_trait = chaste
					has_trait = zealous
					has_trait = honest
					has_trait = paranoid
				}
			}
		}
	}

	option = { # I should tell VASSAL at once!
		name = host_dinner_events.3001.b
		trigger = {
			NOT = {
				root.faith = {
					has_doctrine_parameter = no_unfaithfulness_penalty_active
				}
			}
		}
		custom_tooltip = stop_host_is_informed_tt
		scope:stop_host_scope = {
			trigger_event = host_dinner_events.3002
		}
		show_as_tooltip = {
			progress_towards_friend_effect = {
				REASON = friend_informed_of_adultery
				CHARACTER = scope:stop_host_scope
				OPINION = default_friend_opinion
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			deceitful = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = deceitful
					has_trait = lustful
					has_trait = forgiving
				}
			}
		}
	}

	option = { # I won't tell... for a hook
		name = host_dinner_events.3001.c
		trigger = {
			NOT = {
				root.faith = {
					has_doctrine_parameter = no_unfaithfulness_penalty_active
				}
			}
			can_add_hook = {
				type = major_threat_hook
				target = scope:lusty_spouse_scope
			}
		}
		add_hook = {
	 		target = scope:lusty_spouse_scope
	 		type = major_threat_hook
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_taxation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			just = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			lustful = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = forgiving
					has_trait = honest
					has_trait = lustful
				}
			}
		}
	}

	option = { # Refuse to copulate
		name = host_dinner_events.3001.d
		reverse_add_opinion = {
	 		target = scope:lusty_spouse_scope
	 		modifier = rebuffed_opinion
	 		opinion = -15
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			honest = minor_stress_impact_gain
			lustful = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = honest
					has_trait = lustful
				}
			}
		}
	}
}

host_dinner_events.3002 = {
	type = activity_event
	title = host_dinner_events.3002.title
	desc = host_dinner_events.3002.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:lusty_spouse_scope
		animation = shame
	}
	lower_right_portrait = {
		character = scope:visiting_liege
	}

	immediate = {
		scope:visiting_liege = {
			progress_towards_friend_effect = {
				REASON = friend_informed_of_adultery
				CHARACTER = scope:stop_host_scope
				OPINION = default_friend_opinion
			}
		}
	}

	option = { # Divorce the harlet
		name = host_dinner_events.3002.a
		trigger = {
			root.faith = {
				has_doctrine_parameter = divorce_allowed
			}
		}
		divorce = scope:lusty_spouse_scope
		stress_impact = {
			forgiving = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = forgiving
					has_trait = humble
					has_trait = lustful
				}
			}
		}
	}

	option = { # Promise not to tell anyone for a hook
		name = host_dinner_events.3002.b
		add_hook = {
	 		target = scope:lusty_spouse_scope
	 		type = threat_hook
		}
		stress_impact = {
			just = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			honest = minor_stress_impact_gain
			lustful = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = forgiving
					has_trait = honest
					has_trait = lustful
				}
			}
		}
	}

	option = { # Overlook it
		name = host_dinner_events.3002.c
		reverse_add_opinion = {
	 		target = scope:lusty_spouse_scope
	 		modifier = forgiven_opinion
	 		opinion = 20
		}
		stress_impact = {
			just = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			trusting = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = vengeful
					has_trait = zealous
					has_trait = trusting
				}
			}
		}
	}

	option = { # Rival with them
		name = host_dinner_events.3002.d
		trigger = {
			root.faith = {
				NOT = { has_doctrine_parameter = divorce_allowed }
			}
		}
		set_relation_rival = {
			reason = rival_infidelity_accusation
			target = scope:lusty_spouse_scope
		}
		stress_impact = {
			forgiving = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			lustful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = forgiving
					has_trait = humble
					has_trait = lustful
				}
			}
		}
	}
}

#Local cullinary delicacy sounds absolutely vile but would be rude to reject
host_dinner_events.3003 = {
	type = activity_event
	title = host_dinner_events.3003.title
	desc = host_dinner_events.3003.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = disgust
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = happiness
	}
	cooldown = { years = 5 }

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			scope:stop_host_scope = {
				culture = { has_cultural_tradition = tradition_culinary_art }
			}
		}
	}

	option = { # Grit my teeth and swallow the "food"
		name = host_dinner_events.3003.a
		random_list = {
			5 = { # The food is so grotesque it makes you sick
				send_interface_toast = {
					title = host_dinner_events.3003.disgusting
					left_icon = root
					add_character_modifier = {
						modifier = bad_soup_modifier
						years = 5
					}
					contract_disease_effect = {
						DISEASE = ill
						TREATMENT_EVENT = yes
					}
				}
			}
			40 = { # The food is grotesque
				send_interface_toast = {
					title = host_dinner_events.3003.disgusting
					left_icon = root
					add_character_modifier = {
						modifier = bad_soup_modifier
						years = 5
					}
				}
			}
			40 = { # The food is great!
				send_interface_toast = {
					title = host_dinner_events.3003.delicious
					left_icon = root
					add_character_modifier = {
						modifier = good_soup_modifier
						years = 5
					}
				}
			}
			5 = { # The food is so great you can't get enough!
				send_interface_toast = {
					title = host_dinner_events.3003.delicious
					left_icon = root
					add_character_modifier = {
						modifier = good_soup_modifier
						years = 5
					}
					add_stress = major_stress_impact_loss
				}
			}
		}
		reverse_add_opinion = {
			target = scope:stop_host_scope
			opinion = 20
			modifier = pleased_opinion
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			humble = minor_stress_impact_loss
			deceitful = minor_stress_impact_loss
			arrogant = minor_stress_impact_gain
			pensive = minor_stress_impact_gain
			bossy = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = honest
					has_trait = arrogant
					has_trait = pensive
					has_trait = bossy
					has_trait = temperate
					has_trait = paranoid
				}
			}
		}
	}

	option = { # Refuse and cause a faux pas
		name = host_dinner_events.3003.b
		reverse_add_opinion = {
			target = scope:stop_host_scope
			opinion = -20
			modifier = insulted_opinion
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			decrease_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			curious = minor_stress_impact_gain
			deceitful = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			gluttonous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = curious
					has_trait = deceitful
					has_trait = compassionate
					has_trait = gregarious
					has_trait = shy
					has_trait = gluttonous
				}
			}
		}
	}

	option = { # Try to feed it to the dog
		name = {
			text = {
				first_valid = {
					triggered_desc = {
						trigger = {
							any_owned_story = {
								story_type = story_cycle_pet_dog
							}
						}
						desc = host_dinner_events.3003.c.my_dog
					}
					desc = host_dinner_events.3003.c.lieges_dog
				}
			}
		}
		trigger = {
			OR = {
				any_owned_story = {
					story_type = story_cycle_pet_dog
				}
				scope:stop_host_scope = {
					any_owned_story = {
						story_type = story_cycle_pet_dog
					}
				}
			}
		}
		duel = {
			skill = intrigue
			value = low_skill_rating
			50 = { # You feed the dog without anyone noticing
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3003.unnoticed
					left_icon = root
				}
				if = {
					limit = {
						scope:activity = {
							OR = {
								has_activity_option = {
									category = special_type
									option = tour_type_majesty
								}
								has_activity_option = {
									category = special_type
									option = tour_type_intimidation
								}
							}
						}
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3003.host_noticed
					left_icon = root
					reverse_add_opinion = {
						target = scope:stop_host_scope
						opinion = -20
						modifier = insulted_opinion
					}
				}
			}
		}
		stress_impact = {
			honest = minor_stress_impact_gain
			gluttonous = minor_stress_impact_gain
			curious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = honest
					has_trait = gluttonous
					has_trait = curious
				}
			}
		}
	}
}

# You corner your vassal's heir, manipulate them for a hook?
host_dinner_events.3004 = {
	type = activity_event
	title = host_dinner_events.3004.title
	desc = {
		desc = host_dinner_events.3004.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:stop_host_heir = { is_adult = no }
				}
				desc = host_dinner_events.3004.desc.mid.child
			}
			desc = host_dinner_events.3004.desc.mid.adult
		}
		desc = host_dinner_events.3004.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:stop_host_heir
		animation = happiness
	}
	cooldown = { years = 5 }

	trigger = {
		scope:stop_host_scope = {
			player_heir ?= {
				OR = { # They would be easy to manipulate
					AND = {
						is_adult = no
						age > 4
					}
					has_trait = trusting
					has_trait = dull
				}
				NOT = { this = root }
				location = root.location # They're present
			}
		}
		NOT = {
			has_strong_hook = scope:stop_host_scope.player_heir
		}
	}
	immediate = {
		scope:stop_host_scope = {
			player_heir = { save_scope_as = stop_host_heir }
		}
	}

	option = { # Manipulate them for a hook!
		name = host_dinner_events.3004.a
		show_as_tooltip = {
			random_list = {
				50 = {
					show_chance = no
					desc = host_dinner_events.3004.a.caught
					custom_tooltip = vassal_is_offended_tt
				}
				50 = {
					show_chance = no
					desc = host_dinner_events.3004.a.not_caught
					add_hook = {
						target = scope:stop_host_heir
						type = loyalty_hook
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					scope:stop_host_scope = { is_ai = no }
				}
				scope:stop_host_scope = {
					trigger_event = host_dinner_events.3005
				}
			}
			else = {
				random_list = {
					50 = {
						scope:activity = {
							add_activity_log_entry = {
								key = hooked_vassal_heir_log
								tags = { good }
								character = root
								target = scope:stop_host_heir
								root = {
									add_hook = {
										target = scope:stop_host_heir
										type = loyalty_hook
									}
									increase_tour_success_effect = { POINTS = 1 }
								}
							}
						}
					}
					50 = {
						scope:stop_host_scope = {
							trigger_event = host_dinner_events.3005
						}
					}
				}
			}
		}
		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = honest
					has_trait = compassionate
					has_trait = trusting
					has_trait = paranoid
					has_trait = shy
					has_trait = content
				}
			}
		}
	}

	option = { # Just have a chat
		name = host_dinner_events.3004.b
		random_list = {
			33 = {
				compare_modifier = {
					target = scope:stop_host_heir
					value = diplomacy
					multiplier = 2
				}
				opinion_modifier = {
					who = scope:stop_host_heir
					opinion_target = root
					max = 30
					min = -30
					multiplier = 0.75
				}
				send_interface_toast = {
					title = host_dinner_events.3004.friendly_convo
					left_icon = root
					right_icon = scope:stop_host_heir
					set_relation_friend = {
						reason = friend_dinner_chat
						target = scope:stop_host_heir
					}
				}
			}
			33 = {
				trigger = {
					NOT = {
						has_relation_potential_friend = scope:stop_host_heir
					}
				}
				send_interface_toast = {
					title = host_dinner_events.3004.friendly_convo
					left_icon = root
					right_icon = scope:stop_host_heir
					progress_towards_friend_effect = {
						REASON = friend_dinner_chat
						CHARACTER = scope:stop_host_heir
						OPINION = default_friend_opinion
					}
				}
			}
			33 = {
				modifier = {
					factor = 2
					number_of_opposing_personality_traits = {
						target = scope:stop_host_heir
						value >= 1
					}
				}
				send_interface_toast = {
					title = host_dinner_events.3004.awkward_convo
					left_icon = root
					right_icon = scope:stop_host_heir
					reverse_add_opinion = {
						target = scope:stop_host_heir
						modifier = awkward_opinion
						opinion = -20
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			deceitful = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = deceitful
					has_trait = callous
					has_trait = sadistic
					has_trait = ambitious
					has_trait = shy
				}
			}
		}
	}
}

# Vassal responds to catching liege manipulating heir for a hook
host_dinner_events.3005 = {
	type = activity_event
	title = host_dinner_events.3005.title
	desc = host_dinner_events.3005.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = shock
	}
	lower_right_portrait = {
		character = scope:stop_host_heir
	}

	option = { # Allow the hook, in exchange for a favor
		name = host_dinner_events.3005.a
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3005.hook_for_hook
				left_icon = root
				right_icon = scope:visiting_liege
				
				if = {
					limit = {
						scope:stop_host_scope = {
							NOT = {
								has_hook = scope:visiting_liege
							}
						}
					}
					scope:stop_host_scope = {
						add_hook = {
							target = scope:visiting_liege
							type = favor_hook
						}
					}
				}
				else_if = {
					limit = {
						scope:stop_host_scope = {
							vassal_contract_obligation_level_can_be_decreased = feudal_government_taxes
						}
					}
					scope:stop_host_scope = {
						vassal_contract_decrease_obligation_level = feudal_government_taxes
					}
				}
				else_if = {
					limit = {
						scope:stop_host_scope = {
							vassal_contract_obligation_level_can_be_decreased = feudal_government_levies
						}
					}
					scope:stop_host_scope = {
						vassal_contract_decrease_obligation_level = feudal_government_levies
					}
				}
				else = {
					pay_short_term_gold = {
						target = scope:stop_host_scope
						gold = major_gold_value
					}
				}
				scope:activity = {
					add_activity_log_entry = {
						key = hooked_vassal_heir_log
						tags = { good }
						character = prev
						target = scope:stop_host_heir
						prev = {
							add_hook = {
								target = scope:stop_host_heir
								type = loyalty_hook
							}
						}
					}
				}
			}
		}
		stress_impact = {
			honest = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
			content = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_trait = honest
					has_trait = compassionate
					has_trait = trusting
					has_trait = content
				}
			}
		}
	}

	option = { # Disallow the hook
		name = host_dinner_events.3005.b
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3005.disallowed_hook
				left_icon = root
				right_icon = scope:stop_host_scope
				progress_towards_rival_effect = {
					REASON = rival_denied_hook_on_heir
					CHARACTER = scope:stop_host_scope
					OPINION = default_rival_opinion
				}
			}
		}
		stress_impact = {
			loyal = minor_stress_impact_gain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_trait = loyal
			}
		}
	}
}

# You talk with a random courtier about how much better life is in the capital
scripted_effect 3006_courtier_moves_effect = {
	scope:visiting_liege = {
		add_hook = {
			type = loyalty_hook
			target = scope:runaway_courtier
		}
		if = {
			limit = {
				scope:runaway_courtier = {
					is_concubine_of = scope:stop_host_scope
				}
			}
			scope:stop_host_scope = {
				remove_concubine = scope:runaway_courtier
			}
			reverse_add_opinion = {
				target = scope:stop_host_scope
				modifier = stole_concubine_opinion
			}
		}
		hidden_effect = {
			scope:visiting_liege = {
				add_courtier = scope:runaway_courtier 
			}
			scope:visiting_liege.current_travel_plan = {
				add_companion = scope:runaway_courtier
			}
			if = {
				limit = { exists = scope:activity }
				scope:runaway_courtier = { add_to_activity = scope:activity }
			}
		}
	}
}

host_dinner_events.3006 = {
	type = activity_event
	title = host_dinner_events.3006.title
	desc = {
		desc = host_dinner_events.3006.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:runaway_courtier = { is_concubine_of = scope:stop_host_scope }
				}
				desc = host_dinner_events.3006.desc.mid.concubine
			}
			desc = host_dinner_events.3006.desc.mid.neutral
		}
		desc = host_dinner_events.3006.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:runaway_courtier
		animation = beg
	}
	cooldown = { years = 5 }

	trigger = {
		scope:stop_host_scope = {
			any_courtier = {
				NOR = {
					is_close_family_of = scope:stop_host_scope
					is_spouse_of = scope:stop_host_scope
					has_relation_friend = scope:stop_host_scope
					has_relation_lover = scope:stop_host_scope
					has_relation_soulmate = scope:stop_host_scope
					any_relation = { this = root }
				}
				is_adult = yes
				is_landed = no
				is_imprisoned = no
				location = root.location
			}
		}
	}

	immediate = {
		scope:stop_host_scope = {
			random_courtier = {
				limit = {
					NOR = { # Is someone who can/would leave
						is_close_family_of = scope:stop_host_scope
						# Can't take a spouse, but can take a concubine for some penalties
						is_spouse_of = scope:stop_host_scope
						# Friends and lovers shouldn't *want* to leave
						has_relation_friend = scope:stop_host_scope
						has_relation_lover = scope:stop_host_scope
						has_relation_soulmate = scope:stop_host_scope
						# This should be someone you don't know well
						any_relation = { this = root }
					}
					is_adult = yes
					is_landed = no
					is_imprisoned = no
					location = root.location # They're present
				}
				weight = {
					base = 1
					opinion_modifier = {
						who = this
						opinion_target = scope:stop_host_scope
						max = 30
						min = -30
						multiplier = -1
					}
					modifier = {
						has_trait = disloyal
						add = 10
					}
					modifier = {
						has_trait = loyal
						add = -10
					}
					modifier = {
						has_relation_rival = scope:stop_host_scope
						add = -10
					}
					modifier = { # Way more likely if this is an unwilling concubine
						has_opinion_modifier = {
							modifier = forced_me_concubine_marriage_opinion
							target = scope:stop_host_scope
						}
						add = 20
					}
				}
				save_scope_as = runaway_courtier
			}
		}
	}

	option = { # Recruit them to your court
		name = host_dinner_events.3006.a
		custom_tooltip = vassal_may_be_offended_tt
		show_as_tooltip = {
			3006_courtier_moves_effect = yes
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3007
			}
		}
		increase_tour_success_effect = { POINTS = 1 }
		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			content = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = shy
					has_trait = content
					has_trait = loyal
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}

	option = { # Take them as your own concubine
		name = host_dinner_events.3006.b
		trigger = {
			scope:runaway_courtier = {
				is_concubine_of = scope:stop_host_scope
			}
			allowed_concubines = yes
			allowed_more_concubines = yes
			OR = {
				allowed_to_marry_same_sex_trigger = yes
				NOT = { sex_same_as = scope:recipient }
			}
		}
		custom_tooltip = vassal_may_be_offended_tt
		show_as_tooltip = {
			3006_courtier_moves_effect = yes
			make_concubine = scope:runaway_courtier
		}
		hidden_effect = {
			set_variable = {
				name = 3006_taking_concubine
				value = yes
				months = 2
			}
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3007
			}
		}
		increase_tour_success_effect = { POINTS = 1 }
		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			content = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = shy
					has_trait = content
					has_trait = loyal
				}
			}
		}
	}

	option = { # Assure them that they have a friend in you
		name = host_dinner_events.3006.c
		set_relation_friend = {
			reason = friend_confidant
			target = scope:runaway_courtier
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			shy = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			disloyal = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = shy
					has_trait = ambitious
					has_trait = disloyal
				}
			}
		}
	}

	option = { # This is your place, worm!
		name = host_dinner_events.3006.d
		scope:runaway_courtier = {
			set_relation_rival = {
				reason = rival_refused_service
				target = root
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			shy = medium_stress_impact_loss
			compassionate = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			disloyal = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = gregarious
					has_trait = compassionate
					has_trait = ambitious
					has_trait = disloyal
				}
			}
		}
	}
}

# Vassal response to courtier being taken
host_dinner_events.3007 = {
	type = activity_event
	title = host_dinner_events.3007.title
	desc = {
		desc = host_dinner_events.3007.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:runaway_courtier = { is_concubine_of = scope:stop_host_scope }
				}
				desc = host_dinner_events.3007.desc.mid.concubine
			}
			desc = host_dinner_events.3007.desc.mid.neutral
		}
		desc = host_dinner_events.3007.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:runaway_courtier
		animation = beg
	}
	cooldown = { years = 5 }

	option = { # Refuse to let them go
		name = host_dinner_events.3007.a
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3007.refused_to_let_them_go
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				progress_towards_rival_effect = {
					REASON = rival_denied_courtier
					CHARACTER = scope:stop_host_scope
					OPINION = default_rival_opinion
				}
			}
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = forgiving
					has_trait = compassionate
				}
			}
		}
	}

	option = { # Let your people go
		name = host_dinner_events.3007.b
		scope:activity = {
			add_activity_log_entry = {
				key = stole_courtier_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:runaway_courtier
				3006_courtier_moves_effect = yes
				root = {
					if = {
						limit = {
							exists = scope:visiting_liege.var:3006_taking_concubine
						}
						add_opinion = {
							target = scope:stop_host_scope
							modifier = stole_concubine_opinion
						}
						scope:visiting_liege = {
							make_concubine = scope:runaway_courtier
						}
					}
				}
			}
		}
		stress_impact = {
			paranoid = medium_stress_impact_loss
			gregarious = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			disloyal = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = gregarious
					has_trait = vengeful
					has_trait = wrathful
					has_trait = greedy
					has_trait = disloyal
				}
			}
		}
	}
}

# Snooping around, you find a servant who seems to know something
host_dinner_events.3008 = {
	type = activity_event
	title = host_dinner_events.3008.title
	desc = host_dinner_events.3008.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	right_portrait = {
		character = scope:nervous_servant
		animation = worry
	}
	cooldown = { years = 5 }
	trigger = {
		OR = {
			scope:stop_host_scope = {
				any_secret = {
					NOT = {
						is_known_by = root
					}
				}
			}
			scope:stop_host_scope = {
				any_courtier = {
					any_secret = {
						NOT = {
							is_known_by = root
						}
					}
				}
			}
		}
	}
	immediate = {
		hidden_effect = {
			create_character = {
				location = root.location
				culture = root.location.culture
				faith = root.location.faith
				template = servant_character
				save_scope_as = nervous_servant
			}
			random_list = {
				50 = { # Chance to discover liege's secret
					trigger = {
						scope:stop_host_scope = {
							any_secret = {
								NOT = {
									is_known_by = root
								}
							}
						}
					}
					scope:stop_host_scope = {
						random_secret = {
							limit = {
								NOT = {
									is_known_by = root
								}
							}
							save_scope_as = secret_to_discover
						}
					}
				}
				50 = { # Chance to discover random courtier's secret
					trigger = {
						scope:stop_host_scope = {
							any_courtier = {
								any_secret = {
									NOT = {
										is_known_by = root
									}
								}
							}
						}
					}
					scope:stop_host_scope = {
						random_courtier = {
							limit = {
								any_secret = {
									NOT = {
										is_known_by = root
									}
								}
							}
							random_secret = {
								limit = {
									NOT = {
										is_known_by = root
									}
								}
								save_scope_as = secret_to_discover
							}
						}
					}
				}
			}
		}
	}

	option = { # Intimidate them for the secret!
		name = host_dinner_events.3008.a
		duel = {
			skills = { intrigue prowess }
			target = scope:nervous_servant
			50 = { # You intimidate them
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3008.secret_discovered
					left_icon = root
					scope:secret_to_discover = {
						reveal_to = root
					}
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3008.acting_sussy
					left_icon = root
					right_icon = scope:stop_host_scope
					reverse_add_opinion = {
						target = scope:stop_host_scope
						opinion = -20
						modifier = suspicious_opinion
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					OR = {
						has_activity_option = {
							category = special_type
							option = tour_type_intimidation
						}
						has_activity_option = {
							category = special_type
							option = tour_type_taxation
						}
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			content = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = compassionate
					has_trait = forgiving
					has_trait = trusting
					has_trait = shy
				}
			}
		}
	}

	option = { # Bribe them for the secret!
		name = host_dinner_events.3008.b
		duel = {
			skill = stewardship
			target = scope:nervous_servant
			50 = { # You intimidate them
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3008.secret_discovered
					left_icon = root
					remove_short_term_gold = minor_gold_value
					scope:secret_to_discover = {
						reveal_to = root
					}
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3008.acting_sussy
					left_icon = root
					right_icon = scope:stop_host_scope
					reverse_add_opinion = {
						target = scope:stop_host_scope
						opinion = -20
						modifier = suspicious_opinion
					}
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_taxation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			content = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = greedy
					has_trait = forgiving
					has_trait = trusting
				}
			}
		}
	}

	option = { # stop_host_scope would never hide anything from me!
		name = host_dinner_events.3008.c
		reverse_add_opinion = {
			target = scope:stop_host_scope
			opinion = 20
			modifier = grateful_opinion
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			deceitful = minor_stress_impact_gain
			vengeful = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = greedy
					has_trait = forgiving
					has_trait = trusting
				}
			}
		}
	}
	after = {
		if = {
			limit = {
				is_ai = yes
				scope:stop_host_scope = { is_ai = yes }
				exists = scope:nervous_servant
			}
			scope:nervous_servant = { silent_disappearance_effect = yes }
		}
	}
}

# The dinner is not to your liking, ask for something from home?
scripted_effect host_dinner_3010_give_local_food = {
	scope:stop_host_scope = {
		progress_towards_hook_effect = {
			CHARACTER = scope:visiting_liege
			HOOK_TYPE = favor_hook
		}
	}
}
scripted_effect host_dinner_3010_refuse_local_food = {
	scope:stop_host_scope = {
		progress_towards_rival_effect = {
			REASON = rival_refused_to_give_local_food
			CHARACTER = scope:visiting_liege
			OPINION = default_rival_opinion
		}
	}
}

host_dinner_events.3010 = {
	type = activity_event
	title = host_dinner_events.3010.title
	desc = host_dinner_events.3010.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = personality_honorable
	}
	cooldown = { years = 5 }

	option = { # Just ask for it
		name = host_dinner_events.3010.a
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = host_dinner_if_vassal_accepts_tt
					host_dinner_3010_give_local_food = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_vassal_rejects_tt
					host_dinner_3010_refuse_local_food = yes
				}
			}
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3011
			}
		}
		stress_impact = {
			base = medium_stress_impact_loss
			content = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = compassionate
					has_trait = forgiving
					has_trait = trusting
					has_trait = shy
				}
			}
		}
	}

	option = { # Just take your meal as it comes
		name = host_dinner_events.3010.b
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			base = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_trait = arrogant
			}
		}
	}
}

host_dinner_events.3011 = {
	type = activity_event
	title = host_dinner_events.3011.title
	desc = host_dinner_events.3011.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = personality_honorable
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = dismissal
	}

	option = { # Give it to them
		name = host_dinner_events.3011.a
		remove_short_term_gold = minor_gold_value
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3011.gave_local_food
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				host_dinner_3010_give_local_food = yes
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			generous = minor_stress_impact_loss
			callous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = greedy
					has_trait = callous
				}
			}
		}
	}

	option = { # Refuse
		name = host_dinner_events.3011.b
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3011.refused_local_food
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				host_dinner_3010_refuse_local_food = yes
			}
		}
		stress_impact = {
			generous = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = generous
					has_trait = compassionate
					has_trait = gregarious
				}
			}
		}
	}
}

# Drinking contest!
scripted_effect 3020_drinking_duel_effect = {
	scope:visiting_liege = {
		duel = {
			skills = { prowess diplomacy }
			target = scope:stop_host_scope
			50 = { # Drink them under the table
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					factor = 1.5
					health > scope:stop_host_scope.health
				}
				modifier = { # Chonky people can take their alcohol better
					factor = 1.5
					current_weight > scope:stop_host_scope.current_weight
				}
				scope:activity = {
					add_activity_log_entry = {
						key = won_drinking_contest_log
						tags = { good }
						character = scope:visiting_liege
						target = scope:stop_host_scope
						scope:visiting_liege = {
							send_interface_toast = {
								title = host_dinner_events.3020.won_drinking_duel
								left_icon = scope:visiting_liege
								right_icon = scope:stop_host_scope
								scope:stop_host_scope = {
									send_interface_toast = {
										title = host_dinner_events.3020.lost_drinking_duel
										left_icon = scope:stop_host_scope
										right_icon = scope:visiting_liege
										scope:visiting_liege = {
											progress_towards_hook_effect = {
												CHARACTER = scope:stop_host_scope
												HOOK_TYPE = favor_hook
											}
										}
									}
								}
								increase_tour_success_effect = { POINTS = 1 }
							}
						}
					}
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				modifier = {
					factor = 1.5
					health < scope:stop_host_scope.health
				}
				modifier = {
					factor = 1.5
					current_weight < scope:stop_host_scope.current_weight
				}
				scope:activity = {
					add_activity_log_entry = {
						key = lost_drinking_contest_log
						tags = { bad }
						character = scope:visiting_liege
						target = scope:stop_host_scope
						scope:visiting_liege = {
							send_interface_toast = {
								title = host_dinner_events.3020.lost_drinking_duel
								left_icon = scope:visiting_liege
								right_icon = scope:stop_host_scope
								scope:stop_host_scope = {
									send_interface_toast = {
										title = host_dinner_events.3020.won_drinking_duel
										left_icon = scope:stop_host_scope
										right_icon = scope:visiting_liege
										progress_towards_hook_effect = {
											CHARACTER = scope:visiting_liege
											HOOK_TYPE = favor_hook
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

host_dinner_events.3020 = {
	type = activity_event
	title = host_dinner_events.3020.title
	desc = host_dinner_events.3020.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = wedding_drunk
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = toast_goblet
	}
	cooldown = { years = 5 }
	trigger = {
		drinks_alcohol_trigger = yes
		scope:stop_host_scope = { drinks_alcohol_trigger = yes }
		is_adult = yes
		scope:stop_host_scope = { is_adult = yes }
	}

	option = { # Just go for it dude
		name = host_dinner_events.3020.a
		show_as_tooltip = {
			3020_drinking_duel_effect = yes
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3021
			}
		}
		stress_impact = {
			base = medium_stress_impact_loss
			temperate = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = temperate
					has_trait = zealous
					has_trait = shy
				}
			}
		}
	}

	option = { # No excessive drinking.
		name = host_dinner_events.3020.b
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.3020.refused_to_drink
				left_icon = scope:stop_host_scope
				right_icon = scope:visiting_liege
				add_opinion = {
					target = scope:visiting_liege
					opinion = -15
					modifier = disappointed_opinion
				}
			}
		}
		if = {
			limit = {
				faith = {
					trait_is_sin = gluttonous
				}
			}
			add_piety = miniscule_piety_gain
		}
		if = {
			limit = {
				faith = {
					trait_is_sin = temperate
				}
			}
			add_piety = miniscule_piety_loss
		}
		stress_impact = {
			drunkard = minor_stress_impact_gain
			gluttonous = minor_stress_impact_gain
			lifestyle_reveler = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = drunkard
					has_trait = gluttonous
					has_trait = lifestyle_reveler
				}
			}
		}
	}
}

host_dinner_events.3021 = {
	type = activity_event
	title = host_dinner_events.3021.title
	desc = host_dinner_events.3021.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = wedding_drunk
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = toast_goblet
	}

	option = { # Drinking time!
		name = host_dinner_events.3021.a
		3020_drinking_duel_effect = yes
		stress_impact = {
			base = medium_stress_impact_loss
			temperate = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = temperate
					has_trait = zealous
					has_trait = shy
				}
			}
		}
	}

	option = { # No excessive drinking. This isn't social hour, afterall.
		name = host_dinner_events.3021.b
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3020.refused_to_drink
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				add_opinion = {
					target = scope:stop_host_scope
					opinion = -15
					modifier = disappointed_opinion
				}
			}
		}
		stress_impact = {
			drunkard = minor_stress_impact_gain
			gluttonous = minor_stress_impact_gain
			lifestyle_reveler = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = drunkard
					has_trait = gluttonous
					has_trait = lifestyle_reveler
				}
			}
		}
	}
}

# A promising child, tutor them?
host_dinner_events.3030 = {
	type = activity_event
	title = host_dinner_events.3030.title
	desc = host_dinner_events.3030.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:promising_child
		animation = admiration
	}
	cooldown = { years = 5 }
	trigger = {
		is_adult = yes
		scope:stop_host_scope = {
			any_child = {
				is_adult = no
				location = root.location
				is_ai = yes
				age > 4
				NOT = { has_relation_guardian = scope:stop_host_scope }
				NOT = { has_relation_guardian = scope:visiting_liege }
			}
		}
		num_of_relation_ward < 2
	}
	immediate = {
		scope:stop_host_scope = {
			random_child = {
				limit = {
					is_adult = no
					location = root.location
					is_ai = yes
					age > 4
					NOT = { has_relation_guardian = scope:stop_host_scope }
					NOT = { has_relation_guardian = scope:visiting_liege }
				}
				save_scope_as = promising_child
			}
		}
	}

	option = { # Let'sa go
		name = host_dinner_events.3030.a
		custom_tooltip = vassal_may_be_offended_tt
		show_as_tooltip = {
			scope:stop_host_scope = {
				progress_towards_hook_effect = {
					CHARACTER = scope:visiting_liege
					HOOK_TYPE = favor_hook
				}
			}
			set_relation_ward = scope:promising_child
		}
		add_opinion = {
			target = scope:promising_child
			opinion = 15
			modifier = impressed_opinion
		}
		scope:promising_child = {
			add_opinion = {
				target = scope:visiting_liege
				opinion = 15
				modifier = compliment_opinion
			}
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3031
			}
		}
		if = {
			limit = {
				scope:activity = {
					OR = {
						has_activity_option = {
							category = special_type
							option = tour_type_majesty
						}
						has_activity_option = {
							category = special_type
							option = tour_type_taxation
						}
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = shy
					has_trait = callous
				}
			}
		}
	}

	option = { # I don't have the time to educate every brat I happen across
		name = host_dinner_events.3030.b
		add_opinion = {
			target = scope:promising_child
			opinion = 15
			modifier = impressed_opinion
		}
		scope:promising_child = {
			add_opinion = {
				target = scope:visiting_liege
				opinion = 15
				modifier = compliment_opinion
			}
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = compassionate
					has_trait = gregarious
				}
			}
		}
	}
}

# Vassal, let your liege tutor your child?
host_dinner_events.3031 = {
	type = activity_event
	title = host_dinner_events.3031.title
	desc = host_dinner_events.3031.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = admiration
	}
	lower_right_portrait = {
		character = scope:promising_child
	}

	option = { # Let'sa go
		name = host_dinner_events.3031.a
		progress_towards_hook_effect = {
			CHARACTER = scope:visiting_liege
			HOOK_TYPE = favor_hook
		}
		scope:activity = {
			add_activity_log_entry = {
				key = became_guardian_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:promising_child
				scope:visiting_liege = {
					set_relation_ward = scope:promising_child
				}
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			callous = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = shy
					has_trait = callous
				}
			}
		}
	}

	option = { # Educate MY child? Why would I let you do that?
		name = host_dinner_events.3031.b
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3030.refused_to_allow_ward
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				scope:stop_host_scope = {
					progress_towards_rival_effect = {
						REASON = rival_denied_ward
						CHARACTER = scope:visiting_liege
						OPINION = default_rival_opinion
					}
				}
			}
		}
		stress_impact = {
			trusting = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
					has_trait = compassionate
				}
			}
		}
	}
}

# Who ate all the pies??
host_dinner_events.3040 = {
	type = activity_event
	title = host_dinner_events.3040.title
	desc = host_dinner_events.3040.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = stress
	}
	cooldown = { years = 5 }
	trigger = {
		scope:stop_host_scope = {
			any_courtier = {
				OR = {
					has_trait = gluttonous
					has_trait = comfort_eater
					is_deviant_trigger = yes
				}
			}
		}
	}
	immediate = {
		scope:stop_host_scope = {
			random_courtier = {
				limit = {
					OR = {
						has_trait = gluttonous
						has_trait = comfort_eater
						is_deviant_trigger = yes
					}
				}
				save_scope_as = pie_eater_scope
			}
		}
	}

	option = { # Time to launch the investigation into who ate all the pies
		name = host_dinner_events.3040.a
		duel = {
			skill = intrigue
			value = scope:pie_eater_scope.intrigue # Hide who you're dueling
			50 = { # You solve the mystery of who ate all the pies
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				custom_tooltip = find_who_ate_the_pies_tt
				hidden_effect = {
					trigger_event = host_dinner_events.3041
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3040.didnt_solve_mystery
					left_icon = root
					add_prestige = miniscule_prestige_loss
					add_stress = medium_stress_gain
				}
			}
		}
		if = {
			limit = {
				has_activity_intent = justice_intent
			}
			stress_impact = {
				base = minor_stress_impact_loss
			}
		}
		else = {
			stress_impact = {
				trusting = minor_stress_impact_gain
				shy = minor_stress_impact_gain
				temperate = minor_stress_impact_gain
				forgiving = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
					has_trait = shy
					has_trait = temperate
					has_trait = forgiving
				}
			}
		}
	}

	option = { # I should turn the other cheek
		name = host_dinner_events.3040.b
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_events.3040.disappointed_in_vassal
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				add_opinion = {
					target = scope:stop_host_scope
					opinion = -15
					modifier = disappointed_opinion
				}
			}
		}
		if = {
			limit = {
				has_activity_intent = justice_intent
			}	
			stress_impact = {
				base = minor_stress_gain
				cynical = minor_stress_impact_gain
				wrathful = minor_stress_impact_gain
				callous = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
				gluttonous = minor_stress_impact_gain
			}
   		}
   		else = {
			stress_impact = {
				wrathful = minor_stress_impact_gain
				callous = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
				gluttonous = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = cynical
					has_trait = wrathful
					has_trait = callous
					has_trait = sadistic
					has_trait = paranoid
					has_trait = gluttonous
				}
			}
		}
	}
}

# You found who ate all the pies
host_dinner_events.3041 = {
	type = activity_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:pie_eater_scope = { is_deviant_trigger = yes }
				}
				desc = host_dinner_events.3041.title.deviant
			}
			desc = host_dinner_events.3041.title
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:pie_eater_scope = { is_deviant_trigger = yes }
				}
				desc = host_dinner_events.3041.desc.deviant
			}
			desc = host_dinner_events.3041.desc
		}
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:pie_eater_scope
		animation = shock
		triggered_outfit = {
			trigger = { is_deviant_trigger = yes }
			remove_default_outfit = no
			outfit_tags = { no_clothes }
		}
	}
	cooldown = { years = 5 }

	immediate = {
		increase_tour_success_effect = { POINTS = 1 }
		if = {
			limit = {
				scope:pie_eater_scope = {
					any_secret = {
						secret_type = secret_deviant
					}
				}
			}
			scope:pie_eater_scope = {
				random_secret = {
					limit = {
						secret_type = secret_deviant
					}
					save_scope_as = deviant_pie_secret
				}
			}
		}
	}

	option = { # I'll let you off, for a hook
		name = host_dinner_events.3041.a
		trigger = {
			NOT = {
				scope:pie_eater_scope = {
					any_secret = {
						secret_type = secret_deviant
					}
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = discovered_pie_eater_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:pie_eater_scope
				root = {
					add_hook = {
						type = loyalty_hook
						target = scope:pie_eater_scope
					}
				}
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			deceitful = minor_stress_impact_loss
			paranoid = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = honest
					has_trait = paranoid
					has_trait = forgiving
				}
			}
		}
	}

	option = { # Now I know your secret
		name = host_dinner_events.3041.b
		trigger = {
			scope:pie_eater_scope = {
				any_secret = {
					secret_type = secret_deviant
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = discovered_pie_eater_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:pie_eater_scope
				scope:deviant_pie_secret = {
					reveal_to = root
				}
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			deceitful = minor_stress_impact_loss
			paranoid = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			deviant = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = honest
					has_trait = paranoid
					has_trait = forgiving
					has_trait = deviant
				}
			}
		}
	}

	option = { # I will never tell a soul
		name = host_dinner_events.3041.c
		trigger = {
			NOT = {
				scope:pie_eater_scope = {
					any_secret = {
						secret_type = secret_deviant
					}
				}
			}
		}
		scope:activity = {
			add_activity_log_entry = {
				key = discovered_pie_eater_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:pie_eater_scope
				root = {
					set_relation_friend = {
						reason = friend_kept_a_secret
						target = scope:pie_eater_scope
					}
				}
			}
		}
		stress_impact = {
			deceitful = minor_stress_impact_loss
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = honest
					has_trait = paranoid
				}
			}
		}
	}

	option = { # I'll tell everyone!
		name = host_dinner_events.3041.d
		scope:activity = {
			add_activity_log_entry = {
				key = discovered_pie_eater_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:pie_eater_scope
				if = {
					limit = {
						exists = scope:deviant_pie_secret
					}
					scope:deviant_pie_secret = { expose_secret = root }
				}
				root = {
					set_relation_rival = {
						reason = rival_exposed_a_secret
						target = scope:pie_eater_scope
					}
					add_prestige = minor_prestige_gain # you solved the mystery!
				}
			}
		}
		stress_impact = {
			honest = minor_stress_impact_loss
			ambitious = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = deceitful
					has_trait = ambitious
					has_trait = forgiving
				}
			}
		}
	}

	option = { # Th-that looks like a lot of fun eyes_emoji.png
		name = host_dinner_events.3041.e
		trigger = {
			scope:pie_eater_scope = {
				is_deviant_trigger = yes
			}
			NOT = { has_trait = celibate }
		}
		scope:activity = {
			add_activity_log_entry = {
				key = discovered_pie_eater_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:pie_eater_scope
				give_deviant_secret_or_trait_effect	= yes
				root = {
					if = {
						limit = {
							is_attracted_to_gender_of = scope:pie_eater_scope
							scope:pie_eater_scope = { is_attracted_to_gender_of = root }
						}
						set_relation_lover = {
							reason = lover_shared_deviancy
							target = scope:pie_eater_scope
						}
					}
					else = {
						set_relation_friend = {
							reason = lover_shared_deviancy
							target = scope:pie_eater_scope
						}
					}
				}
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			chaste = minor_stress_impact_gain
			zealous = medium_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = chaste
					has_trait = zealous
				}
			}
		}
	}

	option = { # Oh, who doesn't indulge every now and then?
		name = host_dinner_events.3041.f
		trigger = {
			scope:pie_eater_scope = {
				is_deviant_trigger = yes
			}
			has_trait = gluttonous
		}
		scope:activity = {
			add_activity_log_entry = {
				key = discovered_pie_eater_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:pie_eater_scope
				root = {
					set_relation_friend = {
						reason = friend_shared_pies
						target = scope:pie_eater_scope
					}
				}
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			zealous = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			honest = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = zealous
					has_trait = shy
					has_trait = honest
				}
			}
		}
	}
}

# Temperate entourage member refusing to eat
host_dinner_events.3050 = {
	type = activity_event
	title = host_dinner_events.3050.title
	desc = host_dinner_events.3050.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = rage
	}
	right_portrait = {
		character = scope:non_eater_scope
		animation = personality_zealous
	}
	cooldown = { years = 5 }
	trigger = {
		involved_activity = {
			any_attending_character = {
				NOT = { this = scope:stop_host_scope }
				NOT = { this = scope:visiting_liege }
				OR = {
					has_trait = temperate
					has_trait = inappetetic
				}
			}
		}
	}
	immediate = {
		involved_activity = {
			random_attending_character = {
				limit = {
					NOT = { this = scope:stop_host_scope }
					NOT = { this = scope:visiting_liege }
					OR = {
						has_trait = temperate
						has_trait = inappetetic
					}
				}
				save_scope_as = non_eater_scope
			}
		}
	}

	option = { # Try to get them to eat something
		name = host_dinner_events.3050.a
		duel = {
			skill = diplomacy
			target = scope:non_eater_scope
			50 = { # You convince them to eat
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3050.convinced_to_eat
					left_icon = root
					right_icon = scope:non_eater_scope
					progress_towards_friend_effect = {
						REASON = friend_well_mannered_courtiers
						CHARACTER = scope:stop_host_scope
						OPINION = default_friend_opinion
					}
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3050.annoyed_courtier
					left_icon = root
					right_icon = scope:non_eater_scope
					progress_towards_rival_effect = {
						REASON = rival_made_me_eat
						CHARACTER = scope:non_eater_scope
						OPINION = default_rival_opinion
					}
				}
			}
		}
		if = {
			limit = {
				has_activity_intent = altruism_intent
			}
			stress_impact = { 
				base = minor_stress_gain
				trusting = minor_stress_impact_gain
				shy = minor_stress_impact_gain
				temperate = minor_stress_impact_gain
				forgiving = minor_stress_impact_gain
   			}
   		}
   		else = {
			stress_impact = {
				trusting = minor_stress_impact_gain
				shy = minor_stress_impact_gain
				temperate = minor_stress_impact_gain
				forgiving = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
					has_trait = shy
					has_trait = temperate
					has_trait = forgiving
				}
			}
		}
	}

	option = { # I should turn the other cheek
		name = host_dinner_events.3050.b
		if = {
			limit = {
				root.faith = { trait_is_virtue = temperate }
			}
			add_piety = minor_piety_gain
		}
		progress_towards_friend_effect = {
			REASON = friend_let_me_be_fussy
			CHARACTER = scope:non_eater_scope
			OPINION = default_friend_opinion
		}
		if = {
			limit = {
				has_activity_intent = reduce_stress_intent
			}
			stress_impact = { 
			base = minor_stress_gain
				shy = medium_stress_impact_loss
				wrathful = minor_stress_impact_gain
				callous = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
				gluttonous = minor_stress_impact_gain	
   			}
   		}
   		else = {
			stress_impact = {
				shy = medium_stress_impact_loss
				wrathful = minor_stress_impact_gain
				callous = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				paranoid = minor_stress_impact_gain
				gluttonous = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = gregarious
					has_trait = wrathful
					has_trait = callous
					has_trait = sadistic
					has_trait = paranoid
					has_trait = gluttonous
				}
			}
		}
	}
}

# You get completely hooked on Semlor and nearly die
host_dinner_events.3060 = {
	type = activity_event
	title = host_dinner_events.3060.title
	desc = host_dinner_events.3060.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = toast_goblet
	}
	cooldown = { years = 5 }
	trigger = {
		NOT = {
			has_trait = temperate
			has_trait = inappetetic
		}
	}
	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			has_trait = gluttonous
		}
		modifier = {
			factor = 2
			has_trait = comfort_eater
		}
	}

	option = { # Eat and be merry!
		name = host_dinner_events.3060.a
		hidden_effect = {
			change_current_weight = 20
		}
		random_list = {
			50 = { # You have a great time eating your desserts!
				modifier = {
					add = 5
					current_weight > overweight_threshold
				}
				modifier = {
					add = -5
					current_weight < underweight_threshold
				}
				send_interface_toast = {
					title = host_dinner_events.3060.satisfying_dessert
					left_icon = root
					add_stress = major_stress_loss
					add_character_modifier = {
						modifier = full_of_dessert_modifier
						years = 5
					}
				}
			}
			50 = { # You give yourself a stomach ache
				modifier = {
					add = -5
					current_weight > overweight_threshold
				}
				modifier = {
					add = 5
					current_weight < underweight_threshold
				}
				scope:activity = {
					add_activity_log_entry = {
						key = i_overate_log
						tags = { bad }
						character = scope:visiting_liege
						root = {
							send_interface_toast = {
								title = host_dinner_events.3060.too_much_dessert
								left_icon = root
								root = {
									add_stress = major_stress_loss
									add_character_modifier = {
										modifier = stomach_ache_modifier
										years = 5
									}
								}
							}
						}
					}
				}
			}
			1 = { # You eat so much that you die
				show_as_tooltip = {
					death = {
						death_reason = death_too_much_dessert
					}
				}
				hidden_effect = { trigger_event = host_dinner_events.3061 }
			}
		}
		stress_impact = {
			trusting = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			temperate = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
					has_trait = shy
					has_trait = temperate
					has_trait = forgiving
				}
			}
		}
	}

	option = { # Try to show restraint
		name = host_dinner_events.3060.b
		if = {
			limit = {
				root.faith = { trait_is_virtue = temperate }
			}
			add_piety = medium_piety_gain
		}
		if = {
			limit = {
				root.faith = { trait_is_virtue = gluttonous }
			}
			add_piety = minor_piety_loss
		}
		if = {
			limit = {
				has_activity_intent = reduce_stress_intent
			}
			stress_impact = { 
				base = minor_stress_gain
				shy = medium_stress_impact_loss
				arrogant = minor_stress_impact_gain
				comfort_eater = minor_stress_impact_gain
				gluttonous = minor_stress_impact_gain
			}
		}
		else = {
			stress_impact = {
				shy = medium_stress_impact_loss
				arrogant = minor_stress_impact_gain
				comfort_eater = minor_stress_impact_gain
				gluttonous = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = gregarious
					has_trait = arrogant
					has_trait = comfort_eater
					has_trait = gluttonous
				}
			}
		}
	}
}

# You die from semlor
host_dinner_events.3061 = {
	type = activity_event
	title = host_dinner_events.3061.title
	desc = host_dinner_events.3061.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = shock
	}

	immediate = {
		death = {
			death_reason = death_too_much_dessert
		}
	}

	option = { # Alas, I die
		name = host_dinner_events.3061.a
	}
}

# You decide to tell stories from your life to impress your vassal's court
host_dinner_events.3070 = {
	type = activity_event
	title = host_dinner_events.3070.title
	desc = host_dinner_events.3070.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:potential_friend_scope
		animation = toast_goblet
	}
	cooldown = { years = 5 }

	trigger = {
		any_memory = {
			has_memory_category = negative
		}
		any_memory = {
			has_memory_category = positive
		}
		scope:stop_host_scope = {
			any_courtier = {
				location = root.location
				age >= 6
			}
		}
	}

	immediate = {
		random_memory = {
			limit = {
				has_memory_category = negative
			}
			save_scope_as = tragic_memory
		}
		random_memory = {
			limit = {
				has_memory_category = positive
			}
			save_scope_as = happy_memory
		}
		scope:stop_host_scope = {
			every_courtier = {
				limit = {
					location = root.location
				}
				add_to_list = host_dinner_list
			}
		}
		random_in_list = {
			list = host_dinner_list
			limit = {
				NOT = { this = scope:stop_host_scope }
				NOT = { this = scope:visiting_liege }
				age >= 6
			}
			weight = {
				base = 1
				modifier = {
					factor = 100
					has_relation_potential_friend = root
				}
			}
			save_scope_as = potential_friend_scope
		}
	}

	option = { # How about a tragedy
		name = host_dinner_events.3070.a
		duel = {
			skill = diplomacy
			value = low_skill_rating
			50 = { # People enjoy the tragedy
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					factor = 2
					OR = {
						has_trait = depressed
						has_trait = paranoid
						has_trait = craven
						has_trait = humble
						has_trait = shy
					}
				}
				send_interface_toast = {
					title = host_dinner_events.3070.story_was_impressive
					left_icon = root
					right_icon = scope:potential_friend_scope
					add_prestige = minor_prestige_gain
					progress_towards_friend_effect = {
						REASON = friend_good_story
						CHARACTER = scope:potential_friend_scope
						OPINION = default_friend_opinion
					}
					every_in_list = {
						list = host_dinner_list
						custom = everyone_at_the_dinner
						add_opinion = {
							target = scope:visiting_liege
							opinion = 15
							modifier = entertained_opinion
						}
					}
					if = {
						limit = {
							scope:activity = {
								has_activity_option = {
									category = special_type
									option = tour_type_intimidation
								}
							}
						}
						increase_tour_success_effect = { POINTS = 1 }
					}
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3070.boring_story
					left_icon = root
					add_prestige = minor_prestige_loss
					every_in_list = {
						list = host_dinner_list
						custom = everyone_at_the_dinner
						add_opinion = {
							target = scope:visiting_liege
							opinion = -10
							modifier = bored_opinion
						}
					}
				}
			}
		}
		stress_impact = {
			compassionate = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
			craven = minor_stress_impact_loss
			arrogant = minor_stress_impact_gain
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = compassionate
					has_trait = trusting
					has_trait = brave
					has_trait = arrogant
					has_trait = gregarious
				}
			}
		}
	}

	option = { # Something uplifting!
		name = host_dinner_events.3070.b
		duel = {
			skill = diplomacy
			value = low_skill_rating
			50 = { # People enjoy the tragedy
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					factor = 2
					OR = {
						has_trait = compassionate
						has_trait = trusting
						has_trait = brave
						has_trait = arrogant
						has_trait = gregarious
					}
				}
				send_interface_toast = {
					title = host_dinner_events.3070.story_was_impressive
					left_icon = root
					right_icon = scope:potential_friend_scope
					add_prestige = minor_prestige_gain
					progress_towards_friend_effect = {
						REASON = friend_good_story
						CHARACTER = scope:potential_friend_scope
						OPINION = default_friend_opinion
					}
					every_in_list = {
						list = host_dinner_list
						custom = everyone_at_the_dinner
						add_opinion = {
							target = scope:visiting_liege
							opinion = 15
							modifier = entertained_opinion
						}
					}
					if = {
						limit = {
							scope:activity = {
								has_activity_option = {
									category = special_type
									option = tour_type_majesty
								}
							}
						}
						increase_tour_success_effect = { POINTS = 1 }
					}
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3070.boring_story
					left_icon = root
					add_prestige = minor_prestige_loss
					every_in_list = {
						list = host_dinner_list
						custom = everyone_at_the_dinner
						add_opinion = {
							target = scope:visiting_liege
							opinion = -10
							modifier = bored_opinion
						}
					}
				}
			}
		}
		stress_impact = {
			depressed_1 = minor_stress_impact_gain
			depressed_genetic = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			craven = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			shy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = depressed
					has_trait = paranoid
					has_trait = craven
					has_trait = humble
					has_trait = shy
				}
			}
		}
	}
}

# Someone is choking, save them!
host_dinner_events.3080 = {
	type = activity_event
	title = host_dinner_events.3080.title
	desc = host_dinner_events.3080.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:choking_character_scope
		animation = sick
	}
	#cooldown = { years = 5 }

	trigger = {
		location = {
			any_character_in_location = {
				is_available_ai_adult = yes
				any_memory = {
					has_memory_category = positive
				}
				NOT = { this = scope:stop_host_scope }
				NOT = { this = scope:visiting_liege }
			}
		}
	}

	immediate = {
		scope:stop_host_scope = {
			every_courtier = {
				limit = {
					is_available_ai_adult = yes
				}
				add_to_list = host_dinner_list
			}
		}
		random_in_list = {
			list = host_dinner_list
			
			weight = {
				base = 1
				modifier = {
					factor = 100
					has_relation_potential_friend = root
				}
			}
			save_scope_as = choking_character_scope
		}
	}

	option = { # I will save them!
		name = host_dinner_events.3080.a
		duel = {
			skills = { prowess learning }
			value = high_skill_rating
			50 = { # People enjoy the tragedy
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				modifier = {
					factor = 2
					OR = {
						has_trait = whole_of_body
						has_trait = lifestyle_physician
						has_trait = lifestyle_herbalist
					}
				}
				custom_tooltip = save_the_choker_tt
				show_as_tooltip = {
					increase_tour_success_effect = { POINTS = 1 }
				}
				hidden_effect = {
					trigger_event = host_dinner_events.3081
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3080.failed_to_save_them
					left_icon = root
					add_prestige = minor_prestige_loss
					scope:choking_character_scope = {
						death = {
							death_reason = death_choked
						}
					}
				}
			}
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
			shy = minor_stress_impact_gain
			craven = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = shy
					has_trait = craven
				}
			}
		}
	}

	option = { # Not my problem nail_care_emoji.jpeg
		name = host_dinner_events.3080.b
		scope:choking_character_scope = {
			death = {
				death_reason = death_choked
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		if = {
			limit = {
				NOT = {
					has_trait = sadistic
				}
			}
			stress_impact = {
				base = medium_stress_impact_gain
				callous = medium_stress_impact_loss
				paranoid = minor_stress_impact_loss
			}
		}
		else = {
			stress_impact = {
				sadistic = medium_stress_impact_loss
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = sadistic
				}
			}
		}
	}
}

# You did it! Reward?
host_dinner_events.3081 = {
	type = activity_event
	title = host_dinner_events.3081.title
	desc = host_dinner_events.3081.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:choking_character_scope
		animation = ecstasy
	}

	immediate = {
		scope:activity = {
			add_activity_log_entry = {
				key = saved_someone_choking_log
				tags = { good }
				character = scope:visiting_liege
				target = scope:choking_character_scope
				root = {
					add_learning_lifestyle_xp = medium_lifestyle_xp
					increase_tour_success_effect = { POINTS = 1 }
				}
			}
		}
	}

	option = { # I did this because I'm such a great person ngl
		name = host_dinner_events.3081.a
		upgrade_to_friend_effect = {
			CHARACTER = scope:choking_character_scope
			REASON = friend_saved_my_life
		}
		stress_impact = {
			callous = minor_stress_impact_gain
			compassionate = minor_stress_impact_loss
			shy = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = sadistic
					has_trait = shy
					has_trait = ambitious
				}
			}
		}
	}

	option = { # You owe me a life debt, buddy
		name = host_dinner_events.3081.b
		add_hook = {
			type = saved_my_life_hook
			target = scope:choking_character_scope
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_taxation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			just = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
			shy = medium_stress_impact_loss
			forgiving = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = just
					has_trait = compassionate
					has_trait = gregarious
					has_trait = forgiving
				}
			}
		}
	}
}

# Make a skull goblet and drink from it
host_dinner_events.3090 = {
	type = activity_event
	title = host_dinner_events.3090.title
	desc = host_dinner_events.3090.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = scheme
	}
	cooldown = { years = 5 }

	trigger = {
		scope:stop_host_scope = {
			has_prisoners = yes
			any_prisoner = {
				OR = {
					#Someone you hate
					has_relation_rival = root
					#Someone you don't know
					NOR = {
						is_close_family_of = root
						any_relation = { this = root }
					}
				}
			}
		}
		scope:activity = {
			has_activity_option = {
				category = special_type
				option = tour_type_intimidation
			}
		}
	}

	immediate = {
		scope:stop_host_scope = {
			random_prisoner = {
				limit = {
					OR = {
						#Someone you hate
						has_relation_rival = root
						#Someone you don't know
						NOR = {
							is_close_family_of = root
							any_relation = { this = root }
						}
					}
				}
				save_scope_as = skoblet_target
			}
		}
	}

	option = { # I will drink from a skoblet
		name = host_dinner_events.3090.a
		scope:stop_host_scope = {
			send_interface_toast = {
				title = host_dinner_events.3090.skobletted_my_prisoner
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
			}
			scope:skoblet_target = {
				death = {
					death_reason = death_execution
					killer = scope:visiting_liege
				}
			}
		}
		create_artifact = {
			name = artifact_skull_goblet_trinket_name
			description = artifact_skull_goblet_trinket_description
			type = miscellaneous
			visuals = skull_goblet
			wealth = 40
			quality = 40
			modifier = artifact_monthly_prestige_gain_per_dread_add_3_modifier
			modifier = artifact_stress_gain_2_modifier
			modifier = artifact_dread_gain_mult_1_modifier
			save_scope_as = newly_created_artifact
		}
		add_dread = minor_dread_gain
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 3 }
		}
		stress_impact = {
			vengeful = minor_stress_impact_loss
			sadistic = medium_stress_impact_loss
			callous = medium_stress_impact_loss
			base = minor_stress_impact_gain
			forgiving = major_stress_impact_gain
			content = minor_stress_impact_gain
			compassionate = major_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = forgiving
					has_trait = content
					has_trait = compassionate
				}
			}
		}
	}

	option = { # This is not something I feel I should be doing really
		name = host_dinner_events.3090.b
		if = {
			limit = {
				has_activity_intent = reduce_stress_intent
			}
			stress_impact = { 
				base = minor_stress_gain
				vengeful = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				callous = minor_stress_impact_gain
			}
		}
		else = {
			stress_impact = {
				vengeful = minor_stress_impact_gain
				sadistic = minor_stress_impact_gain
				callous = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = vengeful
					has_trait = sadistic
					has_trait = callous
				}
			}
		}
	}
}

# You realise there's probably more to tax here
scripted_effect host_dinner_3100_give_taxes = {
	scope:visiting_liege = {
		send_interface_toast = {
			title = host_dinner_events.3100.vassal_accepts
			left_icon = scope:visiting_liege
			right_icon = scope:stop_host_scope
			scope:stop_host_scope = {
				pay_short_term_gold = {
					target = scope:visiting_liege
					gold = medium_gold_value
				}
				add_opinion = {
			 		target = scope:visiting_liege
			 		modifier = angry_opinion
			 		opinion = -15
				}
			}
		}
	}
}
scripted_effect host_dinner_3100_raise_taxes = {
	scope:visiting_liege = {
		send_interface_toast = {
			title = host_dinner_events.3100.vassal_accepts
			left_icon = scope:visiting_liege
			right_icon = scope:stop_host_scope
			scope:stop_host_scope = {
				vassal_contract_increase_obligation_level = feudal_government_taxes
				add_hook = {
					type = indebted_hook
					target = scope:visiting_liege
				}
			}
		}
	}
}
scripted_effect host_dinner_3100_refuse_taxes = {
	scope:visiting_liege = {
		send_interface_toast = {
			title = host_dinner_events.3100.vassal_refuses
			left_icon = scope:visiting_liege
			right_icon = scope:stop_host_scope
			add_opinion = {
		 		target = scope:stop_host_scope
		 		modifier = tax_avoidance_opinion
		 		opinion = -15
			}
		}
	}
}

host_dinner_events.3100 = {
	type = activity_event
	title = host_dinner_events.3100.title
	desc = host_dinner_events.3100.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = admiration
	}
	cooldown = { years = 5 }

	trigger = {
		scope:activity = {
			has_activity_option = {
				category = special_type
				option = tour_type_taxation
			}
		}
	}

	option = { # Demand the taxes
		name = host_dinner_events.3100.a
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3101
			}
		}
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = host_dinner_if_vassal_accepts_tt
					host_dinner_3100_give_taxes = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_vassal_rejects_tt
					host_dinner_3100_refuse_taxes = yes
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_taxation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 2 }
		}
		stress_impact = {
			content = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = generous
					has_trait = forgiving
					has_trait = compassionate
				}
			}
		}
	}

	option = { # Demand a raise in taxes
		name = host_dinner_events.3100.b
		trigger = {
			scope:stop_host_scope = {
				vassal_contract_obligation_level_can_be_increased = feudal_government_taxes
			}
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3102
			}
		}
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = host_dinner_if_vassal_accepts_tt
					host_dinner_3100_raise_taxes = yes
				}
				100 = {
					show_chance = no
					desc = tour_grounds_if_vassal_rejects_tt
					host_dinner_3100_refuse_taxes = yes
				}
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_taxation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 2 }
		}
		stress_impact = {
			content = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			forgiving = minor_stress_impact_gain
			compassionate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = generous
					has_trait = forgiving
					has_trait = compassionate
				}
			}
		}
	}

	option = { # Pass up the opportunity
		name = host_dinner_events.3100.c
		scope:visiting_liege = {
			add_hook = {
				type = indebted_hook
				target = scope:stop_host_scope
			}
		}
		stress_impact = {
			generous = minor_stress_impact_loss
			forgiving = minor_stress_impact_loss
			greedy = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = ambitious
				}
			}
		}
	}
}

host_dinner_events.3101 = {
	type = activity_event
	title = host_dinner_events.3101.title
	desc = host_dinner_events.3101.desc

	theme = host_dinner
	left_portrait = {
		character = scope:stop_host_scope
		animation = shock
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = personality_greedy
	}

	option = { # Accept the taxes
		name = host_dinner_events.3101.a
		host_dinner_3100_give_taxes = yes
		stress_impact = {
			generous = minor_stress_impact_loss
			profligate = medium_stress_impact_loss
			greedy = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = ambitious
				}
			}
		}
	}

	option = { # Pass up the opportunity
		name = host_dinner_events.3101.b
		host_dinner_3100_refuse_taxes = yes
		stress_impact = {
			content = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			profligate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = loyal
					has_trait = generous
					has_trait = profligate
				}
			}
		}
	}
}

host_dinner_events.3102 = {
	type = activity_event
	title = host_dinner_events.3102.title
	desc = host_dinner_events.3102.desc

	theme = host_dinner
	left_portrait = {
		character = scope:stop_host_scope
		animation = shock
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = personality_greedy
	}

	option = { # Accept the taxes
		name = host_dinner_events.3102.a
		host_dinner_3100_raise_taxes = yes
		stress_impact = {
			generous = minor_stress_impact_loss
			profligate = medium_stress_impact_loss
			greedy = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = greedy
					has_trait = diligent
				}
			}
		}
	}

	option = { # Pass up the opportunity
		name = host_dinner_events.3102.b
		host_dinner_3100_refuse_taxes = yes
		stress_impact = {
			content = minor_stress_impact_gain
			loyal = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			profligate = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = loyal
					has_trait = generous
					has_trait = profligate
				}
			}
		}
	}
}

# A pool character wants to join your court!
host_dinner_events.3110 = {
	type = activity_event
	title = host_dinner_events.3110.title
	desc = {
		desc = host_dinner_events.3110.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
				scope:talented_pool_character = {
						is_claimant = yes
						NOT = {
							any_claim = {
								holder = root
							}
						}
					}
				}
				desc = host_dinner_events.3110.desc.mid.claim
			}
			triggered_desc = {
				trigger = {
					scope:talented_pool_character = {
						OR = {
							prowess >= high_skill_rating
							martial >= high_skill_rating
						}
					}
				}
				desc = host_dinner_events.3110.desc.mid.martial
			}
			triggered_desc = {
				trigger = {
					scope:talented_pool_character = {
						learning >= high_skill_rating
					}
				}
				desc = host_dinner_events.3110.desc.mid.learning
			}
			triggered_desc = {
				trigger = {
					scope:talented_pool_character = {
						OR = {
							diplomacy >= high_skill_rating
							stewardship >= high_skill_rating
							intrigue >= high_skill_rating
						}
					}
				}
				desc = host_dinner_events.3110.desc.mid.statecraft
			}
		}
		desc = host_dinner_events.3110.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:talented_pool_character
		animation = personality_bold
	}
	cooldown = { years = 5 }

	trigger = {
		scope:stop_host_scope = {
			any_pool_guest = {
				OR = {
					AND = {
						is_claimant = yes
						NOT = {
							any_claim = {
								holder = root
							}
						}
					}
					prowess >= high_skill_rating
					martial >= high_skill_rating
					learning >= high_skill_rating
					diplomacy >= high_skill_rating
					stewardship >= high_skill_rating
					intrigue >= high_skill_rating
				}
			}
		}
	}
	immediate = {
		scope:stop_host_scope = {
			random_pool_guest = {
				limit = {
					OR = {
						AND = {
							is_claimant = yes
							NOT = {
								any_claim = {
									holder = root
								}
							}
						}
						prowess >= high_skill_rating
						martial >= high_skill_rating
						learning >= high_skill_rating
						diplomacy >= high_skill_rating
						stewardship >= high_skill_rating
						intrigue >= high_skill_rating
					}
				}
				save_scope_as = talented_pool_character
			}
		}
	}

	option = { # Into my court you go!
		name = host_dinner_events.3110.a
		scope:talented_pool_character = {
			add_to_court_and_entourage_effect = yes
			add_character_flag = {
				flag = blocked_from_leaving
				years = 10
			}
			if = {
				limit = {
					NOT = {
						can_be_combatant_based_on_gender_trigger = {
							ARMY_OWNER = root
						}
					}
					OR = {
						prowess >= high_skill_rating
						martial >= high_skill_rating
					}
				}
				custom_tooltip = ignores_gender_army_rules_tt
				add_character_modifier = ignores_gender_army_rules
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			content = minor_stress_impact_gain
			shy = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = content
					has_trait = shy
					has_trait = paranoid
				}
			}
		}
	}

	option = { # Not interested thanks
		name = host_dinner_events.3110.b
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_intimidation
					}
				}
			}
			increase_tour_success_effect = { POINTS = 1 }
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			shy = medium_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = gregarious
				}
			}
		}
	}
}

# Majesty tour, bestow a gift!
scripted_effect host_dinner_3120_grateful_for_gift = {
	scope:visiting_liege = {
		progress_towards_friend_effect = {
			REASON = friend_gift
			CHARACTER = scope:stop_host_scope
			OPINION = default_friend_opinion
		}
	}
}

scripted_effect host_dinner_3120_courtier_moves = {
	scope:stop_host_scope = {
		add_courtier = scope:courtier_gift
		hidden_effect = {
			scope:courtier_gift = {
				remove_from_activity = scope:activity
				current_travel_plan = { remove_character = prev }
				add_character_flag = {
					flag = blocked_from_leaving
					years = 10
				}
			}
		}
	}
}

scripted_effect host_dinner_3120_artifact_moves = {
	scope:artifact_gift = { set_owner = scope:stop_host_scope }
}

host_dinner_events.3120 = {
	type = activity_event
	title = host_dinner_events.3120.title
	desc = host_dinner_events.3120.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:stop_host_scope
		animation = admiration
	}
	cooldown = { years = 5 }

	trigger = {
		scope:activity = {
			has_activity_option = {
				category = special_type
				option = tour_type_majesty
			}
		}
	}

	immediate = {
		scope:activity = {
			random_attending_character = {
				limit = {
					NOT = { # Is someone who can/would leave
						is_close_family_of = root
						is_consort_of = root
						# Don't give away your own friends
						has_relation_friend = root
						has_relation_lover = root
						has_relation_soulmate = root
						this = root
						this = scope:stop_host_scope
					}
					is_adult = yes
					is_landed = no
					location = root.location # They're present
				}
				weight = {
					base = 1
					modifier = {
						OR = {
							martial >= high_skill_rating
							diplomacy >= high_skill_rating
							learning >= high_skill_rating
							stewardship >= high_skill_rating
							intrigue >= high_skill_rating
							prowess >= high_skill_rating
						}
						add = 10
					}
				}
				save_scope_as = courtier_gift
			}
		}
		ordered_character_artifact = {
			limit = {
				is_equipped = no
				category = inventory
			}
			order_by = {
	    		value = 0
	    		subtract = {
					value = 0
					if = {
						limit = {
							exists = var:quality
						}
						add = var:quality
					}
				}
	    	}
			save_scope_as = artifact_gift
		}
	}

	option = { # A gift of talent!
		name = host_dinner_events.3120.a
		trigger = { exists = scope:courtier_gift }
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = host_dinner_if_vassal_accepts_tt
					host_dinner_3120_grateful_for_gift = yes
				}
			}
			host_dinner_3120_courtier_moves = yes
		}
		set_variable = {
			name = courtier_gift_var
			years = 2
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3121
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 2 }
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = greedy
				}
			}
		}
	}

	option = { # An artifact!
		name = host_dinner_events.3120.b
		trigger = { exists = scope:artifact_gift }
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = host_dinner_if_vassal_accepts_tt
					host_dinner_3120_grateful_for_gift = yes
				}
			}
			host_dinner_3120_artifact_moves = yes
		}
		set_variable = {
			name = artifact_gift_var
			years = 2
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3121
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 2 }
		}
		stress_impact = {
			ambitious = minor_stress_impact_gain
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = greedy
				}
			}
		}
	}

	option = { # Mooney
		name = host_dinner_events.3120.c
		show_as_tooltip = {
			random_list = {
				100 = {
					show_chance = no
					desc = host_dinner_if_vassal_accepts_tt
					host_dinner_3120_grateful_for_gift = yes
				}
			}
			pay_short_term_gold = {
				target = scope:stop_host_scope
				gold = medium_gold_value
			}
		}
		set_variable = {
			name = gold_gift_var
			years = 2
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3121
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 2 }
		}
		stress_impact = {
			greedy = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_trait = greedy
			}
		}
	}

	option = { # The gift of true friendship!
		name = host_dinner_events.3120.d
		trigger = {
			has_relation_friend = scope:stop_host_scope
			NOT = { has_relation_best_friend = scope:stop_host_scope }
		}
		show_as_tooltip = {
			set_relation_best_friend = { 
				target = scope:stop_host_scope
				reason = best_friend_oath_of_friendship
			}
		}
		set_variable = {
			name = best_friend_gift_var
			years = 2
		}
		hidden_effect = {
			scope:stop_host_scope = {
				trigger_event = host_dinner_events.3121
			}
		}
		if = {
			limit = {
				scope:activity = {
					has_activity_option = {
						category = special_type
						option = tour_type_majesty
					}
				}
			}
			increase_tour_success_effect = { POINTS = 2 }
		}
		stress_impact = {
			shy = minor_stress_impact_loss # Shy people like small tight-knit friends
			paranoid = minor_stress_impact_gain # Trust no-one
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_trait = paranoid
			}
		}
	}

	option = { # I owe no gift
		name = host_dinner_events.3120.e
		trigger = { # Only available if the above option is not
			OR = {
				NOT = { has_relation_friend = scope:stop_host_scope }
				has_relation_best_friend = scope:stop_host_scope
			}
		}
		scope:stop_host_scope = {
				add_opinion = {
					target = scope:visiting_liege
					opinion = -15
					modifier = disappointed_opinion
				}
		}
		stress_impact = {
			shy = medium_stress_impact_loss
			compassionate = minor_stress_impact_gain
			greedy = minor_stress_impact_loss
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = gregarious
					has_trait = compassionate
					has_trait = generous
				}
			}
		}
	}
}
# Vassal react to the gift
host_dinner_events.3121 = {
	type = activity_event
	title = host_dinner_events.3121.title
	desc = {
		desc = host_dinner_events.3121.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:visiting_liege.var:courtier_gift_var
				}
				desc = host_dinner_events.3121.desc.courtier
			}
			triggered_desc = {
				trigger = {
					exists = scope:visiting_liege.var:artifact_gift_var
				}
				desc = host_dinner_events.3121.desc.artifact
			}
			triggered_desc = {
				trigger = {
					exists = scope:visiting_liege.var:gold_gift_var
				}
				desc = host_dinner_events.3121.desc.gold_gift
			}
			triggered_desc = {
				trigger = {
					exists = scope:visiting_liege.var:best_friend_gift_var
				}
				desc = host_dinner_events.3121.desc.best_friend
			}
		}
		desc = host_dinner_events.3121.desc.outro
	}

	theme = host_dinner
	left_portrait = {
		character = root
		animation = personality_greedy
	}
	right_portrait = {
		character = scope:visiting_liege
		animation = admiration
	}

	option = { # I love it!
		name = host_dinner_events.3121.a
		trigger = {
			NOT = {
				exists = scope:visiting_liege.var:best_friend_gift_var
			}
		}
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_3120_gift_taken
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				if = {
					limit = {
						exists = scope:visiting_liege.var:courtier_gift_var
					}
					host_dinner_3120_courtier_moves = yes
				}
				else_if = {
					limit = {
						exists = scope:visiting_liege.var:artifact_gift_var
					}
					host_dinner_3120_artifact_moves = yes
				}
				else_if = {
					limit = {
						exists = scope:visiting_liege.var:gold_gift_var
					}
					scope:visiting_liege = {
						pay_short_term_gold = {
							target = scope:stop_host_scope
							gold = medium_gold_value
						}
					}
				}
				host_dinner_3120_grateful_for_gift = yes
			}
		}
		stress_impact = {
			paranoid = minor_stress_impact_gain
			generous = minor_stress_impact_gain
			improvident = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = paranoid
					has_trait = generous
					has_trait = improvident
				}
			}
		}
	}

	option = { # BFF!
		name = host_dinner_events.3121.b
		trigger = {
			exists = scope:visiting_liege.var:best_friend_gift_var
		}
		scope:visiting_liege = {
			set_relation_best_friend = {
				target = scope:stop_host_scope
				reason = best_friend_oath_of_friendship
			}
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = callous
					has_trait = paranoid
				}
			}
		}
	}

	option = { # Thanks, I hate it.
		name = host_dinner_events.3121.c
		scope:visiting_liege = {
			send_interface_toast = {
				title = host_dinner_3120_gift_refused
				left_icon = scope:visiting_liege
				right_icon = scope:stop_host_scope
				add_opinion = {
			 		target = scope:stop_host_scope
			 		modifier = refused_gift_opinion
			 		opinion = -15
				}
			}
		}
		stress_impact = {
			trusting = minor_stress_impact_gain
			gregarious = minor_stress_impact_gain
			humble = minor_stress_impact_gain
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = greedy
					has_relation_friend = scope:visiting_liege
				}
			}
		}
	}
}

# Something is not quite right about your vassal's pantry, investigate?
host_dinner_events.3130 = {
	type = activity_event
	title = host_dinner_events.3130.title
	desc = host_dinner_events.3130.desc

	theme = host_dinner
	override_background = { reference = corridor_night }
	left_portrait = {
		character = root
		animation = lantern
	}

	trigger = {
		is_ai = no
		NOT = {
			exists = var:had_event_host_dinner_3130
		}
		OR = {
			any_owned_story = {
				story_type = story_cycle_mysterious_journal
				exists = var:mysterious_journal
				var:mysterious_journal = {
					NOT = {
						exists = var:secret_journal
					}
				}
			}
			scope:stop_host_scope = {
				is_ai = yes
				is_adult = yes
				has_trait = education_intrigue
				NOT = { government_has_flag = government_is_tribal }
				OR = {
					has_trait = paranoid
					has_trait = schemer
					intrigue >= high_skill_rating
				}
				NOT = {
					has_trait = cynical
					has_trait = zealous
				}
			}
		}
	}

	option = { # I will investigate...
		name = host_dinner_events.3130.a
		duel = {
			skill = intrigue
			value = high_skill_rating
			50 = { # You find a room behind the pantry
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				custom_tooltip = you_progress_deeper_tt
				hidden_effect = {
					trigger_event = host_dinner_events.3131
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3003.host_noticed
					left_icon = root
					reverse_add_opinion = {
						target = scope:stop_host_scope
						opinion = -20
						modifier = suspicious_opinion
					}
				}
			}
		}
		stress_impact = {
			trusting = minor_stress_impact_gain
			humble = minor_stress_impact_gain
			honest = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = trusting
					has_trait = humble
					has_trait = honest
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
				ai_compassion = -0.2
			}
		}
	}

	option = { # I will trust that my vassal isn't hiding anything
		name = host_dinner_events.3130.b
		if = {
			limit = {
				NOT = {
					has_trait = paranoid
				}
			}
			add_character_modifier = {
				modifier = well_rested_modifier
				years = 5
			}
		}
		stress_impact = {
			cynical = minor_stress_impact_gain
			arrogant = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			ambitious = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = ambitious
					has_trait = paranoid
				}
			}
			ai_value_modifier = {
				ai_boldness = -1
			}
		}
	}

	after = {
		if = {
			limit = {
				NOT = {
					owns_story_of_type = story_cycle_mysterious_journal
				}
			}
			set_variable = {
				name = had_event_host_dinner_3130
				years = 100
			}
		}
	}
}

# You find a secret room with a puzzle-lock door, keep going?
scripted_effect host_dinner_3131_find_the_room_effect = {
	random_list = {
		50 = { # You find the mysterous journal #1
			trigger_event = host_dinner_events.3132
		}
		50 = { # You find your vassal's secret sex dungeon
			trigger = {
				scope:stop_host_scope = { is_deviant_trigger = yes }
			}
			trigger_event = host_dinner_events.3133
		}
		50 = { # You find your vassal's secret human butchery
			trigger = {
				scope:stop_host_scope = { is_cannibal_trigger = yes }
			}
			trigger_event = host_dinner_events.3134
		}
		50 = { # You find their secret escape tunnel
			trigger_event = host_dinner_events.3135
		}
		50 = { # You find their quasimodo child
			trigger = {
				scope:stop_host_scope = {
					OR = {
						has_trait = lustful
						has_trait = rakish
					}
					NOT = { has_trait = compassionate }
					age > 29 # Old enough to have a 12 year old child
				}
			}
			trigger_event = host_dinner_events.3136
		}
	}
}
host_dinner_events.3131 = {
	type = activity_event
	title = host_dinner_events.3131.title
	desc = host_dinner_events.3131.desc

	theme = host_dinner
	override_background = { reference = corridor_night }
	left_portrait = {
		character = root
		animation = lantern
	}

	option = { # I can solve it!
		name = host_dinner_events.3131.a
		duel = {
			skill = learning
			value = high_skill_rating
			50 = { # You find a room behind the pantry
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				custom_tooltip = you_progress_deeper_tt
				hidden_effect = {
					host_dinner_3131_find_the_room_effect = yes
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3131.fail_to_get_it_open
					left_icon = root
				}
			}
		}
		add_character_modifier = {
			modifier = tour_sleep_deprived_modifier
			years = 5
		}
		stress_impact = {
			impatient = minor_stress_impact_gain
			lazy = minor_stress_impact_gain
			wrathful = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = impatient
					has_trait = lazy
					has_trait = wrathful
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
			}
		}
	}

	option = { # Smash my way through!
		name = host_dinner_events.3131.b
		duel = {
			skill = prowess
			value = high_skill_rating
			50 = { # You find a room behind the pantry
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
				}
				custom_tooltip = you_progress_deeper_tt
				hidden_effect = {
					host_dinner_3131_find_the_room_effect = yes
				}
			}
			50 = { # You fail
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
				}
				send_interface_toast = {
					title = host_dinner_events.3131.fail_to_get_it_open
					left_icon = root
				}
			}
		}
		add_character_modifier = {
			modifier = tour_sleep_deprived_modifier
			years = 5
		}
		stress_impact = {
			patient = minor_stress_impact_gain
			scholar = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = scholar
					has_trait = diligent
				}
			}
			ai_value_modifier = {
				ai_boldness = 1
			}
		}
	}

	option = { # Screw this, I'm going back to bed
		name = host_dinner_events.3131.c
		add_character_modifier = {
			modifier = well_rested_modifier
			years = 5
		}
		stress_impact = {
			lazy = minor_stress_impact_loss
			patient = minor_stress_impact_gain
			diligent = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
			calm = minor_stress_impact_loss
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = patient
					has_trait = diligent
					has_trait = stubborn
					has_trait = wrathful
					has_trait = paranoid
				}
			}
			ai_value_modifier = {
				ai_boldness = -1
			}
		}
	}
}

# You find the secret journal #1
host_dinner_events.3132 = {
	type = activity_event
	title = host_dinner_events.3132.title
	desc = host_dinner_events.3132.desc

	theme = host_dinner
	override_background = { reference = study }
	left_portrait = {
		character = root
		animation = shock
	}
	artifact = {
		target = scope:journal_artifact
		position = lower_right_portrait
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					any_owned_story = {
						story_type = story_cycle_mysterious_journal
					}
				}
			}
			create_artifact = {
				name = artifact_secret_journal_name
				description = artifact_secret_journal_description
				type = miscellaneous
				visuals = book
				wealth = 10
				quality = 10
				modifier = artifact_stress_gain_1_penalty_modifier
				save_scope_as = journal_artifact
			}
		}
		else = {
			random_owned_story = {
				limit = {
					story_type = story_cycle_mysterious_journal
				}
				var:mysterious_journal = {
					save_scope_as = journal_artifact
				}
			}
		}
		scope:journal_artifact = {
			set_variable = {
				name = secret_journal
			}
		}
		increase_tour_success_effect = { POINTS = 1 }
	}

	option = { # What could it mean? Take the journal
		name = host_dinner_events.3132.a
		trigger = {
			NOT = {
				any_owned_story = {
					story_type = story_cycle_mysterious_journal
				}
			}
		}
		hidden_effect = {
			create_story = story_cycle_mysterious_journal
			random_owned_story = {
				limit = {
					story_type = story_cycle_mysterious_journal
				}
				set_variable = {
					name = mysterious_journal
					value = scope:journal_artifact
				}
			}
		}
		stress_impact = {
			honest = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = honest
					has_trait = paranoid
					has_trait = trusting
				}
			}
		}
	}

	option = { # The mystery grows deeper
		name = host_dinner_events.3132.b
		trigger = {
			# You have only one part of the puzzle
			any_character_artifact = {
				OR = {
					exists = var:secret_cipher
					exists = var:secret_puzzle
				}
			}
			# But not both
			NOT = {
				any_character_artifact = {
					exists = var:secret_cipher
					exists = var:secret_puzzle
				}
			}
			any_owned_story = {
				story_type = story_cycle_mysterious_journal
			}
		}
		custom_tooltip = progress_to_unlock_journal_mystery_tt
		random_owned_story = {
			limit = {
				story_type = story_cycle_mysterious_journal
			}
			var:mysterious_journal = {
				if = {
					limit = {
						exists = var:secret_cipher
					}
					set_artifact_description = artifact_secret_journal_with_cipher_description
				}
				else_if = {
					limit = {
						exists = var:secret_puzzle
					}
					set_artifact_description = artifact_secret_journal_with_puzzle_description
				}
				set_variable = {
					name = secret_journal
				}
			}
		}
		ai_chance = {
			base = 10
		}
	}

	option = { # At last, I have them all
		name = host_dinner_events.3132.c
		trigger = {
			any_character_artifact = {
				exists = var:secret_cipher
				exists = var:secret_puzzle
			}
			any_owned_story = {
				story_type = story_cycle_mysterious_journal
			}
		}
		random_owned_story = {
			limit = {
				story_type = story_cycle_mysterious_journal
			}
			var:mysterious_journal = {
				set_artifact_description = artifact_secret_journal_unsolved_description
				set_variable = {
					name = secret_journal
				}
			}
		}
		ai_chance = {
			base = 10
		}
	}

	option = { # I will not steal
		name = host_dinner_events.3132.d
		trigger = {
			NOT = {
				any_owned_story = {
					story_type = story_cycle_mysterious_journal
				}
			}
		}
		destroy_artifact = scope:journal_artifact
		stress_impact = {
			base = minor_stress_impact_gain
			paranoid = major_stress_impact_loss
			honest = major_stress_impact_loss
			compassionate = major_stress_impact_loss
			forgiving = major_stress_impact_loss
		}
		ai_chance = {
			base = 0
		}
	}
}

# You find a hidden sex dungeon
host_dinner_events.3133 = {
	type = activity_event
	title = host_dinner_events.3133.title
	desc = host_dinner_events.3133.desc

	theme = host_dinner
	override_background = { reference = dungeon }
	left_portrait = {
		character = root
		animation = shock
	}

	immediate = {
		increase_tour_success_effect = { POINTS = 1 }
	}

	option = { # My eyes will never be clean
		name = host_dinner_events.3133.a
		scope:stop_host_scope = {
			if = {
				limit = {
					any_secret = { secret_type = secret_deviant }
				}
				random_secret = {
					limit = { secret_type = secret_deviant }
					reveal_to = root
				}
			}
		}
		ai_chance = {
			base = 10
		}
	}
}

# You find a cannibal butchery
host_dinner_events.3134 = {
	type = activity_event
	title = host_dinner_events.3134.title
	desc = host_dinner_events.3134.desc

	theme = host_dinner
	override_background = { reference = fp1_viking_feast }
	left_portrait = {
		character = root
		animation = shock
	}

	immediate = {
		increase_tour_success_effect = { POINTS = 1 }
	}

	option = { # Good lord what is happening in there!
		name = host_dinner_events.3134.a
		scope:stop_host_scope = {
			if = {
				limit = {
					any_secret = { secret_type = secret_cannibal }
				}
				random_secret = {
					limit = { secret_type = secret_cannibal }
					reveal_to = root
				}
			}
		}
		ai_chance = {
			base = 10
		}
	}
}

# You find their escape tunnel
host_dinner_events.3135 = {
	type = activity_event
	title = host_dinner_events.3135.title
	desc = host_dinner_events.3135.desc

	theme = host_dinner
	override_background = { reference = corridor_night }
	left_portrait = {
		character = root
		animation = scheme
	}

	immediate = {
		increase_tour_success_effect = { POINTS = 1 }
	}

	option = { # I know your weaknesses
		name = host_dinner_events.3135.a
		custom_tooltip = bonus_to_hostile_schemes
		set_variable = { # This then gives a bonus in the scheme starts
			name = discovered_escape_tunnel_of
			value = scope:stop_host_scope
		}
		ai_chance = {
			base = 10
		}
	}
}

# You find their quasimodo child
host_dinner_events.3136 = {
	type = activity_event
	title = host_dinner_events.3136.title
	desc = host_dinner_events.3136.desc

	theme = host_dinner
	override_background = { reference = dungeon }
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:quasimodo_child
		animation = shock
	}
	immediate = {
		create_character = {
			location = root.location
			culture = scope:stop_host_scope.culture
			faith = scope:stop_host_scope.faith
			template = quasimodo_template
			real_father = scope:stop_host_scope
			save_scope_as = quasimodo_child
		}
		scope:quasimodo_child = {
			random_secret = {
				limit = {
					secret_type = secret_unmarried_illegitimate_child
					exists = real_father
					real_father = scope:stop_host_scope
				}
				save_scope_as = secret_father_scope
			}
		}
		increase_tour_success_effect = { POINTS = 1 }
	}

	option = { # I will expose you for what you are
		name = host_dinner_events.3136.a
		scope:secret_father_scope = {
			expose_secret = root
		}
		stress_impact = {
			deceitful = minor_stress_impact_gain
			trusting = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = deceitful
					has_trait = trusting
				}
			}
		}
	}

	option = { # I will keep quiet, for now
		name = host_dinner_events.3136.b
		scope:secret_father_scope = {
			reveal_to = root
		}
		stress_impact = {
			honest = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_trait = honest
			}
		}
	}
}

# You try to combine two foods
host_dinner_events.3140 = {
	type = activity_event
	title = host_dinner_events.3140.title
	desc = host_dinner_events.3140.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}

	cooldown = { years = 5 }

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			has_trait = gluttonous
		}
	}

	option = { # I'll do it!
		name = host_dinner_events.3140.a
		random_list = {
			50 = { # You have a great time eating your combined food
				send_interface_toast = {
					title = host_dinner_events.3140.satisfying_taste
					left_icon = root
					add_stress = major_stress_loss
					add_character_modifier = {
						modifier = succesful_food_experiment_modifier
						years = 5
					}
				}
			}
			25 = { # You give yourself a stomach ache
				trigger = {
					NOT = {
						has_character_modifier = stomach_ache_modifier
					}
				}
				send_interface_toast = {
					title = host_dinner_events.3140.it_did_not_work
					left_icon = root
					add_stress = major_stress_loss
					add_character_modifier = {
						modifier = stomach_ache_modifier
						years = 5
					}
				}
			}
			25 = { # You make youself sick
				send_interface_toast = {
					title = host_dinner_events.3140.it_did_not_work
					left_icon = root
					contract_disease_effect = {
						DISEASE = ill
						TREATMENT_EVENT = yes
					}
				}
			}
		}
		stress_impact = {
			temperate = minor_stress_impact_gain
			paranoid = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = temperate
					has_trait = paranoid
				}
			}
		}
	}

	option = { # This is stupid
		name = host_dinner_events.3140.b
		if = {
			limit = {
				has_activity_intent = reduce_stress_intent
			}
			stress_impact = { 
				base = minor_stress_gain
				craven = minor_stress_impact_loss
				gluttonous = minor_stress_impact_gain
				stubborn = minor_stress_impact_gain
				arrogant = minor_stress_impact_gain
				}
   		}
   		else = {
			stress_impact = {
				craven = minor_stress_impact_loss
				gluttonous = minor_stress_impact_gain
				stubborn = minor_stress_impact_gain
				arrogant = minor_stress_impact_gain
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = brave
					has_trait = gluttonous
					has_trait = stubborn
					has_trait = arrogant
				}
			}
		}
	}
}

# One of your knights starts a fight
host_dinner_events.3150 = {
	type = activity_event
	title = host_dinner_events.3150.title
	desc = host_dinner_events.3150.desc

	theme = host_dinner
	left_portrait = {
		character = root
		animation = thinking
	}
	right_portrait = {
		character = scope:humorless_knight
		animation = rage
	}
	lower_right_portrait = {
		character = scope:joker_knight
	}

	cooldown = { years = 5 }

	weight_multiplier = {
		base = 1
		modifier = {
			factor = 2
			has_trait = arrogant
		}
	}

	trigger = {
		scope:activity = {
			any_attending_character = {
				is_knight_of = root
				is_available_ai_adult = yes
				has_trait = dull
				NOT = { has_relation_rival = root }
			}
		}
		scope:stop_host_scope = {
			any_knight = {
				location = root.location
				is_available_ai_adult = yes
			}
		}
	}

	immediate = {
		scope:activity = {
			random_attending_character = {
				limit = {
					is_knight_of = root
					NOT = { has_relation_rival = root }
				}
				save_scope_as = humorless_knight
			}
		}
		scope:stop_host_scope = {
			random_knight = {
				limit = {
					location = root.location
					is_available_ai_adult = yes
				}
				save_scope_as = joker_knight
			}
		}
	}

	option = { # Lmao, let him do it
		name = host_dinner_events.3150.a
		scope:humorless_knight = {
			duel = {
				skill = prowess
				target = scope:joker_knight
				50 = { # Your knight wins
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
					}
					root = {
						send_interface_toast = {
							title = host_dinner_events.3150.your_knight_wins
							left_icon = root
							#TODO_CD_EP2, gain glory for the knight
							add_prestige = medium_prestige_gain
							progress_towards_friend_effect = {
								REASON = friend_defended_my_honor
								CHARACTER = scope:humorless_knight
								OPINION = default_friend_opinion
							}
							scope:joker_knight = { increase_wounds_no_death_effect = { REASON = duel } }
							increase_tour_success_effect = { POINTS = 1 }
						}
					}
				}
				50 = { # He fails
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
					}
					root = {
						send_interface_toast = {
							title = host_dinner_events.3150.your_knight_loses
							left_icon = root
							right_icon = scope:humorless_knight
							scope:humorless_knight = {
								set_relation_rival = {
									reason = rival_dishonored_my_liege
									target = scope:joker_knight
								}
								increase_wounds_no_death_effect = { REASON = duel }
							}
						}
					}
				}
			}
		}
		stress_impact = {
			arrogant = medium_stress_impact_loss
			humble = minor_stress_impact_gain
			content = minor_stress_impact_gain
			patient = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = humble
					has_trait = content
					has_trait = patient
				}
			}
		}
	}

	option = { # This is stupid
		name = host_dinner_events.3150.b
		scope:humorless_knight = {
			add_opinion = {
				target = scope:visiting_liege
				opinion = -15
				modifier = humiliated_opinion
			}
		}
		stress_impact = {
			arrogant = minor_stress_impact_gain
			callous = minor_stress_impact_gain
			sadistic = minor_stress_impact_gain
			stubborn = minor_stress_impact_gain
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_trait = arrogant
					has_trait = callous
					has_trait = sadistic
					has_trait = stubborn
				}
			}
		}
	}
}
