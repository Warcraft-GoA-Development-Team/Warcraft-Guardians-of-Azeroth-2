### Can lead faction triggers
can_lead_faction_trigger = {
	save_temporary_scope_value_as = {
		name = temp_faction
		value = flag:$faction$
	}
	save_temporary_scope_value_as = {
		name = temp_landless
		value = flag:$landless$
	}

	trigger_if = {
		limit = { scope:temp_landless = flag:no }
		# Horde triggers
		trigger_if = {
			limit = { scope:temp_faction = flag:horde }
			OR = {
				has_title = title:e_horde
				NOT = { exists = title:e_horde.holder }
			}
		}
		trigger_else = {
			NOT = { has_title = title:e_horde }
		}
		
		OR = {
			# Warcraft
			has_monarchy_government_trigger = yes

			has_government = tribal_government
		}
	}
	
	common_faction_trigger = { faction = $faction$ landless = $landless$ }
}

### Can be in faction triggers
can_be_in_faction_trigger = {
	save_temporary_scope_value_as = {
		name = temp_faction
		value = flag:$faction$
	}
	save_temporary_scope_value_as = {
		name = temp_landless
		value = flag:$landless$
	}
	
	# Horde triggers
	# Horde can join only Horde
	trigger_if = {
		limit = { NOT = { scope:temp_faction = flag:horde } }
		NOT = { has_title = title:e_horde }
	}
	
	pol_faction_exists_trigger = { faction = $faction$ }
	
	common_faction_trigger = { faction = $faction$ landless = $landless$ }
}
can_be_in_faction_of_trigger = {
	trigger_if = {
		limit = { $target$ = { leads_pol_faction_trigger = { faction = alliance } } }
		can_be_in_faction_trigger = { faction = alliance landless = no }
	}
	trigger_else_if = {
		limit = { $target$ = { leads_pol_faction_trigger = { faction = horde } } }
		can_be_in_faction_trigger = { faction = horde landless = no }
	}
	trigger_else = {
		$target$ = { leads_pol_faction_trigger = { faction = custom } }
		can_be_in_faction_trigger = { faction = custom landless = no }
	}
}

common_faction_trigger = {
	save_temporary_scope_value_as = {
		name = temp_landless
		value = flag:$landless$
	}
	
	evil_public_religion_trigger = no
	
	is_alive = yes
	
	OR = {
		is_in_any_pol_faction_trigger = no
		is_in_pol_faction_trigger = { faction = $faction$ }
	}
	
	trigger_if = {
		limit = { scope:temp_landless = flag:no }
		is_independent_ruler = yes
		holds_landed_title = yes
		
		OR = {
			# Warcraft
			has_monarchy_government_trigger = yes

			has_government = republic_government
			has_government = theocracy_government
			has_government = tribal_government
		}
		
		highest_held_title_tier >= tier_duchy #Dukes and higher
	}
}

faction_reason_exists_trigger = {
	save_temporary_scope_value_as = {
		name = temp_faction
		value = flag:$faction$
	}
	
	# Only orcs can create the Horde
	trigger_if = {
		limit = { scope:temp_faction = flag:horde }
		culture = { has_cultural_pillar = heritage_orcish }
	}
	
	OR = {
		trigger_if = {
			limit = { is_ai = no }
			current_date >= 608.1.1
		}
		
		# Alliance triggers
		trigger_if = {
			limit = { scope:temp_faction = flag:alliance }
			# The Horde exists
			pol_faction_exists_trigger = { faction = horde }
		}
		# Horde triggers
		trigger_if = {
			limit = { scope:temp_faction = flag:horde }
			# The Alliance exists
			pol_faction_exists_trigger = { faction = alliance }
		}
		
		has_crisis_on_same_continent_trigger = yes
	}
}
pol_faction_exists_trigger = {
	exists = global_var:$faction$_leader
}

### Is in faction triggers
leads_pol_faction_trigger = {
	exists = global_var:$faction$_leader
	trigger_if = {
		limit = { exists = global_var:$faction$_leader }
		global_var:$faction$_leader = this
	}
}
leads_any_pol_faction_trigger = {
	OR = {
		leads_pol_faction_trigger = { faction = alliance }
		leads_pol_faction_trigger = { faction = horde }
		leads_pol_faction_trigger = { faction = custom }
	}
}
is_in_any_pol_faction_trigger = {
	OR = {
		exists = var:pol_faction
		is_in_pol_faction_trigger = { faction = alliance }
		is_in_pol_faction_trigger = { faction = horde }
		is_in_pol_faction_trigger = { faction = custom }
	}
}
is_in_pol_faction_trigger = {
	OR = {
		AND = {
			exists = var:pol_faction
			var:pol_faction = flag:$faction$
		}
		leads_pol_faction_trigger = { faction = $faction$ }
		is_target_in_global_variable_list = {
			name = $faction$_members
			target = this
		}
	}
}
is_in_same_faction_trigger = {
	exists = var:pol_faction
	exists = $TARGET$.var:pol_faction
	var:pol_faction = $TARGET$.var:pol_faction
}

can_join_faction_trigger = {
	save_temporary_scope_value_as = {
		name = temp_faction
		value = flag:$faction$
	}
	save_temporary_scope_as = new_member
	
	is_at_war = no
	
	in_diplomatic_range_trigger = { target = global_var:$faction$_leader }
	
	trigger_if = {
		limit = { is_ai = yes }
		# Opinion
		ai_has_joining_faction_opinion_trigger = { target = global_var:$faction$_leader }
		
		# Faith
		OR = {
			AND = {
				faith = { faith_hostility_level = { target = global_var:$faction$_leader.faith value <= 2 } }
				global_var:$faction$_leader.faith = { faith_hostility_level = { target = scope:new_member.faith value <= 2 } }
			}
			trigger_if = {
				limit = { scope:temp_faction = flag:alliance }
				has_alliance_religion_trigger = yes
				has_alliance_culture_trigger = yes
			}
			trigger_else_if = {
				limit = { scope:temp_faction = flag:horde }
				has_horde_religion_trigger = yes
				has_horde_culture_trigger = yes
			}
			trigger_else = {
				scope:temp_faction = flag:custom
				has_custom_union_religion_trigger = yes
				has_custom_union_culture_trigger = yes
			}
		}
		
		# Likes better than
		trigger_if = {
			limit = {
				exists = global_var:alliance_leader
				exists = global_var:horde_leader
				
				OR = {
					scope:temp_faction = flag:alliance
					scope:temp_faction = flag:horde
				}
			}
			trigger_if = {
				limit = { scope:temp_faction = flag:alliance }
				OR = {
					likes_better_than_trigger = { who = global_var:alliance_leader than = global_var:horde_leader }
					AND = {
						has_alliance_religion_trigger = yes
						has_alliance_culture_trigger = yes
					}
				}
			}
			trigger_else = {
				scope:temp_faction = flag:horde
				OR = {
					likes_better_than_trigger = { who = global_var:horde_leader than = global_var:alliance_leader }
					AND = {
						has_horde_religion_trigger = yes
						has_horde_culture_trigger = yes
					}
				}
			}
		}
	}
	trigger_else = {
		global_var:$faction$_leader = { player_has_joining_faction_opinion_trigger = { target = prev } }
	}
}
can_leave_faction_trigger = {
	is_at_war = no
}

# Before 603, factions can't be outside the EK
pol_faction_region_trigger = {
	OR = {
		capital_province = {
			geographical_region = world_eastern_kingdoms
			NOT = { geographical_region = world_eastern_kingdoms_lordaeron_mechagon }
			NOT = { geographical_region = world_eastern_kingdoms_azeroth_stranglethorn }
		}
		culture = { has_goblin_heritage_trigger = yes }	# Goblins can reach anything
		current_date >= 603.1.1
	}
}

ai_has_joining_faction_opinion_trigger = {
	save_temporary_scope_value_as = {
		name = joining_opinion
		value = {
			value = 20
			add = {
				value = ai_greed
				divide = 10
			}
			add = {
				value = ai_honor
				divide = 10
				multiply = -1
			}
			add = {
				value = ai_compassion
				divide = 10
				multiply = -1
			}
			add = {
				value = ai_rationality
				divide = 10
				multiply = -1
			}
			add = {
				value = ai_sociability
				divide = 20
				multiply = -1
			}
			if = {
				limit = { has_crisis_on_same_continent_trigger = yes }
				add = -20
			}
			# To give Blackhand's Horde at least some chance
			if = {
				limit = { $target$ = { is_horde_invader_trigger = yes } }
				add = -30
			}
		}
	}
	opinion = { target = $target$ value >= scope:joining_opinion }
}
player_has_joining_faction_opinion_trigger = {
	save_temporary_scope_value_as = {
		name = joining_opinion
		value = {
			value = 40
			if = {
				limit = { has_crisis_on_same_continent_trigger = yes }
				add = -20
			}
		}
	}
	opinion = { target = $target$ value >= scope:joining_opinion }
}

is_former_member_of_pol_faction_trigger = {
	OR = {
		is_in_list = former_$faction$_members
		#trigger_if = {
		#	limit = { exists = scope:former_faction }
		#	scope:former_faction = flag:$faction$
		#}
		# we dont set this variable anywhere, so i commented it
	}
}

has_custom_union_religion_trigger = {
	exists = global_var:custom_leader
	
	religion = global_var:custom_leader.religion
}
has_custom_union_culture_trigger = {
	exists = global_var:custom_leader
	
	culture = { has_same_culture_heritage = global_var:custom_leader.culture }
}

culture_prefers_union_of_trigger = {
	trigger_if = {
		limit = { $target$ = { is_in_pol_faction_trigger = { faction = alliance } } }
		has_alliance_culture_trigger = yes
	}
	trigger_else_if = {
		limit = { $target$ = { is_in_pol_faction_trigger = { faction = horde } } }
		has_horde_culture_trigger = yes
	}
	trigger_else = {
		$target$ = { is_in_pol_faction_trigger = { faction = custom } }
		has_custom_union_culture_trigger = yes
	}
}
religion_prefers_union_of_trigger = {
	trigger_if = {
		limit = { $target$ = { is_in_pol_faction_trigger = { faction = alliance } } }
		has_alliance_religion_trigger = yes
	}
	trigger_else_if = {
		limit = { $target$ = { is_in_pol_faction_trigger = { faction = horde } } }
		has_horde_religion_trigger = yes
	}
	trigger_else = {
		$target$ = { is_in_pol_faction_trigger = { faction = custom } }
		has_custom_union_religion_trigger = yes
	}
}
	
union_overcrowded_trigger = {
	trigger_if = {
		limit = { has_crisis_on_same_continent_trigger = yes }
		global_variable_list_size = { name = $faction$_members value >= 10 }
	}
	trigger_else = {
		global_variable_list_size = { name = $faction$_members value >= 7 }
	}
}

union_overcrowded_of_trigger = {
	trigger_if = {
		limit = { $target$ = { is_in_pol_faction_trigger = { faction = alliance } } }
		union_overcrowded_trigger = { faction = alliance }
	}
	trigger_else_if = {
		limit = { $target$ = { is_in_pol_faction_trigger = { faction = horde } } }
		union_overcrowded_trigger = { faction = horde }
	}
	trigger_else = {
		$target$ = { is_in_pol_faction_trigger = { faction = custom } }
		union_overcrowded_trigger = { faction = custom }
	}
}

has_union_creation_cooldown_trigger = {
	custom_description = {
		text = has_union_creation_cooldown_trigger
		has_global_variable = $faction$_creation_cooldown
	}
}
has_pol_faction_cooldown_trigger = {
	custom_description = {
		text = "has_pol_faction_cooldown"
		subject = this
		has_character_flag = pol_faction_cooldown_flag
	}
}