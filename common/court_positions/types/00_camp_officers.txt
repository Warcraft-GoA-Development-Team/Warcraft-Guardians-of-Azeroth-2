@minspec_skill_rating = decent_skill_rating
@basic_will_do = 500

# Have a look at _court_positions.info for documentation

# CAMP OFFICERS
# Second
# Quartermaster
# Armorer
# Chief Forager
# Master Thief
# Head Porter
# Head Groom
# Huntperson
# Kennelperson
# Chief Engineer
# Witness
# Person-person_haggler
# Camp Cook
# Master Bard
# Stooge
# Master of Arms
# Light Cav. Captain
# Camelry Captain
# Elephantry Captain
# Heavy Cav. Captain
# Horse Arch. Captain
# Archer Captain
# Heavy Inf. Captain
# Light Inf. Captain
# Pike Captain
# Master of Spoils
# Camp Priest

second_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = diplomacy

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = diplomacy
			multiply = 1.5
			max = 60
			desc = court_position_skill_diplomacy
		}
		add = {
			value = martial
			multiply = 0.75
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = stewardship
			multiply = 0.75
			max = 60
			desc = court_position_skill_stewardship
		}
		add = {
			value = intrigue
			multiply = 0.75
			max = 60
			desc = court_position_skill_intrigue
		}
		add = {
			value = learning
			multiply = 0.75
			max = 60
			desc = court_position_skill_learning
		}
		add = {
			value = prowess
			multiply = 0.75
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = sadistic
			}
			add = 10
			desc = court_position_sadistic_trait
		}
		if = {
			limit = {
				has_trait = callous
			}
			add = 10
			desc = court_position_callous_trait
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = 20
			desc = court_position_overseer_trait
		}
		if = {
			limit = {
				has_trait = loyal
			}
			add = 15
			desc = court_position_loyal_trait
		}
		if = {
			limit = {
				has_trait = craven
			}
			add = -20
			desc = court_position_craven_trait
		}
		if = {
			limit = {
				has_trait = fickle
			}
			add = -20
			desc = court_position_fickle_trait
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_second_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = second
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = second_camp_officer
					any_court_position_holder = {
				        type = second_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			diplomacy = 1
			martial = 1
			stewardship = 1
			intrigue = 1
			learning = 1
			prowess = 1
		}
		poor = {
			diplomacy = 1
			martial = 1
			stewardship = 1
			intrigue = 1
			learning = 1
			prowess = 1
		}
		average = {
			diplomacy = 2
			martial = 2
			stewardship = 2
			intrigue = 2
			learning = 2
			prowess = 2
		}
		good = {
			diplomacy = 3
			martial = 3
			stewardship = 3
			intrigue = 3
			learning = 3
			prowess = 3
		}
		excellent = {
			diplomacy = 5
			martial = 5
			stewardship = 5
			intrigue = 5
			learning = 5
			prowess = 5
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		second_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		second_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		second_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value	
	}
}

quartermaster_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = stewardship

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 10
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = stewardship
			multiply = 2.5
			max = 60
			desc = court_position_skill_stewardship
		}
		if = {
			limit = {
				has_trait = generous
			}
			add = {
				value = -20
				desc = court_position_generous_trait
			}
		}
		if = {
			limit = {
				has_trait = logistician
			}
			add = {
				value = 20
				desc = court_position_logistician_trait
			}
		}
		if = {
			limit = {
				has_trait = greedy
			}
			add = {
				value = 10
				desc = court_position_greedy_trait
			}
		}
		if = {
			limit = {
				has_trait = avaricious
			}
			add = {
				value = 20
				desc = court_position_avaricious_trait
			}
		}
		if = {
			limit = {
				has_trait = administrator
			}
			add = {
				value = 20
				desc = court_position_administrator_trait
			}
		}
		if = {
			limit = {
				has_trait = profligate
			}
			add = -50
			desc = court_position_profligate_trait
		}
		if = {
			limit = {
				has_trait = improvident
			}
			add = -50
			desc = court_position_improvident_trait
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_quartermaster_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = quartermaster
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = quartermaster_camp_officer
					any_court_position_holder = {
				        type = quartermaster_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			supply_capacity_mult = 0.1
			provisions_loss_mult = -0.1
		}
		poor = {
			supply_capacity_mult = 0.15
			provisions_loss_mult = -0.15
		}
		average = {
			supply_capacity_mult = 0.25
			provisions_loss_mult = -0.25
		}
		good = {
			supply_capacity_mult = 0.3
			provisions_loss_mult = -0.3
		}
		excellent = {
			supply_capacity_mult = 0.5
			provisions_loss_mult = -0.5
		}
	}

	#custom_employer_modifier_description = quartermaster_camp_officer_employer_custom_effect_description
	base_employer_court_modifier = {
		supply_capacity_mult = 0.2
		provisions_capacity_add = 500
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		quartermaster_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		quartermaster_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		quartermaster_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value	
	}
}

armorer_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = stewardship

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = stewardship
			multiply = 2.5
			max = 60
			desc = court_position_skill_stewardship
		}
		add = {
			value = learning
			multiply = 2
			max = 60
			desc = court_position_skill_learning
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_armorer_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = armorer
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = armorer_camp_officer
					any_court_position_holder = {
				        type = armorer_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				desc = inner_circle_salary_mod
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			maa_toughness_mult = 0.02
		}
		poor = {
			maa_toughness_mult = 0.05
		}
		average = {
			maa_toughness_mult = 0.2
		}
		good = {
			maa_toughness_mult = 0.3
		}
		excellent = {
			maa_toughness_mult = 0.5
		}
	}

	base_employer_court_modifier = {
		maa_toughness_mult = 0.1
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		armorer_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		armorer_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		armorer_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

chief_forager_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = learning

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		add = {
			value = learning
			multiply = 2.5
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = lifestyle_herbalist
			}
			add = {
				value = 5 
				desc = court_position_herbalist_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_hunter
			}
			add = {
				value = 5 
				desc = court_position_hunter_1_trait
			}
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = travel 
					value >= 75
				}
			}
			add = {
				value = 40
				desc = court_position_traveler_trait_experienced
			}
		}
		else_if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = danger 
					value >= 75
				}
			}
			add = {
				value = 40
				desc = court_position_traveler_trait_experienced_danger
			}
		}
		else_if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = travel 
					value >= 50
				}
			}
			add = {
				value = 30
				desc = court_position_traveler_trait_experienced
			}
		}
		else_if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = danger 
					value >= 50
				}
			}
			add = {
				value = 30
				desc = court_position_traveler_trait_experienced_danger
			}
		}
		else_if = {
			limit = {
				has_trait = lifestyle_traveler
			}
			add = {
				value = 20
				desc = court_position_traveler_trait
			}
		}
		if = {
			limit = {
				has_character_modifier = ep2_beastmaster_modifier
			}
			add = {
				value = 30
				desc = court_position_beastmaster_modifier
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_chief_forager_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = chief_forager
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = chief_forager_camp_officer
					any_court_position_holder = {
				        type = chief_forager_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			supply_duration = 0.1
			provisions_gain_mult = 0.1
		}
		poor = {
			supply_duration = 0.15
			provisions_gain_mult = 0.15
		}
		average = {
			supply_duration = 0.25
			provisions_gain_mult = 0.25
		}
		good = {
			supply_duration = 0.4
			provisions_gain_mult = 0.4
		}
		excellent = {
			supply_duration = 0.66
			provisions_gain_mult = 0.66
		}
	}

	custom_employer_modifier_description = chief_forager_camp_officer_employer_custom_effect_description
	
	base_employer_court_modifier = {
		supply_duration = 0.2
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		chief_forager_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		chief_forager_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		chief_forager_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

master_thief_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = intrigue

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = intrigue
			multiply = 2.5
			max = 60
			desc = court_position_skill_intrigue
		}
		add = {
			value = prowess
			multiply = 2
			max = 50
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = schemer
			}
			add = {
				value = 20
				desc = court_position_schemer_trait
			}
		}
		if = {
			limit = {
				has_trait = deceitful
			}
			add = {
				value = 10
				desc = court_position_deceitful_trait
			}
		}
		if = {
			limit = {
				has_trait = honest
			}
			add = {
				value = -20
				desc = court_position_honest_trait
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_master_thief_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = master_thief
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = master_thief_camp_officer
					any_court_position_holder = {
				        type = master_thief_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			owned_scheme_secrecy_add = 3
		}
		poor = {
			owned_scheme_secrecy_add = 6
		}
		average = {
			owned_scheme_secrecy_add = 10
		}
		good = {
			owned_scheme_secrecy_add = 15
		}
		excellent = {
			owned_scheme_secrecy_add = 25
		}
	}

	#unlocking Steal Artifact interaction, see start_stealing_back_artifact in 00_artifact_interactions.txt
	custom_employer_modifier_description = master_thief_camp_officer_employer_custom_effect_description
	
	base_employer_court_modifier = {
		domicile_monthly_gold_add = 0.25
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		master_thief_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		master_thief_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		master_thief_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

head_porter_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = stewardship
			max = 60
			desc = court_position_skill_stewardship
		}
		if = {
			limit = {
				has_trait = logistician
			}
			add = 15
			desc = court_position_logistician_trait
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_head_porter_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = head_porter
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = head_porter_camp_officer
					any_court_position_holder = {
				        type = head_porter_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			supply_capacity_add = 5
			provisions_loss_mult = -0.02
		}
		poor = {
			supply_capacity_add = 15
			provisions_loss_mult = -0.04
		}
		average = {
			supply_capacity_add = 25
			provisions_loss_mult = -0.08
		}
		good = {
			supply_capacity_add = 35
			provisions_loss_mult = -0.16
			
		}
		excellent = {
			supply_capacity_add = 50
			provisions_loss_mult = -0.32
		}
	}

	base_employer_court_modifier = {
		provisions_capacity_add = 500
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		head_porter_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		head_porter_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		head_porter_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

head_groom_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = stewardship

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = learning
			multiply = 1
			max = 50
			desc = court_position_skill_learning
		}
		add = {
			value = stewardship
			multiply = 1.3
			max = 50
			desc = court_position_skill_stewardship
		}

		# SPEED 
		add = {
			value = travel_leader_speed 
			multiply = 1.8
			subtract = 10
			max = 50
			min = 0
			desc = court_position_speed
		}

		# SAFETY 
		add = {
			value = travel_leader_safety 
			multiply = 1.8
			subtract = 10
			max = 50
			min = 0
			desc = court_position_safety
		}

		# POSITIVES
		if = {
			limit = {
				has_trait = brave
			}
			add = {
				value = 5 
				desc = court_position_brave_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_herbalist
			}
			add = {
				value = 5 
				desc = court_position_herbalist_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_hunter
			}
			add = {
				value = 5 
				desc = court_position_hunter_1_trait
			}
		}
		if = {
			limit = {
				has_trait = diligent
			}
			add = {
				value = 5 
				desc = court_position_diligent_trait
			}
		}
		if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = travel 
					value >= 75
				}
			}
			add = {
				value = 40
				desc = court_position_traveler_trait_experienced
			}
		}
		else_if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = danger 
					value >= 75
				}
			}
			add = {
				value = 40
				desc = court_position_traveler_trait_experienced_danger
			}
		}
		else_if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = travel 
					value >= 50
				}
			}
			add = {
				value = 30
				desc = court_position_traveler_trait_experienced
			}
		}
		else_if = {
			limit = {
				has_trait_xp = {
					trait = lifestyle_traveler 
					track = danger 
					value >= 50
				}
			}
			add = {
				value = 30
				desc = court_position_traveler_trait_experienced_danger
			}
		}
		else_if = {
			limit = {
				has_trait = lifestyle_traveler
			}
			add = {
				value = 20
				desc = court_position_traveler_trait
			}
		}
		if = {
			limit = {
				has_character_modifier = ep2_beastmaster_modifier
			}
			add = {
				value = 30
				desc = court_position_beastmaster_modifier
			}
		}

		# NEGATIVES
		if = {
			limit = {
				has_trait = craven
			}
			add = {
				value = -20 
				desc = court_position_craven_trait
			}
		}
		if = {
			limit = {
				has_trait = lazy
			}
			add = {
				value = -10 
				desc = court_position_lazy_trait
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_head_groom_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = head_groom
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = head_groom_camp_officer
					any_court_position_holder = {
				        type = head_groom_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			character_travel_speed = 5
		}
		poor = {
			character_travel_speed = 5
			movement_speed = 0.1
		}
		average = {
			character_travel_speed = 10
			movement_speed = 0.15
		}
		good = {
			character_travel_speed = 10
			movement_speed = 0.2
		}
		excellent = {
			character_travel_speed = 15
			movement_speed = 0.25
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		head_groom_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		head_groom_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		head_groom_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

huntperson_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = prowess

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = prowess
			multiply = 2
			max = 50
			desc = court_position_skill_prowess
		}
		add = {
			value = learning
			multiply = 1.5
			max = 50
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				hunt_lifestyle_track_greater_equal_trigger = { TRACK = hunter GREATER_EQUAL = 100 }
			}
			add = { 
				value = 40
				desc = court_position_hunter_3_trait
			}
		}
		else_if = {
			limit = {
				hunt_lifestyle_track_greater_equal_trigger = { TRACK = hunter GREATER_EQUAL = 50 }
			}
			add = { 
				value = 30
				desc = court_position_hunter_2_trait
			}
		}
		else_if = {
			limit = { has_trait = lifestyle_hunter }
			add = { 
				value = 20
				desc = court_position_hunter_1_trait
			}
		}
		if = {
			limit = { has_trait = brave }
			add = {
				value = 5
				desc = court_position_brave_trait
			}
		}
		if = {
			limit = { has_trait = craven }
			add = {
				value = -10
				desc = court_position_craven_trait
			}
		}
		if = {
			limit = {
				has_character_modifier = ep2_beastmaster_modifier
			}
			add = {
				value = 10
				desc = court_position_beastmaster_modifier
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_huntperson_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = huntperson
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = huntperson_camp_officer
					any_court_position_holder = {
				        type = huntperson_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			archers_damage_mult = 0.02
		}
		poor = {
			archers_damage_mult = 0.05
		}
		average = {
			archers_damage_mult = 0.2
		}
		good = {
			archers_damage_mult = 0.3
		}
		excellent = {
			archers_damage_mult = 0.5
		}
	}

	#Improves Martial Education outcomes - see huntperson_camp_officer_education_boost_effect in 00_education_effects
	custom_employer_modifier_description = huntperson_camp_officer_employer_custom_effect_description
	
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
		hills_provisions_use_mult = -0.15
		mountains_provisions_use_mult = -0.15
		jungle_provisions_use_mult = -0.15
		forest_provisions_use_mult = -0.15
		taiga_provisions_use_mult = -0.15
		wetlands_provisions_use_mult = -0.15
		floodplains_provisions_use_mult = -0.15
		drylands_provisions_use_mult = -0.15
	}
	
	on_court_position_received = {
		huntperson_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		huntperson_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		huntperson_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

kennelperson_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			multiply = 1.5
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				OR = {
					has_character_flag = dog_person
					any_owned_story = { story_type = story_cycle_pet_dog }
					has_character_modifier = dog_story_modifier
				}
			}
			add = 20
		}
		if = {
			limit = {
				OR = {
					has_character_flag = cat_person
					any_owned_story = { story_type = story_cycle_pet_cat }
					has_character_modifier = cat_story_modifier
				}
			}
			add = -20
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_kennelperson_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = kennelperson
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = kennelperson_camp_officer
					any_court_position_holder = {
				        type = kennelperson_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			knight_effectiveness_mult = 0.05
		}
		poor = {
			knight_effectiveness_mult = 0.1
		}
		average = {
			knight_effectiveness_mult = 0.15
		}
		good = {
			knight_effectiveness_mult = 0.2
		}
		excellent = {
			knight_effectiveness_mult = 0.33
		}
	}

	#unlocking Toss to Dogs execution method, see execute_prisoner_interaction in 00_prison_interactions.txt
	custom_employer_modifier_description = kennelperson_camp_officer_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		kennelperson_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		kennelperson_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		kennelperson_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

chief_engineer_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = learning

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = learning
			multiply = 2.5
			max = 60
			desc = court_position_skill_learning
		}
		add = {
			value = martial
			multiply = 1.5
			max = 60
			desc = court_position_skill_martial
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = 15
		}
		if = {
			limit = {
				has_perk = engineered_for_destruction_perk
			}
			add = 15
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_chief_engineer_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = chief_engineer
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = chief_engineer_camp_officer
					any_court_position_holder = {
				        type = chief_engineer_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			maa_siege_value_mult = 0.1
			siege_morale_loss = 0.1
		}
		poor = {
			maa_siege_value_mult = 0.15
			siege_morale_loss = 0.15
		}
		average = {
			maa_siege_value_mult = 0.25
			siege_morale_loss = 0.2
		}
		good = {
			maa_siege_value_mult = 0.4
			siege_morale_loss = 0.25
		}
		excellent = {
			maa_siege_value_mult = 0.66
			siege_morale_loss = 0.33
		}
	}

	#custom_employer_modifier_description = chief_engineer_camp_officer_employer_custom_effect_description
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		chief_engineer_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		chief_engineer_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		chief_engineer_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

witness_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = diplomacy

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = diplomacy
			multiply = 2.5
			max = 60
			desc = court_position_skill_diplomacy
		}
		if = {
			limit = {
				has_trait = diplomat
			}
			add = 20
			desc = court_position_diplomat_trait
		}
		if = {
			limit = {
				has_trait = trusting
			}
			add = 10
			desc = court_position_trusting_trait
		}
		if = {
			limit = {
				has_trait = loyal
			}
			add = 10
			desc = court_position_loyal_trait
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = 10
			desc = court_position_gregarious_trait
		}
		if = {
			limit = {
				has_trait = humble
			}
			add = 10
			desc = court_position_humble_trait
		}
		if = {
			limit = {
				has_trait = flagellant
			}
			add = 20
			desc = court_position_flagellant_trait
		}
		if = {
			limit = {
				has_trait = arrogant
			}
			add = -20
			desc = court_position_arrogant_trait
		}
		if = {
			limit = {
				has_trait = shy
			}
			add = -20
			desc = court_position_shy_trait
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_witness_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = witness
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = witness_camp_officer
					any_court_position_holder = {
				        type = witness_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			monthly_prestige = 0.05
		}
		poor = {
			monthly_prestige = 0.1
		}
		average = {
			monthly_prestige = 0.2
		}
		good = {
			monthly_prestige = 0.4
		}
		excellent = {
			monthly_prestige = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		witness_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		witness_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		witness_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

person_haggler_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = diplomacy

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = diplomacy
			multiply = 1.5
			max = 60
			desc = court_position_skill_diplomacy
		}
		add = {
			value = intrigue
			multiply = 0.5
			max = 60
			desc = court_position_skill_intrigue
		}
		add = {
			value = stewardship
			multiply = 0.5
			max = 60
			desc = court_position_skill_stewardship
		}
		add = {
			value = prowess
			multiply = 0.5
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = deceitful
			}
			add = {
				value = 10
				desc = court_position_deceitful_trait
			}
		}
		if = {
			limit = {
				has_trait = gregarious
			}
			add = {
				value = 10
				desc = court_position_gregarious_trait
			}
		}
		if = {
			limit = {
				has_trait = patient
			}
			add = {
				value = 10
				desc = court_position_patient_trait
			}
		}
		if = {
			limit = {
				has_trait = honest
			}
			add = {
				value = -20
				desc = court_position_honest_trait
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_person_haggler_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = person_haggler
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = person_haggler_camp_officer
					any_court_position_holder = {
				        type = person_haggler_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			
		}
		poor = {
			
		}
		average = {
			
		}
		good = {
			
		}
		excellent = {
			
		}
	}

	custom_employer_modifier_description = person_haggler_camp_officer_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		person_haggler_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		person_haggler_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		person_haggler_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

camp_cook_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = intrigue

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = intrigue
			multiply = 2.5
			max = 60
			desc = court_position_skill_intrigue
		}
		if = {
			limit = {
				has_trait = gluttonous
			}
			add = {
				value = 25
				desc = court_position_gluttonous_trait
			}
		}
		if = {
			limit = {
				has_trait = comfort_eater
			}
			add = {
				value = 15
				desc = court_position_comfort_eater_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_herbalist
			}
			add = {
				value = 15
				desc = court_position_herbalist_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_reveler
			}
			add = {
				value = 20
				desc = court_position_reveler_trait
			}
		}
		if = {
			limit = {
				has_trait = inappetetic
			}
			add = {
				value = -50
				desc = court_position_inappetetic_trait
			}
		}
		if = {
			limit = {
				culture = { has_cultural_parameter = characters_are_better_food_tasters }
			}
			add = {
				value = 20
				desc = court_position_tradition_culinary_art
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_camp_cook_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = camp_cook
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = camp_cook_camp_officer
					any_court_position_holder = {
				        type = camp_cook_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			enemy_hostile_scheme_success_chance_add = -3
		}
		poor = {
			enemy_hostile_scheme_success_chance_add = -5
		}
		average = {
			enemy_hostile_scheme_success_chance_add = -8
		}
		good = {
			enemy_hostile_scheme_success_chance_add = -12
		}
		excellent = {
			enemy_hostile_scheme_success_chance_add = -20
		}
	}

	base_employer_court_modifier = {
		enemy_hostile_scheme_success_chance_add = -5
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		camp_cook_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		camp_cook_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		camp_cook_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

master_bard_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = diplomacy

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = diplomacy
			multiply = 2.5
			max = 60
			desc = court_position_skill_diplomacy
		}
		add = {
			value = learning
			multiply = 1
			max = 50
			desc = court_position_skill_learning
		}
		add = court_position_aptitude_high_penalty_value
		add = court_position_aptitude_family_business_value
		add = court_position_aptitude_low_penalty_value
		if = {
			limit = {
				has_trait = gregarious
			}
			add = {
				value = 15
				desc = court_position_gregarious_trait
			}
		}
		if = {
			limit = {
				has_trait = poet
			}
			add = {
				value = 30
				desc = court_position_poet_trait
			}
		}
		if = {
			limit = {
				has_trait = shy
			}
			add = {
				value = -10
				desc = court_position_shy_trait
			}
		}
		if = {
			limit = {
				has_trait = lifestyle_reveler
			}
			add = {
				value = 20
				desc = court_position_reveler_trait
			}
		}
		if = {
			limit = {
				has_trait = seducer
			}
			add = {
				value = 20
				desc = court_position_seducer_trait
			}
		}
		if = { #Cultural Tradition that improves the aptitude of characters of that culture
			limit = {
				culture = { has_cultural_parameter = characters_are_better_court_musicians }
			}
			add = {
				value = 20
				desc = court_position_tradition_music_theory
			}
		}
		if = { #Cultural Tradition that improves the aptitude of characters of that culture
			limit = {
				culture = { has_cultural_parameter = characters_are_better_court_poets }
			}
			add = {
				value = 20
				desc = court_position_tradition_poetry
			}
		}
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_master_bard_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = master_bard
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = master_bard_camp_officer
					any_court_position_holder = {
				        type = master_bard_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			monthly_prestige = 0.05
		}
		poor = {
			monthly_prestige = 0.1
		}
		average = {
			monthly_prestige = 0.2
		}
		good = {
			monthly_prestige = 0.25
		}
		excellent = {
			monthly_prestige = 0.3
		}
	}

	custom_employer_modifier_description = master_bard_camp_officer_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		master_bard_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		master_bard_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		master_bard_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

stooge_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = learning

	opinion = {
		value = -5
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = {
			value = 100
			desc = BASE
		}
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = learning
			multiply = -2
			max = 100
			desc = court_position_skill_learning
		}
		add = {
			value = sum_of_all_skills_value
			multiply = -1
			max = 100
			desc = court_position_skill_all
		}
		if = {
			limit = {
				employer ?= { domicile ?= { has_domicile_parameter = camp_improves_stooge_officer } }
			}
			multiply = {
				value = 1.25
				desc = court_position_improved_by_camp_fire_capering_fools
			}
		}
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = stooge
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = stooge_camp_officer
					any_court_position_holder = {
				        type = stooge_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}
	
	custom_employer_modifier_description = stooge_employer_custom_effect_description

	modifier = {
		monthly_prestige = -0.25
	}

	on_court_position_received = {
		stooge_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		stooge_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		stooge_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

master_of_arms_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = overseer
			}
			add = {
				value = 20
				desc = court_position_overseer_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_master_of_arms_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = master_of_arms
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = master_of_arms_camp_officer
					any_court_position_holder = {
				        type = master_of_arms_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			maa_toughness_mult = 0.01
			maa_damage_mult = 0.02
		}
		poor = {
			maa_toughness_mult = 0.025
			maa_damage_mult = 0.05
		}
		average = {
			maa_toughness_mult = 0.1
			maa_damage_mult = 0.2
		}
		good = {
			maa_toughness_mult = 0.15
			maa_damage_mult = 0.3
		}
		excellent = {
			maa_toughness_mult = 0.2
			maa_damage_mult = 0.4
		}
	}

	custom_employer_modifier_description = master_of_arms_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		master_of_arms_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		master_of_arms_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		master_of_arms_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value
		add = court_position_candidate_aptitude_value	
	}
}

light_cavalry_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_light_cavalry_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = light_cavalry_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = light_cavalry_captain_camp_officer
					any_court_position_holder = {
				        type = light_cavalry_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			light_cavalry_damage_mult = 0.05
			light_cavalry_pursuit_mult = 0.05
		}
		poor = {
			light_cavalry_damage_mult = 0.1
			light_cavalry_pursuit_mult = 0.1
			
		}
		average = {
			light_cavalry_damage_mult = 0.3
			light_cavalry_pursuit_mult = 0.3
			
		}
		good = {
			light_cavalry_damage_mult = 0.4
			light_cavalry_pursuit_mult = 0.4
			
		}
		excellent = {
			light_cavalry_damage_mult = 0.5
			light_cavalry_pursuit_mult = 0.5
			light_cavalry_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	search_for_courtier = {

	}
	
	on_court_position_received = {
		light_cavalry_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		light_cavalry_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		light_cavalry_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

camelry_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_camelry_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = camelry_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = camelry_captain_camp_officer
					any_court_position_holder = {
				        type = camelry_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			camel_cavalry_damage_mult = 0.05
			camel_cavalry_pursuit_mult = 0.05
		}
		poor = {
			camel_cavalry_damage_mult = 0.1
			camel_cavalry_pursuit_mult = 0.1
			
		}
		average = {
			camel_cavalry_damage_mult = 0.3
			camel_cavalry_pursuit_mult = 0.3
			
		}
		good = {
			camel_cavalry_damage_mult = 0.4
			camel_cavalry_pursuit_mult = 0.4
			
		}
		excellent = {
			camel_cavalry_damage_mult = 0.5
			camel_cavalry_pursuit_mult = 0.5
			camel_cavalry_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		camelry_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		camelry_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		camelry_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

elephantry_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_elephantry_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = elephantry_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = elephantry_captain_camp_officer
					any_court_position_holder = {
				        type = elephantry_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			elephant_cavalry_damage_mult = 0.05
			elephant_cavalry_pursuit_mult = 0.05
			elephant_cavalry_toughness_mult = 0.025
		}
		poor = {
			elephant_cavalry_damage_mult = 0.1
			elephant_cavalry_pursuit_mult = 0.1
			elephant_cavalry_toughness_mult = 0.05
			
		}
		average = {
			elephant_cavalry_damage_mult = 0.15
			elephant_cavalry_pursuit_mult = 0.15
			elephant_cavalry_toughness_mult = 0.075
			
		}
		good = {
			elephant_cavalry_damage_mult = 0.2
			elephant_cavalry_pursuit_mult = 0.2
			elephant_cavalry_toughness_mult = 0.1
			
		}
		excellent = {
			elephant_cavalry_damage_mult = 0.25
			elephant_cavalry_pursuit_mult = 0.25
			elephant_cavalry_toughness_mult = 0.125
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		elephantry_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		elephantry_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		elephantry_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

heavy_cavalry_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_heavy_cavalry_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = heavy_cavalry_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = heavy_cavalry_captain_camp_officer
					any_court_position_holder = {
				        type = heavy_cavalry_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			heavy_cavalry_damage_mult = 0.05
			heavy_cavalry_pursuit_mult = 0.05
		}
		poor = {
			heavy_cavalry_damage_mult = 0.1
			heavy_cavalry_pursuit_mult = 0.1
			
		}
		average = {
			heavy_cavalry_damage_mult = 0.3
			heavy_cavalry_pursuit_mult = 0.3
			
		}
		good = {
			heavy_cavalry_damage_mult = 0.4
			heavy_cavalry_pursuit_mult = 0.4
			
		}
		excellent = {
			heavy_cavalry_damage_mult = 0.5
			heavy_cavalry_pursuit_mult = 0.5
			heavy_cavalry_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		heavy_cavalry_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		heavy_cavalry_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		heavy_cavalry_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

horse_archer_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_horse_archer_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = horse_archer_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = horse_archer_captain_camp_officer
					any_court_position_holder = {
				        type = horse_archer_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			archer_cavalry_damage_mult = 0.05
			archer_cavalry_pursuit_mult = 0.05
		}
		poor = {
			archer_cavalry_damage_mult = 0.1
			archer_cavalry_pursuit_mult = 0.1
			
		}
		average = {
			archer_cavalry_damage_mult = 0.3
			archer_cavalry_pursuit_mult = 0.3
			
		}
		good = {
			archer_cavalry_damage_mult = 0.4
			archer_cavalry_pursuit_mult = 0.4
			
		}
		excellent = {
			archer_cavalry_damage_mult = 0.5
			archer_cavalry_pursuit_mult = 0.5
			archer_cavalry_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		horse_archer_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		horse_archer_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		horse_archer_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

archer_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_archer_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = archer_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = archer_captain_camp_officer
					any_court_position_holder = {
				        type = archer_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			archers_damage_mult = 0.05
			archers_screen_mult = 0.05
		}
		poor = {
			archers_damage_mult = 0.1
			archers_screen_mult = 0.1
			
		}
		average = {
			archers_damage_mult = 0.3
			archers_screen_mult = 0.3
			
		}
		good = {
			archers_damage_mult = 0.4
			archers_screen_mult = 0.4
			
		}
		excellent = {
			archers_damage_mult = 0.5
			archers_screen_mult = 0.5
			archers_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		archer_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		archer_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		archer_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

heavy_infantry_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_heavy_infantry_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = heavy_infantry_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = heavy_infantry_captain_camp_officer
					any_court_position_holder = {
				        type = heavy_infantry_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			heavy_infantry_damage_mult = 0.05
			heavy_infantry_screen_mult = 0.05
		}
		poor = {
			heavy_infantry_damage_mult = 0.1
			heavy_infantry_screen_mult = 0.1
			
		}
		average = {
			heavy_infantry_damage_mult = 0.3
			heavy_infantry_screen_mult = 0.3
			
		}
		good = {
			heavy_infantry_damage_mult = 0.4
			heavy_infantry_screen_mult = 0.4
			
		}
		excellent = {
			heavy_infantry_damage_mult = 0.5
			heavy_infantry_screen_mult = 0.5
			heavy_infantry_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		heavy_infantry_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		heavy_infantry_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		heavy_infantry_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

light_infantry_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_light_infantry_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = light_infantry_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = light_infantry_captain_camp_officer
					any_court_position_holder = {
				        type = light_infantry_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			skirmishers_damage_mult = 0.05
			skirmishers_screen_mult = 0.05
		}
		poor = {
			skirmishers_damage_mult = 0.1
			skirmishers_screen_mult = 0.1
			
		}
		average = {
			skirmishers_damage_mult = 0.3
			skirmishers_screen_mult = 0.3
			
		}
		good = {
			skirmishers_damage_mult = 0.4
			skirmishers_screen_mult = 0.4
			
		}
		excellent = {
			skirmishers_damage_mult = 0.5
			skirmishers_screen_mult = 0.5
			skirmishers_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		light_infantry_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		light_infantry_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		light_infantry_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

pike_captain_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = martial

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = martial
			multiply = 2.5
			max = 60
			desc = court_position_skill_martial
		}
		add = {
			value = prowess
			max = 60
			desc = court_position_skill_prowess
		}
		if = {
			limit = {
				has_trait = strategist
			}
			add = {
				value = 20
				desc = court_position_strategist_trait
			}
		}
		if = {
			limit = {
				any_character_trait = {
					has_trait_category = commander
				}
			}
			add = {
				value = 10
				desc = court_position_commander_traits
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_pike_captain_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			can_be_combatant_based_on_gender_trigger = {
				ARMY_OWNER = this
			}
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = pike_captain
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = pike_captain_camp_officer
					any_court_position_holder = {
				        type = pike_captain_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			pikemen_damage_mult = 0.05
			pikemen_toughness_mult = 0.025
		}
		poor = {
			pikemen_damage_mult = 0.1
			pikemen_toughness_mult = 0.05
			
		}
		average = {
			pikemen_damage_mult = 0.3
			pikemen_toughness_mult = 0.15
			
		}
		good = {
			pikemen_damage_mult = 0.4
			pikemen_toughness_mult = 0.2
			
		}
		excellent = {
			pikemen_damage_mult = 0.5
			pikemen_toughness_mult = 0.25
			pikemen_max_size_add = 1
		}
	}

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		pike_captain_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		pike_captain_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		pike_captain_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

master_of_spoils_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = stewardship

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = stewardship
			multiply = 2
			max = 60
			desc = court_position_skill_stewardship
		}
		add = {
			value = intrigue
			max = 60
			desc = court_position_skill_intrigue
		}
		add = {
			value = martial
			max = 60
			desc = court_position_skill_martial
		}
		if = {
			limit = {
				has_trait = greedy
			}
			add = {
				value = 10
				desc = court_position_greedy_trait
			}
		}
		if = {
			limit = {
				has_trait = reaver
			}
			add = 15
			desc = court_position_reaver_trait
		}
		if = {
			limit = {
				has_trait = avaricious
			}
			add = 15
			desc = court_position_avaricious_trait
		}
		if = {
			limit = {
				has_trait = profligate
			}
			add = -50
			desc = court_position_profligate_trait
		}
		if = {
			limit = {
				has_trait = improvident
			}
			add = -50
			desc = court_position_improvident_trait
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_master_of_spoils_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = master_of_spoils
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = master_of_spoils_camp_officer
					any_court_position_holder = {
				        type = master_of_spoils_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}


	#increase chance of stealing an artifact after a siege, see siege_events.txt event siege.0031
	#increase gold/prestige/piety gain after battle, see battle_winner_gold_gain in 01_dynamic_values.txt
	custom_employer_modifier_description = master_of_spoils_camp_officer_employer_custom_effect_description

	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		master_of_spoils_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		master_of_spoils_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		master_of_spoils_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do

		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

laureate_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = diplomacy

	opinion = {
		value = high_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = diplomacy
			multiply = 2
			max = 60
			desc = court_position_skill_diplomacy
		}
		add = {
			value = learning
			max = 60
			desc = court_position_skill_learning
		}
		add = {
			value = intrigue
			max = 60
			desc = court_position_skill_intrigue
		}
		if = {
			limit = {
				has_trait = poet
			}
			add = {
				value = 50
				desc = court_position_poet_trait
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		always = no # Warcraft
		# government_has_flag = government_is_landless_adventurer
		# has_ep3_dlc_trigger = yes
		# has_trait = violet_poet
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = laureate
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = laureate_camp_officer
					any_court_position_holder = {
				        type = laureate_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}

	custom_employer_modifier_description = laureate_camp_officer_employer_custom_effect_description

	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			monthly_prestige_gain_mult = 0.05
			monthly_dynasty_prestige_mult = 0.01
		}
		poor = {
			monthly_prestige_gain_mult = 0.1
			monthly_dynasty_prestige_mult = 0.02
		}
		average = {
			diplomacy = 1
			monthly_prestige_gain_mult = 0.15
			monthly_dynasty_prestige_mult = 0.03
		}
		good = {
			diplomacy = 2
			monthly_prestige_gain_mult = 0.2
			monthly_dynasty_prestige_mult = 0.04
		}
		excellent = {
			diplomacy = 3
			monthly_prestige_gain_mult = 0.25
			monthly_dynasty_prestige_mult = 0.05
		}
	}
	modifier = {
		monthly_prestige = minor_court_position_prestige_salary
	}
	
	on_court_position_received = {
		laureate_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		laureate_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		laureate_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do
		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

# Camp Priest
camp_priest_camp_officer = {
	max_available_positions = 1
	category = court_position_category_officer
	skill = learning

	opinion = {
		value = regular_camp_officer_opinion
	}
	
	# How high the aptitude has to be to reach the 5 different modifier levels
	aptitude_level_breakpoints = { 20 40 60 80 }

	# How good is this character in this position? root scope is the holder of the court position
	aptitude = {
		value = 0
		if = {
			limit = {
				employer ?= { has_perk = soon_forgiven_perk }
			}
			add = {
				value = 10
				desc = court_position_soon_forgiven_perk
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_friend > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_friend
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				num_of_relation_lover > 0
			}
			add = {
				value = 5
				desc = court_position_positions_of_power_perk_lover
			}
		}
		if = {
			limit = {
				employer ?= {
					is_landless_adventurer = yes
					has_perk = positions_of_power_perk
				}
				is_married = yes
			}
			add = {
				value = 10
				desc = court_position_positions_of_power_perk_marriage
			}
		}
		if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_best_friend = prev
				}
			}
			add = {
				value = 30
				desc = court_position_best_friend
			}
		}
		else_if = {
			limit = {
				employer ?= {
					has_perk = likable_perk
					has_relation_friend = prev
				}
			}
			add = {
				value = 15
				desc = court_position_friend
			}
		}
		add = {
			value = learning
			multiply = 4
			max = 65
			desc = court_position_skill_learning
		}
		if = {
			limit = {
				has_trait = theologian
			}
			add = {
				value = 20
				desc = court_position_theologian_trait
			}
		}
		if = {
			limit = { has_trait = scholar }
			add = {
				value = 15
				desc = court_position_scholar_trait
			}
		}
		if = {
			limit = { has_trait = lifestyle_mystic }
			add = {
				value = 15
				desc = court_position_mystic_1_trait
			}
		}
		add = court_position_aptitude_high_penalty_value
	}

	is_shown = {
		government_has_flag = government_is_landless_adventurer
		has_ep3_dlc_trigger = yes
		domicile ?= { has_domicile_parameter = camp_unlocks_camp_priest_officer }
	}

	valid_position = {
	}

	is_shown_character = {
		scope:employee = {
			is_incapable = no
			faith = scope:liege.faith
			can_be_clergy_due_to_gender_trigger = yes
		}
	}

	valid_character = {
		valid_camp_officer_trigger = {
			OFFICER = camp_priest
		}
	}

	revoke_cost = {
		prestige =  {
			value = minor_court_position_prestige_revoke_cost

			# Set to 0 with Dynasty Perk Inner Circle
			if = {
				limit = {
					exists = dynasty
					dynasty = { has_dynasty_perk = fp2_coterie_legacy_1 }

					employs_court_position = camp_priest_camp_officer
					any_court_position_holder = {
				        type = camp_priest_camp_officer
						exists = dynasty
						house = prev.house
					}
				}
				multiply = 0
			}
		}
	}

	salary = {
		#officers have no salary
	}
	
	# These modifiers are employed based on what level the aptitude reaches (levels are defined as breakpoints) 
	scaling_employer_modifiers = {
		terrible = {
			monthly_piety_gain_mult = 0.02
		}
		poor = {
			monthly_piety_gain_mult = 0.05
		}
		average = {
			monthly_piety_gain_mult = 0.075
			learning = 1
		}
		good = {
			monthly_piety_gain_mult = 0.1
			learning = 2
		}
		excellent = {
			monthly_piety_gain_mult = 0.2
			learning = 3
		}
	}

	modifier = {
		monthly_piety = minor_court_position_piety_salary
	}
	
	on_court_position_received = {
		camp_priest_camp_officer_title_accepted_effect = yes
	}
	on_court_position_revoked = { 
		camp_priest_camp_officer_title_revoked_effect = yes
	}
	on_court_position_invalidated = {
		camp_priest_camp_officer_title_invalidated_effect = yes
	}
	# Scripted value to determine whether an AI will hire/fire a position or not. Hires over 0, fires under -50. Look in _court_positions.info for more extensive documentation!
	candidate_score = {
		value = @basic_will_do
		add = scope:base_value
		add = court_position_candidate_score_base_value 
		add = court_position_candidate_aptitude_value
	}
}

