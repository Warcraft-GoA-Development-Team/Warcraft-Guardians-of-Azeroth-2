####################
# BASTARD INTERACTIONS
####################

namespace = bastard_interaction

#LEGITIMIZATION

#I was legitimized!
bastard_interaction.0001 = {
	type = character_event
	title = bastard_interaction.0001.t
	desc = {
		first_valid = {
			triggered_desc = {
				# Warcraft
				trigger = { age >= age_14_value }
				desc = bastard_interaction.0001.desc.standard
			}
			triggered_desc = {
				trigger = { # Warcraft
					age_in_relation_to_humans_less_than_trigger = { age = 14 } 
				}
				desc = bastard_interaction.0001.desc.child
			}
		}
	}
	theme = bastardy
	left_portrait = scope:actor
	right_portrait = scope:house_head

	immediate = {
		play_music_cue = mx_cue_positive_effect
		show_as_tooltip = {
			legitimize_bastard_interaction_opinions_effect = {
				BASTARD = scope:legitimized_bastard
				HOUSE_HEAD = scope:actor.house.house_head
				LEGITIMIZER = scope:actor
			}
		}
		if = {
			limit = {
				exists = house.house_head
			}
			house.house_head = {
				save_scope_as = house_head
			}
		}
		else = {
			scope:actor.house.house_head = {
				save_scope_as = house_head
			}
			if = { # Fallback to make sure legitimized bastards have a house -- This should not be necessary, but certain edge cases might currently cause it to happen - Petter 19/09/19
				limit = {
					NOT = { exists = house }
				}
				assert_if = {
					limit = { NOT = { exists = scope:actor.house } }
					text = "House-less character tried to legitimize a bastard!"
				}
				set_house = scope:actor.house
			}
		}
	}

	option = {
		name = {
			# Warcraft
			trigger = { age >= age_14_value }
			text = bastard_interaction.0001.a.standard
		}
		name = {
			trigger = { # Warcraft
				age_in_relation_to_humans_less_than_trigger = { age = 14 } 
			}
			text = bastard_interaction.0001.a.child
		}

		stress_impact = {
			base = major_stress_loss
		}

		add_opinion = {
			target = scope:actor
			modifier = legitimized_me_opinion
		}
		save_scope_as = legitimized_bastard
		if = {
			limit = {
				exists = house.house_head
				house.house_head = {	
					can_add_hook = {
						type = favor_hook
						target = scope:legitimized_bastard
					}
				}
			}
			house.house_head = {
				send_interface_message = {
					type = event_dynasty_good
					title = house_bastard_was_legitimized

					right_icon = scope:legitimized_bastard
					
					add_hook = {
						type = favor_hook
						target = scope:legitimized_bastard
					}
				}
			}
		}
		if = {
			limit = {
				exists = dynasty.dynast
				NOT = { dynasty.dynast = house.house_head }
				dynasty.dynast = { is_alive = yes }
				dynasty.dynast = {	
					can_add_hook = {
						type = favor_hook
						target = scope:legitimized_bastard
					}
				}
			}
			dynasty.dynast = {
				send_interface_message = {
					type = event_dynasty_good
					title = dynasty_bastard_was_legitimized
					add_hook = {
						type = favor_hook
						target = scope:legitimized_bastard
					}
				}
			}
		}
	}
}

#I legitimized a bastard
bastard_interaction.0002 = {
	type = character_event
	title = bastard_interaction.0002.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					house.house_head = root
				}
				desc = bastard_interaction.0002.house_head
			}
			desc = bastard_interaction.0002.approved
		}
	}
	theme = bastardy
	left_portrait = {
		character = scope:legitimized_bastard
		animation = happiness
	}
	right_portrait = scope:house_head

	immediate = {
		show_as_tooltip = {
			legitimize_bastard_interaction_opinions_effect = {
				BASTARD = scope:legitimized_bastard
				HOUSE_HEAD = scope:actor.house.house_head
				LEGITIMIZER = scope:actor
			}
		}
	}

	option = {
		name = bastard_interaction.0002.a
	}
}

#My child was legitimized
bastard_interaction.0003 = {
	type = character_event
	title = bastard_interaction.0003.t
	desc = bastard_interaction.0003.desc
	theme = bastardy
	left_portrait = {
		character = scope:legitimized_bastard
		animation = happiness
	}
	lower_left_portrait = scope:actor

	immediate = {
		play_music_cue = mx_cue_positive_effect
	}
	
	option = {
		name = bastard_interaction.0003.a

		stress_impact = {
			base = minor_stress_loss
		}

		hidden_effect = {
			remove_opinion = {
				target = scope:actor
				modifier = rejected_our_child_opinion
			}
			remove_opinion = {
				target = scope:actor
				modifier = rejected_our_children_opinion
			}
		}
		add_opinion = {
			target = scope:actor
			modifier = legitimized_my_child_opinion
		}
	}
}

#Spouse legitimized a bastard
bastard_interaction.0004 = {
	type = character_event
	title = bastard_interaction.0004.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:newborn_legitimization }
				desc = bastard_interaction.0004.newborn_desc
			}
			desc = bastard_interaction.0004.desc
		}
	}
	theme = bastardy
	left_portrait = scope:legitimized_bastard
	lower_left_portrait = scope:actor
	
	option = {
		name = bastard_interaction.0004.a
		
		stress_impact = {
			base = medium_stress_gain
		}

		add_opinion = {
			target = scope:actor
			modifier = legitimized_a_bastard_opinion
		}

		if = {
			limit = {
				exists = scope:house_head
				NOT = {
					scope:actor = scope:house_head
				}
			}
			add_opinion = {
				target = scope:house_head
				modifier = legitimized_a_bastard_opinion
			}
		}

		add_opinion = {
			target = scope:legitimized_bastard
			modifier = legitimized_bastard_opinion
		}
	}
}

#Parent legitimizes a bastard
bastard_interaction.0005 = {
	type = character_event
	title = bastard_interaction.0005.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { has_trait = bastard }
				desc = bastard_interaction.0005.desc.bastard
			}
			triggered_desc = {
				trigger = {
					OR = {
						has_trait = legitimized_bastard
						opinion = {
							value >= 40
							target = scope:legitimized_bastard
						}
					}
				}
				desc = bastard_interaction.0005.desc.approve
			}
			desc = bastard_interaction.0005.desc.disapprove
		}
	}
	theme = bastardy
	left_portrait = scope:legitimized_bastard
	lower_left_portrait = scope:actor

	trigger = {
		exists = scope:legitimized_bastard
	}

	on_trigger_fail = {
		debug_log = "bastard_interaction.0005 fired without a legitimized_bastard scope"
		debug_log_scopes = yes
	}

	option = {
		name = {
			trigger = {
				OR = {
					has_trait = bastard
					has_trait = legitimized_bastard
					opinion = {
						value >= 40
						target = scope:legitimized_bastard
					}
				}
			}
			text = bastard_interaction.0005.a.approve
		}
		name = {
			trigger = {
				NOR = {
					has_trait = bastard
					has_trait = legitimized_bastard
					opinion = {
						value >= 40
						target = scope:legitimized_bastard
					}
				}
			}
			text = bastard_interaction.0005.a.disapprove
		}

		if = {
			limit = {
				OR = { #Someone who sympathizes with the bastard is relieved
					has_trait = bastard
					has_trait = legitimized_bastard
					opinion = {
						value >= 40
						target = scope:legitimized_bastard
					}
				}
			}
			stress_impact = {
				base = minor_stress_loss
			}
		}

		else = { #Everyone else is angry
			stress_impact = {
				base = medium_stress_gain
			}

			add_opinion = {
				target = scope:actor
				modifier = legitimized_a_bastard_opinion
			}

			if = {
				limit = {
					exists = scope:house_head
					NOT = {
						scope:actor = scope:house_head
					}
				}
				add_opinion = {
					target = scope:house_head
					modifier = legitimized_a_bastard_opinion
				}
			}

			add_opinion = {
				target = scope:legitimized_bastard
				modifier = legitimized_bastard_opinion
			}
		}
	}
}


#The House Head legitimized my bastard!
bastard_interaction.0006 = {
	type = character_event
	title = bastard_interaction.0006.t
	desc = bastard_interaction.0006.desc
	theme = bastardy
	left_portrait = scope:legitimized_bastard
	lower_left_portrait = scope:actor
	
	option = {
		name = bastard_interaction.0006.a

		add_opinion = {
			target = scope:actor
			modifier = legitimized_my_child_opinion
		}
	}
}

#The House Head legitimized my spouse's bastard!
bastard_interaction.0007 = {
	type = character_event
	title = bastard_interaction.0006.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:newborn_legitimization }
				desc = bastard_interaction.0007.newborn_desc
			}
			desc = bastard_interaction.0007.desc
		}
	}
	theme = bastardy
	left_portrait = scope:legitimized_bastard
	lower_left_portrait = scope:actor
	right_portrait = scope:parent

	immediate = {
		random_spouse = {
			limit = {
				OR = {
					this = scope:legitimized_bastard.mother
					this = scope:legitimized_bastard.real_father
				}
			}
			save_scope_as = parent
		}
	}
	
	option = {
		name = bastard_interaction.0007.a

		add_opinion = {
			target = scope:actor
			modifier = legitimized_a_bastard_opinion
		}
	}
}

#The House Head legitimized my parent's bastard!
bastard_interaction.0008 = {
	type = character_event
	title = bastard_interaction.0006.t
	desc = bastard_interaction.0008.desc
	theme = bastardy
	left_portrait = scope:legitimized_bastard
	lower_left_portrait = scope:actor
	right_portrait = scope:parent

	immediate = {
		random_parent = {
			limit = {
				OR = {
					this = scope:legitimized_bastard.mother
					this = scope:legitimized_bastard.real_father
				}
			}
			save_scope_as = parent
		}
	}
	
	option = {
		name = bastard_interaction.0008.a

		add_opinion = {
			target = scope:actor
			modifier = legitimized_a_bastard_opinion
		}

		add_opinion = {
			target = scope:legitimized_bastard
			modifier = legitimized_bastard_opinion
		}
	}
}


#I was legitimized by my Dynasty's Dynast!
bastard_interaction.0009 = {
	type = character_event
	title = bastard_interaction.0009.t
	desc = bastard_interaction.0009.desc
	theme = bastardy
	left_portrait = scope:actor
	
	immediate = {
		hidden_effect = {
			remove_trait = bastard
		}	
		add_trait_force_tooltip = legitimized_bastard
		hidden_effect = {
			add_opinion = {
				target = scope:actor
				modifier = legitimized_me_opinion
			}
		}
	}

	option = {
		name = bastard_interaction.0009.a
	}
}

#The Dynast legitimized my child/sibling!
bastard_interaction.0010 = {
	type = character_event
	title = bastard_interaction.0010.t
	desc = bastard_interaction.0010.desc
	theme = bastardy
	left_portrait = scope:actor
	right_portrait = scope:recipient
	
	immediate = {
		show_as_tooltip = {
			scope:recipient = {
				add_trait_force_tooltip = legitimized_bastard
			}
		}
	}

	option = {
		name = bastard_interaction.0010.a
		custom_tooltip = bastard_interaction.0010.a.tt
	}
}
