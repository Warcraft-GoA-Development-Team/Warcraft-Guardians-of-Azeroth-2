
fund_inspiration_effect = {
	scope:recipient = {
		if = {
			limit = {
				NOT = { is_courtier_of = scope:actor }
			}
			if = {
				limit = {
					any_traveling_family_member = {
						can_any_traveling_family_members_travel_trigger = yes
					}
				}
				every_traveling_family_member = {
					custom = fund_inspiration_interaction_reqruit_family_tooltip
					limit = {
						can_any_traveling_family_members_travel_trigger = yes
					}
					scope:actor = {
						add_courtier = prev
					}
				}
			}
			scope:actor = {
				add_courtier = scope:recipient
			}
		}
		add_opinion = {
			target = scope:actor
			modifier = grateful_opinion
			opinion = 40
		}
	}
	scope:actor = {
		sponsor_inspiration = scope:recipient.inspiration
	}
	if = {
		limit = {
			scope:actor = {
				is_ai = no
			}
			NOT = {
				exists = global_var:ep1_07_achievement_inspiration_count_tracker
			}
		}
		set_global_variable = {
			name = ep1_07_achievement_inspiration_count_tracker
			value = 1
		}
	}
	else_if = {
		limit = {
			scope:actor = {
				is_ai = no
			}
			exists = global_var:ep1_07_achievement_inspiration_count_tracker
		}
		change_global_variable = {
			name = ep1_07_achievement_inspiration_count_tracker
			add = 1
		}
	}
}

grant_inspiration_reward_effect = {
	add_gold = {
		value = root.inspiration_gold_invested
		multiply = 0.25
	}
	add_prestige_level = 1
	add_prestige = {
		value = root.inspiration_gold_invested
		multiply = 0.75
	}
}

set_alchemy_inspiration_type_effect = {
	save_temporary_scope_value_as = {
		name = allow_no_type_option
		value = $NO_TYPE$
	}
	hidden_effect = {
		$BASE_SCOPE$ = {
			#The type has been decided in events, when the character got inspired, or now. Let's save it! (might still leave it up to the sponsor if allow_no_type_option = yes!)
			if = {
				limit = {
					NOT = { exists = var:artifact_alchemy_type }
				}
				random_list = { #What do they want to do?
					5 = { #Elixirs
						modifier = {
							add = 5
							has_trait = arrogant
						}
						set_variable = {
							name = artifact_alchemy_type
							value = flag:alchemy_type_elixirs
						}
					}
					10 = { #Metals
						set_variable = {
							name = artifact_alchemy_type
							value = flag:alchemy_type_metals
						}
					}
					10 = { #Panacea: a cure-all for all disease
						modifier = {
							add = 10
							has_trait = lifestyle_physician
						}
						set_variable = {
							name = artifact_alchemy_type
							value = flag:alchemy_type_panacea
						}
					}
					5 = { #Immortality
						modifier = {
							add = 5
							has_trait = arrogant
						}
						set_variable = {
							name = artifact_alchemy_type
							value = flag:alchemy_type_immortality
						}
					}
					50 = { #They don't care and you can decide!
						trigger = {
							scope:allow_no_type_option = yes
						}
						modifier = {
							add = 30
							has_personality_submissive_trigger = yes
						}
						ai_value_modifier = {
							ai_boldness = -0.25
							ai_energy = -0.25
						}
					}
				}
			}
		}
	}
}


################
# Adventurer Inspiration effects
################
# The Adventurer Inspiration is a bit special since it can result in many different types of artifacts, so we handle the generation here

# Where is the adventurer going?
set_adventure_location_effect = {
	save_temporary_scope_value_as = {
		name = allow_no_destination_option
		value = $NO_DESTINATION$
	}
	hidden_effect = { #If they haven't specified where they're going we decide it here (might still leave it up to the sponsor if allow_no_destination_option = yes!)
		$BASE_SCOPE$ = {
			if = {
				limit = {
					NOT = { exists = var:adventure_destination }
				}
				random_list = {
					# world_eastern_kingdoms
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_eastern_kingdoms_azeroth } }
						set_variable = { name = adventure_destination value = flag:world_eastern_kingdoms_azeroth }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_eastern_kingdoms_lordaeron } }
						set_variable = { name = adventure_destination value = flag:world_eastern_kingdoms_lordaeron }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_eastern_kingdoms_khaz_modan } }
						set_variable = { name = adventure_destination value = flag:world_eastern_kingdoms_khaz_modan }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_eastern_kingdoms_quelthalas } }
						set_variable = { name = adventure_destination value = flag:world_eastern_kingdoms_quelthalas }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_eastern_kingdoms_lordaeron_kul_tiras } }
						set_variable = { name = adventure_destination value = flag:world_eastern_kingdoms_lordaeron_kul_tiras }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_eastern_kingdoms_lordaeron_mechagon } }
						set_variable = { name = adventure_destination value = flag:world_eastern_kingdoms_lordaeron_mechagon }
					}
					
					# world_northrend
					20 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_northrend } }
						set_variable = { name = adventure_destination value = flag:world_northrend }
					}
					
					# world_kalimdor
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_kalimdor_south } }
						set_variable = { name = adventure_destination value = flag:world_kalimdor_south }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_kalimdor_central } }
						set_variable = { name = adventure_destination value = flag:world_kalimdor_central }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_kalimdor_north } }
						set_variable = { name = adventure_destination value = flag:world_kalimdor_north }
					}
					
					# world_south_seas
					20 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_south_seas } }
						set_variable = { name = adventure_destination value = flag:world_south_seas }
					}
					
					# world_pandaria
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_pandaria_east } }
						set_variable = { name = adventure_destination value = flag:world_pandaria_east }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_pandaria_west } }
						set_variable = { name = adventure_destination value = flag:world_pandaria_west }
					}
					10 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_pandaria_north } }
						set_variable = { name = adventure_destination value = flag:world_pandaria_north }
					}
					
					# world_broken_isles
					20 = {
						trigger = { wc_adventurer_potential_destination_trigger = { REGION = world_broken_isles } }
						set_variable = { name = adventure_destination value = flag:world_broken_isles }
					}
					
					85 = { #Very skillde adventurers are often going to let you decide!
						trigger = {
							scope:allow_no_destination_option = yes
						}
						modifier = {
							add = 40
							has_personality_submissive_trigger = yes
						}
						ai_value_modifier = {
							ai_boldness = -0.25
							ai_energy = -0.25
						}
					}
				}
			}
		}
	}
}

get_adventure_inspiration_start_location = {
	$ADVENTURER$ = { save_scope_as = adventurer }
	scope:adventurer = {
		if = {
			limit = { exists = var:adventure_destination }
			switch = {
				trigger = var:adventure_destination
				# world_eastern_kingdoms
				flag:world_eastern_kingdoms_azeroth = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_eastern_kingdoms_azeroth }
				}
				flag:world_eastern_kingdoms_lordaeron = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_eastern_kingdoms_lordaeron }
				}
				flag:world_eastern_kingdoms_khaz_modan = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_eastern_kingdoms_khaz_modan }
				}
				flag:world_eastern_kingdoms_quelthalas = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_eastern_kingdoms_quelthalas }
				}
				flag:world_eastern_kingdoms_lordaeron_kul_tiras = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_eastern_kingdoms_lordaeron_kul_tiras }
				}
				flag:world_eastern_kingdoms_lordaeron_mechagon = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_eastern_kingdoms_lordaeron_mechagon }
				}
				
				# world_northrend
				flag:world_northrend = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_northrend }
				}
				
				# world_kalimdor
				flag:world_kalimdor_south = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_kalimdor_south }
				}
				flag:world_kalimdor_central = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_kalimdor_central }
				}
				flag:world_kalimdor_north = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_kalimdor_north }
				}
				
				# world_south_seas
				flag:world_south_seas = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_south_seas }
				}
				
				# world_pandaria
				flag:world_pandaria_east = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_pandaria_east }
				}
				flag:world_pandaria_west = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_pandaria_west }
				}
				flag:world_pandaria_north = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_pandaria_north }
				}
				
				# world_broken_isles
				flag:world_broken_isles = { # 
					wc_save_random_county_in_region_as_location_effect = { REGION = world_broken_isles }
				}
			}
		}
	}
}

inspiration_adventure_create_artifact_effect = {
	$OWNER$ = { save_scope_as = owner } #Will always exist!
	$CREATOR$ = { save_scope_as = adventurer } #Will always exist in an adventure inspiration!

	#If you've somehow managed to not set a destination by now we generate one here
	if = {
		limit = {
			NOT = { exists = scope:adventurer.var:adventure_destination }
		}
		set_adventure_location_effect = {
			BASE_SCOPE = scope:adventurer
			NO_DESTINATION = no
		}
		get_adventure_inspiration_start_location = { ADVENTURER = scope:adventurer }
	}
	else = {
		#To save the location and make sure materials can access it
		scope:adventurer.location = { save_scope_as = location } # To save the location scope based on the destination
	}

	#Creating the artifact based on the previous choice and outcome
	scope:adventurer = {
		hidden_effect = {
			if = {
				limit = { exists = scope:location }
				scope:location = { add_to_list = artifact_material_sources } #Used for artifact creation
			}
			create_character = {
				location = root.location
				template = local_artisan_template
				culture = scope:location.culture
				faith = scope:location.faith
				gender = scope:adventurer
				dynasty = none
				save_scope_as = artifact_origin #Fictional maker of artifact
			}

			random_list = {
				25 = {
					trigger = { #Epic Artifact
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:epic_quest
								var:adventure_type = flag:free_reign
							}
						}
					}
					modifier = {
						scope:adventurer.adventure_inspiration_average_skill_value <= low_inspiration_skill
						add = -10
					}
					modifier = {
						scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
						add = 25
					}
					root = {
						random_list = {
							10 = { #Chance of Relic
								modifier = {
									scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
									add = -5 #More likely to find something better.
								}
								modifier = {
									scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
									add = -4 #High inspiration skill adventurers will only find relics if there is nothing else to find.
								}
								random_list = { #This is a list inside an item in the other list because we need _one_ chance for relic and the relic types must be able to have overlapping triggers. 
									1 = { #Fallback Relic
										create_artifact_pedestal_branch_relic_general_effect = {
											OWNER = root
											RELIGION = scope:location.religion
										}
									}
								}
							}
							1 = { #FP3 Sassanian Sword
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									any_artifact = {
										count < 15
										has_variable = sassanian_sword
									}
									scope:location ?= {
										#OR = {
											#geographical_region = world_middle_east
											geographical_region = world_kalimdor_north
										#}
									}
								}
								create_artifact_illustrious_sassanian_sword_effect = { OWNER = ROOT }
							}
							# Warcraft
							# Frostmourne
							1 = {
								modifier = {
									OR = {
										scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
										AND = {
											exists = scope:inspiration_owner.var:artifact_quality
											scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
										}
									}
									add = 5
								}
								trigger = {
									frostmourne_can_be_found_trigger = yes

									scope:location ?= {
										OR = {
											geographical_region = world_northrend_icecrown_glacier
											geographical_region = world_northrend_dragonblight
										}
									}
								}
								create_artifact_frostmourne_effect = { OWNER = root }
							}
						}
					}
				}

				10 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > medium_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -5
					}
					trigger = { #A Weapon
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:epic_quest
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_weapon_effect = {
							OWNER = scope:artifact_origin
							CREATOR = scope:artifact_origin
							SET_WEAPON_TYPE = flag:no
						}
					}
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = weapon_artifact
						value = yes
					}
				}

				5 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > medium_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -2
					}
					trigger = { #An armor
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:epic_quest
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_armor_effect = {
							OWNER = scope:artifact_origin
							CREATOR = scope:artifact_origin
							SET_ARMOR_TYPE = flag:no
						}
					}
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = armor_artifact
						value = yes
					}
				}
				5 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > medium_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -2
					}
					trigger = { # Necklace
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:trinket
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_necklace_effect = {
							OWNER = scope:artifact_origin
							SMITH = scope:artifact_origin
						}
					}
					scope:newly_created_artifact = { save_scope_as = necklace }
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = necklace_artifact
						value = yes
					}
				}

				5 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > medium_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -2
					}
					trigger = {
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:trinket
								var:adventure_type = flag:free_reign
								var:adventure_type = flag:epic_quest
							}
						}
					}
					scope:owner = {
						create_artifact_regalia_effect = {
							OWNER = scope:artifact_origin
							SMITH = scope:artifact_origin
						}
					}
					scope:owner = {
						save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
							name = regalia_artifact
							value = yes
						}
					}
				}

				10 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -5
					}
					trigger = { #Skull
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:skull_or_hide
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_wall_skull_effect = {
							OWNER = scope:owner
							HUNTER = scope:adventurer
							LEGENDARY = no
							ANIMAL = flag:none
						}
					}
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = skull
						value = yes
					}
				}
				30 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -5
					}
					trigger = { #Hide - big
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:skull_or_hide
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_animal_hide_effect = {
							OWNER = scope:owner
							HUNTER = scope:adventurer
							LEGENDARY = no
							ANIMAL = flag:none
						}
					}
				}
				10 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= high_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > high_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -5
					}
					trigger = { #Trinket, box small
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:trinket
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_box_small_effect = {
							OWNER = scope:owner
							CARPENTER = scope:inspiration_owner
						}
					}
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = box
						value = yes
					}
				}
				10 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > medium_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -5
					}
					trigger = { #Trinket, goblet
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:trinket
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_goblet_effect = {
							OWNER = scope:owner
							SMITH = scope:inspiration_owner
						}
					}
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = goblet
						value = yes
					}
				}
				10 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > medium_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -2
					}
					trigger = { #Tapestry
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:tapestry_or_fabric
								var:adventure_type = flag:free_reign
							}
						}
					}
					scope:owner = {
						create_artifact_tapestry_effect = {
							OWNER = scope:owner
							WEAVER = scope:inspiration_owner
						}
					}
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = tapestry
						value = yes
					}
				}
				10 = {
					modifier = {
						OR = {
							scope:adventurer.adventure_inspiration_average_skill_value >= medium_inspiration_skill
							AND = {
								exists = scope:inspiration_owner.var:artifact_quality
								scope:inspiration_owner.var:artifact_quality > medium_adventurer_epic_quality_level #Cumulative event choices
							}
						}
						add = -2
					}
					trigger = { #Persian Drinking Vessel (goblet)
						has_fp3_dlc_trigger = yes
						trigger_if = {
							limit = { exists = var:adventure_type }
							OR = {
								var:adventure_type = flag:trinket
								var:adventure_type = flag:free_reign
							}
						}
						scope:location = { geographical_region = world_middle_east_persia }
					}
					scope:owner = {
						create_artifact_persian_drinking_vessel_effect = {
							OWNER = scope:owner
							SMITH = scope:inspiration_owner
						}
					}
					save_scope_value_as = { #We save the type here for tooltips in fund_inspiration.1051
						name = goblet
						value = yes
					}
				}
			}
			if = {
				limit = {
					exists = scope:epic
					NOT = { exists = scope:task_contract_taker }
				}
				scope:epic = {
					add_artifact_history = {
						location = root.capital_province
						actor = scope:adventurer
						recipient = root
						type = given
					}
				}
			}
			else_if = {
				limit = {
					exists = scope:newly_created_artifact
					NOT = { exists = scope:task_contract_taker }
				}
				scope:newly_created_artifact = {
					add_artifact_history = {
						location = root.capital_province
						actor = scope:adventurer
						recipient = root
						type = given
					}
				}
			}
		}
	}
}
