add_scandi_adventurer_target_effect = {
	every_county_in_region = {
		region = $SCANDI_ADV_TARGET_REGION$
		limit = {
			NOT = {
				is_in_list = adventure_targets_list
			}
			holder = { valid_adventurer_target_trigger = yes }
		}
		add_to_list = adventure_targets_list
	}
	random_in_list = {
		list = adventure_targets_list
		weight = {
			modifier = { add = scandinavian_adventurer_target_title_priority_value }
		}
		save_scope_as = adventurer_target
	}
}

add_adventurer_traits_effect = {
	save_scope_as = scandi_adventurer
	
	add_character_modifier = scandinavian_adventurer_fp1_modifier
	add_trait = adventurer
}

# Our Warcraft effect but placed here because it's inspired by scandis
add_weak_ruler_adventurer_target_effect = {
	ordered_independent_ruler = {
		limit = {
			valid_adventurer_target_trigger = yes
			exists = capital_province
			capital_province = { geographical_region = $REGION$ }
		}
		order_by = negative_max_military_strength
		max = 1
		
		save_temporary_scope_as = target_weak
	}
	if = {
		limit = { exists = scope:target_weak }
		scope:target_weak = {
			add_ruler_adventurer_target_effect = yes
		}
	}
}

add_ruler_adventurer_target_effect = {
	every_realm_county = {
		limit = {
			NOT = {
				is_in_list = adventure_targets_list
			}
			holder = { valid_adventurer_target_trigger = yes }
		}
		add_to_list = adventure_targets_list
	}
	random_in_list = {
		list = adventure_targets_list
		weight = {
			modifier = { add = scandinavian_adventurer_target_title_priority_value }
		}
		save_scope_as = adventurer_target
	}
}

scandinavian_adventurer_start_war_effect = {
	create_adventurer_title_effect = yes
	adventurer_set_title_and_war_effect = yes
	
	# Setup event troops.
	scope:scandi_adventurer = {
		# Set a random spawn location.
		pick_random_location_in_scandi_effect = yes
		# Work out how many event troops we should give the adventurer for a 60:40 fight.
		spawn_basic_adventurer_army_effect = { MAX = 8000 }
		spawn_army = {
			men_at_arms = {
				type = huscarl
				stacks = {
					value = 1
					multiply = scope:adventurer_target.holder.top_liege.primary_title.tier
				}
			}
			inheritable = yes
			location = scope:scandi_adventurer.var:random_location
			name = scandi_adventurer_event_troops
		}
	}
	# Loan a little gold in case they're in debt/to keep them going.
	scope:scandi_adventurer = { add_gold = scandinavian_adventurer_efficacy_loan_value }
}

# Warcraft
draenor_adventurer_start_war_effect = {
	if = {
		limit = { exists = scope:adventurer_target }
		create_adventurer_title_effect = yes
		adventurer_set_title_and_war_effect = yes
		draenor_set_location_army_gold_effect = yes
	}
	else = { remove_character_modifier = scandinavian_adventurer_fp1_modifier }
}

garrosh_adventurer_start_war_effect = {
	if = {
		limit = { exists = scope:adventurer_target }
		title:k_warsong_clan = { save_scope_as = new_title }
		adventurer_set_title_and_war_effect = yes
		draenor_set_location_army_gold_effect = yes
	}
	else = { remove_character_modifier = scandinavian_adventurer_fp1_modifier }
}

mogor_adventurer_start_war_effect = {
	if = {
		limit = { exists = scope:adventurer_target }
		title:d_laughing_skull_clan = { save_scope_as = new_title }
		adventurer_set_title_and_war_effect = yes
		draenor_set_location_army_gold_effect = yes
	}
	else = { remove_character_modifier = scandinavian_adventurer_fp1_modifier }
}

draenor_set_location_army_gold_effect = {
	scope:scandi_adventurer.primary_title = { set_variable = { name = draenor_raiders value = flag:yes } }
	
	# Setup event troops.
	scope:scandi_adventurer = {
		# Set a random spawn location.
		set_variable = {
			name = random_location
			value = title:c_dark_portal.title_province
			days = 365
		}
		if = {
			limit = { exists = var:random_location }
			# Work out how many event troops we should give the adventurer for a 60:40 fight.
			spawn_basic_adventurer_army_effect = { MAX = 4000 }
			spawn_army = {
				men_at_arms = {
					type = armored_footmen
					stacks = {
						value = 1
						multiply = scope:adventurer_target.holder.top_liege.primary_title.tier
					}
				}
				inheritable = yes
				location = scope:scandi_adventurer.var:random_location
				name = scandi_adventurer_event_troops
			}
		}
	}
	# Loan a little gold in case they're in debt/to keep them going.
	scope:scandi_adventurer = { add_gold = scandinavian_adventurer_efficacy_loan_value }
}

create_adventurer_title_effect = {
	#Give the adventurer a dynamic title to tide them over.
	create_dynamic_title = {
		tier = duchy
		name = {
			first_valid = {
				triggered_desc = {
					trigger = {
						# Warcraft
						culture = { like_north_germanic_group_trigger = yes }
						
						faith = { has_doctrine = doctrine_gender_male_dominated }
					}
					desc = VIKING_ARMY_MEN_NAME
				}
				triggered_desc = {
					trigger = {
						# Warcraft
						culture = { like_north_germanic_group_trigger = yes }
						
						faith = { has_doctrine = doctrine_gender_female_dominated }
					}
					desc = VIKING_ARMY_WOMEN_NAME
				}
				triggered_desc = {
					trigger = {
						# Warcraft
						culture = { like_north_germanic_group_trigger = yes }
						
						faith = { has_doctrine = doctrine_gender_equal }
					}
					desc = VIKING_ARMY_NEUTRAL_NAME
				}
				#Fallback, just in case.
				
				# Warcraft
				triggered_desc = {
					trigger = {
						culture = { like_north_germanic_group_trigger = yes }
					}
					desc = VIKING_ARMY_NEUTRAL_NAME
				}
				
				desc = NEUTRAL_ARMY_NAME
			}
		}
	}
	
	# Warcraft
	scope:new_title = {
		generate_coa = yes
	}
}

adventurer_set_title_and_war_effect = {
	create_title_and_vassal_change = {
		type = created
		save_scope_as = change
		add_claim_on_loss = no
	}
	scope:new_title = {
		set_capital_county = scope:adventurer_target
		set_landless_title = yes
		#set_destroy_on_gain_same_tier = no
		set_no_automatic_claims = yes
		set_can_be_named_after_dynasty = no
		change_title_holder = {
			holder = scope:scandi_adventurer
			change = scope:change
		}
	}
	resolve_title_and_vassal_change = scope:change
	scope:new_title = {
		set_variable = {
			name = temporary_title
			value = yes
		}
	}
	#Declare the war.
	scope:scandi_adventurer = {
		start_war = {
			casus_belli = fp1_scandi_adventurer_conquest
			target = scope:adventurer_target.holder.top_liege
			target_title = scope:adventurer_target.duchy
		}
	}
}
pick_random_location_in_scandi_effect = {
	## Try to pick a good spot in Scandinavia.
	if = {
		limit = {
			any_county_in_region = {
				# Warcraft
				region = dlc_fp1_region_core_mainland_scandinavia
				
				valid_scandinavian_county_for_embark_trigger = yes
			}
		}
		random_county_in_region = {
			# Warcraft
			region = dlc_fp1_region_core_mainland_scandinavia
			
			limit = { valid_scandinavian_county_for_embark_trigger = yes }
			# Weight up according to development, so armies tend to spawn in places where more randos would congregate.
			weight = {
				modifier = {
					add = {
						value = development_level
						multiply = 10
					}
				}
			}
			save_temporary_scope_as = selected_county
			scope:scandi_adventurer = {
				set_variable = {
					name = random_location
					value = scope:selected_county.title_province
					days = 365
				}
			}
		}
	}
	## Otherwise, we used our backup of Lister, the last Scandinavian province left alive, three million miles into deep space.
	else = {
		set_variable = {
			name = random_location
			
			# Warcraft
			value = title:b_utgarde.title_province
			
			days = 365
		}
	}
	scope:scandi_adventurer = {
		# Suppress startup error false-positive
		if = {
			limit = { has_variable = random_location }
			# Do nothing.
		}
	}
}
spawn_basic_adventurer_army_effect = {
	# Work out how many event troops we should give the adventurer for a 60:40 fight.
	spawn_army = {
		levies = {
			add = {
				#Base of 400.
				add = scope:adventurer_target.holder.top_liege.max_military_strength
				#Multiply that by the realm size of the target's top_liege.
				multiply = 1.5
				#Account for allies, adding more without just nullifying them.
				scope:adventurer_target.holder.top_liege = {
					every_ally = { add = this.max_military_strength }
				}
				#Cut it off so things don't get too ridiculous.
				max = $MAX$
				#Make sure all adventurers have a moderately respectable force.
				min = 1000
			}
		}
		inheritable = no
		uses_supply = no
		location = scope:scandi_adventurer.var:random_location
		name = scandi_adventurer_event_troops
	}
	spawn_army = {
		men_at_arms = {
			type = light_footmen
			stacks = {
				value = 1
				multiply = scope:adventurer_target.holder.top_liege.primary_title.tier
			}
		}
		inheritable = yes
		location = scope:scandi_adventurer.var:random_location
		name = scandi_adventurer_event_troops
	}
}